<?xml version="1.0"?>
<doc>
    <assembly>
        <name>C1.Web.UI.Controls.2</name>
    </assembly>
    <members>
        <member name="T:C1.Web.UI.Controls.C1TreeView.ChangeStatus">
            <summary>
            Specifies the change status.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1TreeView.ChangeStatus.Add">
            <summary>
            the item has been added.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1TreeView.ChangeStatus.Remove">
            <summary>
            the item has been removed
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1TreeView.ListCollectionChangedEventArgs`1">
            <summary>
            Returns data from the ListCollectionChangedEventArgs event.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1TreeView.ListCollectionChangedEventArgs`1.#ctor(`0)">
            <summary>
            Initializes a new instance of the ListCollectionChangedEvent.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1TreeView.ListCollectionChangedEventArgs`1.Item">
            <summary>
            Gets he specified item changed in collection.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1TreeView.ListCollectionChangedEventArgs`1.Status">
            <summary>
            Gets the the collection change status.
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1TreeView.ListEx`1">
            <summary>
            Represents a strongly typed list of objects that can be accessed by index.
            Provides methods to search, sort, and manipulate lists.
            </summary>
            <typeparam name="T">item type</typeparam>
        </member>
        <member name="M:C1.Web.UI.Controls.C1TreeView.ListEx`1.#ctor">
            <summary>
            Initializes a new instance of the ListEx class that is empty and has the default initial capacity.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1TreeView.ListEx`1.Add(`0)">
            <summary>
            Adds an object to the end of the ListEx
            </summary>
            <param name="item">The object to be added to the end of the ListEx. The value can be null for reference types.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1TreeView.ListEx`1.Insert(System.Int32,`0)">
            <summary>
            Inserts an element into the ListEx at the specified index.
            </summary>
            <param name="index">The object to insert. The value can be null for reference types.</param>
            <param name="item">The zero-based index at which item should be inserted.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1TreeView.ListEx`1.InsertRange(System.Int32,System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Inserts the elements of a collection into the ListEx at the specified index.
            </summary>
            <param name="index">The zero-based index at which the new elements should be inserted.</param>
            <param name="collection">The collection whose elements should be inserted into the ListEx. The collection itself cannot be null, but it can contain elements that are null, if type T is a reference type.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1TreeView.ListEx`1.Remove(`0)">
            <summary>
            Removes the first occurrence of a specific object from the ListEx.
            </summary>
            <returns>true if item is successfully removed; otherwise, false. This method also returns false if item was not found in the ListEx.</returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1TreeView.ListEx`1.RemoveAll(System.Predicate{`0})">
            <summary>
            Removes the all the elements that match the conditions defined by the specified predicate.
            </summary>
            <param name="match">The Predicate delegate that defines the conditions of the elements to remove.</param>
            <returns>The number of elements removed from the List .</returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1TreeView.ListEx`1.RemoveAt(System.Int32)">
            <summary>
            Removes the element at the specified index of the ListEx.
            </summary>
            <param name="index">The zero-based index of the element to remove.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1TreeView.ListEx`1.RemoveRange(System.Int32,System.Int32)">
            <summary>
            Removes a range of elements from the ListEx.
            </summary>
            <param name="index">The zero-based starting index of the range of elements to remove.</param>
            <param name="count">The number of elements to remove.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1TreeView.ListEx`1.Clear">
            <summary>
            Removes all elements from the ListEx.
            </summary>
        </member>
        <member name="E:C1.Web.UI.Controls.C1TreeView.ListEx`1.OnCollectionChanged">
            <summary>
            Occurs after collection was changed.
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1Menu.C1Menu">
            <summary>
            Represents a menu in an ASP.NET Web page.
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1Menu.IC1MenuItemCollectionOwner">
            <summary>
            IC1MenuItemCollectionOwner interface.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Menu.IC1MenuItemCollectionOwner.Items">
            <summary>
            Menu items collection
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Menu.IC1MenuItemCollectionOwner.Owner">
            <summary>
            Menu item owner.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Menu.C1Menu.#ctor">
            <summary>
            C1Menu constructor.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Menu.C1Menu.#ctor(System.String)">
            <summary>
            C1Menu constructor.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Menu.C1Menu.OnInit(System.EventArgs)">
            <summary>
            Handles the <see cref="E:System.Web.UI.Control.Init"/> event.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs"/> object that contains the event data.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Menu.C1Menu.EnsureChildControls">
            <summary>
            Determines whether the server control contains child controls. If it does not, it creates child controls.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Menu.C1Menu.CreateChildControls">
            <summary>
            CreateChildControls override.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Menu.C1Menu.DataBind">
            <summary>
            DataBind override.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Menu.C1Menu.EnsureDataBound">
            <summary>
            EnsureDataBound override.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Menu.C1Menu.PerformDataBinding">
            <summary>
            
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Menu.C1Menu.CreateItemsFromDataSource(System.Web.UI.IHierarchicalEnumerable)">
            <summary>
            Creates the items from data source.
            </summary>
            <param name="enumerable">The enumerable.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Menu.C1Menu.OnItemClick(C1.Web.UI.Controls.C1Menu.C1MenuEventArgs)">
            <summary>
            Rises ItemClick event.
            </summary>
            <param name="e">A C1MenuEventArgs object that contains the event data.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Menu.C1Menu.OnItemPropertyChanged(C1.Web.UI.Controls.C1Menu.C1ItemPropertyChangedEventArgs)">
            <summary>
            Rises ItemPropertyChanged event.
            </summary>
            <param name="e">A C1ItemPropertyChangedEventArgs object that contains the event data.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Menu.C1Menu.FindItemByValue(System.String)">
            <summary>
            Find menu item by value (Recursive method).
            </summary>
            <param name="value">Menu item value.</param>
            <returns>C1MenuItem.</returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Menu.C1Menu.CreateChildControlsFromItems(System.Boolean)">
            <summary>
            Create child controls from menu items.
            </summary>
            <param name="dataBinding"></param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Menu.C1Menu.RenderDesignTimeStyleSheets(System.Web.UI.HtmlTextWriter,System.Boolean)">
            <summary>
            Override this method if you want to render additional stylesheets definitions what will be used by control only at design-time.
            </summary>
            <remarks>Primarily this method used by control developers.
            Note, stylesheet styles.css from embedded VisualStyle will be included automatically by VisualStyle mechanism.</remarks>
            <param name="writer"></param>
            <param name="beforeVisualStyle"></param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Menu.C1Menu.RegisterRunTimeStyleSheets(System.Boolean)">
            <summary>
            Override this method if you want to render additional style sheets definitions what will be used by control only at run-time.
            </summary>
            <remarks>
            Primarily this method is used by control developers. Note, style sheet styles.css from embedded VisualStyle will be included automatically by VisualStyle mechanism.
            </remarks>
            
        </member>
        <member name="M:C1.Web.UI.Controls.C1Menu.C1Menu.OnPreRender(System.EventArgs)">
            <summary>
            OnPreRender override.
            </summary>
            <param name="e">An EventArgs object that contains the event data.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Menu.C1Menu.GetVisualStyleCssClassName">
            <summary>
            Gets the name of the visual style CSS class.
            </summary>
            <returns></returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Menu.C1Menu.AddAttributesToRender(System.Web.UI.HtmlTextWriter)">
            <summary>
            AddAttributesToRender override
            </summary>
            <param name="writer"></param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Menu.C1Menu.Render(System.Web.UI.HtmlTextWriter)">
            <summary>
            Renders the control to the specified HTML writer.
            </summary>
            <param name="writer">The System.Web.UI.HtmlTextWriter object that receives the control content.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Menu.C1Menu.RenderDesignTimeVisualStyle(System.Web.UI.HtmlTextWriter)">
            <summary>
            Renders the design time css for the control
            </summary>
            <param name="writer">A <see cref="T:System.Web.UI.HtmlTextWriter"/> that represents the output stream to render HTML content on the client.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Menu.C1Menu.RenderContents(System.Web.UI.HtmlTextWriter)">
            <summary>
            Renders the contents of the control to the specified writer. This method is used primarily by control developers.
            </summary>
            <param name="writer">A <see cref="T:System.Web.UI.HtmlTextWriter"/> that represents the output stream to render HTML content on the client.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Menu.C1Menu.RenderChildren(System.Web.UI.HtmlTextWriter)">
            <summary>
            
            </summary>
            <param name="writer"></param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Menu.C1Menu.RenderEndTag(System.Web.UI.HtmlTextWriter)">
            <summary>
            
            </summary>
            <param name="writer"></param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Menu.C1Menu.SaveLayout(System.String)">
            <summary>
            Saves the control layout properties to the XML file.
            </summary>
            <param name="filename">Path to the file where the values of the layout properties will be saved.</param> 
        </member>
        <member name="M:C1.Web.UI.Controls.C1Menu.C1Menu.SaveLayout(System.IO.Stream)">
            <summary>
            Saves control layout properties to the stream.
            </summary>
            <param name="stream">The stream where the values of layout properties will be saved.</param> 
        </member>
        <member name="M:C1.Web.UI.Controls.C1Menu.C1Menu.LoadLayout(System.String)">
            <summary>
            Loads control layout properties from the file.
            </summary>
            <param name="filename">The file where the values of layout properties will be loaded.</param> 
        </member>
        <member name="M:C1.Web.UI.Controls.C1Menu.C1Menu.LoadLayout(System.IO.Stream)">
            <summary>
            Load control layout properties from the stream.
            </summary>
            <param name="stream">The stream where the values of layout properties will be loaded.</param> 
        </member>
        <member name="M:C1.Web.UI.Controls.C1Menu.C1Menu.LoadLayout(System.String,C1.Web.UI.LayoutType)">
            <summary>
            Loads control layout properties with specified types from the XML file.
            </summary>
            <param name="filename">The file where the values of layout properties will be loaded.</param> 
            <param name="layoutTypes">The layout types to load.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Menu.C1Menu.LoadLayout(System.IO.Stream,C1.Web.UI.LayoutType)">
            <summary>
            Loads the control layout properties with specified types from the stream.
            </summary>
            <param name="stream">The stream where the values of the layout properties will be loaded.</param> 
            <param name="layoutTypes">The layout types to load.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Menu.C1Menu.LoadViewState(System.Object)">
            <summary>
            LoadViewState
            </summary>
            <param name="savedState"></param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Menu.C1Menu.SaveViewState">
            <summary>
            SaveViewState
            </summary>
            <returns></returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Menu.C1Menu.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)">
            <summary>
            Processes postback data for an ASP.NET server control.
            </summary>
            <param name="postDataKey">The key identifier for the control.</param>
            <param name="postCollection">The collection of all incoming name values.</param>
            <returns>true if the server control's state changes as a result of the postback; otherwise, false.</returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Menu.C1Menu.RaisePostDataChangedEvent">
            <summary>
            Notify the ASP.NET application that the state of the control has changed.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Menu.C1Menu.RaisePostBackEvent(System.String)">
            <summary>
            Process an event
            raised when a form is posted to the server.
            </summary>
            <param name="eventArgument">A System.String that represents an optional event argument to be passed to
            the event handler.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Menu.C1Menu.GetScriptDescriptors">
            <summary>
            GetScriptDescriptors override.
            </summary>
            <returns>List with script descriptors.</returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Menu.C1Menu.GetScriptReferences">
            <summary>
            GetScriptReferences override.
            </summary>
            <returns>List with script references.</returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Menu.C1Menu.FindControl(System.String)">
            <summary>
            Override FindControl method.
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Menu.C1Menu.IsDirty">
            <summary>
            Gets or sets a value indicating whether this instance is dirty.
            </summary>
            <value><c>true</c> if this instance is dirty; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Menu.C1Menu.DataSourceID">
            <summary>
            The ID of a control that represents the data source from which the data-bound control retrieves its data. The default is System.String.Empty.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Menu.C1Menu.FlowRight">
            <summary>
            Gets or sets a value that indicates whether or not
            children will flow to the right side of the control.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Menu.C1Menu.AllowMultiCheckable">
            <summary>
            Get or sets a value that indicates whether or not the menu can be multiselected.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Menu.C1Menu.NestedGroupCheckable">
            <summary>
            Gets or sets a value that indicates whether or not child menu items will be checkable.
            </summary>
            <remarks>If true then css class "C1CheckableSupport" will be added to scroll container element.</remarks>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Menu.C1Menu.Enabled">
            <summary>
            Gets or sets if menu item is Enabled.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Menu.C1Menu.Visible">
            <summary>
            Gets or sets if menu is Visible.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Menu.C1Menu.DisplayVisible">
            <summary>
            Gets or sets a value that indicates whether a server control is rendered as UI on the page.
            </summary>
            <remarks>
            Returns true if the control is visible on the page; otherwise false.
            </remarks>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Menu.C1Menu.EnableTheming">
            <summary>
            This property is hidden.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Menu.C1Menu.EnableViewState">
            <summary>
            This property is hidden.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Menu.C1Menu.ToolTip">
            <summary>
            Gets or sets tooltip text what will be displayed when mouse is over item. 
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Menu.C1Menu.WindowCollisionDetection">
            <summary>
            Determines whether or not submenu position will be adjusted to fit in window bounds.
            </summary>
            <remarks>
            Default value is false.
            </remarks>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Menu.C1Menu.Items">
            <summary>
            Gets a C1MenuItemCollection object that includes the child menu items in the C1Menu control.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Menu.C1Menu.Owner">
            <summary>
            Owner of the menu. 
            Always returns null.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Menu.C1Menu.BackColor">
            <summary>
            This property is hidden.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Menu.C1Menu.BorderColor">
            <summary>
            This property is hidden.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Menu.C1Menu.BorderStyle">
            <summary>
            This property is hidden.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Menu.C1Menu.BorderWidth">
            <summary>
            This property is hidden.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Menu.C1Menu.Font">
            <summary>
            This property is hidden.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Menu.C1Menu.ForeColor">
            <summary>
            
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Menu.C1Menu.DataBindings">
            <summary>
            Gets a collection of C1MenuItemBinding objects that define the relationship between a data item and the menu item it is binding to.
            </summary>
        </member>
        <member name="E:C1.Web.UI.Controls.C1Menu.C1Menu.ItemClick">
            <summary>
            Fires when an item is clicked.
            </summary>
        </member>
        <member name="E:C1.Web.UI.Controls.C1Menu.C1Menu.ItemPropertyChanged">
            <summary>
            Fires when the menu item's property changed.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Menu.C1Menu.OnClientItemFocus">
            <summary>
            Fires on client side when menu item is focused.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Menu.C1Menu.OnClientItemBlur">
            <summary>
            Fires on client side when menu item looses focus.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Menu.C1Menu.OnClientItemMouseOver">
            <summary>
            Fires on client side when mouse is over menu item.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Menu.C1Menu.OnClientItemMouseOut">
            <summary>
            Fires on client side when mouse becomes out of a menu item.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Menu.C1Menu.OnClientItemMouseDown">
            <summary>
            Fires on client side when mouse is down on menu item.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Menu.C1Menu.OnClientItemClick">
            <summary>
            Fires on client side when menu item is clicked.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Menu.C1Menu.OnClientItemChecked">
            <summary>
            Fires on client side when menu item is checked.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Menu.C1Menu.OnClientItemUnChecked">
            <summary>
            Fires on client side when menu item is unchecked.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Menu.C1Menu.AutoPostBack">
            <summary>
            Sets or retrieves a value that indicates whether or not the control posts back to the server each time a user interacts with the control. 
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Menu.C1Menu.AccessKey">
            <summary>
            Gets or sets the access key that allows you to quickly navigate 
            to the Web server control.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Menu.C1Menu.Orientation">
            <summary>
            Gets or sets the direction in which to render the C1Menu control.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Menu.C1Menu.ClickToOpen">
            <summary>
            Determines if sub menu should open on mouse click event instead of mouse over.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Menu.C1Menu.ExpandAnimation">
            <summary>
            Expand Animation effect.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Menu.C1Menu.ExpandDuration">
            <summary>
            Expand Animation duration in milliseconds.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Menu.C1Menu.ExpandDelay">
            <summary>
            Expand delay in milliseconds before sub menu start popup.
            Default value is 100.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Menu.C1Menu.ExpandEasing">
            <summary>
            Specifies the transition for expand animation.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Menu.C1Menu.CollapseEasing">
            <summary>
            Specifies the transition for collapse animation.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Menu.C1Menu.CollapseAnimation">
            <summary>
            Collapse Animation effect.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Menu.C1Menu.CollapseDuration">
            <summary>
            Collapse Animation duration in milliseconds.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Menu.C1Menu.CollapseDelay">
            <summary>
            Collapse delay in milliseconds before sub menu starts hiding. Default value is 100.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Menu.C1Menu.ContextMenu">
            <summary>
            Specifies whether the menu is context.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Menu.C1Menu.ContextElementID">
            <summary>
            ID of the HTML element which will expose the Context Menu when ContextMenu property is true. 
            Default value is an empty string.The Value of the document specifies the context menu that will be
            shown for the document.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Menu.C1Menu.HoverElementID">
            <summary>
            Menu will be shown when mouse is over element given by this property.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Menu.C1Menu.VisualStylePath">
            <summary>
            Path to visual styles.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Menu.C1Menu.EmbeddedVisualStyles">
            <summary>
            Returns string array with embedded Visual Styles names.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Menu.C1Menu.VisualStyle">
            <summary>
            Gets or sets the visual style name used by the control.
            </summary>
            <remarks>
            "ArcticFox" is default value.
            </remarks>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Menu.C1Menu.ScrollSettings">
            <summary>        
            Gets the scroll setting for the menu.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Menu.C1Menu.ItemsTemplate">
            <summary>
            If specified, this template will be applied for all menu items that does not have other defined templates.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Menu.C1Menu.ChildItemsTemplate">
            <summary>
            If specified, this template will be applied for all menu items instead of top level menu items.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Menu.C1Menu.TopItemsTemplate">
            <summary>
            If specified, this template will be applied for top level menu items.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Menu.C1Menu.TagKey">
            <summary>
            Gets the System.Web.UI.HtmlTextWriterTag value that corresponds to this Web
            server control. This property is used primarily by control developers.
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1Menu.C1MenuGroupPanel">
            <summary>
            Instance of this class wraps menu items to the group.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Menu.C1MenuGroupPanel.#ctor(System.Web.UI.Control)">
            <summary>
            Constructor.
            </summary>
            <param name="ownerControl">Control what owns C1MenuGroupPanel.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Menu.C1MenuGroupPanel.AddAttributesToRender(System.Web.UI.HtmlTextWriter)">
            <summary>
            
            </summary>
            <param name="writer"></param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Menu.C1MenuGroupPanel.Render(System.Web.UI.HtmlTextWriter)">
            <summary>
            
            </summary>
            <param name="writer"></param>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Menu.C1MenuGroupPanel.FlowRight">
            <summary>
            Gets or sets a value that indicates whether or not
            children will flow to the right side of the control.
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1Menu.C1MenuItem">
            <summary>
            Represents Menu Item.
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1Menu.C1MenuItemBase">
            <summary>
            Base abstract class for all menu item types.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Menu.C1MenuItemBase.#ctor">
            <summary>
            Default constructor of the <see cref="T:C1.Web.UI.Controls.C1Menu.C1MenuItemBase"/> class.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Menu.C1MenuItemBase.AddAttributesToRender(System.Web.UI.HtmlTextWriter)">
            <summary>
            Adds HTML attributes and styles that need to be rendered to the specified
            System.Web.UI.HtmlTextWriterTag. This method is used primarily by control
            developers.
            </summary>
            <param name="writer">A System.Web.UI.HtmlTextWriter that represents the output stream to render
            HTML content on the client.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Menu.C1MenuItemBase.Render(System.Web.UI.HtmlTextWriter)">
            <summary>
            Renders the control to the specified HTML writer.
            </summary>
            <param name="writer">The <see cref="T:System.Web.UI.HtmlTextWriter"/> object that receives the control content.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Menu.C1MenuItemBase.RenderContents(System.Web.UI.HtmlTextWriter)">
            <summary>
            Renders the contents of the control to the specified writer. This method is used primarily by control developers.
            </summary>
            <param name="writer">A <see cref="T:System.Web.UI.HtmlTextWriter"/> that represents the output stream to render HTML content on the client.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Menu.C1MenuItemBase.RenderTemplateContainer(System.Web.UI.HtmlTextWriter)">
            <summary>
            Renders the template container.
            </summary>
            <param name="writer">The writer.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Menu.C1MenuItemBase.RenderItemContents(System.Web.UI.HtmlTextWriter)">
            <summary>
            Renders the item contents.
            </summary>
            <param name="writer">The writer.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Menu.C1MenuItemBase.RenderChildren(System.Web.UI.HtmlTextWriter)">
            <summary>
            Outputs the content of a server control's children to a provided <see cref="T:System.Web.UI.HtmlTextWriter"/> object, which writes the content to be rendered on the client.
            </summary>
            <param name="writer">The <see cref="T:System.Web.UI.HtmlTextWriter"/> object that receives the rendered content.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Menu.C1MenuItemBase.IsFirstItem">
            <summary>
            Indicates if this menu item is first in parent owner Items collection.
            </summary>
            <returns>This method returns true when menu item is first.</returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Menu.C1MenuItemBase.IsLastItem">
            <summary>
            Indicates if this menu item is last in parent owner Items collection.
            </summary>
            <returns>This method returns true when menu item is last.</returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Menu.C1MenuItemBase.DetermineListItemCssClasses">
            <summary>
            Determines the list item CSS classes.
            </summary>
            <returns>string with space separated CSS classes that will be placed on LI tag.</returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Menu.C1MenuItemBase.LoadPropertiesFromClientData(System.Collections.Hashtable)">
            <summary>
            Loads the properties from JSON object that received from client.
            </summary>
            <param name="jsonData">The JSON data.</param>
            <returns>Returns true if control state changed.</returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Menu.C1MenuItemBase.CreateChildControls">
            <summary>
            CreateChildControls override.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Menu.C1MenuItemBase.items_OnCollectionChanged(System.Object,System.EventArgs)">
            <summary>
            fires after C1MenuItem's collection changed.
            </summary>
            <param name="sender">sender</param>
            <param name="e">C1ToolBarItemCollectionChangedEventArgs</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Menu.C1MenuItemBase.CalculateCurretLevel">
            <summary>
            Returns zero-based Level of current item.
            </summary>
            <returns></returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Menu.C1MenuItemBase.CreateNestedGroup">
            <summary>
            Creates new instance of NestedGroup and assigns it to current menu item.
            </summary>
            <remarks>This method preliminary used by control developers.
            Note, menu item does not renders created submenu automatically. 
            Sub menu must be rendered outside of menu item markup but inside Top level menu.</remarks>
            <returns></returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Menu.C1MenuItemBase.FindControl(System.String)">
            <summary>
            Override FindControl method.
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Menu.C1MenuItemBase.StaticKey">
            <summary>
            Gets or Sets the StaticKey for C1MenuItem.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Menu.C1MenuItemBase.ClientType">
            <summary>
            this property should be hidden.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Menu.C1MenuItemBase.CssClass">
            <summary>
            Gets or Sets CssClass of this item.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Menu.C1MenuItemBase.Separator">
            <summary>
            Gets a value that indicates whether this item is separator.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Menu.C1MenuItemBase.Header">
            <summary>
            Gets a value that indicates whether this item is header.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Menu.C1MenuItemBase.Group">
            <summary>
            Gets a value that indicates whether this item is group.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Menu.C1MenuItemBase.IsTemplated">
            <summary>
            Gets whether the item is templated.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Menu.C1MenuItemBase.TemplateContainer">
            <summary>
            Gets or sets the template container.
            </summary>
            <value>The template container.</value>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Menu.C1MenuItemBase.Visible">
            <summary>
            Gets or sets a value that indicates whether a server control is rendered as UI on the page.
            </summary>
            <remarks>This means that menu item html markup will be not rendered into destination page.</remarks>
            <value></value>
            <returns>true if the control is visible on the page; otherwise false.</returns>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Menu.C1MenuItemBase.DisplayVisible">
            <summary>
            Gets or sets if menu item is Visible.
            </summary>
            <remarks>
            This means that menu item html markup will be actually rendered into destination page but display style will be none.
            </remarks>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Menu.C1MenuItemBase.Menu">
            <summary>
            Gets the C1Menu control.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Menu.C1MenuItemBase.Template">
            <summary>
            Gets or sets the template that will be used for this menu item.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Menu.C1MenuItemBase.Index">
            <summary>
            Gets index of the menu item within parent owner.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Menu.C1MenuItemBase.Enabled">
            <summary>
             Gets or sets a value indicating whether the Menu item is enabled.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Menu.C1MenuItemBase.Value">
            <summary>
            Gets or sets the value for the menu item.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Menu.C1MenuItemBase.Level">
            <summary>
            Returns zero-based Level of current item.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Menu.C1MenuItemBase.ScrollSettings">
            <summary>        
            Gets the scroll settings for the menu item.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Menu.C1MenuItemBase.FirstSibling">
            <summary>
            Gets the first sibling item.
            </summary>
            <value>The first sibling item.</value>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Menu.C1MenuItemBase.LastSibling">
            <summary>
            Gets the last sibling item.
            </summary>
            <value>The last sibling item.</value>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Menu.C1MenuItemBase.NextSibling">
            <summary>
            Gets the next sibling item.
            </summary>
            <value>The next sibling item.</value>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Menu.C1MenuItemBase.PrevSibling">
            <summary>
            Gets the previous sibling item.
            </summary>
            <value>The previous sibling.</value>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Menu.C1MenuItemBase.ID">
            <summary>
            Gets or sets the programmatic identifier assigned to the server control.
            </summary>
            <value></value>
            <returns>The programmatic identifier assigned to the control.</returns>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Menu.C1MenuItemBase.ClientID">
            <summary>
            Gets the server control identifier generated by ASP.NET.
            </summary>
            <value></value>
            <returns>The server control identifier generated by ASP.NET.</returns>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Menu.C1MenuItemBase.Items">
            <summary>
            Gets a C1MenuItemCollection object that includes the submenu items of the current menu item.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Menu.C1MenuItemBase.Owner">
            <summary>
            Gets the owner object which contains the item. 
            It might be an instance of the C1Menu class or the C1MenuItem 
            class depending on the current hierarchy level. 
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1Menu.INestedGroupSupport">
            <summary>
            Marker for items types that supports nested groups
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Menu.INestedGroupSupport.NestedGroupCssClass">
            <summary>
            Gets or sets CSS class that will be placed on nested group container element that used as group or sub-menu container.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Menu.INestedGroupSupport.NestedGroupCheckable">
            <summary>
            Gets or sets a value that indicates whether or not child menu items will be checkable.
            </summary>
            <remarks>If true then CSS class "C1CheckableSupport" will be added to scroll container element.</remarks>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Menu.INestedGroupSupport.NestedGroupOrientation">
            <summary>
            Sub-menu or nested group orientation.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Menu.INestedGroupSupport.NestedGroupWidth">
            <summary>
            Gets or sets sub menu or nested group width in pixels.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Menu.INestedGroupSupport.NestedGroupHeight">
            <summary>
            Gets or sets sub menu or nested group height in pixels.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Menu.C1MenuItem.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Menu.C1MenuItem.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:C1.Web.UI.Controls.C1Menu.C1MenuItem"/> class.
            </summary>
            <param name="text">The text.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Menu.C1MenuItem.RenderItemContents(System.Web.UI.HtmlTextWriter)">
            <summary>
            Renders the item contents.
            </summary>
            <param name="writer">The writer.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Menu.C1MenuItem.RenderTextNode(System.Web.UI.HtmlTextWriter)">
            <summary>
            Renders the text node.
            </summary>
            <param name="writer">The writer.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Menu.C1MenuItem.DetermineListItemCssClasses">
            <summary>
            Determines the list item CSS classes.
            </summary>
            <returns>
            string with space separated CSS classes that will be placed on LI tag.
            </returns>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Menu.C1MenuItem.ClientType">
            <summary>
            this property should be hidden.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Menu.C1MenuItem.ExpandAnimation">
            <summary>
            Expand Animation effect.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Menu.C1MenuItem.ExpandDuration">
            <summary>
            Expand Animation duration in milliseconds.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Menu.C1MenuItem.ExpandDelay">
            <summary>
            Expand delay in milliseconds before the sub menu begins to popup. Default value is 0.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Menu.C1MenuItem.ExpandEasing">
            <summary>
            Specifies the transition for expand animation.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Menu.C1MenuItem.CollapseEasing">
            <summary>
            Specifies the transition for collapse animation.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Menu.C1MenuItem.CollapseAnimation">
            <summary>
            Collapse Animation effect.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Menu.C1MenuItem.CollapseDuration">
            <summary>
            Collapse Animation duration in milliseconds.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Menu.C1MenuItem.CollapseDelay">
            <summary>
            Collapse delay in milliseconds before sub menu starts hiding. Default value is 100.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Menu.C1MenuItem.NestedGroupCssClass">
            <summary>
            Gets or sets css class that will be placed on nested group container element that used as group or sub-menu container.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Menu.C1MenuItem.NestedGroupCheckable">
            <summary>
            Gets or sets a value that indicates whether or not child menu items will be checkable.
            </summary>
            <remarks>If true then css class "C1CheckableSupport" will be added to scroll container element.</remarks>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Menu.C1MenuItem.NestedGroupOrientation">
            <summary>
            Sub-menu or nested group orientation.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Menu.C1MenuItem.NestedGroupWidth">
            <summary>
            Gets or sets sub menu or nested group width in pixels.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Menu.C1MenuItem.NestedGroupHeight">
            <summary>
            Gets or sets sub menu or nested group height in pixels.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Menu.C1MenuItem.AccessKey">
            <summary>
            Gets or sets access key for menu item. If user presses the specified keyboard shortcut then focus moves on this menu item. If menu item locates in sub menu then the path hierarchy of the submenus will be opened to display the menu item.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Menu.C1MenuItem.Checked">
            <summary>
            Gets or sets a value indicating whether the C1MenuItem
            is checked.
            </summary>
            <remarks>
            Set this property to true to indicate a checked state; otherwise, false. The default is false.
            </remarks>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Menu.C1MenuItem.NavigateUrl">
            <summary>
            Gets or sets the URL to link to when the hyperlink is clicked in the item. Default value is empty string.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Menu.C1MenuItem.NavigateUrlHelper">
            <summary>
            For postback, get the original NavigateUrl value.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Menu.C1MenuItem.Target">
            <summary>
            Gets or sets the target window or frame in which to display the Web page content associated with a menu item when the menu item is clicked or the enter key is pressed.
            </summary>
            <remarks>The default value is an empty string.</remarks>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Menu.C1MenuItem.Text">
            <summary>
            Gets or sets the text caption for the menu item.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Menu.C1MenuItem.ImageUrl">
            <summary>
            Gets or sets the URL path to the image that is displayed next to the text in the menu item.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Menu.C1MenuItem.ImageUrlHelper">
            <summary>
            For postback, get the original ImageUrlHelper value.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Menu.C1MenuItem.DisabledImageUrl">
            <summary>
            Url path to the image that will be displayed for the disabled item.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Menu.C1MenuItem.DisabledImageUrlHelper">
            <summary>
            For postback, get the original DisabledImageUrlHelper value.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Menu.C1MenuItem.MouseOverImageUrl">
            <summary>
            Gets or sets the URL path to the image that is displayed when you mouse over the menu item.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Menu.C1MenuItem.MouseOverImageUrlHelper">
            <summary>
            For postback, get the original MouseOverImageUrlHelper value.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Menu.C1MenuItem.ImagePosition">
            <summary>
            Gets or sets which side, left or right, the image will be rendered from the menu item.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Menu.C1MenuItem.ImageWidth">
            <summary>
            Gets or sets the fixed width of the image.
            </summary>
            <value>The width of the image.</value>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Menu.C1MenuItem.ImageHeight">
            <summary>
            Gets or sets the fixed height of the image.
            </summary>
            <value>The height of the image.</value>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Menu.C1MenuItem.ToolTip">
            <summary>
            Gets or sets the ToolTip text for the menu item when the mouse is over it.
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1Menu.C1MenuItemBinding">
            <summary>
            Menu item binding class.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Menu.C1MenuItemBinding.#ctor">
            <summary>
            Creates new instance of the C1MenuItemBinding class.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Menu.C1MenuItemBinding.#ctor(System.String)">
            <summary>
            Creates new instance of the C1MenuItemBinding class.
            </summary>
            <param name="dataMember">Data member to bind a menu item.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Menu.C1MenuItemBinding.Clone">
            <summary>
            Clone this object.
            </summary>
            <returns></returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Menu.C1MenuItemBinding.ToString">
            <summary>
            ToString override.
            </summary>
            <returns>string.</returns>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Menu.C1MenuItemBinding.DataMember">
            <summary>
            Gets or sets the data member to bind a menu item.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Menu.C1MenuItemBinding.Depth">
            <summary>
            Gets or sets the menu depth to which the C1MenuItemBinding object is applied.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Menu.C1MenuItemBinding.FormatString">
            <summary>
            Gets or sets the string that specifies the display format for the Text of a C1MenuItem to which the C1MenuItemBinding object is applied.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Menu.C1MenuItemBinding.HeaderField">
            <summary>
            Gets or sets the name of the field from the data source that indicates C1MenuItemHeader item.
            </summary>
            <value>The group field.</value>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Menu.C1MenuItemBinding.SeparatorField">
            <summary>
            Gets or sets the name of the field from the data source that indicates C1MenuItemSeparator item.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Menu.C1MenuItemBinding.GroupField">
            <summary>
            Gets or sets the name of the field from the data source that indicates C1MenuItemGroup item.
            </summary>
            <value>The group field.</value>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Menu.C1MenuItemBinding.TextField">
            <summary>
            Gets or sets the name of the field from the data source to bind to the Text property of a C1MenuItem object to which the C1MenuItemBinding object is applied.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Menu.C1MenuItemBinding.ValueField">
            <summary>
            Gets or sets the name of the field from the data source to bind to the Value property of a C1MenuItem object to which the C1MenuItemBinding object is applied.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Menu.C1MenuItemBinding.ImageUrlField">
            <summary>
            Gets or sets the name of field from the data source to bind to the ImageUrl property of a C1MenuItem object to which the C1MenuItemBinding object is applied.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Menu.C1MenuItemBinding.NavigateUrlField">
            <summary>
            Gets or sets the name of the field from the data source to bind to the NavigateUrl property of a C1MenuItem object to which the C1MenuItemBinding object is applied.
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1Menu.C1MenuItemBindingCollection">
            <summary>
            Represents a collection of C1MenuItemBinding objects that are used by data-bound C1Menu control.
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1Menu.C1MenuItemCollection">
            <summary>
            Represents a collection of C1MenuItemBase objects that are used by Items property.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Menu.C1MenuItemCollection.#ctor(C1.Web.UI.Controls.C1Menu.IC1MenuItemCollectionOwner)">
            <summary>
            Constructor.
            </summary>
            <param name="owner"></param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Menu.C1MenuItemCollection.Clear">
            <summary>
            Removes all items from collection.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Menu.C1MenuItemCollection.Add(C1.Web.UI.Controls.C1Menu.C1MenuItemBase)">
            <summary>
            Adds new menu item to the end of the list.
            </summary>
            <param name="child"></param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Menu.C1MenuItemCollection.Insert(System.Int32,C1.Web.UI.Controls.C1Menu.C1MenuItemBase)">
            <summary>
            Insert <see cref="T:C1.Web.UI.Controls.C1Menu.C1MenuItem"/> item to specific position into the collection.
            </summary>
            <param name="index">Posicion, value  should be mayor or equal to 0</param>
            <param name="child"></param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Menu.C1MenuItemCollection.Remove(C1.Web.UI.Controls.C1Menu.C1MenuItemBase)">
            <summary>
            Removes item from list.
            </summary>
            <param name="child"></param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Menu.C1MenuItemCollection.RemoveAt(System.Int32)">
            <summary>
            Removes item from list by index.
            </summary>
            <param name="index"></param>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Menu.C1MenuItemCollection.Events">
            <summary>
            Events of C1MenuItemCollection Change.
            </summary>
        </member>
        <member name="E:C1.Web.UI.Controls.C1Menu.C1MenuItemCollection.OnCollectionChanged">
            <summary>
            Occurs after <see cref="T:C1.Web.UI.Controls.C1Menu.C1MenuItemCollection"/> collection was changed.
            </summary>
        </member>
        <member name="E:C1.Web.UI.Controls.C1Menu.C1MenuItemCollection.OnBeforeCollectionChanged">
            <summary>
            Occurs before <see cref="T:C1.Web.UI.Controls.C1Menu.C1MenuItemCollection"/> collection was changed.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Menu.C1MenuItemCollection.IsEmpty">
            <summary>
            Gets value that indicates if the object is empty or not.
            If object is empty than it will be skipped during the serialization process.
            </summary>
            <value></value>
        </member>
        <member name="T:C1.Web.UI.Controls.C1Menu.C1MenuItemTemplateContainer">
            <summary>
            Represents a container that holds the contents of a 
            templated menu item in a C1Menu control.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Menu.C1MenuItemTemplateContainer.#ctor(System.Int32,C1.Web.UI.Controls.C1Menu.C1MenuItemBase)">
            <summary>
            Initializes a new instance of the C1MenuItemTemplateContainer class 
            using the specified menu item index and menu item.
            </summary>
            <param name="itemIndex"></param>
            <param name="dataItem"></param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Menu.C1MenuItemTemplateContainer.Render(System.Web.UI.HtmlTextWriter)">
            <summary>
            Sends server control content to a provided System.Web.UI.HtmlTextWriter object,
            which writes the content to be rendered on the client.
            </summary>
            <param name="writer">The System.Web.UI.HtmlTextWriter object that receives the server control content.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Menu.C1MenuItemTemplateContainer.OnBubbleEvent(System.Object,System.EventArgs)">
            <summary>
            OnBubbleEvent override.
            </summary>
            <param name="source"></param>
            <param name="e"></param>
            <returns></returns>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Menu.C1MenuItemTemplateContainer.DataItem">
            <summary>
            Gets or sets the menu item associated with the container.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Menu.C1MenuItemTemplateContainer.ItemIndex">
            <summary>
            Gets the index of the menu item associated with the container.
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1Menu.C1MenuSerializer">
            <summary>
            Serializes C1Menu Control.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Menu.C1MenuSerializer.#ctor(System.Object)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Menu.C1MenuSerializer.OnAddItem(System.Object,System.Object)">
            <summary>
            Overriden.
            </summary>
            <param name="collection"></param>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Menu.C1MenuSerializer.OnClearItems(System.Object)">
            <summary>
            Overriden.
            </summary>
            <param name="collection"></param>
            <returns></returns>
        </member>
        <member name="T:C1.Web.UI.Controls.C1Menu.C1ItemPropertyChangedEventArgs">
            <summary>
            C1ItemPropertyChangedEventArgs is used by the ItemPropertyChanged event.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Menu.C1ItemPropertyChangedEventArgs.Item">
            <summary>
             An Item in the control which raised an event.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Menu.C1ItemPropertyChangedEventArgs.PropertyName">
            <summary>
            Property name.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Menu.C1ItemPropertyChangedEventArgs.NewValue">
            <summary>
            New value of the property.
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1Menu.C1MenuItemCollectionChangedEventArgs">
            <summary>
            C1MenuItemCollectionChangedEventArgs is used for the C1MenuItemCollectionChange event.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Menu.C1MenuItemCollectionChangedEventArgs.#ctor(C1.Web.UI.Controls.C1Menu.IC1MenuItemCollectionOwner)">
            <summary>
            constructor of the C1MenuItemCollectionChangedEventArgs
            </summary>
            <param name="item"></param>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Menu.C1MenuItemCollectionChangedEventArgs.Item">
            <summary>
            indicate the item which to be add or remove from the C1ToolBarItemCollection.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Menu.C1MenuItemCollectionChangedEventArgs.Status">
            <summary>
            indicate the ChangeStatus of the C1ToolBarItemCollection.
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1Menu.C1ItemPropertyChangedEventHandler">
            <summary>
            Delegate type for handling events that are related to the PropertyChanged event.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:C1.Web.UI.Controls.C1Menu.C1MenuEventHandler">
            <summary>
            Delegate type for handling events that are related to the items.
            </summary>
            <param name="sender">The source of the event</param>
            <param name="e">C1MenuEventArgs object that contains the event data</param>
        </member>
        <member name="T:C1.Web.UI.Controls.C1Menu.C1MenuEventArgs">
            <summary>
            C1MenuEventArgs is used by the ItemClick event.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Menu.C1MenuEventArgs.#ctor(C1.Web.UI.Controls.C1Menu.C1MenuItem)">
            <summary>
            Constructor.
            </summary>
            <param name="item">Menu item that raised the event.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Menu.C1MenuEventArgs.#ctor(C1.Web.UI.Controls.C1Menu.C1MenuItem,System.Object,System.Web.UI.WebControls.CommandEventArgs)">
            <summary>
            Constructor.
            </summary>
            <param name="item">Menu item that raised the event.</param>
            <param name="commandSource">Object that raised the event.</param>
            <param name="originalArgs">A System.Web.UI.WebControls.CommandEventArgs that contains the event data.</param>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Menu.C1MenuEventArgs.CommandSource">
            <summary>
            Gets the Object that raised the event.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Menu.C1MenuEventArgs.Item">
            <summary>
             Gets the menu item that raised the event.
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1Menu.ChangeStatus">
            <summary>
            Specifies <see cref="T:C1.Web.UI.Controls.C1Menu.IC1MenuItemCollectionOwner"/> change status.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Menu.ChangeStatus.ItemAdd">
            <summary>
            <see cref="T:C1.Web.UI.Controls.C1Menu.IC1MenuItemCollectionOwner"/> add.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Menu.ChangeStatus.ItemRemove">
            <summary>
            <see cref="T:C1.Web.UI.Controls.C1Menu.IC1MenuItemCollectionOwner"/> remove.
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1Menu.HeaderTypeConverter">
            <summary>
            Provides a unified way of converting string to HeaderType type.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Menu.HeaderTypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Can convert from type.
            </summary>
            <param name="context"></param>
            <param name="sourceType"></param>
            <returns></returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Menu.HeaderTypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            Convert string to HeaderType type.
            </summary>
            <param name="context"></param>
            <param name="culture"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Menu.HeaderTypeConverter.HeaderTypeToString(C1.Web.UI.Controls.C1Menu.HeaderType)">
            <summary>
            Converts HeaderType to string.
            </summary>
            <param name="headerType"></param>
            <returns></returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Menu.HeaderTypeConverter.StringToHeaderType(System.String)">
            <summary>
            Convert string to HeaderType.
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="T:C1.Web.UI.Controls.Properties.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.Properties.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.Properties.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1Menu.C1MenuItemsOrientation">
            <summary> 
            Menu orientation.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Menu.C1MenuItemsOrientation.Auto">
            <summary>
            Auto.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Menu.C1MenuItemsOrientation.Vertical">
            <summary>
            Vertical orientation.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Menu.C1MenuItemsOrientation.Horizontal">
            <summary>
            Horizontal orientation.
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1Menu.HeaderType">
            <summary>
            Type of the Header item tag.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Menu.HeaderType.H1">
            <summary>
            H1 tag.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Menu.HeaderType.H2">
            <summary>
            H2 tag.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Menu.HeaderType.H3">
            <summary>
            H3 tag.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Menu.HeaderType.H4">
            <summary>
            H4 tag.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Menu.HeaderType.H5">
            <summary>
            H5 tag.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Menu.HeaderType.H6">
            <summary>
            H6 tag.
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1Menu.ImagePosition">
            <summary>
            Determines left or right side where image will be rendered.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Menu.ImagePosition.Left">
            <summary>
            Flow left.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Menu.ImagePosition.Right">
            <summary>
            Flow right.
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1TreeView.C1TreeView">
            <summary>
            Represents the control that provides the functionality to create and manage the tree structures.  
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1TreeView.IC1TreeViewNodeCollectionOwner">
            <summary>
            Used for establish relationshid between the <see cref="T:C1.Web.UI.Controls.C1TreeView.C1TreeViewNodeCollection"/> nodes collection 
            and its <see cref="T:C1.Web.UI.Controls.C1TreeView.IC1TreeViewNodeCollectionOwner"/> owner.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1TreeView.IC1TreeViewNodeCollectionOwner.Nodes">
            <summary>
            Collection that contains <see cref="T:C1.Web.UI.Controls.C1TreeView.C1TreeViewNode"/> nodes.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1TreeView.IC1TreeViewNodeCollectionOwner.Owner">
            <summary>
            Owner of <see cref="T:C1.Web.UI.Controls.C1TreeView.C1TreeViewNodeCollection"/> collection.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1TreeView.C1TreeView.#ctor">
            <summary>
            Default Constructor.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1TreeView.C1TreeView.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:C1.Web.UI.Controls.C1TreeView.C1TreeView"/> class.
            </summary>
            <param name="key">The key.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1TreeView.C1TreeView.AddAttributesToRender(System.Web.UI.HtmlTextWriter)">
            <summary>
            AddAttributesToRender override
            </summary>
            <param name="writer"></param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1TreeView.C1TreeView.RenderContents(System.Web.UI.HtmlTextWriter)">
            <summary>
            Renders the contents of the control to the specified writer. This method is used primarily by control developers.
            </summary>
            <param name="writer">A <see cref="T:System.Web.UI.HtmlTextWriter"/> that represents the output stream to render HTML content on the client.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1TreeView.C1TreeView.Render(System.Web.UI.HtmlTextWriter)">
            <summary>
            Renders <see cref="T:C1.Web.UI.Controls.C1TreeView.C1TreeView"/> elements. Renders hiden element used be the control for serialization. 
            </summary>
            <param name="writer"></param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1TreeView.C1TreeView.RenderChildren(System.Web.UI.HtmlTextWriter)">
            <summary>
            Renders the content elements of <see cref="T:C1.Web.UI.Controls.C1TreeView.C1TreeView"/>.
            </summary>
            <param name="writer"></param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1TreeView.C1TreeView.PerformDataBinding">
            <summary>
            
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1TreeView.C1TreeView.DataBind(System.Web.UI.IHierarchicalEnumerable)">
            <summary>
            Binds a data source to the invoked <see cref="T:C1.Web.UI.Controls.C1TreeView.C1TreeView"/> tree view and all its nodes.
            </summary>
            <param name="enumerable"></param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1TreeView.C1TreeView.CreateChildControls">
            <summary>
            CreateChildControls override.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1TreeView.C1TreeView.DataBind">
            <summary>
            Binds a data source to the invoked <see cref="T:C1.Web.UI.Controls.C1TreeView.C1TreeView"/> tree view and all its nodes.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1TreeView.C1TreeView.EnsureDataBound">
            <summary>
            Calls the DataBind() method for all the sub controls.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1TreeView.C1TreeView.CreateTreeViewNode">
            <summary>
            Creates new instance of the <see cref="T:C1.Web.UI.Controls.C1TreeView.C1TreeViewNode"/> class.
            </summary>
            <returns></returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1TreeView.C1TreeView.OnPreRender(System.EventArgs)">
            <summary>
            OnPreRender override.
            Performs registration in ScriptManager and register <see cref="T:C1.Web.UI.Controls.C1TreeView.C1TreeView"/> treeview for PostBack.
            Relate all <see cref="T:C1.Web.UI.Controls.C1TreeView.C1TreeViewNode"/> nodes to its <see cref="T:C1.Web.UI.Controls.C1TreeView.C1TreeView"/> treeview
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1TreeView.C1TreeView.FindNodeByNavigateUrl(System.String)">
            <summary>
            Searches <see cref="T:C1.Web.UI.Controls.C1TreeView.C1TreeViewNode"/> node through the collection by the NavigateUrl.
            Recursive searching is used until <see cref="T:C1.Web.UI.Controls.C1TreeView.C1TreeViewNode"/> node is found.
            </summary>
            <param name="url"></param>
            <returns>First <see cref="T:C1.Web.UI.Controls.C1TreeView.C1TreeViewNode"/> node that match the searched text.</returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1TreeView.C1TreeView.FindNodeByText(System.String)">
            <summary>
            Searches <see cref="T:C1.Web.UI.Controls.C1TreeView.C1TreeViewNode"/> node through the collection by the Text.
            Recursive searching is used until <see cref="T:C1.Web.UI.Controls.C1TreeView.C1TreeViewNode"/> node is found.
            </summary>
            <param name="text"></param>
            <returns>First <see cref="T:C1.Web.UI.Controls.C1TreeView.C1TreeViewNode"/> node that match the searched text.</returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1TreeView.C1TreeView.FindNodeByValue(System.String)">
            <summary>
            Searches <see cref="T:C1.Web.UI.Controls.C1TreeView.C1TreeViewNode"/> node through the collection by the Value. 
            Recursive searching is used until <see cref="T:C1.Web.UI.Controls.C1TreeView.C1TreeViewNode"/> node is found. 
            </summary>
            <param name="value">node property</param>
            <returns>First <see cref="T:C1.Web.UI.Controls.C1TreeView.C1TreeViewNode"/> node that match the searched text.</returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1TreeView.C1TreeView.SaveLayout(System.String)">
            <summary>
            Saves the control layout properties to the file.
            </summary>
            <param name="filename">The file where the values of the layout properties will be saved.</param> 
        </member>
        <member name="M:C1.Web.UI.Controls.C1TreeView.C1TreeView.SaveLayout(System.IO.Stream)">
            <summary>
            Saves control layout properties to the stream.
            </summary>
            <param name="stream">The stream where the values of layout properties will be saved.</param> 
        </member>
        <member name="M:C1.Web.UI.Controls.C1TreeView.C1TreeView.LoadLayout(System.String)">
            <summary>
            Loads control layout properties from the file.
            </summary>
            <param name="filename">The file where the values of layout properties will be loaded.</param> 
        </member>
        <member name="M:C1.Web.UI.Controls.C1TreeView.C1TreeView.LoadLayout(System.IO.Stream)">
            <summary>
            Load control layout properties from the stream.
            </summary>
            <param name="stream">The stream where the values of layout properties will be loaded.</param> 
        </member>
        <member name="M:C1.Web.UI.Controls.C1TreeView.C1TreeView.LoadLayout(System.String,C1.Web.UI.LayoutType)">
            <summary>
            Loads control layout properties with specified types from the file.
            </summary>
            <param name="filename">The file where the values of layout properties will be loaded.</param> 
            <param name="layoutTypes">The layout types to load.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1TreeView.C1TreeView.LoadLayout(System.IO.Stream,C1.Web.UI.LayoutType)">
            <summary>
            Loads the control layout properties with specified types from the stream.
            </summary>
            <param name="stream">The stream where the values of the layout properties will be loaded.</param> 
            <param name="layoutTypes">The layout types to load.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1TreeView.C1TreeView.GetScriptDescriptors">
            <summary>
            GetScriptDescriptors override.
            </summary>
            <returns></returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1TreeView.C1TreeView.GetScriptReferences">
            <summary>
            GetScriptReferences override.
            </summary>
            <returns></returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1TreeView.C1TreeView.GetControlScriptReferences">
            <summary>
            Returns references to script resources used by the <see cref="T:C1.Web.UI.Controls.C1TreeView.C1TreeViewNode"/>  in the C1TreeView control.
            </summary>
            <returns></returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1TreeView.C1TreeView.GetFrameworkScriptReferences">
            <summary>
            Returns references to script resources used by the Palomino framework.
            </summary>
            <returns></returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1TreeView.C1TreeView.SaveViewState">
            <summary>
            Saves the changes to a server control's view state to an Object.
            </summary>
            <returns>The Object that contains the view state changes.</returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1TreeView.C1TreeView.LoadViewState(System.Object)">
            <summary>
            Loads the server control's previously saved view state to the control.
            </summary>
            <param name="savedState">An Object that contains the saved view state values for the control.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1TreeView.C1TreeView.ProcessAjaxCommand(System.String,System.Collections.Hashtable)">
            <summary>
            Identify the acction to take as response to the client request
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1TreeView.C1TreeView.LoadRequiredData(System.Collections.ArrayList)">
            <summary>
            Recovers the data that will be used to recreate some part of <see cref="T:C1.Web.UI.Controls.C1TreeView.C1TreeView"/> treeview.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1TreeView.C1TreeView.CreateTreeViewStructure(System.Collections.ArrayList)">
            <summary>
            Create a part of <see cref="T:C1.Web.UI.Controls.C1TreeView.C1TreeView"/> treeview requested by the client.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1TreeView.C1TreeView.System#Web#UI#IPostBackDataHandler#LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)">
            <summary>
            LoadPostData.
            </summary>
            <param name="postDataKey"></param>
            <param name="postCollection"></param>
            <returns></returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1TreeView.C1TreeView.OnLoad(System.EventArgs)">
            <summary>
            OnLoad override.
            At this point tree view raise all its events.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1TreeView.C1TreeView.System#Web#UI#IPostBackDataHandler#RaisePostDataChangedEvent">
            <summary>
            RaisePostDataChangedEvent.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1TreeView.C1TreeView.OnInit(System.EventArgs)">
            <summary>
            OnInit override.
            Used to manipulate statically created <see cref="T:C1.Web.UI.Controls.C1TreeView.C1TreeViewNode"/> nodes.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1TreeView.C1TreeView.FindControl(System.String)">
            <summary>
            Override FindControl method.
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="P:C1.Web.UI.Controls.C1TreeView.C1TreeView.DataBindings">
            <summary>
            <see cref="T:C1.Web.UI.Controls.C1TreeView.C1TreeView"/> tree view's data bindings.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1TreeView.C1TreeView.BackColor">
            <summary>
            This property is hidden.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1TreeView.C1TreeView.BorderColor">
            <summary>
            This property is hidden.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1TreeView.C1TreeView.BorderStyle">
            <summary>
            This property is hidden.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1TreeView.C1TreeView.BorderWidth">
            <summary>
            This property is hidden.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1TreeView.C1TreeView.Font">
            <summary>
            This property is hidden.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1TreeView.C1TreeView.ForeColor">
            <summary>
            This property is hidden.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1TreeView.C1TreeView.TagKey">
            <summary>
            Gets the System.Web.UI.HtmlTextWriterTag value that corresponds to this Web
            server control. This property is used primarily by control developers.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1TreeView.C1TreeView.EmbeddedVisualStyles">
            <summary>
            Returns all visual styles that have been embedded with the control. 
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1TreeView.C1TreeView.VisualStylePath">
            <summary>
            Gets or sets the path to the visual style folder.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1TreeView.C1TreeView.VisualStyle">
            <summary>
            VisualStyle name.
            </summary>
        </member>
        <member name="E:C1.Web.UI.Controls.C1TreeView.C1TreeView.NodeDropped">
            <summary>
            Occurs on the server after the <see cref="T:System.Web.UI.WebControls.TreeView"/> node has been dropped. 
            </summary>
        </member>
        <member name="E:C1.Web.UI.Controls.C1TreeView.C1TreeView.NodeExpanded">
            <summary>
            Occurs on the server after the <see cref="T:System.Web.UI.WebControls.TreeView"/> node is expanded. 
            </summary>
        </member>
        <member name="E:C1.Web.UI.Controls.C1TreeView.C1TreeView.NodeCollapsed">
            <summary>
            Occurs on the server after the <see cref="T:System.Web.UI.WebControls.TreeView"/> node is collapsed.
            </summary>
        </member>
        <member name="E:C1.Web.UI.Controls.C1TreeView.C1TreeView.NodeCheckChanged">
            <summary>
            Occurs on the server if a node in the TreeView control changes its check status.
            </summary>
        </member>
        <member name="E:C1.Web.UI.Controls.C1TreeView.C1TreeView.SelectedNodesChanged">
            <summary>
            Occurs on the server if a node in the TreeView control has been selected.
            </summary>
        </member>
        <member name="E:C1.Web.UI.Controls.C1TreeView.C1TreeView.NodeClicked">
            <summary>
            Occurs on the server if a node in the TreeView control has been clicked.
            </summary>
        </member>
        <member name="E:C1.Web.UI.Controls.C1TreeView.C1TreeView.NodeTextChanged">
            <summary>
            Occurs on the server when a node's Text property is changed.
            </summary>
        </member>
        <member name="E:C1.Web.UI.Controls.C1TreeView.C1TreeView.NodeDataBound">
            <summary>
            Occurs after a node is data bound.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1TreeView.C1TreeView.Enabled">
            <summary>
            Gets a value indicating whether <see cref="T:C1.Web.UI.Controls.C1TreeView.C1TreeView"/> treeview is enabled or disabled. 
            If treeview is disabled, click and select operations are also disabled.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1TreeView.C1TreeView.OnClientNodeCheckChanged">
            <summary>
            If specified, the OnClientNodeCheckChanged client-side event handler is called after the <see cref="T:C1.Web.UI.Controls.C1TreeView.C1TreeViewNode"/> node check status has been changed.(If Checkboxes are enabled)
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1TreeView.C1TreeView.OnClientNodeTextChanged">
            <summary>
            If specified, the OnClientNodeTextChanged client-side event handler is called after a <see cref="T:C1.Web.UI.Controls.C1TreeView.C1TreeViewNode"/> node's text has been edited.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1TreeView.C1TreeView.OnClientNodeExpanded">
            <summary>
            If specified, the OnClientNodeExpanded client-side event handler is called after the <see cref="T:C1.Web.UI.Controls.C1TreeView.C1TreeViewNode"/> node has been expanded.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1TreeView.C1TreeView.OnClientNodeCollapsed">
            <summary>
            If specified, the OnClientNodeCollapsed client-side event handler is called after the <see cref="T:C1.Web.UI.Controls.C1TreeView.C1TreeViewNode"/> node has been collapsed.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1TreeView.C1TreeView.OnClientNodeClicked">
            <summary>
            If specified, the OnClientNodeClicked client-side event handler is called after the <see cref="T:C1.Web.UI.Controls.C1TreeView.C1TreeViewNode"/> node has been clicked.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1TreeView.C1TreeView.OnClientSelectedNodesChanged">
            <summary>
            If specified, the OnClientNodeSelection client-side event handler is called after the <see cref="T:C1.Web.UI.Controls.C1TreeView.C1TreeViewNode"/> node has been selected.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1TreeView.C1TreeView.OnClientNodeMouseOver">
            <summary>
            If specified, the OnClientNodeMouseOver client-side event handler is called if the user moves the mouse pointer over of the <see cref="T:C1.Web.UI.Controls.C1TreeView.C1TreeViewNode"/> node. 
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1TreeView.C1TreeView.OnClientNodeMouseOut">
            <summary>
            If specified, the OnClientNodeMouseOut client-side event handler is called if the user moves the mouse pointer out of the <see cref="T:C1.Web.UI.Controls.C1TreeView.C1TreeViewNode"/> node. 
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1TreeView.C1TreeView.OnClientNodeDragStarted">
            <summary>
            If specified, the OnClientNodeDragStarted client-side event handler is called before drag is started.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1TreeView.C1TreeView.OnClientNodeDragging">
            <summary>
            If specified, the OnClientNodeDragging client-side event handler is called if the user moves the mouse while dragging the <see cref="T:C1.Web.UI.Controls.C1TreeView.C1TreeViewNode"/> node.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1TreeView.C1TreeView.OnClientNodeDropped">
            <summary>
            If specified, the OnClientNodeDropped client-side event handler is called before the <see cref="T:C1.Web.UI.Controls.C1TreeView.C1TreeViewNode"/> node has been dropped by user.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1TreeView.C1TreeView.Nodes">
            <summary>
            Gets a <see cref="T:C1.Web.UI.Controls.C1TreeView.C1TreeViewNodeCollection"/> object that contains the root nodes of the current <see cref="T:C1.Web.UI.Controls.C1TreeView.C1TreeView"/> control.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1TreeView.C1TreeView.Owner">
            <summary>
            There is no such owner for <see cref="T:C1.Web.UI.Controls.C1TreeView.C1TreeView"/>.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1TreeView.C1TreeView.AutoPostBack">
            <summary>
            Gets or sets the value that indicates whether or not the control posts back to the server each time a user interacts with the control. 
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1TreeView.C1TreeView.LoadOnDemand">
            <summary>
            Gets or sets the value that indicates whether or not Loads on demand is enabled.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1TreeView.C1TreeView.DataBindStartLevel">
            <summary>
            Gets or sets the value that indicates DataBind start level.
            If value is 0, only root nodes will be bounded on start. For the value equals to 1, root nodes and first level nodes will be bounded.
            Default value -1 indicates that property will be ignored.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1TreeView.C1TreeView.ExpandDepth">
            <summary>
            Gets or sets the value that indicates the level for expantion.
            For 0,only root nodes will be expanded. 
            For 1,root nodes and its sub nodes will be expanded etc.
            For -1,or for the value that separate last level all nodes will be expanded.
            Default value is -2, does not affect. 
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1TreeView.C1TreeView.ShowLines">
            <summary>
            Gets or sets a value indicating whether lines connecting child nodes to parent nodes are displayed.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1TreeView.C1TreeView.ShowExpandCollapse">
            <summary>
            Allow nodes to be expanded or collapsed.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1TreeView.C1TreeView.ExpandCollapseHoverUsed">
            <summary>
            Allow nodes to use hover for Expand or Collapse elements.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1TreeView.C1TreeView.AutoCheckNodes">
            <summary>
            Allow sub nodes to be checked on parent node check.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1TreeView.C1TreeView.AllowDragDrop">
            <summary>
            Allow to TreeView nodes to perform drag and drop. 
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1TreeView.C1TreeView.AccessKey">
            <summary>
            Gets or sets the access key that allows you to quickly navigate 
            to the Web server control.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1TreeView.C1TreeView.AutoCollapse">
            <summary>
            If this option is set to true, expanded node will be collapsed if other node is expanded.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1TreeView.C1TreeView.ShowCheckBoxes">
            <summary>
            Allow the check box to be shown on the nodes.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1TreeView.C1TreeView.AllowTriState">
            <summary>
            Allow TriState of CheckBox
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1TreeView.C1TreeView.DisplayVisible">
            <summary>
            Gets or sets a value that indicates whether a server control is rendered as UI on the page.
            </summary>
            <remarks>
            Returns true if the control is visible on the page; otherwise false.
            </remarks>
        </member>
        <member name="P:C1.Web.UI.Controls.C1TreeView.C1TreeView.Visible">
            <summary>
            Gets or sets if toolbar is Visible.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1TreeView.C1TreeView.AllowSorting">
            <summary>
            Allow nodes to be sorted at run time.  
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1TreeView.C1TreeView.AllowEdit">
            <summary>
            Allow nodes to be edited at run time.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1TreeView.C1TreeView.FocusOnMouseOver">
            <summary>
            This property indicates if <see cref="T:C1.Web.UI.Controls.C1TreeView.C1TreeViewNode"/> node will get focus if mouse pointer is over it.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1TreeView.C1TreeView.NodesTemplate">
            <summary>
            If specified, this template will be applied for all <see cref="T:C1.Web.UI.Controls.C1TreeView.C1TreeViewNode"/> nodes that does not have other defined templates.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1TreeView.C1TreeView.PostBackEventReference">
            <summary>
            PostBack event reference of client side.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1TreeView.C1TreeView.SelectedNodes">
            <summary>
            Gets the SelectedNodes of C1TreeView.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1TreeView.C1TreeView.CheckedNodes">
            <summary>
             Gets the CheckedNodes of C1TreeView.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1TreeView.C1TreeView.ExpandAnimation">
            <summary>
            Gets or sets the animation effect when the node is expanded. 
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1TreeView.C1TreeView.ExpandDuration">
            <summary>
            Expand Animation duration in milliseconds.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1TreeView.C1TreeView.ExpandDelay">
            <summary>
            Expand delay in milliseconds before child nodes expand.
            Default value is 0.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1TreeView.C1TreeView.ExpandEasing">
            <summary>
            Specifies the transition for expand animation.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1TreeView.C1TreeView.CollapseAnimation">
            <summary>
            Collapse Animation effect.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1TreeView.C1TreeView.CollapseDuration">
            <summary>
            Collapse Animation duration in milliseconds.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1TreeView.C1TreeView.CollapseDelay">
            <summary>
            Collapse delay in milliseconds before child nodes collapse.
            Default value is 100.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1TreeView.C1TreeView.CollapseEasing">
            <summary>
            Specifies the transition for collapse animation.
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1TreeView.C1TreeViewNode">
            <summary>
            Represents a node in the <see cref="T:C1.Web.UI.Controls.C1TreeView.C1TreeView"/> control. 
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1TreeView.C1TreeViewNode.#ctor">
            <summary>
            The constructor of the <see cref="T:C1.Web.UI.Controls.C1TreeView.C1TreeViewNode"/>.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1TreeView.C1TreeViewNode.FindControl(System.String)">
            <summary>
            Override FindControl method.
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1TreeView.C1TreeViewNode.IsSearchedUrl(System.String,System.Web.UI.Page)">
            <summary>
            Determines if NavigateUrl property match value of SearchedUrl.
            </summary>
            <param name="searchedUrl"></param>
            <param name="page"></param>
            <returns></returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1TreeView.C1TreeViewNode.Render(System.Web.UI.HtmlTextWriter)">
            <summary>
            Renders <see cref="T:C1.Web.UI.Controls.C1TreeView.C1TreeViewNode"/>.	
            </summary>
            <param name="writer"></param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1TreeView.C1TreeViewNode.CreateChildControls">
            <summary>
            Override CreateChildControls method.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1TreeView.C1TreeViewNode.AddAttributesToRender(System.Web.UI.HtmlTextWriter)">
            <summary>
            AddAttributesToRender override
            </summary>
            <param name="writer"></param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1TreeView.C1TreeViewNode.AttachToParents(C1.Web.UI.Controls.C1TreeView.IC1TreeViewNodeCollectionOwner)">
            <summary>
            Vinculate current <see cref="T:C1.Web.UI.Controls.C1TreeView.C1TreeViewNode"/> node with respective <see cref="T:C1.Web.UI.Controls.C1TreeView.IC1TreeViewNodeCollectionOwner"/> owner and <see cref="T:C1.Web.UI.Controls.C1TreeView.C1TreeView"/> treefview. 
            </summary>
            <param name="owner"></param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1TreeView.C1TreeViewNode.RenderChildren(System.Web.UI.HtmlTextWriter)">
            <summary>
            Renders the content elements of <see cref="T:C1.Web.UI.Controls.C1TreeView.C1TreeViewNode"/>.
            Renders  nodes <see cref="T:C1.Web.UI.Controls.C1TreeView.C1TreeViewNode"/> that has been added to the child nodes collection <see cref="T:C1.Web.UI.Controls.C1TreeView.C1TreeViewNodeCollection"/>.
            </summary>
            <param name="writer"></param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1TreeView.C1TreeViewNode.RenderNode(System.Web.UI.HtmlTextWriter)">
            <summary>
            Renders the node elements.
            </summary>
            <param name="writer">The writer.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1TreeView.C1TreeViewNode.RenderNodesContainer(System.Web.UI.HtmlTextWriter)">
            <summary>
            Renders nodes <see cref="T:C1.Web.UI.Controls.C1TreeView.C1TreeViewNode"/> that has been added to child nodes collection <see cref="T:C1.Web.UI.Controls.C1TreeView.C1TreeViewNodeCollection"/>.
            </summary>
            <param name="writer"></param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1TreeView.C1TreeViewNode.OnPreRender(System.EventArgs)">
            <summary>
            OnPreRender override.
            Apply ExpandDepth property to current <see cref="T:C1.Web.UI.Controls.C1TreeView.C1TreeViewNode"/> node.
            </summary>
            <param name="e"></param>
        </member>
        <member name="P:C1.Web.UI.Controls.C1TreeView.C1TreeViewNode.CssClass">
            <summary>
            Gets or Sets CssClass of the node.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1TreeView.C1TreeViewNode.TreeView">
            <summary>
            Gets reference to <see cref="T:C1.Web.UI.Controls.C1TreeView.C1TreeView"/> TreeView object.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1TreeView.C1TreeViewNode.NodeIndex">
            <summary>
            Index of the C1TreeViewNode.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1TreeView.C1TreeViewNode.Nodes">
            <summary>
            Gets a <see cref="T:C1.Web.UI.Controls.C1TreeView.C1TreeViewNodeCollection"/> that contains the first-level child nodes of the current node.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1TreeView.C1TreeViewNode.ID">
            <summary>
            Gets the server control identifier.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1TreeView.C1TreeViewNode.Owner">
            <summary>
            The owner of <see cref="T:C1.Web.UI.Controls.C1TreeView.C1TreeViewNodeCollection"/> to wich this node belongs to.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1TreeView.C1TreeViewNode.Template">
            <summary>
            Gets or sets the template that will be used for the specified C1TreeViewNodes.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1TreeView.C1TreeViewNode.Templated">
            <summary>
            Gets value that indicates if <see cref="T:C1.Web.UI.Controls.C1TreeView.C1TreeViewNode"/> node will be initialized as an template.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1TreeView.C1TreeViewNode.Text">
            <summary>
            Gets or sets the text displayed for this <see cref="T:C1.Web.UI.Controls.C1TreeView.C1TreeViewNode"/> node. 
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1TreeView.C1TreeViewNode.Value">
            <summary>
            Gets or sets the value of this <see cref="T:C1.Web.UI.Controls.C1TreeView.C1TreeViewNode"/> node.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1TreeView.C1TreeViewNode.NavigateUrl">
            <summary>
            Gets or sets the URL to navigate to when the <see cref="T:C1.Web.UI.Controls.C1TreeView.C1TreeViewNode"/> node is clicked. The default value is an empty string.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1TreeView.C1TreeViewNode.Enabled">
            <summary>
            Gets a value indicating whether <see cref="T:C1.Web.UI.Controls.C1TreeView.C1TreeViewNode"/> node is enabled or disabled. 
            If node is disabled, click and select operations are also disabled.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1TreeView.C1TreeViewNode.Visible">
            <summary>
            Gets or sets a value that indicates whether a server control is rendered as UI on the page.
            </summary>
            <remarks>This means that treeview node html markup will be not rendered into destination page.</remarks>
            <value></value>
            <returns>true if the control is visible on the page; otherwise false.</returns>
        </member>
        <member name="P:C1.Web.UI.Controls.C1TreeView.C1TreeViewNode.DisplayVisible">
            <summary>
            Gets or sets if menu item is Visible.
            </summary>
            <remarks>
            This means that menu item html markup will be actually rendered into destination page but display style will be none.
            </remarks>
        </member>
        <member name="P:C1.Web.UI.Controls.C1TreeView.C1TreeViewNode.Expanded">
            <summary>
            Gets a value that indicates whether the <see cref="T:C1.Web.UI.Controls.C1TreeView.C1TreeViewNode"/> node is expanded.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1TreeView.C1TreeViewNode.Selected">
            <summary>
            Gets or sets a value that indicates whether <see cref="T:C1.Web.UI.Controls.C1TreeView.C1TreeViewNode"/> node is selected or not.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1TreeView.C1TreeViewNode.CheckState">
            <summary>
            Gets a value that indicates treeview node's check state.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1TreeView.C1TreeViewNode.Checked">
            <summary>
            Gets or sets a value that indicates whether <see cref="T:C1.Web.UI.Controls.C1TreeView.C1TreeViewNode"/> node is checked or not.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1TreeView.C1TreeViewNode.ExpandedImageUrl">
            <summary>
            Gets or sets the path to the image to display for the node when it is expanded.
            If CollapsedImageUrl or ExpandedImageUrl are not specified, then the ImageUrl property is used instead. 
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1TreeView.C1TreeViewNode.CollapsedImageUrl">
            <summary>
            Gets or sets the path to the image to display for the node when it is collapsed. 
            If CollapsedImageUrl or ExpandedImageUrl are not specified, then the ImageUrl property is used instead. 
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1TreeView.C1TreeViewNode.ImageUrl">
            <summary>
            Gets or sets the path to the image to display for the node.
            If CollapsedImageUrl and ExpandedImageUrl are specified ImageUrl property is not used.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1TreeView.C1TreeViewNode.HasImage">
            <summary>
            Gets the value that indicates if current <see cref="T:C1.Web.UI.Controls.C1TreeView.C1TreeViewNode"/> node has an image. 
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1TreeView.C1TreeViewNode.HasPotentialChildren">
            <summary>
            Gets value that indicates if this <see cref="T:C1.Web.UI.Controls.C1TreeView.C1TreeViewNode"/> node has child nodes which can be initialized later.
            This property only used if <see cref="T:C1.Web.UI.Controls.C1TreeView.C1TreeView"/> treeview is bounded to data source and callbacks are enabled.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1TreeView.C1TreeViewNode.SearchIndexes">
            <summary>
            Gets value that can be used for tracking original position inside of data source.
            This property only used if <see cref="T:C1.Web.UI.Controls.C1TreeView.C1TreeView"/> treeview is bounded to data source and callbacks are enabled.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1TreeView.C1TreeViewNode.Level">
            <summary>
            Gets zero-based Level of current <see cref="T:C1.Web.UI.Controls.C1TreeView.C1TreeViewNode"/> node.
            </summary>
            <returns></returns>
        </member>
        <member name="P:C1.Web.UI.Controls.C1TreeView.C1TreeViewNode.StaticKey">
            <summary>
            StaticKey.
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1TreeView.C1TreeViewNodeBinding">
            <summary>
            Defines the relationship between a data item and the node it is binding to in a <see cref="T:C1.Web.UI.Controls.C1TreeView.C1TreeView"/> control.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1TreeView.C1TreeViewNodeBinding.#ctor">
            <summary>
            Implicit constructor for the <see cref="T:C1.Web.UI.Controls.C1TreeView.C1TreeViewNodeBinding"/>.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1TreeView.C1TreeViewNodeBinding.#ctor(System.String)">
            <summary>
            Explicit constructor for the <see cref="T:C1.Web.UI.Controls.C1TreeView.C1TreeViewNodeBinding"/>.
            </summary>
            <param name="dataMember"></param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1TreeView.C1TreeViewNodeBinding.Clone">
            <summary>
            Clone this object.
            </summary>
            <returns></returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1TreeView.C1TreeViewNodeBinding.ToString">
            <summary>
            ToString override.
            </summary>
            <returns></returns>
        </member>
        <member name="P:C1.Web.UI.Controls.C1TreeView.C1TreeViewNodeBinding.DataMember">
            <summary>
            Gets or sets the value to match against a <see cref="T:System.Web.UI.IHierarchyData"/>. Type property for a data item to determine whether to apply the tree node binding.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1TreeView.C1TreeViewNodeBinding.Depth">
            <summary>
            Gets or sets the node depth at which the <see cref="T:C1.Web.UI.Controls.C1TreeView.C1TreeViewNodeBinding"/> object is applied.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1TreeView.C1TreeViewNodeBinding.FormatString">
            <summary>
            Gets or sets the string that specifies the display format 
            for the text of the <see cref="T:C1.Web.UI.Controls.C1TreeView.C1TreeViewNode"/> node to which the <see cref="T:C1.Web.UI.Controls.C1TreeView.C1TreeViewNodeBinding"/>object is applied.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1TreeView.C1TreeViewNodeBinding.ImageUrlField">
            <summary>
            Gets or sets the name of the field from the data source to bind to the ImageUrl property of a <see cref="T:C1.Web.UI.Controls.C1TreeView.C1TreeViewNode"/> object to which the <see cref="T:C1.Web.UI.Controls.C1TreeView.C1TreeViewNodeBinding"/> object is applied.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1TreeView.C1TreeViewNodeBinding.CollapsedImageUrlField">
            <summary>
            Gets or sets the name of the field from the data source to bind to the CollapsedImageUrl property of a <see cref="T:C1.Web.UI.Controls.C1TreeView.C1TreeViewNode"/> object to which the <see cref="T:C1.Web.UI.Controls.C1TreeView.C1TreeViewNodeBinding"/> object is applied.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1TreeView.C1TreeViewNodeBinding.ExpandedImageUrlField">
            <summary>
            Gets or sets the name of the field from the data source to bind to the ExpandedImageUrl property of a <see cref="T:C1.Web.UI.Controls.C1TreeView.C1TreeViewNode"/> object to which the <see cref="T:C1.Web.UI.Controls.C1TreeView.C1TreeViewNodeBinding"/> object is applied.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1TreeView.C1TreeViewNodeBinding.NavigateUrlField">
            <summary>
            Gets or sets the name of the field from the data source to bind to the NavigateUrl property of a <see cref="T:C1.Web.UI.Controls.C1TreeView.C1TreeViewNode"/> object to which the <see cref="T:C1.Web.UI.Controls.C1TreeView.C1TreeViewNodeBinding"/> object is applied.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1TreeView.C1TreeViewNodeBinding.TextField">
            <summary>
            Gets or sets the name of the field from the data source to bind to the Text property of a <see cref="T:C1.Web.UI.Controls.C1TreeView.C1TreeViewNode"/> object to which the <see cref="T:C1.Web.UI.Controls.C1TreeView.C1TreeViewNodeBinding"/> object is applied.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1TreeView.C1TreeViewNodeBinding.ValueField">
            <summary>
            Gets or sets the name of the field from the data source to bind to the Value property of a <see cref="T:C1.Web.UI.Controls.C1TreeView.C1TreeViewNode"/> object to which the <see cref="T:C1.Web.UI.Controls.C1TreeView.C1TreeViewNodeBinding"/> object is applied.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1TreeView.C1TreeViewNodeBinding.ExpandedField">
            <summary>
            Gets or sets the name of the field from the data source to bind to the Expanded property of a <see cref="T:C1.Web.UI.Controls.C1TreeView.C1TreeViewNode"/> object to which the <see cref="T:C1.Web.UI.Controls.C1TreeView.C1TreeViewNodeBinding"/> object is applied.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1TreeView.C1TreeViewNodeBinding.EnabledField">
            <summary>
            Gets or sets the name of the field from the data source to bind to the Enabled property of a <see cref="T:C1.Web.UI.Controls.C1TreeView.C1TreeViewNode"/> object to which the <see cref="T:C1.Web.UI.Controls.C1TreeView.C1TreeViewNodeBinding"/> object is applied.
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1TreeView.C1TreeViewNodeBindingCollection">
            <summary>
            Represents a collection of <see cref="T:C1.Web.UI.Controls.C1TreeView.C1TreeViewNodeBinding"/> objects in the <see cref="T:C1.Web.UI.Controls.C1TreeView.C1TreeView"/> control. 
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1TreeView.C1TreeViewNodeBindingCollection.Add(C1.Web.UI.Controls.C1TreeView.C1TreeViewNodeBinding)">
            <summary>
            Adds the binding to the collection.
            </summary>
            <param name="binding"></param>
            <returns></returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1TreeView.C1TreeViewNodeBindingCollection.Contains(C1.Web.UI.Controls.C1TreeView.C1TreeViewNodeBinding)">
            <summary>
            Determines whether the specified <see cref="T:C1.Web.UI.Controls.C1TreeView.C1TreeViewNodeBinding"/> object is in the collection.
            </summary>
            <param name="binding"></param>
            <returns></returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1TreeView.C1TreeViewNodeBindingCollection.CopyTo(C1.Web.UI.Controls.C1TreeView.C1TreeViewNodeBinding[],System.Int32)">
            <summary>
            Copies the elements collection
             to an array, starting at a particular array index.
            </summary>
            <param name="bindingArray"></param>
            <param name="index"></param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1TreeView.C1TreeViewNodeBindingCollection.IndexOf(C1.Web.UI.Controls.C1TreeView.C1TreeViewNodeBinding)">
            <summary>
            Gets the index of binding.
            </summary>
            <param name="binding"></param>
            <returns></returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1TreeView.C1TreeViewNodeBindingCollection.Insert(System.Int32,C1.Web.UI.Controls.C1TreeView.C1TreeViewNodeBinding)">
            <summary>
            Inserts binding into the collection.
            </summary>
            <param name="index"></param>
            <param name="binding"></param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1TreeView.C1TreeViewNodeBindingCollection.Remove(C1.Web.UI.Controls.C1TreeView.C1TreeViewNodeBinding)">
            <summary>
            Removes binding from the collection.
            </summary>
            <param name="binding"></param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1TreeView.C1TreeViewNodeBindingCollection.RemoveAt(System.Int32)">
            <summary>
            Removes binding from the collection from specific index.
            </summary>
            <param name="index"></param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1TreeView.C1TreeViewNodeBindingCollection.OnClear">
            <summary>
            OnClear override.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1TreeView.C1TreeViewNodeBindingCollection.OnRemoveComplete(System.Int32,System.Object)">
            <summary>
            OnRemoveComplete override.
            </summary>
            <param name="index"></param>
            <param name="value"></param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1TreeView.C1TreeViewNodeBindingCollection.OnValidate(System.Object)">
            <summary>
            OnValidate override.
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1TreeView.C1TreeViewNodeBindingCollection.CreateKnownType(System.Int32)">
            <summary>
            CreateKnownType override.
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1TreeView.C1TreeViewNodeBindingCollection.SetDirtyObject(System.Object)">
            <summary>
            SetDirtyObject override.
            </summary>
            <param name="o"></param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1TreeView.C1TreeViewNodeBindingCollection.GetKnownTypes">
            <summary>
            GetKnownTypes override.
            </summary>
            <returns></returns>
        </member>
        <member name="P:C1.Web.UI.Controls.C1TreeView.C1TreeViewNodeBindingCollection.Item(System.Int32)">
            <summary>
            Gets or sets the <see cref="T:C1.Web.UI.Controls.C1TreeView.C1TreeViewNodeBinding"/> object at the specified index in the <see cref="T:C1.Web.UI.Controls.C1TreeView.C1TreeViewNodeBindingCollection"/> object.
            </summary>
            <param name="i"></param>
            <returns></returns>
        </member>
        <member name="T:C1.Web.UI.Controls.C1TreeView.C1TreeViewNodeCollection">
            <summary>
            Represents the structure that manages the <see cref="T:C1.Web.UI.Controls.C1TreeView.C1TreeViewNode"/> nodes.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1TreeView.C1TreeViewNodeCollection.#ctor(C1.Web.UI.Controls.C1TreeView.IC1TreeViewNodeCollectionOwner)">
            <summary>
            Explicit constructor for <see cref="T:C1.Web.UI.Controls.C1TreeView.C1TreeViewNodeCollection"/>.
            </summary>
            <param name="owner"></param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1TreeView.C1TreeViewNodeCollection.CheckNodes(System.Boolean)">
            <summary>
            Checks <see cref="T:C1.Web.UI.Controls.C1TreeView.C1TreeViewNode"/> nodes contained by the collection.
            </summary>
            <param name="check"></param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1TreeView.C1TreeViewNodeCollection.Add(C1.Web.UI.Controls.C1TreeView.C1TreeViewNode)">
            <summary>
            Adds <see cref="T:C1.Web.UI.Controls.C1TreeView.C1TreeViewNode"/> node to the collection.
            </summary>
            <param name="node">node to add</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1TreeView.C1TreeViewNodeCollection.Insert(System.Int32,C1.Web.UI.Controls.C1TreeView.C1TreeViewNode)">
            <summary>
            Inserts <see cref="T:C1.Web.UI.Controls.C1TreeView.C1TreeViewNode"/> node to the collection.
            </summary>
            <param name="index">collection index</param>
            <param name="node">node to insert</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1TreeView.C1TreeViewNodeCollection.Remove(C1.Web.UI.Controls.C1TreeView.C1TreeViewNode)">
            <summary>
            Removes <see cref="T:C1.Web.UI.Controls.C1TreeView.C1TreeViewNode"/> node from the collection.
            <param name="node">node to remove</param>
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1TreeView.C1TreeViewNodeCollection.FindNodeByValue(System.String)">
            <summary>
            Searches <see cref="T:C1.Web.UI.Controls.C1TreeView.C1TreeViewNode"/> node through the collection by the Value. 
            </summary>
            <param name="value">node property</param>
            <returns>First <see cref="T:C1.Web.UI.Controls.C1TreeView.C1TreeViewNode"/> node that match the searched text.</returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1TreeView.C1TreeViewNodeCollection.FindNodeByText(System.String)">
            <summary>
            Searches <see cref="T:C1.Web.UI.Controls.C1TreeView.C1TreeViewNode"/> node through the collection by the Text.
            </summary>
            <param name="text"></param>
            <returns>First <see cref="T:C1.Web.UI.Controls.C1TreeView.C1TreeViewNode"/> node that match the searched text.</returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1TreeView.C1TreeViewNodeCollection.FindNode(System.String)">
            <summary>
            Searches <see cref="T:C1.Web.UI.Controls.C1TreeView.C1TreeViewNode"/> node through the collection by id.
            </summary>
            <param name="id">node id</param>
            <returns></returns>
        </member>
        <member name="T:C1.Web.UI.Controls.C1TreeView.C1TreeViewSerializer">
            <summary>
            Represent serializer used by <see cref="T:C1.Web.UI.Controls.C1TreeView.C1TreeView"/> tree view. 
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1TreeView.C1TreeViewSerializer.#ctor(System.Object)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1TreeView.C1TreeViewSerializer.OnAddItem(System.Object,System.Object)">
            <summary>
            Overriden.
            </summary>
            <param name="collection"></param>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1TreeView.C1TreeViewSerializer.OnClearItems(System.Object)">
            <summary>
            Overriden.
            </summary>
            <param name="collection"></param>
            <returns></returns>
        </member>
        <member name="T:C1.Web.UI.Controls.C1TreeView.C1TreeViewNodeCheckState">
            <summary>
            Specifies <see cref="T:C1.Web.UI.Controls.C1TreeView.C1TreeViewNode"/> check state.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1TreeView.C1TreeViewNodeCheckState.Checked">
            <summary>
            Checked.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1TreeView.C1TreeViewNodeCheckState.Indeterminate">
            <summary>
            Indeterminate
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1TreeView.C1TreeViewNodeCheckState.UnChecked">
            <summary>
            UnChecked
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1TreeView.C1TreeViewEventArgs">
            <summary>
            Contains event data for all events raised by the <see cref="T:C1.Web.UI.Controls.C1TreeView.C1TreeView"/> control.  
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1TreeView.C1TreeViewEventArgs.#ctor(C1.Web.UI.Controls.C1TreeView.C1TreeViewNode)">
            <summary>
            Explicit constructor for <see cref="T:C1.Web.UI.Controls.C1TreeView.C1TreeViewEventArgs"/> 
            </summary>
            <param name="node">A <see cref="T:C1.Web.UI.Controls.C1TreeView.C1TreeViewNode"/> that represents the current node when the event is raised.</param>
        </member>
        <member name="P:C1.Web.UI.Controls.C1TreeView.C1TreeViewEventArgs.Node">
            <summary>
            <see cref="T:C1.Web.UI.Controls.C1TreeView.C1TreeViewNode"/> node associated to the event data.
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1TreeView.C1TreeViewNodeDroppedEventArgs">
            <summary>
            Provides data for the NodeDropped event of the <see cref="T:C1.Web.UI.Controls.C1TreeView.C1TreeView"/> class. 
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1TreeView.C1TreeViewNodeDroppedEventArgs.#ctor(C1.Web.UI.Controls.C1TreeView.C1TreeViewNode,System.Boolean,System.Boolean)">
            <summary>
            Explicit constructor for <see cref="T:C1.Web.UI.Controls.C1TreeView.C1TreeViewEventArgs"/> 
            </summary>
            <param name="node">A <see cref="T:C1.Web.UI.Controls.C1TreeView.C1TreeViewNode"/> that represents the current node when the event is raised.</param>
            <param name="handled">A value that indicates whether the dropped event has been managed from the outside.</param>
            <param name="copyUsed">A value that indicates whether the copy method of <see cref="T:C1.Web.UI.Controls.C1TreeView.C1TreeViewNode"/> node has been used to perform the drop.</param>
        </member>
        <member name="P:C1.Web.UI.Controls.C1TreeView.C1TreeViewNodeDroppedEventArgs.Handled">
            <summary>
            Gets a value that indicates whether the dropped event has been managed from the outside. 
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1TreeView.C1TreeViewNodeDroppedEventArgs.CopyUsed">
            <summary>
            Gets a value that indicates whether the copy method of <see cref="T:C1.Web.UI.Controls.C1TreeView.C1TreeViewNode"/> node has been used to perform the drop. 
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1TreeView.C1TreeViewEventHandler">
            <summary>
            Delegate type for handling events that are related to the nodes.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e"><see cref="T:C1.Web.UI.Controls.C1TreeView.C1TreeViewEventArgs"/><see cref="T:C1.Web.UI.Controls.C1TreeView.C1TreeViewEventArgs"/> object that contains the event data.</param>
        </member>
        <member name="T:C1.Web.UI.Controls.C1NavPanel.C1NavPanelContentContainer">
            <summary>
            C1NavPanel content container control.
            </summary>
            <remarks>This class preliminary used by control developers.</remarks>
        </member>
        <member name="M:C1.Web.UI.Controls.C1NavPanel.C1NavPanelContentContainer.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1NavPanel.C1NavPanelContentContainer.RenderContents(System.Web.UI.HtmlTextWriter)">
            <summary>
            Renders the contents of the control to the specified writer. This method is used primarily by control developers.
            </summary>
            <param name="writer">A <see cref="T:System.Web.UI.HtmlTextWriter"/> that represents the output stream to render HTML content on the client.</param>
        </member>
        <member name="T:C1.Web.UI.Controls.C1NavPanel.C1AccordionOutlookUIMenu">
            <summary>
            Outlook UI menu control.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1NavPanel.C1AccordionOutlookUIMenu._addRemoveMenuItem">
            <summary>
            MenuItem for "Add/Remove additional buttons" menu.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1NavPanel.C1AccordionOutlookUIMenu.#ctor(C1.Web.UI.Controls.C1Accordion.C1Accordion)">
            <summary>
            Constructor.
            </summary>
            <param name="accordion"></param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1NavPanel.C1AccordionOutlookUIMenu.EnsureChildControls">
            <summary>
            Determines whether the server control contains child controls. If it does not, it creates child controls.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1NavPanel.C1AccordionOutlookUIMenu.RenderDesignTimeVisualStyle(System.Web.UI.HtmlTextWriter)">
            <summary>
            Renders the design time css for the control
            </summary>
            <param name="writer">A <see cref="T:System.Web.UI.HtmlTextWriter"/> that represents the output stream to render HTML content on the client.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1NavPanel.C1AccordionOutlookUIMenu.Render(System.Web.UI.HtmlTextWriter)">
            <summary>
            Sends server control content to a provided HtmlTextWriter object, which writes the content to be rendered on the client.
            </summary>
            <param name="writer">The System.Web.UI.HtmlTextWriter object that receives the control content.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1NavPanel.C1AccordionOutlookUIMenu.CreateChildControlsFromItems(System.Boolean)">
            <summary>
            Create a child controls collection using specified items.
            </summary>
            <param name="dataBinding"></param>
        </member>
        <member name="T:C1.Web.UI.Controls.C1NavPanel.C1NavPanelResizer">
            <summary>
            C1NavPanel resizer control.
            </summary>
            <remarks>This class preliminary used by control developers.</remarks>
        </member>
        <member name="M:C1.Web.UI.Controls.C1NavPanel.C1NavPanelResizer.#ctor(C1.Web.UI.Controls.C1Accordion.C1Accordion)">
            <summary>
            Constructor.
            </summary>
            <param name="owner">Parent C1Accordion.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1NavPanel.C1NavPanelResizer.AddAttributesToRender(System.Web.UI.HtmlTextWriter)">
            <summary>
            AddAttributesToRender override.
            </summary>
            <param name="writer"></param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1NavPanel.C1NavPanelResizer.RenderContents(System.Web.UI.HtmlTextWriter)">
            <summary>
            RenderContents override.
            </summary>
            <param name="writer"></param>
        </member>
        <member name="T:C1.Web.UI.Controls.C1NavPanel.C1AccordionOutlookUISettings">
            <summary>
            Outlook user interface settings.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1NavPanel.C1AccordionOutlookUISettings.ToString">
            <summary>
            Returns a String that represents the current Object.
            </summary>
            <returns></returns>
        </member>
        <member name="P:C1.Web.UI.Controls.C1NavPanel.C1AccordionOutlookUISettings.DisplayResizeHolder">
            <summary>
            Sets or retrieves a value that indicates whether or not the resize holder will be visible.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1NavPanel.C1AccordionOutlookUISettings.DisplayHiddenTopicsBar">
            <summary>
            Sets or retrieves a value that indicates whether or not the hidden topics bar will be visible.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1NavPanel.C1AccordionOutlookUISettings.ShowOptionsMenu">
            <summary>
            Sets or retrieves a value indicating whether options menu will be shown at right side of the hidden topics bar.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1NavPanel.C1AccordionOutlookUISettings.ResizeHolderSize">
            <summary>
            Resize holder size in pixels.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1NavPanel.C1AccordionOutlookUISettings.HiddenTopicsBarSize">
            <summary>
            Hidden topics bar size in pixels.
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1Accordion.C1Accordion">
            <summary>
            C1Accordion is a web control that allows you to provide multiple panes and 
            display them one at a time.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Accordion.C1Accordion.IsPreviewMode">
            <summary>
            Whether or not the control has been initialized
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Accordion.C1Accordion.#ctor">
            <summary>
            C1Accordion default constructor. Initializes a new instance of the C1Accordion class.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Accordion.C1Accordion.OnInit(System.EventArgs)">
            <summary>
            Handles the <see cref="E:System.Web.UI.Control.Init"/> event.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs"/> object that contains the event data.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Accordion.C1Accordion.CreateChildControls">
            <summary>
            Overrides the method CreateChildControls in order to create the child controls for C1Accordion.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Accordion.C1Accordion.DataBind">
            <summary>
            This method overrides the generic DataBind method to bind the related data to the control.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Accordion.C1Accordion.EnsureDataBound">
            <summary>
            This method overrides the EnsureDataBound method in order to make sure that sub controls are also bound.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Accordion.C1Accordion.CreateChildControlsFromPanes(System.Boolean)">
            <summary>
            Creates a child controls collection using the <see cref="T:C1.Web.UI.Controls.C1Accordion.C1AccordionPane"/> collection.
            </summary>
            <remarks> This method is primarily used by control developers.</remarks>
            <param name="dataBinding">Indicates if data binding is used to create the collection.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Accordion.C1Accordion.OnSelectedPaneChanged(System.EventArgs)">
            <summary>
            Called when selected pane is changed.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Accordion.C1Accordion.RenderDesignTimeStyleSheets(System.Web.UI.HtmlTextWriter,System.Boolean)">
            <summary>
            Override this method if you want to render additional style sheet definitions that will be used by the control only at design time.
            </summary>
            <remarks>This method is primarily used by control developers.
            Note that the style sheet styles.css from the embedded visual styles will be included automatically by the visual style mechanism.</remarks>
            <param name="writer">The HtmlTextWriter object that receives the server control content.</param>
            <param name="beforeVisualStyle"></param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Accordion.C1Accordion.RegisterRunTimeStyleSheets(System.Boolean)">
            <summary>
            Override this method if you want to render additional style sheet definitions that will be used by the control only at run-time.
            </summary>
            <remarks>This method is primarily used by control developers.
            Note that the style sheet styles.css from the embedded visual styles will be included automatically by the visual style mechanism.
            </remarks>        
        </member>
        <member name="M:C1.Web.UI.Controls.C1Accordion.C1Accordion.OnPreRender(System.EventArgs)">
            <summary>
            Raises the PreRender event.
            </summary>
            <remarks>
            Provides additional processing during the pre-render phase of the control and invokes the OnPreRender method of its base class in order to raise the PreRender event.
            </remarks>
            <param name="e">An EventArgs object that contains the event data.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Accordion.C1Accordion.DetermineContentSideCssClass">
            <summary>
            Gets CSS class selector for content side.
            </summary>
            <returns>CSS class selector for content side.</returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Accordion.C1Accordion.DetermineCompoundCssClass">
            <summary>
            Gets CSS class selector for the accordion including visual style and control state information.
            </summary>
            <returns>CSS class selector for the accordion control.</returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Accordion.C1Accordion.AddAttributesToRender(System.Web.UI.HtmlTextWriter)">
            <summary>
            Adds HTML attributes and styles that need to be rendered to the specified <see cref="T:System.Web.UI.HtmlTextWriterTag"/>. This method is used primarily by control developers.
            </summary>
            <param name="writer">An <see cref="T:System.Web.UI.HtmlTextWriter"/> that represents the output stream to render HTML content on the client.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Accordion.C1Accordion.EnsureChildControls">
            <summary>
            Determines whether the server control contains child controls. If it does
            not, it creates child controls.
            </summary>        
        </member>
        <member name="M:C1.Web.UI.Controls.C1Accordion.C1Accordion.EnsureChildControlsInternalEnd">
            <summary>
            Implements the internal logic to determine whether the server control contains child controls and to create child controls.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Accordion.C1Accordion.Render(System.Web.UI.HtmlTextWriter)">
            <summary>
            Renders the control to the specified HTML writer.
            </summary>
            <param name="writer">The System.Web.UI.HtmlTextWriter object that receives the control content.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Accordion.C1Accordion.OnRenderStart(System.Web.UI.HtmlTextWriter)">
            <summary>
            This method is called immediately before Render method.
            </summary>
            <remarks>This method is primarily used by control developers.</remarks>
            <param name="writer">The HtmlTextWriter object that receives the server control content.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Accordion.C1Accordion.OnRenderEnd(System.Web.UI.HtmlTextWriter)">
            <summary>
            This method is called immediately after Render method.
            </summary>
            <remarks>This method is primarily used by control developers.</remarks>
            <param name="writer"></param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Accordion.C1Accordion.CalculateFillSizeForExpandedPane(System.Double,System.Collections.ArrayList)">
            <summary>
            Calculates the fill size for expanded panes.
            </summary>
            <remarks>This method is primarily used by control developers.</remarks>
            <param name="headersSize">Calculated headers size.</param>
            <param name="expandedPanes">Collection of expanded panes.</param>
            <returns>Fill Size for expanded pane.</returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Accordion.C1Accordion.RenderContents(System.Web.UI.HtmlTextWriter)">
            <summary>
            Sends server control content to a provided HtmlTextWriter object, which writes the content to be rendered on the client.
            </summary>
            <param name="writer">The HtmlTextWriter object that receives the server control content.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Accordion.C1Accordion.CreateAccordionPane">
            <summary>
            Creates the pane control that can be added to Panes collection.
            </summary>
            <returns></returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Accordion.C1Accordion.PerformSelect">
            <summary>
            Retrieves data from the associated data source.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Accordion.C1Accordion.PerformDataBinding(System.Collections.IEnumerable)">
            <summary>
            Binds data from the data source to the control.
            </summary>
            <param name="retrievedData">The IEnumerable list of data returned from a PerformSelect method call.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Accordion.C1Accordion.SaveLayout(System.String)">
            <summary>
            Saves the control layout properties to the file.
            </summary>
            <param name="filename">The file where the values of the layout properties will be saved.</param> 
        </member>
        <member name="M:C1.Web.UI.Controls.C1Accordion.C1Accordion.SaveLayout(System.IO.Stream)">
            <summary>
            Saves control layout properties to the stream.
            </summary>
            <param name="stream">The stream where the values of layout properties will be saved.</param> 
        </member>
        <member name="M:C1.Web.UI.Controls.C1Accordion.C1Accordion.LoadLayout(System.String)">
            <summary>
            Loads control layout properties from the file.
            </summary>
            <param name="filename">The file where the values of layout properties will be loaded.</param> 
        </member>
        <member name="M:C1.Web.UI.Controls.C1Accordion.C1Accordion.LoadLayout(System.IO.Stream)">
            <summary>
            Load control layout properties from the stream.
            </summary>
            <param name="stream">The stream where the values of layout properties will be loaded.</param> 
        </member>
        <member name="M:C1.Web.UI.Controls.C1Accordion.C1Accordion.LoadLayout(System.String,C1.Web.UI.LayoutType)">
            <summary>
            Loads control layout properties with specified types from the file.
            </summary>
            <param name="filename">The file where the values of layout properties will be loaded.</param> 
            <param name="layoutTypes">The layout types to load.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Accordion.C1Accordion.LoadLayout(System.IO.Stream,C1.Web.UI.LayoutType)">
            <summary>
            Loads the control layout properties with specified types from the stream.
            </summary>
            <param name="stream">The stream where the values of the layout properties will be loaded.</param> 
            <param name="layoutTypes">The layout types to load.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Accordion.C1Accordion.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)">
            <summary>
            Processes postback data for an ASP.NET server control.
            </summary>
            <param name="postDataKey">The key identifier for the control.</param>
            <param name="postCollection">The collection of all incoming name values.</param>
            <returns>True if the server control's state changes as a result of the postback; otherwise, False.</returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Accordion.C1Accordion.RaisePostDataChangedEvent">
            <summary>
            Notifies the ASP.NET application that the state of the control has changed.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Accordion.C1Accordion.RaisePostBackEvent(System.String)">
            <summary>
            Process an event
            raised when a form is posted to the server.
            </summary>
            <param name="eventArgument">A System.String that represents an optional event argument to be passed to
            the event handler.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Accordion.C1Accordion.LoadViewState(System.Object)">
            <summary>
            Restores view-state information from a previous request that was saved with the <see cref="M:System.Web.UI.WebControls.WebControl.SaveViewState"/> method.
            </summary>
            <param name="savedState">An object that represents the control state to restore.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Accordion.C1Accordion.SaveViewState">
            <summary>
            Saves any state that was modified after the <see cref="M:System.Web.UI.WebControls.Style.TrackViewState"/> method was invoked.
            </summary>        
            <returns>
            An object that contains the current view state of the control; otherwise, if there is no view state associated with the control, null.
            </returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Accordion.C1Accordion.TrackViewState">
            <summary>
            Causes the control to track changes to its view state so they can be stored in the object's <see cref="P:System.Web.UI.Control.ViewState"/> property.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Accordion.C1Accordion.GetScriptDescriptors">
            <summary>
            When overridden in a derived class, registers the ScriptDescriptor objects for the control.
            </summary>
            <returns>A collection of ScriptDescriptor instances.</returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Accordion.C1Accordion.GetScriptReferences">
            <summary>
            Registers the script references for the control.
            </summary>
            <returns>A collection of ScriptReference instances with the required client-script blocks.</returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Accordion.C1Accordion.ClearPanes">
            <summary>
            Empty out the child Pane's collection
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Accordion.C1Accordion.RecreateChildControls">
            <summary>
            Recreates child controls.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Accordion.C1Accordion.System#Web#UI#IUrlResolutionService#ResolveClientUrl(System.String)">
            <summary>
            Returns a resolved URL that is suitable for use by the client.
            </summary>
            <param name="relativeUrl">A URL relative to the current page.</param>
            <returns>A System.String containing the resolved URL.</returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Accordion.C1Accordion.GetCssLayoutResourcePath">
            <summary>
            Gets the resource path of the CSS stylesheet.
            </summary>
            <returns>The resource path of the embedded CSS stylesheet.</returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Accordion.C1Accordion.GetTopSelectorCssClassName">
            <summary>
            Gets the Top Selector name for the CSS Class.
            </summary>
            <returns>The root CSS class name used by the control.</returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Accordion.C1Accordion.GetVisualStyleCssClassName">
            <summary>
            Gets the full visual style CSS class name with the control name's prefix.
            </summary>
            <returns>The visual style CSS class name.</returns>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Accordion.C1Accordion.DataSourceID">
            <summary>
            Gets or sets the ID of the control from which the data-bound control retrieves its list of data items.
            </summary>
            <returns>
            The ID of a control that represents the data source from which the data-bound control retrieves its data.
            </returns>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Accordion.C1Accordion.DataMember">
            <summary>
            Gets or sets the name of the list of data that the data-bound control binds to, in cases where the data source contains more than one distinct list of data items.
            </summary>
            <returns>
            The name of the specific list of data that the data-bound control binds to, if more than one list is supplied by a data source control. The default value is <see cref="F:System.String.Empty"/>.
            </returns>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Accordion.C1Accordion.FlowRight">
            <summary>
            Gets or sets a value that indicates whether or not children will flow to the right side of the control.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Accordion.C1Accordion.AutoPostBack">
            <summary>
            Sets or retrieves a value that indicates whether or not the control posts back to the server each time a user interacts with the control. 
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Accordion.C1Accordion.DefaultHeaderSize">
            <summary>
            Default header size in pixels.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Accordion.C1Accordion.ExpandDirection">
            <summary>
            Gets or sets the direction in which the content are of the control expands.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Accordion.C1Accordion.Panes">
            <summary>
            Collection of child panes in the accordion.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Accordion.C1Accordion.AvailablePanes">
            <summary>
            Gets list of panes that will be rendered into page.
            </summary>
            <value>The panes list.</value>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Accordion.C1Accordion.SelectedIndex">
            <summary>
            Gets or sets the index of the pane to be displayed.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Accordion.C1Accordion.RequireOpenedPane">
            <summary>
            Determines whether clicking the header will close the currently opened pane (leaving all the accordion's panes closed).
            <remarks>
            Default value is True.
            </remarks>
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Accordion.C1Accordion.SelectedPane">
            <summary>
            Gets or sets the selected pane in the accordion.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Accordion.C1Accordion.SuppressHeaderPostbacks">
            <summary>
            Gets or sets a value that determines whether or not we suppress the client-side click handlers of any elements in the header sections.
            <remarks>
            Default value is False.
            </remarks>
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Accordion.C1Accordion.AutoSize">
            <summary>
            Determines how the width or height of the accordion control will be controlled. Default value is None. If it is set to None, then the accordion can increase as large or as small as necessary to fit the pane's information. If it is set to Fill then it will always be equal to its height or width for horizontal orientation.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Accordion.C1Accordion.Width">
            <summary>
            Gets or sets the width of the accordion.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Accordion.C1Accordion.Height">
            <summary>
            Gets or sets the height of the accordion.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Accordion.C1Accordion.EmbeddedVisualStyles">
            <summary>
            Returns string array with embedded visual styles names.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Accordion.C1Accordion.VisualStyle">
            <summary>
            Gets or sets the visual style name used by the control.
            </summary>
            <remarks>
            "ArcticFox" is default value.
            </remarks>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Accordion.C1Accordion.Enabled">
            <summary>
            Gets or sets the enabled property used by the control.
            </summary>        
        </member>
        <member name="P:C1.Web.UI.Controls.C1Accordion.C1Accordion.Visible">
            <summary>
            Gets or sets a value that indicates whether a server control is rendered as UI on the page.
            </summary>
            <returns>true if the control is visible on the page; otherwise false.
            </returns>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Accordion.C1Accordion.ToolTip">
            <summary>
            Gets or sets the text displayed when the mouse pointer hovers over the Web server control.
            </summary>
            <returns>
            The text displayed when the mouse pointer hovers over the Web server control. The default is <see cref="F:System.String.Empty"/>.
            </returns>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Accordion.C1Accordion.VisualStylePath">
            <summary>
            Gets or sets the path to the visual style folder.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Accordion.C1Accordion.AnimationDuration">
            <summary>
            Animation duration in milliseconds.
            <remarks>
            Default value is 500.
            </remarks>
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Accordion.C1Accordion.ExpandEasing">
            <summary>
            Specifies the transition effect when the content area of the control expands.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Accordion.C1Accordion.CollapseEasing">
            <summary>
            Specifies the transition for collapse animation.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Accordion.C1Accordion.AccessKey">
            <summary>
            Gets or sets the access key that allows you to quickly navigate 
            to the Web server control.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Accordion.C1Accordion.TagKey">
            <summary>
            Gets the value that corresponds to this Web
            server control. 
            This property is used primarily by control developers.
            </summary>
        </member>
        <member name="E:C1.Web.UI.Controls.C1Accordion.C1Accordion.SelectedPaneChanged">
            <summary>
            Raised when the selected pane changes.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Accordion.C1Accordion.OnClientSelectedPaneChanged">
            <summary>
            Handler name of the client SelectedPaneChanged event.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Accordion.C1Accordion.HeaderField">
            <summary>
            Gets or sets the name of the field from the data source to bind to the panes header.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Accordion.C1Accordion.ContentField">
            <summary>
            Gets or sets the name of the field from the data source to bind to the panes content.
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1Accordion.ContentPanelType">
            <summary>
            Determines the type or section of the C1AccordionPane.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Accordion.ContentPanelType.Header">
            <summary>
            Header section of the Pane
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Accordion.ContentPanelType.Content">
            <summary>
            Content section of the Pane
            </summary> 
        </member>
        <member name="T:C1.Web.UI.Controls.C1Accordion.C1AccordionAutoSize">
            <summary>
            Provides several options for resizing an Accordion control.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Accordion.C1AccordionAutoSize.None">
            <summary>
            Keeps the size of the C1Accordion control from being restricted.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Accordion.C1AccordionAutoSize.Fill">
            <summary>
            The Accordian's size will remain the same as its Height property (or Width property for horizontal orienation).
            </summary>
            <remarks>
            The size of the panel's content area will be increased or decreased to fit the size of its fixed Height property.
            </remarks>
        </member>
        <member name="T:C1.Web.UI.Controls.C1Accordion.C1AccordionPane">
            <summary>
            A C1AccordionPane control is an expandable pane containing a header, or title, 
            for the information to be displayed in its accordion, or viewing area.
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1Expander.C1Expander">
            <summary>
            C1Expander panel web control.
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1HeaderContentControl.C1HeaderContentControl">
            <summary>
            Base implementation for all controls that contain single content and have 
            a header.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1HeaderContentControl.C1HeaderContentControl.JsonHelper">
            <summary>
            JsonSerializableHelper.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1HeaderContentControl.C1HeaderContentControl.HeaderTemplate">
            <summary>
            HeaderTemplate.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1HeaderContentControl.C1HeaderContentControl.ContentTemplate">
            <summary>
            ContentTemplate.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1HeaderContentControl.C1HeaderContentControl.CreateContentPanel">
            <summary>
            Create ContentPanel.
            </summary>
            <returns></returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1HeaderContentControl.C1HeaderContentControl.CreateHeaderPanel">
            <summary>
            Create HeaderPanel.
            </summary>
            <returns></returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1HeaderContentControl.C1HeaderContentControl.SetHeaderContentClassNames">
            <summary>
            
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1HeaderContentControl.C1HeaderContentControl.#ctor">
            <summary>
            C1HeaderContentControl constructor.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1HeaderContentControl.C1HeaderContentControl.#ctor(System.String)">
            <summary>
            Constructor that receive header text as parameter.
            </summary>
            <param name="headerText">Text that will be rendered into header panel.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1HeaderContentControl.C1HeaderContentControl.VerifyLicense(System.String)">
            <summary>
            Verifies the license.
            </summary>
            <param name="key">The key.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1HeaderContentControl.C1HeaderContentControl.FindControl(System.String)">
            <summary>
            Searches the current naming container for a server control with the specified <paramref name="id"/> parameter.
            </summary>
            <param name="id">The identifier for the control to be found.</param>
            <returns>
            The specified control, or null if the specified control does not exist.
            </returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1HeaderContentControl.C1HeaderContentControl.OnInit(System.EventArgs)">
            <summary>
            Called before control initialization.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1HeaderContentControl.C1HeaderContentControl.EnsureChildControls">
            <summary>
            Determines whether the server control contains child controls. If it does not, it creates child controls.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1HeaderContentControl.C1HeaderContentControl.CreateChildControls">
            <summary>
            
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1HeaderContentControl.C1HeaderContentControl.AddCreatedChildControlsToPage(System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Add created child controls to Page.
            </summary>
            <param name="addHeader"></param>
            <param name="addContent"></param>
            <param name="addContentBefore"></param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1HeaderContentControl.C1HeaderContentControl.AddAttributesToRender(System.Web.UI.HtmlTextWriter)">
            <summary>
            AddAttributesToRender override.
            </summary>
            <param name="writer"></param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1HeaderContentControl.C1HeaderContentControl.OnPreRender(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Web.UI.Control.PreRender"/> event.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs"/> object that contains the event data.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1HeaderContentControl.C1HeaderContentControl.Render(System.Web.UI.HtmlTextWriter)">
            <summary>
            Render override.
            </summary>
            <param name="writer"></param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1HeaderContentControl.C1HeaderContentControl.RenderChildren(System.Web.UI.HtmlTextWriter)">
            <summary>
            RenderChildren override.
            </summary>
            <param name="writer"></param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1HeaderContentControl.C1HeaderContentControl.RenderContents(System.Web.UI.HtmlTextWriter)">
            <summary>
            RenderContents override.
            </summary>
            <param name="writer"></param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1HeaderContentControl.C1HeaderContentControl.GetScriptDescriptors">
            <summary>
            Get script descriptors.
            </summary>
            <returns></returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1HeaderContentControl.C1HeaderContentControl.GetScriptReferences">
            <summary>
            Get script references.
            </summary>
            <returns></returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1HeaderContentControl.C1HeaderContentControl.RenderDesignTimeStyleSheets(System.Web.UI.HtmlTextWriter,System.Boolean)">
            <summary>
            Override this method if you want to render additional stylesheets definitions what will be used by control only at design-time.
            </summary>
            <remarks>Primarily this method used by control developers.
            Note, stylesheet styles.css from embedded VisualStyle will be included automatically by VisualStyle mechanism.</remarks>
            <param name="writer"></param>
            <param name="beforeVisualStyle"></param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1HeaderContentControl.C1HeaderContentControl.RegisterRunTimeStyleSheets(System.Boolean)">
            <summary>
            Override this method if you want to render additional style sheets definitions what will be used by control only at run-time.
            </summary>
            <remarks>Primarily this method used by control developers.
            Note, style sheet styles.css from embedded VisualStyle will be included automatically by VisualStyle mechanism.
            </remarks>
            
        </member>
        <member name="M:C1.Web.UI.Controls.C1HeaderContentControl.C1HeaderContentControl.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)">
            <summary>
            LoadPostData.
            </summary>
            <param name="postDataKey"></param>
            <param name="postCollection"></param>
            <returns></returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1HeaderContentControl.C1HeaderContentControl.RaisePostDataChangedEvent">
            <summary>
            RaisePostDataChangedEvent.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1HeaderContentControl.C1HeaderContentControl.RaisePostBackEvent(System.String)">
            <summary>
            RaisePostBackEvent.
            </summary>
            <param name="eventArgument"></param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1HeaderContentControl.C1HeaderContentControl.System#Web#UI#IStateManager#LoadViewState(System.Object)">
            <summary>
            When implemented by a class, loads the server control's previously saved view state to the control.
            </summary>
            <param name="state">An <see cref="T:System.Object"/> that contains the saved view state values for the control.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1HeaderContentControl.C1HeaderContentControl.System#Web#UI#IStateManager#SaveViewState">
            <summary>
            Saves any state that was modified after the <see cref="M:System.Web.UI.WebControls.Style.TrackViewState"/> method was invoked.
            </summary>
            <returns>
            An object that contains the current view state of the control; otherwise, if there is no view state associated with the control, null.
            </returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1HeaderContentControl.C1HeaderContentControl.System#Web#UI#IStateManager#TrackViewState">
            <summary>
            Causes the control to track changes to its view state so they can be stored in the object's <see cref="P:System.Web.UI.Control.ViewState"/> property.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1HeaderContentControl.C1HeaderContentControl.InternalLoadPostData(System.Collections.Hashtable)">
            <summary>
            Internal LoadPostData.
            </summary>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1HeaderContentControl.C1HeaderContentControl.InternalRaisePostbackServerEvents">
            <summary>
            Internal RaisePostbackServerEvents.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1HeaderContentControl.C1HeaderContentControl.DetermineControlWidth">
            <summary>
            DetermineControlWidth.
            </summary>
            <returns></returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1HeaderContentControl.C1HeaderContentControl.DetermineControlHeight">
            <summary>
            DetermineControlHeight.
            </summary>
            <returns></returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1HeaderContentControl.C1HeaderContentControl.DetermineContentPanelWidth">
            <summary>
            DetermineContentPanelWidth.
            </summary>
            <returns></returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1HeaderContentControl.C1HeaderContentControl.DetermineHeaderPanelWidth">
            <summary>
            DetermineHeaderPanelWidth.
            </summary>
            <returns></returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1HeaderContentControl.C1HeaderContentControl.DetermineHeaderPanelBorderBox">
            <summary>
            Determine HeaderPanel BorderBox.
            </summary>
            <returns></returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1HeaderContentControl.C1HeaderContentControl.DetermineContentPanelBorderBox">
            <summary>
            Determine ContentPanel BorderBox.
            </summary>
            <returns></returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1HeaderContentControl.C1HeaderContentControl.DetermineIsExpanded">
            <summary>
            Determine IsExpanded.
            </summary>
            <returns></returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1HeaderContentControl.C1HeaderContentControl.DetermineContentSideCssClass">
            <summary>
            Gets css class selector for content side.
            </summary>
            <returns>Css class selector for content side.</returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1HeaderContentControl.C1HeaderContentControl.DetermineCompoundCssClass">
            <summary>
            Gets css class selector for content side.
            </summary>
            <returns></returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1HeaderContentControl.C1HeaderContentControl.DetermineContentSide">
            <summary>
            Determine content side.
            </summary>
            <returns></returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1HeaderContentControl.C1HeaderContentControl.DetermineOrientation">
            <summary>
            Determine Orientation.
            </summary>
            <returns></returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1HeaderContentControl.C1HeaderContentControl.GetTopSelectorCssClassName">
            <summary>
            Get top selector css class name.
            </summary>
            <returns></returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1HeaderContentControl.C1HeaderContentControl.GetVisualStyleCssClassName">
            <summary>
            GetVisualStyleCssClassName.
            </summary>
            <returns></returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1HeaderContentControl.C1HeaderContentControl.DetermineHeaderPanelCssClass">
            <summary>
            Returns css class for header panel.
            </summary>
            <returns></returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1HeaderContentControl.C1HeaderContentControl.DetermineContentPanelCssClass">
            <summary>
            Returns css class for content panel.
            </summary>
            <returns></returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1HeaderContentControl.C1HeaderContentControl.ParseBool(System.Object)">
            <summary>
            ParseBool.
            </summary>
            <param name="o"></param>
            <returns></returns>
        </member>
        <member name="P:C1.Web.UI.Controls.C1HeaderContentControl.C1HeaderContentControl.AccessKey">
            <summary>
            Gets or sets the access key that allows you to quickly navigate 
            to the Web server control.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1HeaderContentControl.C1HeaderContentControl.ContentUrl">
            <summary>
            Gets or sets URL to the content of the panel.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1HeaderContentControl.C1HeaderContentControl.FlowRight">
            <summary>
            Gets or sets a value that indicates whether or not
            children will flow to the right side of the control.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1HeaderContentControl.C1HeaderContentControl.EmbeddedVisualStyles">
            <summary>
            Returns string array with embedded Visual Styles names.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1HeaderContentControl.C1HeaderContentControl.VisualStyle">
            <summary>
            Gets or sets the visual style name used by the control.
            </summary>
            <remarks>
            "ArcticFox" is default value.
            </remarks>
        </member>
        <member name="P:C1.Web.UI.Controls.C1HeaderContentControl.C1HeaderContentControl.DisplayVisible">
            <summary>
            Gets or sets a value that indicates whether a server control is rendered as UI on the page.
            </summary>
            <remarks>
            Returns true if the control is visible on the page; otherwise false.
            </remarks>
        </member>
        <member name="P:C1.Web.UI.Controls.C1HeaderContentControl.C1HeaderContentControl.Visible">
            <summary>
            Gets or sets a value that indicates whether a server control is rendered as UI on the page.
            </summary>
            <returns>True if the control is visible on the page; otherwise False.</returns>
        </member>
        <member name="P:C1.Web.UI.Controls.C1HeaderContentControl.C1HeaderContentControl.Enabled">
            <summary>
            Gets or sets a value indicating whether the Web server control is enabled.
            </summary>
            <value></value>
            <returns>true if control is enabled; otherwise, false. The default is true.</returns>
        </member>
        <member name="P:C1.Web.UI.Controls.C1HeaderContentControl.C1HeaderContentControl.ContentScrollBars">
            <summary>
            Gets or sets the scroll bar settings for content section.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1HeaderContentControl.C1HeaderContentControl.SuppressHeaderPostbacks">
            <summary>
            Gets or sets a value that determines whether or not we suppress the client-side click handlers of any elements in the header sections.
            <remarks>
            Default value is false.
            </remarks>
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1HeaderContentControl.C1HeaderContentControl.ToolTip">
            <summary>
            Gets or sets the text displayed when the mouse pointer hovers over the Web server control.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1HeaderContentControl.C1HeaderContentControl.HeaderSize">
            <summary>
            Header size in pixels.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1HeaderContentControl.C1HeaderContentControl.Width">
            <summary>
            Control width.
            </summary>       
        </member>
        <member name="P:C1.Web.UI.Controls.C1HeaderContentControl.C1HeaderContentControl.Height">
            <summary>
            Control height.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1HeaderContentControl.C1HeaderContentControl.HeaderPanel">
            <summary>
            Gets the control that is used as the header panel.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1HeaderContentControl.C1HeaderContentControl.ContentPanel">
            <summary>
            Gets the control that is used as the content panel.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1HeaderContentControl.C1HeaderContentControl.HeaderPanelID">
            <summary>
            Gets the header panel client ID for the C1HeaderContentControl.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1HeaderContentControl.C1HeaderContentControl.ContentPanelID">
            <summary>
            Gets the content panel client ID for the C1HeaderContentControl.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1HeaderContentControl.C1HeaderContentControl.Header">
            <summary>
            Gets or sets the header template used to display the content of the control's header.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1HeaderContentControl.C1HeaderContentControl.Content">
            <summary>
            Gets or sets the content of a ContentControl.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1HeaderContentControl.C1HeaderContentControl.Controls">
            <summary>
            Controls collection.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1HeaderContentControl.C1HeaderContentControl.System#Web#UI#IStateManager#IsTrackingViewState">
            <summary>
            Gets a value that indicates whether the server control is saving changes to its view state.
            </summary>
            <value></value>
            <returns>true if the control is marked to save its state; otherwise, false.</returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Expander.C1Expander.SetHeaderContentClassNames">
            <summary>
            
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Expander.C1Expander.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Expander.C1Expander.#ctor(System.String)">
            <summary>
            Constructor that receive header text as parameter.
            </summary>
            <param name="headerText">Text that will be rendered into header panel.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Expander.C1Expander.GetScriptDescriptors">
            <summary>
            Get script descriptors.
            </summary>
            <returns></returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Expander.C1Expander.GetScriptReferences">
            <summary>
            Get script references.
            </summary>
            <returns></returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Expander.C1Expander.RenderDesignTimeStyleSheets(System.Web.UI.HtmlTextWriter,System.Boolean)">
            <summary>
            Override this method if you want to render additional stylesheets definitions what will be used by control only at design-time.
            </summary>
            <remarks>Primarily this method used by control developers.
            Note, stylesheet styles.css from embedded VisualStyle will be included automatically by VisualStyle mechanism.</remarks>
            <param name="writer"></param>
            <param name="beforeVisualStyle"></param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Expander.C1Expander.RegisterRunTimeStyleSheets(System.Boolean)">
            <summary>
            Override this method if you want to render additional style sheets definitions what will be used by control only at run-time.
            </summary>
            <remarks>Primarily this method used by control developers.
            Note, style sheet styles.css from embedded VisualStyle will be included automatically by VisualStyle mechanism.
            </remarks>
            
        </member>
        <member name="M:C1.Web.UI.Controls.C1Expander.C1Expander.InternalLoadPostData(System.Collections.Hashtable)">
            <summary>
            Internal LoadPostData.
            </summary>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Expander.C1Expander.InternalRaisePostbackServerEvents">
            <summary>
            Internal RaisePostbackServerEvents.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Expander.C1Expander.DetermineIsExpanded">
            <summary>
            Determine IsExpanded.
            </summary>
            <returns></returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Expander.C1Expander.DetermineContentSide">
            <summary>
            DetermineContentSide.
            </summary>
            <returns></returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Expander.C1Expander.DetermineOrientation">
            <summary>
            DetermineOrientation.
            </summary>
            <returns></returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Expander.C1Expander.GetTopSelectorCssClassName">
            <summary>
            GetTopSelectorCssClassName.
            </summary>
            <returns></returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Expander.C1Expander.GetVisualStyleCssClassName">
            <summary>
            GetVisualStyleCssClassName.
            </summary>
            <returns></returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Expander.C1Expander.CreateContentPanel">
            <summary>
            Create ContentPanel.
            </summary>
            <returns></returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Expander.C1Expander.CreateHeaderPanel">
            <summary>
            Create HeaderPanel.
            </summary>
            <returns></returns>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Expander.C1Expander.AutoPostBack">
            <summary>
            Sets or retrieves a value that indicates whether or not the control posts back to the server each time a user interacts with the control. 
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Expander.C1Expander.AutoPostBackEventReference">
            <summary>
            AutoPostBack Event Reference. Empty string if AutoPostBack property is false.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Expander.C1Expander.Expanded">
            <summary>
            Gets or sets a value that determines whether the panel is in an expanded state.
            <remarks>
            Default value is true.
            </remarks>
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Expander.C1Expander.ExpandDirection">
            <summary>
            Specifies the general layout orientation of the panel.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Expander.C1Expander.ExpandAnimation">
            <summary>
            Expand Animation effect.
            <remarks>
            Default value is None.
            </remarks>
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Expander.C1Expander.CollapseAnimation">
            <summary>
            Collapse Animation effect.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Expander.C1Expander.CollapseDuration">
            <summary>
            Collapse Animation duration in milliseconds.
            <remarks>
            Default value is 500 milliseconds.
            </remarks>
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Expander.C1Expander.ExpandDuration">
            <summary>
            Expand Animation duration in milliseconds.
            <remarks>
            Default value is 500 milliseconds.
            </remarks>
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Expander.C1Expander.ExpandEasing">
            <summary>
            Specifies the transition for expand animation.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Expander.C1Expander.CollapseEasing">
            <summary>
            Specifies the transition for collapse animation.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Expander.C1Expander.OnClientBeforeExpand">
            <summary>
            Fires on client side before panel expand. Event is cancelable.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Expander.C1Expander.OnClientBeforeCollapse">
            <summary>
            Fires on client side before panel collapse. Event is cancelable.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Expander.C1Expander.OnClientAfterExpand">
            <summary>
            Fires on client side after panel expand.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Expander.C1Expander.OnClientAfterCollapse">
            <summary>
            Fires on client side after panel collapse.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Expander.C1Expander.EmbeddedVisualStyles">
            <summary>
            Returns string array with embedded Visual Styles names.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Accordion.C1AccordionPane.SetHeaderContentClassNames">
            <summary>
            Specifies the accordion pane header's CSS selectors.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Accordion.C1AccordionPane.#ctor">
            <summary>
            Initializes a new instance of the C1AccordionPane class.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Accordion.C1AccordionPane.#ctor(C1.Web.UI.Controls.C1Accordion.C1Accordion)">
            <summary>
            Initializes a new instance of the C1AccordionPane class.  
            This constructor preliminary used by controls developers.
            Use this constructor if you need reference to parent C1Accordion control inside overridden
            methods when pane is not yet added to C1Accordion's Panes collection.
            </summary>
            <remarks>
            Note, this constructor will not add newly created C1AccordionPane into C1Accordion's Panes collection automatically.
            So, developer need to do it manually.
            </remarks>
            <param name="accordion">Parent <see cref="T:C1.Web.UI.Controls.C1Accordion.C1Accordion"/> instance.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Accordion.C1AccordionPane.#ctor(System.String)">
            <summary>
            Initializes a new instance of the C1AccordionPane class.
            </summary>
            <param name="headerText">Text that will be rendered into header panel.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Accordion.C1AccordionPane.DetermineControlWidth">
            <summary>
            Calculates the control's width in pixels.
            </summary>
            <returns>The current control's width based on whether the control is expanded or not.</returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Accordion.C1AccordionPane.DetermineControlHeight">
            <summary>
            Calculates the control's height in pixels.
            </summary>
            <returns>The current control's height based on whether the control is expanded or not.</returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Accordion.C1AccordionPane.GetTopSelectorCssClassName">
            <summary>
            Gets the top selector name for the CSS Class.
            </summary>
            <returns>The root CSS class name used by the control.</returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Accordion.C1AccordionPane.AddCreatedChildControlsToPage(System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Add created child controls to Page.
            </summary>
            <param name="addHeader"></param>
            <param name="addContent"></param>
            <param name="addContentBefore"></param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Accordion.C1AccordionPane.CreateHeaderPanel">
            <summary>
            Creates the accordion's header placeholder.
            </summary>
            <returns>An instance of the <see cref="T:C1.Web.UI.ContentPanel"/> class.</returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Accordion.C1AccordionPane.CreateContentPanel">
            <summary>
            Creates the accordion's content placeholder.
            </summary>
            <returns>An instance of <see cref="T:C1.Web.UI.ContentPanel"/> class.</returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Accordion.C1AccordionPane.RenderChildren(System.Web.UI.HtmlTextWriter)">
            <summary>
            Sends server child control content to a provided HtmlTextWriter object, which writes the content to be rendered on the client.
            </summary>
            <param name="writer">The HtmlTextWriter object that receives the server control content.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Accordion.C1AccordionPane.GetScriptDescriptors">
            <summary>
            When overridden in a derived class, registers the <see cref="T:System.Web.UI.ScriptDescriptor"/> objects for the control.
            </summary>
            <returns>A collection of <see cref="T:System.Web.UI.ScriptDescriptor"/> instances.</returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Accordion.C1AccordionPane.GetScriptReferences">
            <summary>
            Registers the script references for the control.
            </summary>
            <returns>A collection of <see cref="T:System.Web.UI.ScriptReference"/> instances with the required client-script blocks.</returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Accordion.C1AccordionPane.DetermineContentSide">
            <summary>
            Gets the accordion's expand direction.
            </summary>
            <returns>Expand direction of the parent accordion.</returns>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Accordion.C1AccordionPane.ButtonImageUrl">
            <summary>
            Url path for the button's image in the navigation pane when using the Outlook-style user interface.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Accordion.C1AccordionPane.ButtonName">
            <summary>
            Navigation pane button name when using the Outlook-style user interface.
            </summary>        
        </member>
        <member name="P:C1.Web.UI.Controls.C1Accordion.C1AccordionPane.Removed">
            <summary>
            Gets or sets a value that indicates whether the accordion pane will be removed from accordion.
            </summary>        
        </member>
        <member name="P:C1.Web.UI.Controls.C1Accordion.C1AccordionPane.Visible">
            <summary>
            Gets or sets a value that indicates whether a server control is rendered as UI on the page.
            </summary>
            <returns>True if the control is visible on the page; otherwise False.</returns>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Accordion.C1AccordionPane.ExpandAnimation">
            <summary>
            This property is hidden.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Accordion.C1AccordionPane.ExpandDuration">
            <summary>
            This property is hidden.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Accordion.C1AccordionPane.ExpandEasing">
            <summary>
            This property is hidden.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Accordion.C1AccordionPane.CollapseAnimation">
            <summary>
            This property is hidden.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Accordion.C1AccordionPane.CollapseDuration">
            <summary>
            This property is hidden.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Accordion.C1AccordionPane.CollapseEasing">
            <summary>
            This property is hidden.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Accordion.C1AccordionPane.VisualStyle">
            <summary>
            This property is hidden.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Accordion.C1AccordionPane.VisualStylePath">
            <summary>
            This property is hidden.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Accordion.C1AccordionPane.ID">
            <summary>
            Gets or sets the string identifying the control.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Accordion.C1AccordionPane.Expanded">
            <summary>
            Gets or sets a value that determines whether the panel is in an expanded state.
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1Accordion.C1AccordionPaneContentPanel">
            <summary>
            
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1Accordion.C1AccordionSerializer">
            <summary>
            Serializes C1Accordion Control.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Accordion.C1AccordionSerializer.#ctor(System.Object)">
            <summary>
            Initializes a new instance of the C1AccordionSerializer class.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Accordion.C1AccordionSerializer.OnAddItem(System.Object,System.Object)">
            <summary>
            Provides a custom implementation to add deserialized objects to the items collection.
            </summary>        
            <remarks>This method primarly used by control developers.</remarks>
            <param name="collection">Target collection to add items.</param>
            <param name="item">Item to be added to the collection.</param>
            <returns>Returns True if the "item" object is added to the target collection. Otherwise, False.</returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Accordion.C1AccordionSerializer.OnClearItems(System.Object)">
            <summary>
            Removes all the items from the <see cref="T:C1.Web.UI.Controls.C1Accordion.C1AccordionPaneCollection"/>.
            </summary>
            <param name="collection">Target collection to remove items from.</param>
            <returns>Retuns True if all the items are successfully removed from the collection. Otherwise, False.</returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Accordion.C1AccordionSerializer.GetNextUniqueAccordionPaneName(C1.Web.UI.Controls.C1Accordion.C1Accordion)">
            <summary>
            Gets a unique name for <see cref="T:C1.Web.UI.Controls.C1Accordion.C1AccordionPane"/>.                
            </summary>
            <returns>Returns a unique name like "C1Accordion1Pane2".</returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Accordion.C1AccordionSerializer.FindControlRecursive(System.Web.UI.Control,System.String)">
            <summary>
            Finds a Control recursively. Note finds the first match and exists
            </summary>
            <param name="owner">The owner.</param>
            <param name="id">The id.</param>
            <returns></returns>
        </member>
        <member name="T:C1.Web.UI.Controls.C1Accordion.C1AccordionPaneCollection">
            <summary>
            Represents a collection of C1AccordionPane objects that are used by the Panes property.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Accordion.C1AccordionPaneCollection.#ctor(C1.Web.UI.Controls.C1Accordion.C1Accordion)">
            <summary>
            Initializes a new instance of the C1AccordionPaneCollection class.
            </summary>
            <param name="owner">Parent C1Accordion class instance.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Accordion.C1AccordionPaneCollection.Clear">
            <summary>
            Removes all items from collection.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Accordion.C1AccordionPaneCollection.Add(C1.Web.UI.Controls.C1Accordion.C1AccordionPane)">
            <summary>
            Adds a new menu item to the end of the list.
            </summary>
            <param name="child"></param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Accordion.C1AccordionPaneCollection.Insert(System.Int32,C1.Web.UI.Controls.C1Accordion.C1AccordionPane)">
            <summary>
            Insert a <see cref="T:C1.Web.UI.Controls.C1Accordion.C1AccordionPane"/> item into a specific position in the collection.
            </summary>
            <param name="index">Item position. Value should be greater or equal to 0</param>
            <param name="child">The new <see cref="T:C1.Web.UI.Controls.C1Accordion.C1AccordionPane"/> item.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Accordion.C1AccordionPaneCollection.Remove(C1.Web.UI.Controls.C1Accordion.C1AccordionPane)">
            <summary>
            Removes the specified item from the list.
            </summary>
            <param name="child">The <see cref="T:C1.Web.UI.Controls.C1Accordion.C1AccordionPane"/> item to be removed.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Accordion.C1AccordionPaneCollection.RemoveAt(System.Int32)">
            <summary>
            Removes an item from the list using its index.
            </summary>
            <param name="index">The index of the <see cref="T:C1.Web.UI.Controls.C1Accordion.C1AccordionPane"/> item to be removed.</param>
        </member>
        <member name="T:C1.Web.UI.Controls.C1Accordion.AccordionItemEventArgs">
            <summary>
            The AccordionItemEventArgs is used to provide notification when
            Accordion items are created, databound, etc.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Accordion.AccordionItemEventArgs._item">
            <summary>
            Container control for the Accordion item
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Accordion.AccordionItemEventArgs._type">
            <summary>
            Type of the Accordion item (i.e. Header or Content)
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Accordion.AccordionItemEventArgs.#ctor(C1.Web.UI.ContentPanel,C1.Web.UI.Controls.C1Accordion.ContentPanelType)">
            <summary>
            Initializes a new instance of the AccordionItemEventArgs class.
            </summary>
            <param name="item">The container of the accordion item.</param>
            <param name="type">The accordion item type.</param>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Accordion.AccordionItemEventArgs.DataItem">
            <summary>
            Gets the DataItem being bound to the Container.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Accordion.AccordionItemEventArgs.AccordionItem">
            <summary>
            Gets the container of the accordion item.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Accordion.AccordionItemEventArgs.ItemType">
            <summary>
            Gets the type of the Accordion item (either Header or Content).
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Accordion.AccordionItemEventArgs.Item">
            <summary>
            Gets the DataItem being bound to the container.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Accordion.AccordionItemEventArgs.ItemIndex">
            <summary>
            Gets the index of the DataItem being bound to the container.
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1Accordion.AccordionCommandEventArgs">
            <summary>
            The AccordionCommandEventArgs provides access to the container AccordionContentPanel for data commands.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Accordion.AccordionCommandEventArgs._container">
            <summary>
            Container
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Accordion.AccordionCommandEventArgs.#ctor(C1.Web.UI.ContentPanel,System.String,System.Object)">
            <summary>
            Constructor
            </summary>
            <param name="container">Container</param>
            <param name="commandName">Command Name</param>
            <param name="commandArg">Command Argument</param>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Accordion.AccordionCommandEventArgs.Container">
            <summary>
            Gets the container for the ContentPanel.
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1Expander.C1ExpandDirection">
            <summary>
            Expand direction.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Expander.C1ExpandDirection.Top">
            <summary>
            Top.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Expander.C1ExpandDirection.Right">
            <summary>
            Right.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Expander.C1ExpandDirection.Bottom">
            <summary>
            Bottom.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Expander.C1ExpandDirection.Left">
            <summary>
            Left.
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1HeaderContentControl.C1BorderBox">
            <summary>
            C1BorderBox.
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1MultiPage.C1MultiPage">
            <summary>
            C1MultiPage is a control that manages a collection of page fragments, only one page is displayed at a time.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1MultiPage.C1MultiPage.#ctor">
            <summary>
            Constructor of C1MultiPage class.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1MultiPage.C1MultiPage.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:C1.Web.UI.Controls.C1MultiPage.C1MultiPage"/> class.
            </summary>
            <param name="key">The key.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1MultiPage.C1MultiPage.MoveFirst">
            <summary>
            Moves to the first page.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1MultiPage.C1MultiPage.MoveLast">
            <summary>
            Moves to the last page.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1MultiPage.C1MultiPage.MovePrevious">
            <summary>
            Moves to the previous page.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1MultiPage.C1MultiPage.MoveNext">
            <summary>
            Moves to the next page.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1MultiPage.C1MultiPage.FindPageView(System.String)">
            <summary>
            Gets the index of page with the specified page view ID.
            </summary>
            <param name="pageViewID">The page view ID.</param>
            <returns>The indes of the page; -1 if not found.</returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1MultiPage.C1MultiPage.SelectPageView(System.Int32)">
            <summary>
            Selects the page view by the index.
            </summary>
            <param name="index">The page view index.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1MultiPage.C1MultiPage.SelectPageView(System.String)">
            <summary>
            Selects the page view by the ID.
            </summary>
            <param name="pageViewID">The page view ID.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1MultiPage.C1MultiPage.RemovePageView(System.Int32)">
            <summary>
            Removes the page view at the specified index.
            </summary>
            <param name="index">The page view index.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1MultiPage.C1MultiPage.CreateControlCollection">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1MultiPage.C1MultiPage.OnPreRender(System.EventArgs)">
            <summary>
            Raises the PreRender event.
            </summary>
            <param name="e">An EventArgs object that contains the event data.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1MultiPage.C1MultiPage.GetControlCssClass">
            <summary>
            Gets the built in CSS class for the control.
            </summary>
            <returns>The CSS class name string.</returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1MultiPage.C1MultiPage.Render(System.Web.UI.HtmlTextWriter)">
            <summary>
            Sends server control content to a provided System.Web.UI.HtmlTextWriter object,
            which writes the content to be rendered on the client.
            </summary>
            <param name="writer">The System.Web.UI.HtmlTextWriter object that receives the server control content.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1MultiPage.C1MultiPage.SaveViewState">
            <summary>
            Saves any server control view-state changes that have occurred since the time the page was posted back to the server.
            </summary>
            <returns>Returns the server control's current view state.</returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1MultiPage.C1MultiPage.LoadViewState(System.Object)">
            <summary>
            Restores view-state information from a previous page request that was saved by the SaveViewState method.
            </summary>
            <param name="savedState">An Object that represents the control state to be restored.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1MultiPage.C1MultiPage.GetScriptDescriptors">
            <summary>
            Gets a collection of script descriptors that represent ECMAScript (JavaScript) client components.
            </summary>
            <returns></returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1MultiPage.C1MultiPage.GetScriptReferences">
            <summary>
            Registers the script libraries for the control.
            </summary>
            <returns>The collection of the script libraries.</returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1MultiPage.C1MultiPage.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)">
            <summary>
            LoadPostData.
            </summary>
            <param name="postDataKey"></param>
            <param name="postCollection"></param>
            <returns></returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1MultiPage.C1MultiPage.RaisePostDataChangedEvent">
            <summary>
            RaisePostDataChangedEvent.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1MultiPage.C1MultiPage.RaisePostBackEvent(System.String)">
            <summary>
            
            </summary>
            <param name="eventArgument"></param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1MultiPage.C1MultiPage.OnBeforeSelectedIndexChange(System.ComponentModel.CancelEventArgs)">
            <summary>
            Fires the BeforeSelectedIndexChange event.
            </summary>
            <param name="e">The cancelable event argument.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1MultiPage.C1MultiPage.OnSelectedIndexChanged(System.EventArgs)">
            <summary>
            Fires the SelectedIndexChanged event.
            </summary>
            <param name="e">The event argument.</param>
        </member>
        <member name="P:C1.Web.UI.Controls.C1MultiPage.C1MultiPage.NamingContainer">
            <summary>
            
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1MultiPage.C1MultiPage.ParentId">
            <summary>
            
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1MultiPage.C1MultiPage.ParentClientId">
            <summary>
            
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1MultiPage.C1MultiPage.PageViews">
            <summary>
            Gets a collection of page views.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1MultiPage.C1MultiPage.SelectedIndex">
            <summary>
            Gets or sets the index of the selected page view.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1MultiPage.C1MultiPage.SelectedPageView">
            <summary>
            Gets the selected page view.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1MultiPage.C1MultiPage.ShowPageIndex">
            <summary>
            Gets or sets a value that determines whether the page index is displayed.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1MultiPage.C1MultiPage.ShowToolBar">
            <summary>
            Gets or sets a value that determines whether the tool bar is displayed.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1MultiPage.C1MultiPage.FirstButtonText">
            <summary>
            Gets or sets text displayed on the first button.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1MultiPage.C1MultiPage.PrevButtonText">
            <summary>
            Gets or sets text displayed on the previous button.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1MultiPage.C1MultiPage.NextButtonText">
            <summary>
            Gets or sets text displayed on the next button.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1MultiPage.C1MultiPage.LastButtonText">
            <summary>
            Gets or sets text displayed on the last button.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1MultiPage.C1MultiPage.AutoPlay">
            <summary>
            Gets or sets a value that determines whether page views are displayed one by one automatically.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1MultiPage.C1MultiPage.Delay">
            <summary>
            Gets or sets the delay time of each page in AutoPlay mode.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1MultiPage.C1MultiPage.Loop">
            <summary>
            Gets or sets a value that determines whether to go back to the first page automatically when the last page is reached.
            </summary>
            <remarks>
            This value takes effect when AutoPlay is set to true.
            </remarks>
        </member>
        <member name="P:C1.Web.UI.Controls.C1MultiPage.C1MultiPage.AutoPostBack">
            <summary>
            Gets or sets a value that determines whether postback to server when switching between page views.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1MultiPage.C1MultiPage.CausesValidation">
            <summary>
            Gets or sets a value indicating whether validation is performed when switching between page views.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1MultiPage.C1MultiPage.ValidationGroup">
            <summary>
            Gets or sets the group of controls for which the multipage control causes validation when it posts back to the server.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1MultiPage.C1MultiPage.EmbeddedVisualStyles">
            <summary>
            Defines names of the visual styles what embeded into control's assembly.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1MultiPage.C1MultiPage.LoadOnDemand">
            <summary>
            Gets or sets a value that determines whether only the selected page view is displayed.
            </summary>
            <remarks>
            Generally, you have to turn on the AutoPostBack when setting this property to true.
            In this situation, there is only one page rendered by the server, and when navigating to 
            another page view, the control will post back to server and request a new page.
            </remarks>
        </member>
        <member name="P:C1.Web.UI.Controls.C1MultiPage.C1MultiPage.Enabled">
            <summary>
            Gets or sets a value indicate if a C1MultiPage control is enabled.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1MultiPage.C1MultiPage.InternalEnabled">
            <summary>
            
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1MultiPage.C1MultiPage.PageCursorFormat">
            <summary>
            
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1MultiPage.C1MultiPage.Animation">
            <summary>
            Animation effect while switching between pages.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1MultiPage.C1MultiPage.Duration">
            <summary>
            Expand Animation duration in milliseconds.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1MultiPage.C1MultiPage.Easing">
            <summary>
            Specifies the transition for animation.
            </summary>
        </member>
        <member name="E:C1.Web.UI.Controls.C1MultiPage.C1MultiPage.BeforeSelectedIndexChange">
            <summary>
            Occurs before the SelectedIndex is changed.
            </summary>
        </member>
        <member name="E:C1.Web.UI.Controls.C1MultiPage.C1MultiPage.SelectedIndexChanged">
            <summary>
            Occurs when the SelectedIndex is changed.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1MultiPage.C1MultiPage.OnClientBeforeSelectedIndexChange">
            <summary>
            Handler name of the client BeforeSelectedIndexChange event.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1MultiPage.C1MultiPage.OnClientSelectedIndexChanged">
            <summary>
            Handler name of the client SelectedIndexChanged event.
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1MultiPage.C1PageView">
            <summary>
            A individual page fragment for the C1MultiPage control.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1MultiPage.C1PageView.#ctor">
            <summary>
            Constructor of the C1PageView class.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1MultiPage.C1PageView.Render(System.Web.UI.HtmlTextWriter)">
            <summary>
            
            </summary>
            <param name="writer"></param>
        </member>
        <member name="P:C1.Web.UI.Controls.C1MultiPage.C1PageView.Owner">
            <summary>
            Gets or sets the owner of this page view.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1MultiPage.C1PageView.Width">
            <summary>
            
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1MultiPage.C1PageView.Height">
            <summary>
            
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1MultiPage.C1PageView.EnableTheming">
            <summary>
            
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1MultiPage.C1PageView.GroupingText">
            <summary>
            
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1MultiPage.C1PageView.Text">
            <summary>
            Gets or sets the text associated with this page view.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1MultiPage.C1PageView.Value">
            <summary>
            Gets or sets the value associated with this page view.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1MultiPage.C1PageView.Visible">
            <summary>
            Gets or sets a value that indicates whether a server control is rendered as UI on the page.
            </summary>
            <returns>True if the control is visible on the page; otherwise False.</returns>
        </member>
        <member name="P:C1.Web.UI.Controls.C1MultiPage.C1PageView.DisplayVisible">
            <summary>
            Gets or sets a value that indicates whether a server control is rendered as UI on the page.
            </summary>
            <remarks>
            Returns true if the control is visible on the page; otherwise false.
            </remarks>
        </member>
        <member name="T:C1.Web.UI.Controls.C1MultiPage.C1PageViewCollection">
            <summary>
            Represents a collection of page views.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1MultiPage.C1PageViewCollection.#ctor(C1.Web.UI.Controls.C1MultiPage.C1MultiPage)">
            <summary>
            Creates an instance of C1PageViewCollection class.
            </summary>
            <param name="owner">The multipage control owner.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1MultiPage.C1PageViewCollection.Add(System.Web.UI.Control)">
            <summary>
            Adds a control to this collection.
            </summary>
            <param name="child">The control to be added.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1MultiPage.C1PageViewCollection.AddAt(System.Int32,System.Web.UI.Control)">
            <summary>
            Adds a control to the specified position.
            </summary>
            <param name="index">The position to add.</param>
            <param name="child">The control to be added.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1MultiPage.C1PageViewCollection.Clear">
            <summary>
            Clears the collection.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1MultiPage.C1PageViewCollection.Remove(System.Web.UI.Control)">
            <summary>
            Removes the control from the collection.
            </summary>
            <param name="value">The control to remove.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1MultiPage.C1PageViewCollection.RemoveAt(System.Int32)">
            <summary>
            Removes the control at specified position.
            </summary>
            <param name="index">The position of the control.</param>
        </member>
        <member name="P:C1.Web.UI.Controls.C1MultiPage.C1PageViewCollection.Item(System.Int32)">
            <summary>
            The indexer of this collection.
            </summary>
            <param name="index">Page view index.</param>
            <returns>The C1PageView object at the specified index.</returns>
        </member>
        <member name="T:C1.Web.UI.Controls.PageSwitchEffect">
            <summary>
            Animation effects while switching between pages.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.PageSwitchEffect.None">
            <summary>
            No effect.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.PageSwitchEffect.Auto">
            <summary>
            Default page switching behavior.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.PageSwitchEffect.Fade">
            <summary>
            The current page fades out, then the next page fades in.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.PageSwitchEffect.SlideLeft">
            <summary>
            The current page slides out while the next page slide in, both from right to left.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.PageSwitchEffect.SlideRight">
            <summary>
            The current page slides out while the next page slide in, both from left to right.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.PageSwitchEffect.SlideTop">
            <summary>
            The current page slides out while the next page slide in, both from bottom to top.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.PageSwitchEffect.SlideBottom">
            <summary>
            The current page slides out while the next page slide in, both from top to bottom.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.PageSwitchEffect.SlideLeftRight">
            <summary>
            The current page slides out from the right to left, while the next page slides in from the left to right.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.PageSwitchEffect.SlideRightLeft">
            <summary>
            The current page slides out from the left to right, while the next page slides in from the right to left.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.PageSwitchEffect.SlideTopBottom">
            <summary>
            The current page slides out from the bottom to top, while the next page slides in from the top to bottom.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.PageSwitchEffect.SlideBottomTop">
            <summary>
            The current page slides out from the top to bottom, while the next page slides in from the bottom to top.
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1NavPanel.C1NavPanel">
            <summary>
            ComponentOne NavPanel is a web control that allows you to 
            provide multiple panes and display them one at a time. 
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1NavPanel.C1NavPanel.#ctor">
            <summary>
            C1NavPanel default constructor.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1NavPanel.C1NavPanel.CreateChildControlsFromPanes(System.Boolean)">
            <summary>
            Create child controls collection using Panes collection.
            </summary>
            <remarks>This method preliminary used by control developers.</remarks>
            <param name="dataBinding">Indicates if data binding is used for Panes creation.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1NavPanel.C1NavPanel.OnRenderStart(System.Web.UI.HtmlTextWriter)">
            <summary>
            This method called immediately before Render method.
            </summary>
            <remarks>This method preliminary used by control developers.</remarks>
            <param name="writer"></param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1NavPanel.C1NavPanel.CalculateFillSizeForExpandedPane(System.Double,System.Collections.ArrayList)">
            <summary>
            Calculate Fill Size for expanded pane(s).
            </summary>
            <remarks>This method preliminary used by control developers.</remarks>
            <param name="headersSize">Calculated headers size.</param>
            <param name="expandedPanes">Collection of expanded panes.</param>
            <returns>Fill Size for expanded pane.</returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1NavPanel.C1NavPanel.GetCssLayoutResourcePath">
            <summary>
            GetCssLayoutResourcePath.
            </summary>
            <returns></returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1NavPanel.C1NavPanel.GetTopSelectorCssClassName">
            <summary>
            GetTopSelectorCssClassName.
            </summary>
            <returns></returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1NavPanel.C1NavPanel.GetVisualStyleCssClassName">
            <summary>
            GetVisualStyleCssClassName.
            </summary>
            <returns></returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1NavPanel.C1NavPanel.CreateAccordionPane">
            <summary>
            Creates the pane control that can be added to Panes collection.
            </summary>
            <returns></returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1NavPanel.C1NavPanel.GetScriptDescriptors">
            <summary>
            When overridden in a derived class, registers the ScriptDescriptor objects.
            </summary>
            <returns></returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1NavPanel.C1NavPanel.GetScriptReferences">
            <summary>
            Registers the script libraries for the control.
            </summary>
            <returns></returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1NavPanel.C1NavPanel.LoadViewState(System.Object)">
            <summary>
            Restores view-state information from a previous request that was saved.
            </summary>
            <param name="savedState"></param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1NavPanel.C1NavPanel.SaveViewState">
            <summary>
            Saves any state that was modified after the TrackViewState method was invoked.
            </summary>
            <returns></returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1NavPanel.C1NavPanel.TrackViewState">
            <summary>
            Causes the control to track changes to its view state so they can be stored in the object's ViewState property.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1NavPanel.C1NavPanel.AnimationEasing">
            <summary>
            Specifies the transition for animation.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1NavPanel.C1NavPanel.ExpandEasing">
            <summary>
            This property is hidden.
            </summary>
            <value></value>
        </member>
        <member name="P:C1.Web.UI.Controls.C1NavPanel.C1NavPanel.CollapseEasing">
            <summary>
            This property is hidden.
            </summary>
            <value></value>
        </member>
        <member name="P:C1.Web.UI.Controls.C1NavPanel.C1NavPanel.AutoSize">
            <summary>
            This property is hidden for C1NavPanel.
            </summary>
            <value></value>
        </member>
        <member name="P:C1.Web.UI.Controls.C1NavPanel.C1NavPanel.ExpandDirection">
            <summary>
            This property is hidden. C1NavPanel expand direction is always Bottom.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1NavPanel.C1NavPanel.OutlookUISettings">
            <summary>        
            Outlook user interface settings.
            </summary>        
        </member>
        <member name="P:C1.Web.UI.Controls.C1NavPanel.C1NavPanel.OutlookUIMenuID">
            <summary>
            Gets client id of the C1Menu that used for Outlook user interface to hide/show additional buttons.
            Returns empty string when property DisplayHiddenTopicsBar is false.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1NavPanel.C1NavPanel.OutlookUIMenu">
            <summary>
            Menu used to hide/show additional buttons.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1NavPanel.C1NavPanel.RequireOpenedPane">
            <summary>
            This property is hidden for C1NavPanel.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1NavPanel.C1NavPanel.OutlookUI">
            <summary>
            Returns a value that indicates whether or not the accordion will show the content of the active pane at the top as in Microsoft Outlook.
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1TabControl.C1TabControl">
            <summary>
            A control similar to the TabControl in WinForm version.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1TabControl.C1TabControl.#ctor">
            <summary>
            Creates an instance of C1TabControl.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1TabControl.C1TabControl.#ctor(System.String)">
            <summary>
            Creates an instance of C1TabControl.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1TabControl.C1TabControl.FindTabPageByText(System.String)">
            <summary>
            Finds the tab page by text.
            </summary>
            <param name="text">The text to find.</param>
            <returns>The index of tab page; -1 if not found.</returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1TabControl.C1TabControl.FindTabPageByID(System.String)">
            <summary>
            Finds the tab page by ID.
            </summary>
            <param name="id">The ID to find.</param>
            <returns>The index of tab page; -1 if not found.</returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1TabControl.C1TabControl.MoveFirst">
            <summary>
            Moves to the first tab page.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1TabControl.C1TabControl.MovePrevious">
            <summary>
            Moves to the previous tab page.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1TabControl.C1TabControl.MoveNext">
            <summary>
            Moves to the next tab page.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1TabControl.C1TabControl.MoveLast">
            <summary>
            Moves to the last tab page.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1TabControl.C1TabControl.RemoveTabPage(System.Int32)">
            <summary>
            Removes the tab page at the specified position.
            </summary>
            <param name="index">The index of the tab page.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1TabControl.C1TabControl.GetScriptDescriptors">
            <summary>
            Gets a collection of script descriptors that represent ECMAScript (JavaScript) client components.
            </summary>
            <returns></returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1TabControl.C1TabControl.GetScriptReferences">
            <summary>
            Registers the script libraries for the control.
            </summary>
            <returns>The collection of the script libraries.</returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1TabControl.C1TabControl.System#Web#UI#IPostBackEventHandler#RaisePostBackEvent(System.String)">
            <summary>
            Raises an event for the C1TabControl control when it posts back to the server.
            </summary>
            <param name="eventArgument">A String that represents the event argument passed to the event handler.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1TabControl.C1TabControl.System#Web#UI#IPostBackDataHandler#LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)">
            <summary>
            LoadPostData.
            </summary>
            <param name="postDataKey"></param>
            <param name="postCollection"></param>
            <returns></returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1TabControl.C1TabControl.System#Web#UI#IPostBackDataHandler#RaisePostDataChangedEvent">
            <summary>
            When implemented by a class, signals the server control to notify the ASP.NET application that the state of the control has changed.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1TabControl.C1TabControl.OnBeforeSelectedIndexChange(System.ComponentModel.CancelEventArgs)">
            <summary>
            Fires the BeforeSelectedIndexChange event.
            </summary>
            <param name="e">The cancelable event argument.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1TabControl.C1TabControl.OnSelectedIndexChanged(System.EventArgs)">
            <summary>
            Fires the SelectedIndexChanged event.
            </summary>
            <param name="e">The event argument.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1TabControl.C1TabControl.OnPreRender(System.EventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1TabControl.C1TabControl.CreateTabAndPages">
            <summary>
            
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1TabControl.C1TabControl.ApplyTabAndPageProperties">
            <summary>
            
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1TabControl.C1TabControl.LoadClientProperties">
            <summary>
            
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1TabControl.C1TabControl.InitTabAndPages(System.Boolean)">
            <summary>
            
            </summary>
            <param name="forceCreate"></param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1TabControl.C1TabControl.GetControlCssClass">
            <summary>
            Gets the CssClass for the control.
            </summary>
            <returns></returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1TabControl.C1TabControl.Render(System.Web.UI.HtmlTextWriter)">
            <summary>
            Renders the control to the specified HTML writer.
            </summary>
            <param name="writer">The HtmlTextWriter object that receives the control content.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1TabControl.C1TabControl.CreateControlCollection">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="P:C1.Web.UI.Controls.C1TabControl.C1TabControl.TabStrip">
            <summary>
            
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1TabControl.C1TabControl.MultiPage">
            <summary>
            
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1TabControl.C1TabControl.EmbeddedVisualStyles">
            <summary>
            Defines names of the visual styles what embeded into control's assembly.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1TabControl.C1TabControl.Alignment">
            <summary>
            Gets or sets the alignment of the tabs.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1TabControl.C1TabControl.Direction">
            <summary>
            Gets or sets the docking direction of the tabs.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1TabControl.C1TabControl.ScrollSettings">
            <summary>        
            Scroll settings.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1TabControl.C1TabControl.TextImageRelation">
            <summary>
            Gets or sets the relationship of the text and image.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1TabControl.C1TabControl.AutoPostBack">
            <summary>
            Gets or sets a value that determines whether to postback to the server when clicking the tab.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1TabControl.C1TabControl.CausesValidation">
            <summary>
            Gets or sets a value indicating whether validation is performed when a tab is clicked.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1TabControl.C1TabControl.ValidationGroup">
            <summary>
            Gets or sets the group of controls for which the tab causes validation when it posts back to the server.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1TabControl.C1TabControl.SelectedIndex">
            <summary>
            Gets or sets the index of the selected tab.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1TabControl.C1TabControl.SelectedTabPage">
            <summary>
            Gets the current selecte page.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1TabControl.C1TabControl.TabPages">
            <summary>
            Gets the tab page collection.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1TabControl.C1TabControl.UseEmbeddedVisualStyles">
            <summary>
            If true then control will use VisualStyle embedded into control's assembly.
            otherwise control will load VisualStyle from disk.
            </summary>        
        </member>
        <member name="P:C1.Web.UI.Controls.C1TabControl.C1TabControl.VisualStyle">
            <summary>
            Gets or sets the visual style name used by the control.
            </summary>
            <remarks>
            If this value is empty then visual style will be not rendered.
            Default value is "ArcticFox".
            </remarks>
        </member>
        <member name="P:C1.Web.UI.Controls.C1TabControl.C1TabControl.VisualStylePath">
            <summary>
            Gets or sets the path to the visual style folder.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1TabControl.C1TabControl.Animation">
            <summary>
            Animation effect while switching between pages.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1TabControl.C1TabControl.Duration">
            <summary>
            Expand Animation duration in milliseconds.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1TabControl.C1TabControl.Easing">
            <summary>
            Specifies the transition for animation.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1TabControl.C1TabControl.OnClientAfterTabSelect">
            <summary>
            Handler name of the client AfterTabSelect event.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1TabControl.C1TabControl.OnClientBeforeTabSelect">
            <summary>
            Handler name of the client BeforeTabSelect event.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1TabControl.C1TabControl.OnClientTabUnSelect">
            <summary>
            Handler name of the client TabUnSelect event.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1TabControl.C1TabControl.OnClientTabMouseEnter">
            <summary>
            Handler name of the client TabMouseEnter event.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1TabControl.C1TabControl.OnClientTabMouseOut">
            <summary>
            Handler name of the client TabMouseOut event.
            </summary>
        </member>
        <member name="E:C1.Web.UI.Controls.C1TabControl.C1TabControl.BeforeSelectedIndexChange">
            <summary>
            Occurs before the SelectedIndex is changed.
            </summary>
        </member>
        <member name="E:C1.Web.UI.Controls.C1TabControl.C1TabControl.SelectedIndexChanged">
            <summary>
            Occurs when the SelectedIndex is changed.
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1TabControl.C1TabPage">
            <summary>
            Represents a single tab page in a C1TabControl. 
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1TabControl.C1TabPage.#ctor">
            <summary>
            Constructor of the C1TabPage class.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1TabControl.C1TabPage.Render(System.Web.UI.HtmlTextWriter)">
            <summary>
            Sends server control content to a provided System.Web.UI.HtmlTextWriter object,
            which writes the content to be rendered on the client.
            </summary>
            <param name="writer">The System.Web.UI.HtmlTextWriter object that receives the server control content.</param>
        </member>
        <member name="P:C1.Web.UI.Controls.C1TabControl.C1TabPage.Text">
            <summary>
            Gets or sets the text displayed on the tab.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1TabControl.C1TabPage.Value">
            <summary>
            Gets or sets the value associated with the tab.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1TabControl.C1TabPage.SelectedCssClass">
            <summary>
            CSS class name used for the tab in selected mode.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1TabControl.C1TabPage.DisabledCssClass">
            <summary>
            CSS class name used for the tab in disabled mode.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1TabControl.C1TabPage.ImageUrl">
            <summary>
            Url to the tab image when the tab is in normal state.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1TabControl.C1TabPage.DisabledImageUrl">
            <summary>
            Url to the tab image when the tab is in disabled state.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1TabControl.C1TabPage.SelectedImageUrl">
            <summary>
            Url to the tab image when the tab is in selected state.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1TabControl.C1TabPage.ForceNewLine">
            <summary>
            Gets or sets a value that determines whether the new tab starts from a new line.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1TabControl.C1TabPage.AutoSize">
            <summary>
            
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1TabControl.C1TabPage.Width">
            <summary>
            
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1TabControl.C1TabPage.Height">
            <summary>
            
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1TabControl.C1TabPage.EnableTheming">
            <summary>
            
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1TabControl.C1TabPage.GroupingText">
            <summary>
            
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1TabControl.C1TabPageCollection">
            <summary>
            Represents a collection of tab pages.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1TabControl.C1TabPageCollection.#ctor(C1.Web.UI.Controls.C1TabControl.C1TabControl)">
            <summary>
            Creates an instance of C1TabPageCollection class.
            </summary>
            <param name="owner">The owner of this collection.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1TabControl.C1TabPageCollection.Add(System.Web.UI.Control)">
            <summary>
            Adds a control to this collection.
            </summary>
            <param name="child">The control to be added.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1TabControl.C1TabPageCollection.AddAt(System.Int32,System.Web.UI.Control)">
            <summary>
            Adds a control to the specified position.
            </summary>
            <param name="index">The position to add.</param>
            <param name="child">The control to be added.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1TabControl.C1TabPageCollection.Clear">
            <summary>
            Clears the collection.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1TabControl.C1TabPageCollection.Remove(System.Web.UI.Control)">
            <summary>
            Removes the control from the collection.
            </summary>
            <param name="value">The control to remove.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1TabControl.C1TabPageCollection.RemoveAt(System.Int32)">
            <summary>
            Removes the control at specified position.
            </summary>
            <param name="index">The position of the control.</param>
        </member>
        <member name="T:C1.Web.UI.Controls.C1TabStrip.C1TabStripSerializer">
            <summary>
            Serializes C1TabStrip Control.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1TabStrip.C1TabStripSerializer.#ctor(System.Object)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1TabStrip.C1TabStripSerializer.OnAddItem(System.Object,System.Object)">
            <summary>
            Overriden.
            </summary>
            <param name="collection"></param>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1TabStrip.C1TabStripSerializer.OnClearItems(System.Object)">
            <summary>
            Overriden.
            </summary>
            <param name="collection"></param>
            <returns></returns>
        </member>
        <member name="T:C1.Web.UI.Controls.C1TabStrip.C1Tab">
            <summary>
            Represents a single tab in the TabStrip.
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1TabStrip.ITabOwner">
            <summary>
            The interface for the owner of tabs.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1TabStrip.ITabOwner.Owner">
            <summary>
            The parent owner.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1TabStrip.ITabOwner.SelectedIndex">
            <summary>
            Gets or sets the selected index.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1TabStrip.ITabOwner.SelectedTab">
            <summary>
            Gets the selected tab.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1TabStrip.ITabOwner.Tabs">
            <summary>
            Gets the tab collection.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1TabStrip.C1Tab.#ctor">
            <summary>
            Creates an instance of C1Tab class.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1TabStrip.C1Tab.#ctor(System.String)">
            <summary>
            Creates an instance of C1Tab class.
            </summary>
            <param name="text"></param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1TabStrip.C1Tab.#ctor(System.String,System.String)">
            <summary>
            Creates an instance of C1Tab class.
            </summary>
            <param name="text"></param>
            <param name="value"></param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1TabStrip.C1Tab.#ctor(System.String,System.String,System.String,System.String)">
            <summary>
            Creates an instance of C1Tab class.
            </summary>
            <param name="text"></param>
            <param name="value"></param>
            <param name="url"></param>
            <param name="target"></param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1TabStrip.C1Tab.AddAttributesToRender(System.Web.UI.HtmlTextWriter)">
            <summary>
            Adds HTML attributes and styles that need to be rendered to the specified
            System.Web.UI.HtmlTextWriterTag. This method is used primarily by control
            developers.
            </summary>
            <param name="writer">A System.Web.UI.HtmlTextWriter that represents the output stream to render
            HTML content on the client.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1TabStrip.C1Tab.CreateChildControls">
            <summary>
            
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1TabStrip.C1Tab.Render(System.Web.UI.HtmlTextWriter)">
            <summary>
            
            </summary>
            <param name="writer"></param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1TabStrip.C1Tab.IsNavigateUrl(System.String,System.Web.UI.Page)">
            <summary>
            Determines if NavigateUrl property match value of url.
            </summary>
            <param name="url"></param>
            <param name="page"></param>
            <returns></returns>
        </member>
        <member name="P:C1.Web.UI.Controls.C1TabStrip.C1Tab.Visible">
            <summary>
            Gets or sets a value that indicates whether a server control is rendered as UI on the page.
            </summary>
            <returns>True if the control is visible on the page; otherwise False.</returns>
        </member>
        <member name="P:C1.Web.UI.Controls.C1TabStrip.C1Tab.DisplayVisible">
            <summary>
            Gets or sets if tab is Visible.
            </summary>
            <remarks>
            This means that the tab item's html markup will be actually rendered into destination page but display style will be none.
            </remarks>
        </member>
        <member name="P:C1.Web.UI.Controls.C1TabStrip.C1Tab.Text">
            <summary>
            Gets or sets the text displayed on the tab.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1TabStrip.C1Tab.Value">
            <summary>
            Gets or sets the value associated with the tab.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1TabStrip.C1Tab.AutoPostBack">
            <summary>
            Gets or sets a value that determins whether postback to server when clicking the tab.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1TabStrip.C1Tab.ToolTip">
            <summary>
            Gets or sets the tooltip text for the tab.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1TabStrip.C1Tab.CssClass">
            <summary>
            CSS class name used for the tab.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1TabStrip.C1Tab.CssClassSelected">
            <summary>
            CSS class name used for the tab in selected mode.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1TabStrip.C1Tab.CssClassDisabled">
            <summary>
            CSS class name used for the tab in disabled mode.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1TabStrip.C1Tab.ImageUrl">
            <summary>
            Url to the tab image when the tab is in normal state.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1TabStrip.C1Tab.DisabledImageUrl">
            <summary>
            Url to the tab image when the tab is in disabled state.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1TabStrip.C1Tab.SelectedImageUrl">
            <summary>
            Url to the tab image when the tab is in selected state.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1TabStrip.C1Tab.NavigateUrl">
            <summary>
            The URL to navigate when clicking the tab.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1TabStrip.C1Tab.Target">
            <summary>
            The navigate target when clicking the tab.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1TabStrip.C1Tab.Index">
            <summary>
            Gets the index of this tab its group.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1TabStrip.C1Tab.Enabled">
            <summary>
            Gets or sets a value that determines the enable state of this tab.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1TabStrip.C1Tab.Selected">
            <summary>
            Gets or sets a value that determines whether the tab is selected.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1TabStrip.C1Tab.ForceNewLine">
            <summary>
            Gets or sets a value that determines whether the new tab starts from a new line.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1TabStrip.C1Tab.PageViewID">
            <summary>
            Gets or sets the ID of the PageView in a C1MultiPage that will be switched when this Tab is pressed.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1TabStrip.C1Tab.ClientPageViewID">
            <summary>
            
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1TabStrip.C1Tab.ScrollSettings">
            <summary>        
            Scroll settings.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1TabStrip.C1Tab.Alignment">
            <summary>
            Gets or sets the alignment of the child tabs.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1TabStrip.C1Tab.TextImageRelation">
            <summary>
            Gets or sets the relationship of the text and image for the child tabs.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1TabStrip.C1Tab.BackColor">
            <summary>
            
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1TabStrip.C1Tab.ForeColor">
            <summary>
            
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1TabStrip.C1Tab.BorderColor">
            <summary>
            
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1TabStrip.C1Tab.BorderStyle">
            <summary>
            
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1TabStrip.C1Tab.BorderWidth">
            <summary>
            
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1TabStrip.C1Tab.Font">
            <summary>
            
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1TabStrip.C1Tab.SelectedIndex">
            <summary>
            Gets or sets the index of the selected tab in the child group.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1TabStrip.C1Tab.SelectedTab">
            <summary>
            
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1TabStrip.C1Tab.ChildGroupCssClass">
            <summary>
            CSS class name used for the child tab group.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1TabStrip.C1Tab.Tabs">
            <summary>
            Gets the collection of tabs.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1TabStrip.C1Tab.Owner">
            <summary>
            Gets parent tab owner.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1TabStrip.C1Tab.Controls">
            <summary>
            
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1TabStrip.C1TabCollection">
            <summary>
            Represents the collection of tabs.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1TabStrip.C1TabCollection.Add(C1.Web.UI.Controls.C1TabStrip.C1Tab)">
            <summary>
            Adds a tab object.
            </summary>
            <param name="tab">The C1Tab object to add.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1TabStrip.C1TabCollection.AddRange(C1.Web.UI.Controls.C1TabStrip.C1Tab[])">
            <summary>
            Adds an array of tabs.
            </summary>
            <param name="tabs">The array of tabs.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1TabStrip.C1TabCollection.Insert(System.Int32,C1.Web.UI.Controls.C1TabStrip.C1Tab)">
            <summary>
            Inserts a tab object at specified position.
            </summary>
            <param name="index">The position to insert.</param>
            <param name="tab">The C1Tab object to insert.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1TabStrip.C1TabCollection.Remove(C1.Web.UI.Controls.C1TabStrip.C1Tab)">
            <summary>
            Removes the specified oab object.
            </summary>
            <param name="tab">The C1Tab object to remove.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1TabStrip.C1TabCollection.IndexOf(C1.Web.UI.Controls.C1TabStrip.C1Tab)">
            <summary>
            Gets the index of tab object.
            </summary>
            <param name="tab">The C1Tab object.</param>
            <returns>The index of the tab.</returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1TabStrip.C1TabCollection.FindTabByText(System.String)">
            <summary>
            Searches <see cref="T:C1.Web.UI.Controls.C1TabStrip.C1Tab"/> node through the collection by the Text.
            </summary>
            <param name="text"></param>
            <returns>First <see cref="T:C1.Web.UI.Controls.C1TabStrip.C1Tab"/> node that match the searched text.</returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1TabStrip.C1TabCollection.FindTabByValue(System.String)">
            <summary>
            Searches <see cref="T:C1.Web.UI.Controls.C1TabStrip.C1Tab"/> node through the collection by the Value. 
            </summary>
            <param name="value">node property</param>
            <returns>First <see cref="T:C1.Web.UI.Controls.C1TabStrip.C1Tab"/> node that match the searched text.</returns>
        </member>
        <member name="P:C1.Web.UI.Controls.C1TabStrip.C1TabCollection.Item(System.Int32)">
            <summary>
            The indexer of the tab collection.
            </summary>
            <param name="index">The index of tab object to access.</param>
            <returns>The tab object at specified position.</returns>
        </member>
        <member name="T:C1.Web.UI.Controls.C1TabStrip.C1TabGroup">
            <summary>
            
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1TabStrip.C1TabGroup.CreateChildControls">
            <summary>
            
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1TabStrip.C1TabGroup.Render(System.Web.UI.HtmlTextWriter)">
            <summary>
            
            </summary>
            <param name="writer"></param>
        </member>
        <member name="P:C1.Web.UI.Controls.C1TabStrip.C1TabGroup.GroupCssClass">
            <summary>
            CSS class name used for the tab group.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1TabStrip.C1TabGroup.Controls">
            <summary>
            
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1TabStrip.C1TabStrip">
            <summary>
            Represents a TabStrip control that contains a row of tabs and separators.
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1TabStrip.ITabBindingFields">
            <summary>
            Interface that defines the fields the data bound properties to bind. 
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1TabStrip.ITabBindingFields.DataTextField">
            <summary>
            Gets or sets the name of the data field to bind to the C1Tab.Text property.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1TabStrip.ITabBindingFields.DataValueField">
            <summary>
            Gets or sets the name of the data field to bind to the C1Tab.Value property.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1TabStrip.ITabBindingFields.DataUrlField">
            <summary>
            Gets or sets the name of the data field to bind to the C1Tab.NavigateUrl property.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1TabStrip.ITabBindingFields.MasterID">
            <summary>
            Gets or sets the name of the master id field in hierachical databinding.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1TabStrip.ITabBindingFields.ParentID">
            <summary>
            Gets or sets the name of the parent id field in hierachical databinding.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1TabStrip.C1TabStrip.#ctor">
            <summary>
            Creates an instance of C1TabStrip class.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1TabStrip.C1TabStrip.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:C1.Web.UI.Controls.C1TabStrip.C1TabStrip"/> class.
            </summary>
            <param name="key">The key.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1TabStrip.C1TabStrip.GetCommonCssRef">
            <summary>
            Gets the common Css file.
            </summary>
            <returns></returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1TabStrip.C1TabStrip.IsHorizontal">
            <summary>
            Determines whether the tabstrip is in horizontal direction.
            </summary>
            <returns></returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1TabStrip.C1TabStrip.GetControlCssClass">
            <summary>
            Gets the CSS class name for the control.
            </summary>
            <returns></returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1TabStrip.C1TabStrip.RenderDesignTimeStyleSheets(System.Web.UI.HtmlTextWriter,System.Boolean)">
            <summary>
            Override this method if you want to render additional stylesheets definitions what will be used by control only at design-time.
            </summary>
            <remarks>Primarily this method used by control developers.
            Note, stylesheet styles.css from embedded VisualStyle will be included automatically by VisualStyle mechanism.</remarks>
            <param name="writer"></param>
            <param name="beforeVisualStyle"></param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1TabStrip.C1TabStrip.RegisterRunTimeStyleSheets(System.Boolean)">
            <summary>
            
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1TabStrip.C1TabStrip.CreateChildControls">
            <summary>
            
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1TabStrip.C1TabStrip.OnPreRender(System.EventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1TabStrip.C1TabStrip.Render(System.Web.UI.HtmlTextWriter)">
            <summary>
            
            </summary>
            <param name="writer"></param>
            
        </member>
        <member name="M:C1.Web.UI.Controls.C1TabStrip.C1TabStrip.RenderContents(System.Web.UI.HtmlTextWriter)">
            <summary>
            RenderContents override
            </summary>
            <param name="writer">HtmlTextWriter</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1TabStrip.C1TabStrip.PerformDataBinding(System.Collections.IEnumerable)">
            <summary>
            
            </summary>
            <param name="data"></param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1TabStrip.C1TabStrip.BindToIEnumerable(C1.Web.UI.Controls.C1TabStrip.ITabBindingFields,System.Collections.IEnumerable)">
            <summary>
            
            </summary>
            <param name="fields"></param>
            <param name="enumerable"></param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1TabStrip.C1TabStrip.BindToDataView(C1.Web.UI.Controls.C1TabStrip.ITabOwner,C1.Web.UI.Controls.C1TabStrip.ITabBindingFields,System.Data.DataView,System.Data.DataRelation)">
            <summary>
            
            </summary>
            <param name="tabOwner"></param>
            <param name="fields"></param>
            <param name="dataView"></param>
            <param name="relation"></param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1TabStrip.C1TabStrip.GetScriptDescriptors">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1TabStrip.C1TabStrip.GetScriptReferences">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1TabStrip.C1TabStrip.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)">
            <summary>
            LoadPostData.
            </summary>
            <param name="postDataKey"></param>
            <param name="postCollection"></param>
            <returns></returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1TabStrip.C1TabStrip.RaisePostDataChangedEvent">
            <summary>
            RaisePostDataChangedEvent.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1TabStrip.C1TabStrip.FindTabByNavigateUrl(System.String)">
            <summary>
            Searches <see cref="T:C1.Web.UI.Controls.C1TabStrip.C1Tab"/> through the collection by the NavigateUrl.
            Recursive searching is used until <see cref="T:C1.Web.UI.Controls.C1TabStrip.C1Tab"/> is found.
            </summary>
            <param name="url"></param>
            <returns>First <see cref="T:C1.Web.UI.Controls.C1TabStrip.C1Tab"/> that match the searched text.</returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1TabStrip.C1TabStrip.FindTabByText(System.String)">
            <summary>
            Searches <see cref="T:C1.Web.UI.Controls.C1TabStrip.C1Tab"/> through the collection by the Text.
            Recursive searching is used until <see cref="T:C1.Web.UI.Controls.C1TabStrip.C1Tab"/> is found.
            </summary>
            <param name="text"></param>
            <returns>First <see cref="T:C1.Web.UI.Controls.C1TabStrip.C1Tab"/> that match the searched text.</returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1TabStrip.C1TabStrip.FindTabByValue(System.String)">
            <summary>
            Searches <see cref="T:C1.Web.UI.Controls.C1TabStrip.C1Tab"/> through the collection by the Value. 
            Recursive searching is used until <see cref="T:C1.Web.UI.Controls.C1TabStrip.C1Tab"/> is found. 
            </summary>
            <param name="value">property</param>
            <returns>First <see cref="T:C1.Web.UI.Controls.C1TabStrip.C1Tab"/> that match the searched value.</returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1TabStrip.C1TabStrip.OnSelectionChanged(System.EventArgs)">
            <summary>
            Fires the SelectionChanged event.
            </summary>
            <param name="e">The event argument.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1TabStrip.C1TabStrip.SaveLayout(System.String)">
            <summary>
            Saves the control layout properties to the file.
            </summary>
            <param name="filename">The file where the values of the layout properties will be saved.</param> 
        </member>
        <member name="M:C1.Web.UI.Controls.C1TabStrip.C1TabStrip.SaveLayout(System.IO.Stream)">
            <summary>
            Saves control layout properties to the stream.
            </summary>
            <param name="stream">The stream where the values of layout properties will be saved.</param> 
        </member>
        <member name="M:C1.Web.UI.Controls.C1TabStrip.C1TabStrip.LoadLayout(System.String)">
            <summary>
            Loads control layout properties from the file.
            </summary>
            <param name="filename">The file where the values of layout properties will be loaded.</param> 
        </member>
        <member name="M:C1.Web.UI.Controls.C1TabStrip.C1TabStrip.LoadLayout(System.IO.Stream)">
            <summary>
            Load control layout properties from the stream.
            </summary>
            <param name="stream">The stream where the values of layout properties will be loaded.</param> 
        </member>
        <member name="M:C1.Web.UI.Controls.C1TabStrip.C1TabStrip.LoadLayout(System.String,C1.Web.UI.LayoutType)">
            <summary>
            Loads control layout properties with specified types from the file.
            </summary>
            <param name="filename">The file where the values of layout properties will be loaded.</param> 
            <param name="layoutTypes">The layout types to load.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1TabStrip.C1TabStrip.LoadLayout(System.IO.Stream,C1.Web.UI.LayoutType)">
            <summary>
            Loads the control layout properties with specified types from the stream.
            </summary>
            <param name="stream">The stream where the values of the layout properties will be loaded.</param> 
            <param name="layoutTypes">The layout types to load.</param>
        </member>
        <member name="P:C1.Web.UI.Controls.C1TabStrip.C1TabStrip.NamingContainer">
            <summary>
            
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1TabStrip.C1TabStrip.Direction">
            <summary>
            Gets or sets the direction of the tabs.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1TabStrip.C1TabStrip.Enabled">
            <summary>
            Gets or sets if tabstrip is Enabled.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1TabStrip.C1TabStrip.InternalIsEnabled">
            <summary>
            
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1TabStrip.C1TabStrip.OverlapOrder">
            <summary>
            Gets or sets orientation of the tabstrip.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1TabStrip.C1TabStrip.Alignment">
            <summary>
            Gets or sets the default alignment of the tabstrip.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1TabStrip.C1TabStrip.AutoPostBack">
            <summary>
            Gets or sets a value that determines whether to postback to the server when clicking the tab.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1TabStrip.C1TabStrip.PostBackUrl">
            <summary>
            Gets or sets the URL of the page to post to from the current page when a tab is clicked.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1TabStrip.C1TabStrip.CausesValidation">
            <summary>
            Gets or sets a value indicating whether validation is performed when a tab is clicked.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1TabStrip.C1TabStrip.ValidationGroup">
            <summary>
            Gets or sets the group of controls for which the tab causes validation when it posts back to the server.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1TabStrip.C1TabStrip.EmbeddedVisualStyles">
            <summary>
            Defines names of the visual styles what embeded into control's assembly.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1TabStrip.C1TabStrip.DataTextField">
            <summary>
            Gets or sets the name of the data field to bind to the C1Tab.Text property.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1TabStrip.C1TabStrip.DataValueField">
            <summary>
            Gets or sets the name of the data field to bind to the C1Tab.Value property.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1TabStrip.C1TabStrip.DataUrlField">
            <summary>
            Gets or sets the name of the data field to bind to the C1Tab.NavigateUrl property.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1TabStrip.C1TabStrip.MasterID">
            <summary>
            Gets or sets the name of the master id field in hierachical databinding.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1TabStrip.C1TabStrip.ParentID">
            <summary>
            Gets or sets the name of the parent id field in hierachical databinding.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1TabStrip.C1TabStrip.MultiPageID">
            <summary>
            Gets or sets the ID of the C1MultiPage control to associate with this tabstrip.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1TabStrip.C1TabStrip.ClientMultiPageID">
            <summary>
            
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1TabStrip.C1TabStrip.ScrollSettings">
            <summary>        
            Scroll settings.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1TabStrip.C1TabStrip.TextImageRelation">
            <summary>
            Gets or sets the relationship of the text and image for the child tabs.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1TabStrip.C1TabStrip.IsDirty">
            <summary>
            Gets or sets a value indicating whether this instance is dirty.
            </summary>
            <value><c>true</c> if this instance is dirty; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:C1.Web.UI.Controls.C1TabStrip.C1TabStrip.SelectedIndex">
            <summary>
            Gets or sets the index of the selected tab.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1TabStrip.C1TabStrip.SelectedTab">
            <summary>
            
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1TabStrip.C1TabStrip.ChildGroupCssClass">
            <summary>
            CSS class name used for the child tab group.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1TabStrip.C1TabStrip.Tabs">
            <summary>
            Gets the collection of tabs.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1TabStrip.C1TabStrip.Owner">
            <summary>
            Gets parent tab owner.
            </summary>
        </member>
        <member name="E:C1.Web.UI.Controls.C1TabStrip.C1TabStrip.SelectionChanged">
            <summary>
            Occurs when tab selection is changed.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1TabStrip.C1TabStrip.OnClientAfterTabSelect">
            <summary>
            Handler name of the client AfterTabSelect event.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1TabStrip.C1TabStrip.OnClientBeforeTabSelect">
            <summary>
            Handler name of the client BeforeTabSelect event.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1TabStrip.C1TabStrip.OnClientTabUnSelect">
            <summary>
            Handler name of the client TabUnSelect event.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1TabStrip.C1TabStrip.OnClientTabMouseEnter">
            <summary>
            Handler name of the client TabMouseEnter event.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1TabStrip.C1TabStrip.OnClientTabMouseOut">
            <summary>
            Handler name of the client TabMouseOut event.
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.TabAlignment">
            <summary>
            Enumeration that determines the alignment of tabs.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.TabAlignment.Left">
            <summary>
            Aligns to the left.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.TabAlignment.Center">
            <summary>
            Aligns to the center.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.TabAlignment.Right">
            <summary>
            Aligns to the right.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.TabAlignment.Justify">
            <summary>
            Justify alignment.
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.TabDirection">
            <summary>
            Enumeration that determines the direction of tabs comparing to the content.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.TabDirection.Top">
            <summary>
            The tabs are displayed in top direction.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.TabDirection.Right">
            <summary>
            The tabs are displayed in right direction.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.TabDirection.Bottom">
            <summary>
            The tabs are displayed in bottom direction.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.TabDirection.Left">
            <summary>
            The tabs are displayed in left direction.
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.ScrollButtonAlign">
            <summary>
            Enueration that determines the alignment of scroll buttons.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.ScrollButtonAlign.StartSide">
            <summary>
            Both of the buttons are aligned to the start side.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.ScrollButtonAlign.TwoSides">
            <summary>
            The buttons are aligned at the separate sides.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.ScrollButtonAlign.EndSide">
            <summary>
            Boths of the buttons are aligned to the end side.
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.ScrollMode">
            <summary>
            Enumeration that determines the scroll mode.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.ScrollMode.None">
            <summary>
            No scroll supported.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.ScrollMode.Buttons">
            <summary>
            Scrolling is performed by clicking the scroll buttons.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.ScrollMode.ButtonsHover">
            <summary>
            Scrolling is performed by clicking or horvering over the scroll buttons.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.ScrollMode.Hover">
            <summary>
            Scrolling is performed by hovering close to region of start or end side.
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.OverlapOrder">
            <summary>
            Enumeration that determines the z-index order of overlapped tabs.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.OverlapOrder.Ascending">
            <summary>
            Next tab overlaps previous tab.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.OverlapOrder.Descending">
            <summary>
            Previous tab overlaps next tab.
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1TreeView.C1TreeViewNodeTemplateContainer">
            <summary>
            Represents a container that holds the contents of a 
            templated treeview node in a C1TreeView control.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1TreeView.C1TreeViewNodeTemplateContainer.#ctor(System.Int32,C1.Web.UI.Controls.C1TreeView.C1TreeViewNode)">
            <summary>
            Initializes a new instance of the C1TreeViewNodeTemplateContainer class 
            using the specified C1TreeViewNode index and C1TreeViewNode.
            </summary>
            <param name="itemIndex"></param>
            <param name="dataItem"></param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1TreeView.C1TreeViewNodeTemplateContainer.Render(System.Web.UI.HtmlTextWriter)">
            <summary>
            Sends server control content to a provided System.Web.UI.HtmlTextWriter object,
            which writes the content to be rendered on the client.
            </summary>
            <param name="writer">The System.Web.UI.HtmlTextWriter object that receives the server control content.</param>
        </member>
        <member name="P:C1.Web.UI.Controls.C1TreeView.C1TreeViewNodeTemplateContainer.DataItem">
            <summary>
            Gets or sets the menu item associated with the container.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1TreeView.C1TreeViewNodeTemplateContainer.ItemIndex">
            <summary>
            Gets the index of the menu item associated with the container.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.Licensing.LicCheck.OnPreRenderCheckLicense(System.Boolean,System.Web.UI.Page,System.Web.UI.Control)">
            <summary>
            Generates the appropriate alert for the control at runtime.  Call this method in the OnPreRender()
            override.
            </summary>
            <param name="isProductLicensed">True if the control has a valid license.</param>
            <param name="page">The page.</param>
            <param name="control">The control.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.Licensing.LicCheck.GetEvalMessageAlertCode(System.String)">
            <summary>
            Gets the eval message alert code.
            </summary>
            <returns></returns>
        </member>
        <member name="M:C1.Web.UI.Controls.Licensing.LicCheck.RenderLicenseWebComment(System.Web.UI.HtmlTextWriter,System.Boolean)">
            <summary>
            Call this method from Render override.
            </summary>
            <remarks>This method preliminary used by control developers.</remarks>
            <param name="writer">The System.Web.UI.HtmlTextWriter object that receives the control content.</param>
            <param name="isDesignMode">Boolean flag that identifies design time.</param>
        </member>
        <member name="T:C1.Web.UI.Controls.C1Slider.C1Slider">
            <summary>
            Represents a slider in an ASP.NET Web page.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Slider.C1Slider.CONST_ID_DECREBTN">
            <summary>
            DecreBtn
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Slider.C1Slider.CONST_ID_TRACK">
            <summary>
            Track
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Slider.C1Slider.CONST_ID_INCREBTN">
            <summary>
            IncreBtn
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Slider.C1Slider.CONST_ID_THUMB">
            <summary>
            Thumb
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Slider.C1Slider.CONST_ID_THUMB2">
            <summary>
            Thumb2
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Slider.C1Slider.CONST_ID_CONTAINER">
            <summary>
            Slider
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Slider.C1Slider.CONST_ID_SELECTEDREGION">
            <summary>
            SelectedRegion
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Slider.C1Slider.CONST_ID_SELECTEDREGION2">
            <summary>
            SelectedRegion2
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Slider.C1Slider.CONST_VALUE_ANIMATIONDURATION">
            <summary>
            Default Animation Duration.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Slider.C1Slider.CONST_VALUE_LENGTH">
            <summary>
            Default Length value.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Slider.C1Slider.#ctor">
            <summary>
            C1Slider constructor
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Slider.C1Slider.OnValueChanged(C1.Web.UI.Controls.C1Slider.C1SliderEventArgs)">
            <summary>
            Rises ValueChanged event.
            </summary>
            <param name="e">A C1SliderEventArgs object that contains the event data.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Slider.C1Slider.OnValue2Changed(C1.Web.UI.Controls.C1Slider.C1SliderEventArgs)">
            <summary>
            Rises Value2Changed event.
            </summary>
            <param name="e">A C1SliderEventArgs object that contains the event data.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Slider.C1Slider.CreateSelectedRegion2">
            <summary>
            Create selected region2 for the slider.
            </summary>
            <returns></returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Slider.C1Slider.CreateThumbBtn2">
            <summary>
            Create thumb2 button for the slider.
            </summary>
            <returns></returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Slider.C1Slider.NotifyToCreateChildControls">
            <summary>
            Notify to create child controls.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Slider.C1Slider.AdjustValue(System.Int32)">
            <summary>
            Adjust value.
            </summary>
            <param name="val">The original value</param>
            <returns>The adjusted value</returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Slider.C1Slider.SetPropertyValue(System.Object,System.String,System.Object)">
            <summary>
            Sets the value to the specified name property of the specified object.
            </summary>
            <param name="component">The specified object.</param>
            <param name="propName">The specified property name.</param>
            <param name="value">The property's value.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Slider.C1Slider.CreateDecreBtn">
            <summary>
            Create decrement button for the slider.
            </summary>
            <returns></returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Slider.C1Slider.CreateTrack">
            <summary>
            Create track for the slider.
            </summary>
            <returns></returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Slider.C1Slider.CreateIncreBtn">
            <summary>
            Create increment button for the slider.
            </summary>
            <returns></returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Slider.C1Slider.CreateSelectedRegion">
            <summary>
            Create selected region for the slider.
            </summary>
            <returns></returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Slider.C1Slider.CreateThumbBtn">
            <summary>
            Create thumb button for the slider.
            </summary>
            <returns></returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Slider.C1Slider.CreateContainer">
            <summary>
            Create container for the slider.
            </summary>
            <returns></returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Slider.C1Slider.CreateChildControls">
            <summary>
            Create slider's elements.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Slider.C1Slider.GetVisualStyleCssClassName">
            <summary>
            Gets the class name of visual style.
            </summary>
            <returns></returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Slider.C1Slider.DetermineCompoundCssClass">
            <summary>
            Determine compound css class.
            </summary>
            <returns></returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Slider.C1Slider.OnInit(System.EventArgs)">
            <summary>
            Raises the Init event.
            </summary>
            <param name="e">An EventArgs object that contains the event data.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Slider.C1Slider.OnPreRender(System.EventArgs)">
            <summary>
            Raises the PreRender event.
            </summary>
            <param name="e">An EventArgs object that contains the event data.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Slider.C1Slider.GetPostBackEventReference">
            <summary>
            Get the reference of the postback event.
            </summary>
            <returns>Return a string value</returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Slider.C1Slider.AddAttributesToRender(System.Web.UI.HtmlTextWriter)">
            <summary>
            Adds HTML attributes and styles that need to be rendered to the specified HtmlTextWriterTag.
            </summary>
            <param name="writer">A HtmlTextWriter that represents the output stream to render HTML content on the client.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Slider.C1Slider.Render(System.Web.UI.HtmlTextWriter)">
            <summary>
            Renders the control to the specified HTML writer.
            </summary>
            <param name="writer">The HtmlTextWriter object that receives the control content.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Slider.C1Slider.RenderContents(System.Web.UI.HtmlTextWriter)">
            <summary>
            Renders the contents of the control to the specified writer. This method is used primarily by control developers.
            </summary>
            <param name="writer">A System.Web.UI.HtmlTextWriter that represents the output stream to render HTML content on the client.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Slider.C1Slider.GetScriptDescriptors">
            <summary>
            When overridden in a derived class, registers the ScriptDescriptor objects for the control.
            </summary>
            <returns>An enumeration of ScriptDescriptor objects.</returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Slider.C1Slider.GetScriptReferences">
            <summary>
            When overridden in a derived class, registers the script libraries for the control.
            </summary>
            <returns>
            An object that implements the IEnumerable interface and that contains
            ECMAScript (JavaScript) files that have been registered as embedded resources.
            </returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Slider.C1Slider.LoadViewState(System.Object)">
            <summary>
            Restores view-state information from a previous request that was saved with the System.Web.UI.WebControls.WebControl.SaveViewState() method.
            </summary>
            <param name="state">An object that represents the control state to restore.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Slider.C1Slider.SaveViewState">
            <summary>
            Saves any state that was modified after the System.Web.UI.WebControls.Style.TrackViewState() method was invoked.
            </summary>
            <returns>An object that contains the current view state of the control; otherwise, if there is no view state associated with the control, null.</returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Slider.C1Slider.TrackViewState">
            <summary>
             Causes the control to track changes to its view state so they can be stored in the object's System.Web.UI.Control.ViewState property.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Slider.C1Slider.System#Web#UI#IPostBackDataHandler#LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)">
            <summary>
            Processes postback data for an ASP.NET server control.
            </summary>
            <param name="postDataKey">The key identifier for the control.</param>
            <param name="postCollection">The collection of all incoming name values.</param>
            <returns>true if the server control's state changes as a result of the postback; otherwise, false.</returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Slider.C1Slider.System#Web#UI#IPostBackDataHandler#RaisePostDataChangedEvent">
            <summary>
            Notify the ASP.NET application that the state of the control has changed.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Slider.C1Slider.SaveLayout(System.String)">
            <summary>
            Saves the control layout properties to the file.
            </summary>
            <param name="filename">The file where the values of the layout properties will be saved.</param> 
        </member>
        <member name="M:C1.Web.UI.Controls.C1Slider.C1Slider.SaveLayout(System.IO.Stream)">
            <summary>
            Saves control layout properties to the stream.
            </summary>
            <param name="stream">The stream where the values of layout properties will be saved.</param> 
        </member>
        <member name="M:C1.Web.UI.Controls.C1Slider.C1Slider.LoadLayout(System.String)">
            <summary>
            Loads control layout properties from the file.
            </summary>
            <param name="filename">The file where the values of layout properties will be loaded.</param> 
        </member>
        <member name="M:C1.Web.UI.Controls.C1Slider.C1Slider.LoadLayout(System.IO.Stream)">
            <summary>
            Load control layout properties from the stream.
            </summary>
            <param name="stream">The stream where the values of layout properties will be loaded.</param> 
        </member>
        <member name="M:C1.Web.UI.Controls.C1Slider.C1Slider.LoadLayout(System.String,C1.Web.UI.LayoutType)">
            <summary>
            Loads control layout properties with specified types from the file.
            </summary>
            <param name="filename">The file where the values of layout properties will be loaded.</param> 
            <param name="layoutTypes">The layout types to load.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Slider.C1Slider.LoadLayout(System.IO.Stream,C1.Web.UI.LayoutType)">
            <summary>
            Loads the control layout properties with specified types from the stream.
            </summary>
            <param name="stream">The stream where the values of the layout properties will be loaded.</param> 
            <param name="layoutTypes">The layout types to load.</param>
        </member>
        <member name="E:C1.Web.UI.Controls.C1Slider.C1Slider.ValueChanged">
            <summary>
            Fires when the slider value has been changed.
            </summary>
        </member>
        <member name="E:C1.Web.UI.Controls.C1Slider.C1Slider.Value2Changed">
            <summary>
            Fires when the slider value2 has been changed.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Slider.C1Slider.OnClientBeforeValue2Changing">
            <summary>
            Fires on client side  before the value2 of the slider is changing.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Slider.C1Slider.OnClientValue2Changing">
            <summary>
            Fires on client side when the value2 is changing.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Slider.C1Slider.OnClientValue2Changed">
            <summary>
            Fires on client side when the value2 has been changed.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Slider.C1Slider.TrackFill">
            <summary>
            The property should be used to render extra areas in track bar of the C1Slider. 
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Slider.C1Slider.ThumbsInteractionMode">
            <summary>
            The property should be used to exhibit interaction with two thumb button of the C1Slider.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Slider.C1Slider.ShowThumbButton2">
            <summary>
            Show or hide the thumb2 button.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Slider.C1Slider.Value2">
            <summary>
            Gets or sets the value2 of slider.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Slider.C1Slider.DecrementButton">
            <summary>
            Gets the C1SliderButton object that defines the information for decrement button of slider.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Slider.C1Slider.IncrementButton">
            <summary>
            Gets the C1SliderButton object that defines the information for increment button of slider.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Slider.C1Slider.ThumbButton">
            <summary>
            Gets the C1SliderButton object that defines the information for thumb button of slider.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Slider.C1Slider.Height">
            <summary>
             Gets or sets the height of the slider.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Slider.C1Slider.Width">
            <summary>
            Gets or sets the width of the slider.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Slider.C1Slider.UniqueID">
            <summary>
            Gets the unique, hierarchically qualified identifier for server control.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Slider.C1Slider.Orientation">
            <summary>
            The direction in which control is laid out.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Slider.C1Slider.Length">
            <summary>
            Gets or sets the length of the control.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Slider.C1Slider.MaximumValue">
            <summary>
            Gets or sets the maximum value of slider.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Slider.C1Slider.MinimumValue">
            <summary>
            Gets or sets the minimum value of slider.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Slider.C1Slider.Step">
            <summary>
            Gets or sets the step with which the slider value will change.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Slider.C1Slider.Value">
            <summary>
            Gets or sets the value of slider.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Slider.C1Slider.AnimationDuration">
            <summary>
            Define how long (in milliseconds) the animation of the sliding will run.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Slider.C1Slider.Easing">
            <summary>
            The easing that is applied to the animation.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Slider.C1Slider.Reverse">
            <summary>
            Reverse increment decrement button.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Slider.C1Slider.ShowDecrementButton">
            <summary>
            Show or hide the decrement button.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Slider.C1Slider.ShowIncrementButton">
            <summary>
            Show or hide the increment button.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Slider.C1Slider.ShowThumbButton">
            <summary>
            Show or hide the thumb button.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Slider.C1Slider.AccessKey">
            <summary>
            Gets or sets the access key that allows you to quickly navigate 
            to the Web server control.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Slider.C1Slider.AutoPostBack">
            <summary>
            Sets or retrieves a value that indicates whether or not the control posts back to the server each time a user interacts with the control. 
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Slider.C1Slider.Enabled">
            <summary>
            Gets or sets if slider is Enabled.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Slider.C1Slider.EnableViewState">
            <summary>
            Gets or sets if ViewState is enabled.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Slider.C1Slider.Visible">
            <summary>
            Gets or sets if slider is Visible.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Slider.C1Slider.VisualStylePath">
            <summary>
            Path to visual styles.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Slider.C1Slider.VisualStyle">
            <summary>
            VisualStyle name.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Slider.C1Slider.ToolTip">
            <summary>
            Gets or sets tooltip text what will be displayed when mouse is over slider. 
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Slider.C1Slider.BackColor">
            <summary>
            Gets or sets the background color of the control.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Slider.C1Slider.BorderColor">
            <summary>
            Color of the border around the control.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Slider.C1Slider.BorderStyle">
            <summary>
            Style of the border around the control.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Slider.C1Slider.BorderWidth">
            <summary>
            Width of the border around the control.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Slider.C1Slider.EmbeddedVisualStyles">
            <summary>
            Returns string array with embedded visual style names.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Slider.C1Slider.TagKey">
            <summary>
            Changed the type of  control's  tag.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Slider.C1Slider.DecrementToolTip">
            <summary>
            The tooltip displayed when the mouse is over the decrement button.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Slider.C1Slider.IncrementToolTip">
            <summary>
            The tooltip displayed when the mouse is over the increment button.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Slider.C1Slider.ThumbToolTip">
            <summary>
            The tooltip displayed when the mouse is over the thumb button.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Slider.C1Slider.Thumb2ToolTip">
            <summary>
            The tooltip displayed when the mouse is over the thumb2 button.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Slider.C1Slider.OnClientLoad">
            <summary>
            Fires on client side when the slider is initialized. 
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Slider.C1Slider.OnClientBeforeValueChanging">
            <summary>
            Fires on client side  before the value of the slider is changing.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Slider.C1Slider.OnClientValueChanging">
            <summary>
            Fires on client side when the value is changing.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Slider.C1Slider.OnClientValueChanged">
            <summary>
            Fires on client side when the value has been changed.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Slider.C1Slider.OnClientButtonClick">
            <summary>
            Fires on client side when the button of slider is clicked.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Slider.C1Slider.OnClientButtonMouseDown">
            <summary>
            Fires on client side when the mouse is down on the button of slider.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Slider.C1Slider.OnClientButtonMouseOut">
            <summary>
            Fires on client side when the user moves the mouse pointer outside the boundaries of the button.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Slider.C1Slider.OnClientButtonMouseOver">
            <summary>
            Fires on client side when the mouse is over the button.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Slider.C1Slider.OnClientButtonMouseUp">
            <summary>
            Fires on client side when the mouse is released from the button.
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1Slider.C1SliderSerializer">
            <summary>
            Serializes C1Slider Control.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Slider.C1SliderSerializer.#ctor(System.Object)">
            <summary>
            Constructor
            </summary>
            <param name="obj"></param>
        </member>
        <member name="T:C1.Web.UI.Controls.C1Slider.C1SliderEventArgs">
            <summary>
            C1SliderEventArgs is used by the ValueChanged event.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Slider.C1SliderEventArgs.#ctor(C1.Web.UI.Controls.C1Slider.C1Slider)">
            <summary>
            C1SliderEventArgs constructor.
            </summary>
            <param name="Owner"></param>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Slider.C1SliderEventArgs.Owner">
            <summary>
            Gets the Object that raised the event.
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1Slider.C1SliderEventHandler">
            <summary>
            Delegate type for handling events that are related to the ValueChanged event.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Window.C1WindowSerializer.#ctor(System.Object)">
            <summary>
            Constructor.
            </summary>
            <param name="serializableObject">Serializable Object.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Window.C1WindowSerializer.#ctor(System.ComponentModel.Design.IComponentChangeService,System.Object)">
            <summary>
            Constructor.
            </summary>
            <param name="componentChangeService"></param>
            <param name="serializableObject"></param>
        </member>
        <member name="T:C1.Web.UI.Controls.C1Window.C1Window">
            <summary>
            Represents a dialog window.
            </summary>
            <remarks>
            C1Window is a pop-up window can be used to display a message, ask for confirmation, user input and so on.
            
            C1Window has Client-Side Object Model (CSOM) that mostly repeats the Server-Side Object Model.
            This means methods and read or write properties may be called on the client side like on the server side.
            
            To access CSOM, use this syntax: <c>&lt;ClientID&gt;.control</c>.
            
            <example>
            The example below demonstrates how to get and show a dialog window via JavaScript.
            <code>
            &lt;script type="text/javascript"&gt;
            var dialog = $get("C1Window1").control;
            dialog.show();
            &lt;/script&gt;
            </code>
            </example>
            
            By default C1Window is hidden on the Page.
            To get a dialog window to be visible on load,
            set the <see cref="P:C1.Web.UI.Controls.C1Window.C1Window.ShowOnLoad">ShowOnLoad</see> to True.
            
            There are two modes of dialog boxes: modal and modeless. 
            To show a dialog in modeless mode call <c>show()</c>,
            to show a dialog in modal mode call <c>showModal()</c>.
            
            C1Window requires that Microsoft AJAX Extentions be installed and a ScriptManager is on the page.
            Microsoft AJAX Extentions can be found at http://ajax.asp.net/. For more information about
            Microsoft ASP.NET AJAX Extensions, see Microsoft's ASP.Net AJAX Web site.
            </remarks>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Window.C1Window._jsonSerializableImpl">
            <summary>
            Json helper to save/load control state to/from client control
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Window.C1Window.#ctor">
            <summary>
            Creates an instance of C1Window.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Window.C1Window.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:C1.Web.UI.Controls.C1Window.C1Window"/> class.
            </summary>
            <param name="key">The key.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Window.C1Window.AddControl(System.Web.UI.Control)">
            <summary>
            Adds a control to the dialog window. 
            </summary>
            <param name="control">The control to be added.</param>
            <remarks>
            Takes effect if dialog works in UpdatePanel mode, when the <see cref="P:C1.Web.UI.Controls.C1Window.C1Window.ContentUrl"/> property is empty.
            </remarks>
            <example>
            The example shows how to add a control to a dialog window.
            <code>
            Label l = new Lablel();
            l.ID = "label1";
            l.Text = "Search results:";
            dialog.AddControl(l);
            </code>
            </example>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Window.C1Window.OnInit(System.EventArgs)">
            <summary>
            OnInit override.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Window.C1Window.OnLoad(System.EventArgs)">
            <summary>
            OnLoad override.
            At this point tree view raise all its events.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Window.C1Window.AddAttributesToRender(System.Web.UI.HtmlTextWriter)">
            <summary>
            AddAttributesToRender override.
            </summary>
            <param name="writer">Html text writer object.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Window.C1Window.CreateChildControls">
            <summary>
            Create child controls
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Window.C1Window.OnPreRender(System.EventArgs)">
            <summary>
            PreRender
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Window.C1Window.Render(System.Web.UI.HtmlTextWriter)">
            <summary>
            Render HTML structure for this control
            </summary>
            <param name="writer">OutPut stream</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Window.C1Window.SetChildrenAttributes">
            <summary>
            Sets attributes for children controls.
            </summary>
            <remarks>
            For IamgeUrl, IconStyle and Text may be changed to value post back from client, they have to be set before rendering.
            </remarks>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Window.C1Window.SetDesignerUpdateContainerBound">
            <summary>
            Set window design time content area bound.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Window.C1Window.RenderContents(System.Web.UI.HtmlTextWriter)">
            <summary>
            RenderContents override
            </summary>
            <param name="writer">HtmlTextWriter</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Window.C1Window.SetControlVisibility">
            <summary>
            Sets visibility of caption buttons and status bar
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Window.C1Window.SetControl(System.Web.UI.HtmlControls.HtmlControl,System.Boolean)">
            <summary>
            add invisible css to a control
            </summary>
            <param name="c">target html control</param>
            <param name="visible">visible or not</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Window.C1Window.CreateDialogHeader">
            <summary>
            Create Header Controls for web dialog
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Window.C1Window.CreateDialogContent">
            <summary>
            Create Content Controls for web dialog
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Window.C1Window.CreateDialogFooter">
            <summary>
            Create dialog footer controls
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Window.C1Window.BuildHtmlElement(System.String)">
            <summary>
            instantiating a div HtmlGenericControl
            </summary>
            <param name="cssClass"></param>
            <returns></returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Window.C1Window.BuildHtmlElement(System.String,System.String)">
            <summary>
            instantiating a div HtmlGenericControl
            </summary>
            <param name="cssClass"></param>
            <param name="tag"></param>
            <returns></returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Window.C1Window.LoadDialogPropertiesFromJsonData(System.Collections.Hashtable)">
            <summary>
            Load Json properties from data posted back from client
            </summary>
            <param name="jsonData">json Data</param>
            <returns></returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Window.C1Window.LoadViewState(System.Object)">
            <summary>
            Loads the server control's previously saved view state to C1Window object.
            </summary>
            <param name="savedState">An System.Object that contains the saved view state values for the control.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Window.C1Window.SaveViewState">
            <summary>
            Ssaves the changes to a C1Window object's view state to an System.Object.
            </summary>
            <returns>The System.Object that contains the view state changes.</returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Window.C1Window.TrackViewState">
            <summary>
            Instructs the this class to track changes
            to its view state.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Window.C1Window.GetScriptDescriptors">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Window.C1Window.GetScriptReferences">
            <summary>
            GetScriptReferences override.
            </summary>
            <returns></returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Window.C1Window.SaveLayout(System.String)">
            <summary>
            Saves the control layout properties to the file.
            </summary>
            <param name="filename">The file where the values of the layout properties will be saved.</param> 
        </member>
        <member name="M:C1.Web.UI.Controls.C1Window.C1Window.SaveLayout(System.IO.Stream)">
            <summary>
            Saves control layout properties to the stream.
            </summary>
            <param name="stream">The stream where the values of layout properties will be saved.</param> 
        </member>
        <member name="M:C1.Web.UI.Controls.C1Window.C1Window.LoadLayout(System.String)">
            <summary>
            Loads control layout properties from the file.
            </summary>
            <param name="filename">The file where the values of layout properties will be loaded.</param> 
        </member>
        <member name="M:C1.Web.UI.Controls.C1Window.C1Window.LoadLayout(System.IO.Stream)">
            <summary>
            Load control layout properties from the stream.
            </summary>
            <param name="stream">The stream where the values of layout properties will be loaded.</param> 
        </member>
        <member name="M:C1.Web.UI.Controls.C1Window.C1Window.LoadLayout(System.String,C1.Web.UI.LayoutType)">
            <summary>
            Loads control layout properties with specified types from the file.
            </summary>
            <param name="filename">The file where the values of layout properties will be loaded.</param> 
            <param name="layoutTypes">The layout types to load.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Window.C1Window.LoadLayout(System.IO.Stream,C1.Web.UI.LayoutType)">
            <summary>
            Loads the control layout properties with specified types from the stream.
            </summary>
            <param name="stream">The stream where the values of the layout properties will be loaded.</param> 
            <param name="layoutTypes">The layout types to load.</param>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Window.C1Window.AllowMove">
            <summary>
            Gets or sets a value that determines whether the dialog window may be moved.
            </summary>
            <remarks>
            The default value for AllowMove is True.
            By default users may move the dialog window by dragging the title across the page. 
            Set AllowMove to False if you want the window to hold the designated position.
            </remarks>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Window.C1Window.AllowResize">
            <summary>
            Gets or sets a value that determines whether the dialog window may be resized.
            </summary>
            <remarks>
            The default value for AllowResize is False. The dialog window may be resized by the image element on right-bottom corner only.
            </remarks>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Window.C1Window.AnimationEffectOnCollapsing">
            <summary>
            Gets or sets the animation effect to use when content area of a C1Window object is collapsing.
            </summary>
            <remarks>
            The default value is AnimationEffect.None.
            </remarks>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Window.C1Window.AnimationDurationOnCollapsing">
            <summary>
            Gets or sets the duration of the animation when content area of a C1Window object is collapsing.
            </summary>
            <remarks>
            The default value is 1000 and unit is millisecond.
            </remarks>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Window.C1Window.AnimationEffectOnExpanding">
            <summary>
            Gets or sets the animation effect to use when content area of a C1Window object is expanding.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Window.C1Window.AnimationDurationOnExpanding">
            <summary>
            Gets or sets the duration of the animation when content area of a C1Window object is expanding.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Window.C1Window.AnimationEffectOnHiding">
            <summary>
            Gets or sets the animation effect to use when a C1Window object hides.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Window.C1Window.AnimationDurationOnHiding">
            <summary>
            Gets or sets the duration of the animation when a C1Window object hides.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Window.C1Window.AnimationEffectOnShowing">
            <summary>
            Gets or sets the animation effect to use when a C1Window object shows.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Window.C1Window.AnimationDurationOnShowing">
            <summary>
            Gets or sets the duration of the animation when a C1Window object shows.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Window.C1Window.CaptionButtons">
            <summary>
            Gets a <see cref="P:C1.Web.UI.Controls.C1Window.C1Window.CaptionButtons"/> object that provides access to C1Window title items like an icon, buttons, and so on.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Window.C1Window.ChildrenAsTriggers">
            <summary>
            Gets or sets a value that determines whether child controls acts as triggers when the dialog window works in UpdatePanel mode.
            </summary>
            <remarks>Default value is True.
            </remarks>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Window.C1Window.ContentUrl">
            <summary>
            Gets or sets URL to the content of the dialog window.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Window.C1Window.ControlBox">
            <summary>
            Gets or sets a value determining the visibility of the caption buttons.
            </summary>
            <value>
            True if buttons are visible, False otherwise.
            The default value is True.
            </value>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Window.C1Window.ContentTemplate">
            <summary>
            Gets or sets the template for the content area of the <see cref="T:C1.Web.UI.Controls.C1Window.C1Window"/> control. 
            </summary>
            <remarks>
            Use the ContentTemplate property to control the contents of the dialog window. 
            
            To specify a template for the dialog, reset the <see cref="P:C1.Web.UI.Controls.C1Window.C1Window.ContentUrl"/> property, place the &lt;ContentTemplate&gt; tags between the opening and closing tags of the <seealso cref="T:C1.Web.UI.Controls.C1Window.C1Window"/> control. 
            You can then list the contents of the template between the opening and closing &lt;ContentTemplate&gt; tags.
            </remarks>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Window.C1Window.VisualStylePath">
            <summary>
            Path to visual styles.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Window.C1Window.ImageUrl">
            <summary>
            Image Url for C1Window icon.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Window.C1Window.ImageHeight">
            <summary>
            Gets or sets height of <see cref="T:C1.Web.UI.Controls.C1Window.C1Window"/> title icon.
            </summary>
            <remarks>
            Unit for this property is pixle.
            </remarks>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Window.C1Window.ImageWidth">
            <summary>
            Gets or sets width of <see cref="T:C1.Web.UI.Controls.C1Window.C1Window"/> title icon.
            </summary>
            <remarks>
            Unit for this property is pixle.
            </remarks>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Window.C1Window.EmbeddedVisualStyles">
            <summary>
            Returns string array with embedded visual style names.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Window.C1Window.VisualStyle">
            <summary>
            Gets or sets the visual style name used by the control.
            </summary>
            <remarks>
            If this value is empty then visual style will be not rendered.
            Default value is "ArcticFox".
            </remarks>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Window.C1Window.UseEmbeddedVisualStyles">
            <summary>
            If true then control will use VisualStyle embedded into control's assembly.
            otherwise control will load VisualStyle from disk.
            </summary>        
        </member>
        <member name="P:C1.Web.UI.Controls.C1Window.C1Window.Enabled">
            <summary>
            Gets or sets a value indicate if a C1Window object is enabled.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Window.C1Window.HorizontalAlign">
            <summary>
            Dialog horizontal position if Position = {Page, Parent}
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Window.C1Window.VerticalAlign">
            <summary>
            Dialog vertical position if Position = {Page, Parent}
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Window.C1Window.MinimizeZoneElementId">
            <summary>
            Gets or sets an ID of a form element which is used as a zone to minimize all dialog windows.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Window.C1Window.OnEscPressedClose">
            <summary>
            Gets or sets a value indicate whehter to close activated window on pressing esc button.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Window.C1Window.OnClientActivated">
            <summary>
            Gets or sets a name of the client side function that should be fired on client side after dialog is activated.
            </summary>
            <remarks>
            There are two arguments that are passed to the function:
            sender: dialog object that fired the event.
            e: object that provides data for the event.
            See client side object model section in documentation for more details.
            </remarks>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Window.C1Window.OnClientButtonClicked">
            <summary>
            Gets or sets a name of the client side function that should be fired on client side when one of the caption buttons is clicked after dialog handles the operation.
            </summary>
            <remarks>
            There are two arguments that are passed to the function:
            sender: dialog object that fired the event.
            e: object that provides data for the event.
            See client side object model section in documentation for more details.
            </remarks>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Window.C1Window.OnClientButtonClicking">
            <summary>
            Gets or sets a name of the client side function that should be fired on client side when one of the caption buttons is clicked before dialog handles the operation.
            </summary>
            <remarks>
            There are two arguments that are passed to the function:
            sender: dialog object that fired the event.
            e: object that provides data for the event.
            See client side object model section in documentation for more details.
            </remarks>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Window.C1Window.OnClientDeactivated">
            <summary>
            Gets or sets a name of the client side function that should be fired on client side after dialog is deactivated.
            </summary>
            <remarks>
            There are two arguments that are passed to the function:
            sender: dialog object that fired the event.
            e: object that provides data for the event.
            See client side object model section in documentation for more details.
            </remarks>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Window.C1Window.OnClientDragStart">
            <summary>
            Gets or sets a name of the client side function that should be fired on client side when dialog enters dragging mode.
            </summary>
            <remarks>
            There are two arguments that are passed to the function:
            sender: dialog object that fired the event.
            e: object that provides data for the event.
            See client side object model section in documentation for more details.
            </remarks>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Window.C1Window.OnClientDragging">
            <summary>
            Gets or sets a name of the client side function that should be fired on client side when dialog is being dragged.
            </summary>
            <remarks>
            There are two arguments that are passed to the function:
            sender: dialog object that fired the event.
            e: object that provides data for the event.
            See client side object model section in documentation for more details.
            </remarks>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Window.C1Window.OnClientDragEnd">
            <summary>
            Gets or sets a name of the client side function that should be fired on client side when dialog exits dragging mode.
            </summary>
            <remarks>
            There are two arguments that are passed to the function:
            sender: dialog object that fired the event.
            e: object that provides data for the event.
            See client side object model section in documentation for more details.
            </remarks>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Window.C1Window.OnClientHidden">
            <summary>
            Gets or sets a name of the client side function that should be fired on client side after dialog is hidden.
            </summary>
            <remarks>
            There are two arguments that are passed to the function:
            sender: dialog object that fired the event.
            e: object that provides data for the event.
            See client side object model section in documentation for more details.
            </remarks>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Window.C1Window.OnClientMaximizing">
            <summary>
            Gets or sets a name of the client side function that should be fired on client side when dialog is maximized before dialog handles the operation.
            </summary>
            <remarks>
            There are two arguments that are passed to the function:
            sender: dialog object that fired the event.
            e: object that provides data for the event.
            See client side object model section in documentation for more details.
            </remarks>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Window.C1Window.OnClientMaximized">
            <summary>
            Gets or sets a name of the client side function that should be fired on client side when dialog is maximized after dialog handles the operation.
            </summary>
            <remarks>
            There are two arguments that are passed to the function:
            sender: dialog object that fired the event.
            e: object that provides data for the event.
            See client side object model section in documentation for more details.
            </remarks>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Window.C1Window.OnClientMinimizing">
            <summary>
            Gets or sets a name of the client side function that should be fired on client side when dialog is minimized before dialog handles the operation.
            </summary>
            <remarks>
            There are two arguments that are passed to the function:
            sender: dialog object that fired the event.
            e: object that provides data for the event.
            See client side object model section in documentation for more details.
            </remarks>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Window.C1Window.OnClientMinimized">
            <summary>
            Gets or sets a name of the client side function that should be fired on client side when dialog is minimized after dialog handles the operation. 
            </summary>
            <remarks>
            There are two arguments that are passed to the function:
            sender: dialog object that fired the event.
            e: object that provides data for the event.
            See client side object model section in documentation for more details.
            </remarks>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Window.C1Window.OnClientNormalizing">
            <summary>
            Gets or sets a name of the client side function that should be fired on client side when dialog is normalized before dialog handles the operation.
            </summary>
            <remarks>
            There are two arguments that are passed to the function:
            sender: dialog object that fired the event.
            e: object that provides data for the event.
            See client side object model section in documentation for more details.
            </remarks>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Window.C1Window.OnClientNormalized">
            <summary>
            Gets or sets a name of the client side function that should be fired on client side when dialog is normalized after dialog handles the operation.
            </summary>
            <remarks>
            There are two arguments that are passed to the function:
            sender: dialog object that fired the event.
            e: object that provides data for the event.
            See client side object model section in documentation for more details.
            </remarks>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Window.C1Window.OnClientReloading">
            <summary>
            Gets or sets a name of the client side function that should be fired on client side when dialog content is reloaded before dialog handles the operation.
            </summary>
            <remarks>
            There are two arguments that are passed to the function:
            sender: dialog object that fired the event.
            e: object that provides data for the event.
            See client side object model section in documentation for more details.
            </remarks>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Window.C1Window.OnClientReloaded">
            <summary>
            Gets or sets a name of the client side function that should be fired on client side when dialog content is reloaded after dialog handles the operation.
            </summary>
            <remarks>
            There are two arguments that are passed to the function:
            sender: dialog object that fired the event.
            e: object that provides data for the event.
            See client side object model section in documentation for more details.
            </remarks>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Window.C1Window.OnClientResizeStart">
            <summary>
            Gets or sets a name of the client side function that should be fired on client side when dialog enters resizing mode.
            </summary>
            <remarks>
            There are two arguments that are passed to the function:
            sender: dialog object that fired the event.
            e: object that provides data for the event.
            See client side object model section in documentation for more details.
            </remarks>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Window.C1Window.OnClientResizing">
            <summary>
            Gets or sets a name of the client side function that should be fired on client side when dialog is being resized.
            </summary>
            <remarks>
            There are two arguments that are passed to the function:
            sender: dialog object that fired the event.
            e: object that provides data for the event.
            See client side object model section in documentation for more details.
            </remarks>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Window.C1Window.OnClientResizeEnd">
            <summary>
            Gets or sets a name of the client side function that should be fired on client side when dialog exits resizing mode.
            </summary>
            <remarks>
            There are two arguments that are passed to the function:
            sender: dialog object that fired the event.
            e: object that provides data for the event.
            See client side object model section in documentation for more details.
            </remarks>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Window.C1Window.OnClientShown">
            <summary>
            Gets or sets a name of the client side function that should be fired on client side after dialog is shown.
            </summary>
            <remarks>
            There are two arguments that are passed to the function:
            sender: dialog object that fired the event.
            e: object that provides data for the event.
            See client side object model section in documentation for more details.
            </remarks>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Window.C1Window.OnClientPinning">
            <summary>
            Gets or sets a name of the client side function that should be fired on client side when dialog is pinned before the dialog handles the opertation.
            </summary>
            <remarks>
            There are two arguments that are passed to the function:
            sender: dialog object that fired the event.
            e: object that provides data for the event.
            See client side object model section in documentation for more details.
            </remarks>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Window.C1Window.OnClientPinned">
            <summary>
            Gets or sets a name of the client side function that should be fired on client side when dialog is pinned after the dialog handles the opertation.
            </summary>
            <remarks>
            There are two arguments that are passed to the function:
            sender: dialog object that fired the event.
            e: object that provides data for the event.
            See client side object model section in documentation for more details.
            </remarks>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Window.C1Window.OffsetElementId">
            <summary>
            Gets or sets an html element id at which top left corner a dialog window will be placed when shown first time.
            </summary>
            <remarks>
            Takes precedence of <see cref="P:C1.Web.UI.Controls.C1Window.C1Window.StartPosition"/> property if set.
            </remarks>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Window.C1Window.ResizeSettings">
            <summary>
            Set resizing properties for C1Window.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Window.C1Window.ShowOnLoad">
            <summary>
            Gets or sets a value that determines whether the dialog window is visible on the page after the page is loaded.
            </summary>
            <remarks>Default value of ShowOnLoad is False</remarks>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Window.C1Window.ShowModalWindowOnLoad">
            <summary>
            Gets or sets a value that determines whether the a modal window is visible on the page after the page is loaded.
            </summary>
            <remarks>
            Default value of <see cref="P:C1.Web.UI.Controls.C1Window.C1Window.ShowModalWindowOnLoad"/> is False.
            And setting this property to true will set <see cref="P:C1.Web.UI.Controls.C1Window.C1Window.ShowOnLoad"/> property to true;
            </remarks>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Window.C1Window.StartPosition">
            <summary>
            Gets or sets initial position the dialog window.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Window.C1Window.X">
            <summary>
            Gets or sets the initial horizontal position (X) of the dialog window if <see cref="P:C1.Web.UI.Controls.C1Window.C1Window.StartPosition"/> is Manual.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Window.C1Window.Y">
            <summary>
            Gets or sets the initial vertical position (Y) of the dialog window if C1Window.StartPosition is Manual.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Window.C1Window.StatusTemplate">
            <summary>
            Gets or sets the template for the status content area of the <see cref="T:C1.Web.UI.Controls.C1Window.C1Window"/> control. 
            </summary>
            <remarks>
            Use the StatusTemplate property to control the contents of the dialog window status bar. 
            </remarks>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Window.C1Window.StatusVisible">
            <summary>
            Gets or sets value indicating whether status is visible or not.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Window.C1Window.Text">
            <summary>
            Gets or sets text which dispayed on the caption bar of the C1Window dialog window.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Window.C1Window.Width">
            <summary>
            Gets or sets width of <see cref="T:C1.Web.UI.Controls.C1Window.C1Window"/>.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Window.C1Window.Height">
            <summary>
            Gets or sets height of <see cref="T:C1.Web.UI.Controls.C1Window.C1Window"/>.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Window.C1Window.AutoExpand">
            <summary>
            Auto Expand window.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Window.C1Window.TagKey">
            <summary>
            Gets the value that corresponds to this Web
            server control.
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1Window.CaptionButton">
            <summary>
            A button that can be shown in the <see cref="T:C1.Web.UI.Controls.C1Window.C1Window"/> caption box.
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1Window.CaptionElement">
            <summary>
            Item that can be shown in the <see cref="T:C1.Web.UI.Controls.C1Window.C1Window"/> caption box, like an item or button.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Window.CaptionElement.AssignPropertiesState(System.Collections.Hashtable)">
            <summary>
            assign json data to properties
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Window.CaptionElement.Element">
            <summary>
            Under lying html element for this element.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Window.CaptionElement.Visible">
            <summary>
            Gets or sets value indicating whether the element is visible or not.
            </summary>
            <value>
            The default value is True.
            </value>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Window.CaptionButton.Tooltip">
            <summary>
            Gets or sets the text displayed when the mouse pointer hovers over the button.
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1Window.CaptionButtons">
            <summary>
            Provides access to <b>C1Window</b> caption box items like an item or button.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Window.CaptionButtons.#ctor(C1.Web.UI.Controls.C1Window.C1Window)">
            <summary>
            Construct a CaptionButtons object.
            </summary>
            <param name="c">Parent C1Window object.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Window.CaptionButtons.AssignPropertiesState(System.Collections.Hashtable)">
            <summary>
            Assign json data to captionbuttons properties
            </summary>
            <param name="jsonData">json data hashtable</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Window.CaptionButtons.LoadViewState(System.Object)">
            <summary>
            Loads the server control's previously saved view state to CaptionButtons object.
            </summary>
            <param name="savedState">An System.Object that contains the saved view state values for the control.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Window.CaptionButtons.SaveViewState">
            <summary>
            Ssaves the changes to a CaptionButtons object's view state to an System.Object.
            </summary>
            <returns>The System.Object that contains the view state changes.</returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Window.CaptionButtons.IsNull(System.Object)">
            <summary>
            Test object is null.
            </summary>
            <param name="o">Object subject to test</param>
            <returns>True for null</returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Window.CaptionButtons.TrackViewState">
            <summary>
            Instructs the this class to track changes
            to its view state.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Window.CaptionButtons.CollapseExpandButton">
            <summary>
            Button that collapse or expand the dialog..
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Window.CaptionButtons.CloseButton">
            <summary>
            Button that closes the <b>C1Window</b>.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Window.CaptionButtons.Icon">
            <summary>
            An image shown on the left side of the <b>C1Window</b> title area.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Window.CaptionButtons.MaximizeButton">
            <summary>
            Button that resizes the <b>C1Window</b> to fit all available space in the browser window.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Window.CaptionButtons.MinimizeButton">
            <summary>
            Minimize and normalize caption button
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Window.CaptionButtons.PinButton">
            <summary>
            Button that pins and unpins the <b>C1Window</b>.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Window.CaptionButtons.ReloadButton">
            <summary>
            Button that reloads the <b>C1Window</b> content set by the <see cref="P:C1.Web.UI.Controls.C1Window.C1Window.ContentUrl"/> property.
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1Window.PressableCaptionButton">
            <summary>
            A button that can be shown in the <see cref="T:C1.Web.UI.Controls.C1Window.C1Window"/> caption box,
            can be in two states: pressed and unpressed.
            </summary> 
        </member>
        <member name="P:C1.Web.UI.Controls.C1Window.PressableCaptionButton.IsPressed">
            <summary>
            Gets or sets whether caption button state
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Window.PressableCaptionButton.PressedTooltip">
            <summary>
            Gets or sets tool tip for caption button in pressed state
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1Window.C1WindowPosition">
            <summary>
            Specifies the initial position of a <see cref="T:C1.Web.UI.Controls.C1Window.C1Window"/> object.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Window.C1WindowPosition.ByDefault">
            <summary>
            Default position of the <b>C1Window</b>.x = y = 0
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Window.C1WindowPosition.Page">
            <summary>
            Center of the page.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Window.C1WindowPosition.Parent">
            <summary>
            Center of the parent element of the dialog window.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Window.C1WindowPosition.Manual">
            <summary>
            Position determines by the <see cref="P:C1.Web.UI.Controls.C1Window.C1Window.X"/> and <see cref="P:C1.Web.UI.Controls.C1Window.C1Window.Y"/> properties. 
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Window.C1WindowPosition.OffSet">
            <summary>
            OffSet Mode
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1Window.HorizontalPosition">
            <summary>
            Horizontal position
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Window.HorizontalPosition.Left">
            <summary>
            Left region
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Window.HorizontalPosition.Center">
            <summary>
            Center rgion
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Window.HorizontalPosition.Right">
            <summary>
            Right region
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1Window.VerticalPosition">
            <summary>
            Vertical position
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Window.VerticalPosition.Top">
            <summary>
            Top region
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Window.VerticalPosition.Middle">
            <summary>
            Middle region
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Window.VerticalPosition.Bottom">
            <summary>
            Bottom region
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1Window.VisualStyleInfo">
            <summary>
            Struct that hold addtional info for visual style.
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1Slider.C1SliderButton">
            <summary>
            Class that represents the appearance and behaviors information of slider buttons.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Slider.C1SliderButton.#ctor(C1.Web.UI.Controls.C1Slider.C1Slider)">
            <summary>
            ResizeBehaviorSettings constructor.
            </summary>
            <param name="splitter">The specified C1Splitter object.</param>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Slider.C1SliderButton.ImageUrl">
            <summary>
            Image url for button in the slider user interface.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Slider.C1SliderButton.HoverImageUrl">
            <summary>
            Image url for button when the mouse is over the button of slider.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Slider.C1SliderButton.PressedImageUrl">
            <summary>
            Image url for button when the mouse is down on the button of slider.
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1Splitter.C1Splitter">
            <summary>
            C1Slitter is a container control that consists a movable bar that divides a container's display area into two resizable panels.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Splitter.C1Splitter.#ctor">
            <summary>
            Creates a new instance of the C1Splitter class.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Splitter.C1Splitter.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:C1.Web.UI.Controls.C1Splitter.C1Splitter"/> class.
            </summary>
            <param name="key">The key.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Splitter.C1Splitter.NotifyToCreateChildControls">
            <summary>
            Notify to create child controls.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Splitter.C1Splitter.CreateChildControls">
            <summary>
            Called by the ASP.NET page framework to notify server controls that use composition-based
            implementation to create any child controls they contain in preparation for posting back or rendering.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Splitter.C1Splitter.CreateContainer">
            <summary>
            Create a container for the control.
            </summary>
            <returns>Return a Web control.</returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Splitter.C1Splitter.CreateExpander">
            <summary>
            Create a Expander for the control.
            </summary>
            <returns>Return a Web control.</returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Splitter.C1Splitter.ResetBarStyle">
            <summary>
            Reset style for bar.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Splitter.C1Splitter.ChangeOrientation">
            <summary>
            Change orientation of C1Splitter.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Splitter.C1Splitter.ChangeVisualStyle(System.String,System.String)">
            <summary>
            Change VisualStyle for C1Splitter.
            </summary>
            <param name="oldVisualStyle">The old VisualStyle.</param>
            <param name="newVisualStyle">The new VisualStyle.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Splitter.C1Splitter.CreateBar">
            <summary>
            Create a bar for the control.
            </summary>
            <returns>Return a Web control.</returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Splitter.C1Splitter.ResetPanelStyle">
            <summary>
            Reset style for panels.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Splitter.C1Splitter.CreatePanel1">
            <summary>
            Gets a panel1 for the control.
            </summary>
            <returns>Return a ContentPanel.</returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Splitter.C1Splitter.CreatePanel2">
            <summary>
            Gets a panel2 for the control.
            </summary>
            <returns>Return a ContentPanel.</returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Splitter.C1Splitter.ResetSplitterDistance">
            <summary>
            Reset SplitterDistance.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Splitter.C1Splitter.GetVisualStyleCssClassName">
            <summary>
            Gets the class name of visual style.
            </summary>
            <returns>Return the class name of visual style.</returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Splitter.C1Splitter.GetPrefixName">
            <summary>
            Gets prefix name.
            </summary>
            <returns>Return the prefix name.</returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Splitter.C1Splitter.DetermineCompoundCssClass">
            <summary>
            Determine compound css class.
            </summary>
            <returns>Return a string.</returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Splitter.C1Splitter.OnPreRender(System.EventArgs)">
            <summary>
            Raises the PreRender event.
            </summary>
            <param name="e">An EventArgs object that contains the event data.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Splitter.C1Splitter.AddAttributesToRender(System.Web.UI.HtmlTextWriter)">
            <summary>
            Adds HTML attributes and styles that need to be rendered to the specified HtmlTextWriterTag.
            </summary>
            <param name="writer">A HtmlTextWriter that represents the output stream to render HTML content on the client.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Splitter.C1Splitter.OnInit(System.EventArgs)">
            <summary>
            Raises the Init event.
            </summary>
            <param name="e">An EventArgs object that contains the event data.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Splitter.C1Splitter.Render(System.Web.UI.HtmlTextWriter)">
            <summary>
            Renders the control to the specified HTML writer.
            </summary>
            <param name="writer">The HtmlTextWriter object that receives the control content.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Splitter.C1Splitter.RenderContents(System.Web.UI.HtmlTextWriter)">
            <summary>
            Renders the contents of the control to the specified writer. This method is used primarily by control developers.
            </summary>
            <param name="writer">A System.Web.UI.HtmlTextWriter that represents the output stream to render HTML content on the client.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Splitter.C1Splitter.GetScriptDescriptors">
            <summary>
            When overridden in a derived class, registers the ScriptDescriptor objects for the control.
            </summary>
            <returns>An enumeration of ScriptDescriptor objects.</returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Splitter.C1Splitter.GetScriptReferences">
            <summary>
            When overridden in a derived class, registers the script libraries for the control.
            </summary>
            <returns>
            An object that implements the IEnumerable interface and that contains
            ECMAScript (JavaScript) files that have been registered as embedded resources.
            </returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Splitter.C1Splitter.LoadViewState(System.Object)">
            <summary>
            Restores view-state information from a previous request that was saved with the System.Web.UI.WebControls.WebControl.SaveViewState() method.
            </summary>
            <param name="state">An object that represents the control state to restore.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Splitter.C1Splitter.SaveViewState">
            <summary>
            Saves any state that was modified after the System.Web.UI.WebControls.Style.TrackViewState() method was invoked.
            </summary>
            <returns>An object that contains the current view state of the control; otherwise, if there is no view state associated with the control, null.</returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Splitter.C1Splitter.TrackViewState">
            <summary>
             Causes the control to track changes to its view state so they can be stored in the object's System.Web.UI.Control.ViewState property.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Splitter.C1Splitter.System#Web#UI#IPostBackDataHandler#LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)">
            <summary>
            Processes postback data for an ASP.NET server control.
            </summary>
            <param name="postDataKey">The key identifier for the control.</param>
            <param name="postCollection">The collection of all incoming name values.</param>
            <returns>true if the server control's state changes as a result of the postback; otherwise, false.</returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Splitter.C1Splitter.System#Web#UI#IPostBackDataHandler#RaisePostDataChangedEvent">
            <summary>
            Notify the ASP.NET application that the state of the control has changed.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Splitter.C1Splitter.SaveLayout(System.String)">
            <summary>
            Saves the control layout properties to the file.
            </summary>
            <param name="filename">The file where the values of the layout properties will be saved.</param> 
        </member>
        <member name="M:C1.Web.UI.Controls.C1Splitter.C1Splitter.SaveLayout(System.IO.Stream)">
            <summary>
            Saves control layout properties to the stream.
            </summary>
            <param name="stream">The stream where the values of layout properties will be saved.</param> 
        </member>
        <member name="M:C1.Web.UI.Controls.C1Splitter.C1Splitter.LoadLayout(System.String)">
            <summary>
            Loads control layout properties from the file.
            </summary>
            <param name="filename">The file where the values of layout properties will be loaded.</param> 
        </member>
        <member name="M:C1.Web.UI.Controls.C1Splitter.C1Splitter.LoadLayout(System.IO.Stream)">
            <summary>
            Load control layout properties from the stream.
            </summary>
            <param name="stream">The stream where the values of layout properties will be loaded.</param> 
        </member>
        <member name="M:C1.Web.UI.Controls.C1Splitter.C1Splitter.LoadLayout(System.String,C1.Web.UI.LayoutType)">
            <summary>
            Loads control layout properties with specified types from the file.
            </summary>
            <param name="filename">The file where the values of layout properties will be loaded.</param> 
            <param name="layoutTypes">The layout types to load.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Splitter.C1Splitter.LoadLayout(System.IO.Stream,C1.Web.UI.LayoutType)">
            <summary>
            Loads the control layout properties with specified types from the stream.
            </summary>
            <param name="stream">The stream where the values of the layout properties will be loaded.</param> 
            <param name="layoutTypes">The layout types to load.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Splitter.C1Splitter.FindControl(System.String)">
            <summary>
            FindControl
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Splitter.C1Splitter.FullSplit">
            <summary>
            Sets or retrieves a value that indicates whether or not the control is full of document. 
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Splitter.C1Splitter.BorderColor">
            <summary>
            Gets or sets the border color of the Web control.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Splitter.C1Splitter.Height">
            <summary>
             Gets or sets the height of the slider.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Splitter.C1Splitter.Width">
            <summary>
            Gets or sets the width of the slider.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Splitter.C1Splitter.Bar">
            <summary>
            Gets a SplitterBar object that defines the information for splitter bar.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Splitter.C1Splitter.Panel1">
            <summary>
            Gets the SplitterPanel object that defines the information for top or left panel of splitter.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Splitter.C1Splitter.Panel2">
            <summary>
            Gets the SplitterPanel object that defines the information for bottom or right panel of splitter.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Splitter.C1Splitter.ResizeSettings">
            <summary>
            Gets the ResizeBehaviorSettings object that defines the animation while the bar of splitter is beeing dragged.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Splitter.C1Splitter.SplitterDistance">
            <summary>
            Gets or sets the location of the splitter, in pixels, from the left or top edge of the C1Splitter. 
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Splitter.C1Splitter.Orientation">
            <summary>
            Gets or sets a value indicating the horizontal or vertical orientation of the C1WebSplitter panels. 
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "P:C1.Web.UI.Controls.C1Splitter.C1Splitter.Visible" -->
        <member name="P:C1.Web.UI.Controls.C1Splitter.C1Splitter.SplitterStyle">
            <summary>
             The splitter style for the Web control.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Splitter.C1Splitter.OnClientLoad">
            <summary>
            Fires on client side when the splitter is initialized. 
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Splitter.C1Splitter.OnClientSize">
            <summary>
            Gets or sets the javascript function name that would be called at client side when start dragging the splitter.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Splitter.C1Splitter.OnClientSized">
            <summary>
            Gets or sets the javascript function name that would be called at client side when finish dragging the splitter.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Splitter.C1Splitter.OnClientSizing">
            <summary>
            Gets or sets the javascript function name that would be called at client side when dragging the splitter.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Splitter.C1Splitter.OnClientCollapse">
            <summary>
            Gets or sets the javascript function name that would be called before panel1 is collapsed.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Splitter.C1Splitter.OnClientCollapsed">
            <summary>
            Gets or sets the javascript function name that would be called when panel1 is collapsed by clicking the collapse/expand image.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Splitter.C1Splitter.OnClientExpand">
            <summary>
            Gets or sets the javascript function name that would be called before panel1 is expanded out.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Splitter.C1Splitter.OnClientExpanded">
            <summary>
            Gets or sets the javascript function name that would be called when panel1 is expanded out by clicking the collapse/expand image.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Splitter.C1Splitter.VisualStylePath">
            <summary>
            Path to visual styles.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Splitter.C1Splitter.VisualStyle">
            <summary>
            VisualStyle name.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Splitter.C1Splitter.UseEmbeddedVisualStyles">
            <summary>
            If true then control will use VisualStyle embedded into control's assembly.
            otherwise control will load VisualStyle from disk.
            </summary>     
        </member>
        <member name="P:C1.Web.UI.Controls.C1Splitter.C1Splitter.EmbeddedVisualStyles">
            <summary>
            Returns string array with embedded visual style names.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Splitter.C1Splitter.TagKey">
            <summary>
            Changed the type of  control's  tag.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Splitter.C1Splitter.Enabled">
            <summary>
            Gets or sets if slider is Enabled.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Splitter.C1Splitter.RawWidth">
            <summary>
            
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Splitter.C1Splitter.RawHeight">
            <summary>
            
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1Splitter.SplitterStyle">
            <summary>
            The SplitterStyle for C1Splitter.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Splitter.SplitterStyle.None">
            <summary>
            no visual
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Splitter.SplitterStyle.Thin">
            <summary>
            
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Splitter.SplitterStyle.Thick">
            <summary>
            
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Splitter.SplitterStyle.Arrow">
            <summary>
            
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1Splitter.C1SplitterSerializer">
            <summary>
            Serializes C1Splitter Control.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Splitter.C1SplitterSerializer.#ctor(System.Object)">
            <summary>
            Constructor
            </summary>
            <param name="obj"></param>
        </member>
        <member name="T:C1.Web.UI.Controls.C1Splitter.ResizeBehaviorSettings">
            <summary>
            Class that represents the appearance and behaviors information of splitter bar.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Splitter.ResizeBehaviorSettings.#ctor(C1.Web.UI.Controls.C1Splitter.C1Splitter)">
            <summary>
            ResizeBehaviorSettings constructor.
            </summary>
            <param name="splitter">The specified C1Splitter object.</param>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Splitter.ResizeBehaviorSettings.AnimationDuration">
            <summary>
            Define how long (in milliseconds) the animation of the sliding will run.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Splitter.ResizeBehaviorSettings.Easing">
            <summary>
            The easing that is applied to the animation.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Splitter.ResizeBehaviorSettings.Increment">
            <summary>
            Gets or sets the movement span of incremental resizing. 
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Splitter.ResizeBehaviorSettings.Ghost">
            <summary>
            Gets or sets a value that determines whether an outline of the element is sized.
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1Splitter.SplitterBar">
            <summary>
            Class that represents the appearance and behaviors information of splitter bar.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Splitter.SplitterBar.#ctor(C1.Web.UI.Controls.C1Splitter.C1Splitter)">
            <summary>
            SplitterBar constructor
            </summary>
            <param name="splitter">The specified C1Splitter object.</param>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Splitter.SplitterBar.Width">
            <summary>
            Gets or sets the width of the splitter bar in pixels. 
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Splitter.SplitterBar.CssClass">
            <summary>
            Gets or sets the css class name for rendering the splitter bar.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Splitter.SplitterBar.HoverCssClass">
            <summary>
            Gets or sets the css class name for rendering the splitter bar while mouse is over it.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Splitter.SplitterBar.CollapsedCssClass">
            <summary>
            Gets or sets the css class name for rendering the splitter bar while it is collapsed.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Splitter.SplitterBar.DragCssClass">
            <summary>
            Gets or sets the css class name for rendering the splitter bar while it is beeing dragged.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Splitter.SplitterBar.CollapseImageUrl">
            <summary>
            Gets or sets the url of image that to collapse the splitter bar.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Splitter.SplitterBar.ExpandImageUrl">
            <summary>
            Gets or sets the url of image that to expand the splitter bar.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Splitter.SplitterBar.CollapseHoverImageUrl">
            <summary>
            Gets or sets the url of image that to collapse the splitter bar when mouse is over it.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Splitter.SplitterBar.ExpandHoverImageUrl">
            <summary>
            Gets or sets the url of image that to expand the splitter bar when mouse is over it.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Splitter.SplitterBar.ToolTip">
            <summary>
            Gets or sets the tooltip when mouse is over the splitter bar.
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1Splitter.SplitterPanel">
            <summary>
            Class that represents the appearance and behaviors information of splitter panel.  
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Splitter.SplitterPanel.#ctor(C1.Web.UI.Controls.C1Splitter.C1Splitter)">
            <summary>
            SplitterPanel constructor.
            </summary>
            <param name="splitter">The specified C1Splitter object.</param>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Splitter.SplitterPanel.ContentTemplate">
            <summary>
            Gets or sets the template for the content area of the C1Splitter control. 
            </summary> 
        </member>
        <member name="P:C1.Web.UI.Controls.C1Splitter.SplitterPanel.MinSize">
            <summary>
            Gets or sets the minimum distance in pixels when resizing the splitter. 
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Splitter.SplitterPanel.ScrollBars">
            <summary>
            Gets or sets the type of scroll bars to display for splitter panel.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Splitter.SplitterPanel.BackColor">
            <summary>
            Gets or sets the background color for splitter panel.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Splitter.SplitterPanel.BackImageUrl">
            <summary>
            Gets or sets the background image url for splitter panel.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Splitter.SplitterPanel.Collapsed">
            <summary>
            Gets or sets a value determining whether splitter panel is collapsed or expanded. 
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Splitter.SplitterPanel.CssClass">
            <summary>
            Gets or sets the css class name for splitter panel.
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1Splitter.SplitterPanelItem">
            <summary>
            Class that represents template container of SplitterPanel.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Splitter.SplitterPanelItem.RenderBeginTag(System.Web.UI.HtmlTextWriter)">
            <summary>
            
            </summary>
            <param name="writer"></param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Splitter.SplitterPanelItem.RenderEndTag(System.Web.UI.HtmlTextWriter)">
            <summary>
            
            </summary>
            <param name="writer"></param>
        </member>
        <member name="T:C1.Web.UI.Controls.C1Window.ResizeBehaviorSettings">
            <summary>
            Class that represents the appearance and behaviors information of resizer..
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Window.ResizeBehaviorSettings.#ctor(C1.Web.UI.Controls.C1Window.C1Window)">
            <summary>
            ResizeBehaviorSettings constructor.
            </summary>
            <param name="window">C1Window object.</param>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Window.ResizeBehaviorSettings.AnimationDuration">
            <summary>
            Define how long (in milliseconds) the animation of the sliding will run.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Window.ResizeBehaviorSettings.Easing">
            <summary>
            The easing that is applied to the animation.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Window.ResizeBehaviorSettings.Increment">
            <summary>
            Gets or sets the movement span of incremental resizing. 
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Window.ResizeBehaviorSettings.Ghost">
            <summary>
            Gets or sets a value that determines whether an outline of the element is sized.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Window.ResizeBehaviorSettings.MaxHeight">
            <summary>
             Gets or sets the maximum height(in px) of C1Window object.
            </summary>
            <remarks>
            Default is 10000px;
            </remarks>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Window.ResizeBehaviorSettings.MaxWidth">
            <summary>
             Gets or sets the maximum width(in px) of C1Window object.
            </summary>
            <remarks>
            Default is 10000px;
            </remarks>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Window.ResizeBehaviorSettings.MinHeight">
            <summary>
             Gets or sets the minimum height(in px) of C1Window object.
            </summary>
            <remarks>
            Default is 1px;
            </remarks>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Window.ResizeBehaviorSettings.MinWidth">
            <summary>
            Gets or sets the minimum width(in px) of C1Window object.
            </summary>
            <remarks>
            Default is 1px;
            </remarks>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Window.ResizeBehaviorSettings.PreserveRatio">
            <summary>
            The ratio between the height and width will be maintaned while sizing.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Window.ResizeBehaviorSettings.UseHelper">
            <summary>
            Gets or sets a value that determines whether to use a resizing proxy.
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1Menu.C1MenuItemGroup">
            <summary>
            Represents group item that will show child items on same level.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Menu.C1MenuItemGroup.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:C1.Web.UI.Controls.C1Menu.C1MenuItemGroup"/> class.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Menu.C1MenuItemGroup.DetermineListItemCssClasses">
            <summary>
            Determines the list item CSS classes.
            </summary>
            <returns>
            string with space separated CSS classes that will be placed on LI tag.
            </returns>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Menu.C1MenuItemGroup.ClientType">
            <summary>
            this property should be hidden.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Menu.C1MenuItemGroup.Width">
            <summary>
            width of the menu group.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Menu.C1MenuItemGroup.Height">
            <summary>
            height of the menu group.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Menu.C1MenuItemGroup.NestedGroupCssClass">
            <summary>
            Gets or sets CSS class that will be placed on nested group container element that used as group or sub-menu container.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Menu.C1MenuItemGroup.NestedGroupCheckable">
            <summary>
            Gets or sets a value that indicates whether or not child menu items will be checkable.
            </summary>
            <remarks>If true then CSS class "C1CheckableSupport" will be added to scroll container element.</remarks>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Menu.C1MenuItemGroup.NestedGroupOrientation">
            <summary>
            Sub-menu or nested group orientation.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Menu.C1MenuItemGroup.NestedGroupWidth">
            <summary>
            Gets or sets sub menu or nested group width in pixels.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Menu.C1MenuItemGroup.NestedGroupHeight">
            <summary>
            Gets or sets sub menu or nested group height in pixels.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Menu.C1MenuItemGroup.AccessKey">
            <summary>
            This property is not applicable for group.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Menu.C1MenuItemGroup.TabIndex">
            <summary>
            This property is not applicable for group.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Menu.C1MenuItemGroup.ToolTip">
            <summary>
            This property is not applicable for group.
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1Menu.C1MenuItemHeader">
            <summary>
            Represents Header item.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Menu.C1MenuItemHeader.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:C1.Web.UI.Controls.C1Menu.C1MenuItemHeader"/> class.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Menu.C1MenuItemHeader.RenderItemContents(System.Web.UI.HtmlTextWriter)">
            <summary>
            Renders the item contents.
            </summary>
            <param name="writer">The writer.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Menu.C1MenuItemHeader.DetermineListItemCssClasses">
            <summary>
            Determines the list item CSS classes.
            </summary>
            <returns>
            string with space separated CSS classes that will be placed on LI tag.
            </returns>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Menu.C1MenuItemHeader.ClientType">
            <summary>
            this property should be hidden.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Menu.C1MenuItemHeader.HeaderType">
            <summary>
            Gets or sets whether the item is header and will be used as group title. This means what heading tags h1– h6 will be used to render text inside item.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Menu.C1MenuItemHeader.ScrollSettings">
            <summary>
            This property is not applicable for separator.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Menu.C1MenuItemHeader.NestedGroupCssClass">
            <summary>
            This property is not applicable for header.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Menu.C1MenuItemHeader.NestedGroupCheckable">
            <summary>
            This property is not applicable for header.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Menu.C1MenuItemHeader.NestedGroupOrientation">
            <summary>
            This property is not applicable for header.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Menu.C1MenuItemHeader.NestedGroupWidth">
            <summary>
            This property is not applicable for header.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Menu.C1MenuItemHeader.NestedGroupHeight">
            <summary>
            This property is not applicable for header.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Menu.C1MenuItemHeader.AccessKey">
            <summary>
            This property is not applicable for header.
            </summary>
            <value></value>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Menu.C1MenuItemHeader.Checked">
            <summary>
            This property is not applicable for header.
            </summary>
            <value></value>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Menu.C1MenuItemHeader.Enabled">
            <summary>
            This property is not applicable for header.
            </summary>
            <value></value>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Menu.C1MenuItemHeader.NavigateUrl">
            <summary>
            This property is not applicable for header.
            </summary>
            <value></value>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Menu.C1MenuItemHeader.Target">
            <summary>
            This property is not applicable for header.
            </summary>
            <value></value>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Menu.C1MenuItemHeader.MouseOverImageUrl">
            <summary>
            This property is not applicable for header.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Menu.C1MenuItemHeader.DisabledImageUrl">
            <summary>
            This property is not applicable for header.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Menu.C1MenuItemHeader.TabIndex">
            <summary>
            This property is not applicable for header.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Menu.C1MenuItemHeader.ToolTip">
            <summary>
            This property is not applicable for header.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Menu.C1MenuItemHeader.Items">
            <summary>
            This property is not applicable for header.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Menu.C1MenuItemHeader.ExpandAnimation">
            <summary>
            The property should be hidden.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Menu.C1MenuItemHeader.ExpandDuration">
            <summary>
            The property should be hidden.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Menu.C1MenuItemHeader.ExpandDelay">
            <summary>
            The property should be hidden.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Menu.C1MenuItemHeader.ExpandEasing">
            <summary>
            The property should be hidden.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Menu.C1MenuItemHeader.CollapseEasing">
            <summary>
            The property should be hidden.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Menu.C1MenuItemHeader.CollapseAnimation">
            <summary>
            The property should be hidden.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Menu.C1MenuItemHeader.CollapseDuration">
            <summary>
            The property should be hidden.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Menu.C1MenuItemHeader.CollapseDelay">
            <summary>
            The property should be hidden.
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1Menu.C1MenuItemSeparator">
            <summary>
            Represents Separator item.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Menu.C1MenuItemSeparator.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:C1.Web.UI.Controls.C1Menu.C1MenuItemSeparator"/> class.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Menu.C1MenuItemSeparator.RenderItemContents(System.Web.UI.HtmlTextWriter)">
            <summary>
            Renders the item contents.
            </summary>
            <param name="writer">The writer.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Menu.C1MenuItemSeparator.DetermineListItemCssClasses">
            <summary>
            Determines the list item CSS classes.
            </summary>
            <returns>
            string with space separated CSS classes that will be placed on LI tag.
            </returns>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Menu.C1MenuItemSeparator.ClientType">
            <summary>
            this property should be hidden.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Menu.C1MenuItemSeparator.ScrollSettings">
            <summary>
            This property is not applicable for separator.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Menu.C1MenuItemSeparator.AccessKey">
            <summary>
            This property is not applicable for separator.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Menu.C1MenuItemSeparator.Enabled">
            <summary>
            This property is not applicable for separator.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Menu.C1MenuItemSeparator.Height">
            <summary>
            This property is not applicable for separator.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Menu.C1MenuItemSeparator.Width">
            <summary>
            This property is not applicable for separator.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Menu.C1MenuItemSeparator.TabIndex">
            <summary>
            This property is not applicable for separator.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Menu.C1MenuItemSeparator.ToolTip">
            <summary>
            This property is not applicable for separator.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Menu.C1MenuItemSeparator.Items">
            <summary>
            This property is not applicable for separator.
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1NavPanel.C1NavPanelPane">
            <summary>
            C1NavPanel Pane.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1NavPanel.C1NavPanelPane.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:C1.Web.UI.Controls.C1NavPanel.C1NavPanelPane"/> class.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1NavPanel.C1NavPanelPane.#ctor(C1.Web.UI.Controls.C1NavPanel.C1NavPanel)">
            <summary>
            Initializes a new instance of the <see cref="T:C1.Web.UI.Controls.C1NavPanel.C1NavPanelPane"/> class.
            </summary>
            <param name="c1NavPanel">The C1NavPanel.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1NavPanel.C1NavPanelPane.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:C1.Web.UI.Controls.C1NavPanel.C1NavPanelPane"/> class.
            </summary>
            <param name="headerText">The header text.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1NavPanel.C1NavPanelPane.GetScriptDescriptors">
            <summary>
            When overridden in a derived class, registers the <see cref="T:System.Web.UI.ScriptDescriptor"/> objects for the control.
            </summary>
            <returns>A collection of <see cref="T:System.Web.UI.ScriptDescriptor"/> instances.</returns>
        </member>
        <member name="P:C1.Web.UI.Controls.C1NavPanel.C1NavPanelPane.ExpandDirection">
            <summary>
            Gets the general layout orientation of the panel.
            </summary>
            <value></value>
        </member>
        <member name="T:C1.Web.UI.Controls.C1ToolBarContainer.C1ToolBarContainer">
            <summary>
            Provides panels that can hold one or more controls which
            implements the IC1CanDockControl interface.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1ToolBarContainer.C1ToolBarContainer.#ctor">
            <summary>
            C1ToolBarContainer constructor.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1ToolBarContainer.C1ToolBarContainer.AddAttributesToRender(System.Web.UI.HtmlTextWriter)">
            <summary>
            Adds HTML attributes and styles that need to be rendered to the specified HtmlTextWriterTag.
            </summary>
            <param name="writer">A HtmlTextWriter that represents the output stream to render HTML content on the client.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1ToolBarContainer.C1ToolBarContainer.GetVisualStyleCssClassName">
            <summary>s
            Gets control css class name by visual style
            </summary>
            <returns></returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1ToolBarContainer.C1ToolBarContainer.Render(System.Web.UI.HtmlTextWriter)">
            <summary>
            Renders the control to the specified HTML writer.
            </summary>
            <param name="writer">The HtmlTextWriter object that receives the control content.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1ToolBarContainer.C1ToolBarContainer.OnPreRender(System.EventArgs)">
            <summary>
            Raises the PreRender event.
            </summary>
            <param name="e">An EventArgs object that contains the event data.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1ToolBarContainer.C1ToolBarContainer.GetScriptDescriptors">
            <summary>
            Registers the ScriptDescriptor objects for the control.
            </summary>
            <returns>An enumeration of ScriptDescriptor objects.</returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1ToolBarContainer.C1ToolBarContainer.GetScriptReferences">
            <summary>
            Registers the script libraries for the control.
            </summary>
            <returns>
            An object that implements the IEnumerable interface and that contains
            ECMAScript (JavaScript) files that have been registered as embedded resources.
            </returns>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ToolBarContainer.C1ToolBarContainer.AutoSize">
            <summary>
            Specifies whether the C1ToolBarContainer can autosize to fit its child's bounds.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ToolBarContainer.C1ToolBarContainer.Orientation">
            <summary>
            Specifies whether the C1ToolBarContainer is laid out horizontally or vertically.The default layout is horizontal.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ToolBarContainer.C1ToolBarContainer.ChildIDs">
            <summary>
            Gets an arraylist value which contains ids of all children.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ToolBarContainer.C1ToolBarContainer.DockableChildIDs">
            <summary>
            Gets an arraylist value which contains ids of all dockable children.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ToolBarContainer.C1ToolBarContainer.PlainChildIDs">
            <summary>
            Gets an arraylist value which contains ids of all dockable children.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ToolBarContainer.C1ToolBarContainer.TagKey">
            <summary>
            Gets the HTML tag for the control.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ToolBarContainer.C1ToolBarContainer.VisualStylePath">
            <summary>
            Path to visual styles.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ToolBarContainer.C1ToolBarContainer.VisualStyle">
            <summary>
            Gets or sets the visual style name used by the control.
            </summary>
            <remarks>
            "ArcticFox" is default value.
            </remarks>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ToolBarContainer.C1ToolBarContainer.EmbeddedVisualStyles">
            <summary>
            Returns string array with embedded Visual Styles names.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1ToolBarContainer.Constant.DockPartner.CONST_DOCKPARTNER_ID_SUFFIX">
            <summary>
            Value: <value>DockPartner</value>
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1ToolBarContainer.Constant.CSS">
            <summary>
            All definitions CSS class name.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1ToolBarContainer.Constant.CSS.CONST_C1DOCKPARTNER">
            <summary>
            Value: <value>C1DockPartner</value>
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1ToolBarContainer.Constant.CSS.CSSGroup">
            <summary>
            CSS aggregate class name.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1ToolBarContainer.Constant.CSS.CSSGroup.ToString">
            <summary>
            Converts the value of this instance to a System.String.
            </summary>
            <returns></returns>
        </member>
        <member name="T:C1.Web.UI.Controls.C1ToolBarContainer.DockPartner">
            <summary>
            
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1ToolBarContainer.DockPartner.#ctor(C1.Web.UI.Interfaces.IC1Dockable)">
            <summary>
            Constructor.
            </summary>
            <param name="dockableControl">IDockable.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1ToolBarContainer.DockPartner.AddAttributesToRender(System.Web.UI.HtmlTextWriter)">
            <summary>
            Add attributes to render.
            </summary>
            <param name="writer">HtmlTextWriter</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1ToolBarContainer.DockPartner.AppendToParentControl(System.Web.UI.Control)">
            <summary>
            Add dockable control and dock partner to the parent control by dock type.
            </summary>
            <param name="parentControl">parent control.</param>
            <returns>container control.</returns>
        </member>
        <member name="T:C1.Web.UI.Controls.C1ToolBar.BrowserInfo">
            <summary>
            Represents information about browser what initiated Page request.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1ToolBar.BrowserInfo.#ctor(System.Web.UI.Control)">
            <summary>
            Constructor.
            </summary>
            <param name="owner"></param>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ToolBar.BrowserInfo.IsIE">
            <summary>
            Returns true if browser is Internet Explorer.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ToolBar.BrowserInfo.IsFF">
            <summary>
            Returns true if browser is Firefox.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ToolBar.BrowserInfo.IsSafari">
            <summary>
            Returns true if browser is Safari.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ToolBar.BrowserInfo.MajorVersion">
            <summary>
            Gets Major Version number of the browser.
            E.g. for IE value can be 5,6 or 7.
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1ToolBar.C1ToolBar">
            <summary>
            C1Toolbar is an ASP.NET control that is used as a container to hold other controls such as buttons, check buttons, text boxes, drop-down lists, split-buttons, and separators. C1ToolBar provides six different objects to support the various types of controls used in the C1ToolBar: C1ToolBarGroup, C1ToolBarButton, C1ToolbarDropDownList, C1ToolbarCheckButton, C1ToolbarSplitButton, and C1ToolBarSeparator. 
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1ToolBar.IC1ToolBarItemCollectionOwner">
            <summary>
            IC1ToolBarItemCollectionOwner interface.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ToolBar.IC1ToolBarItemCollectionOwner.Items">
            <summary>
            ToolBar items collection
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ToolBar.IC1ToolBarItemCollectionOwner.Owner">
            <summary>
            ToolBar item owner.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ToolBar.IC1ToolBarItemCollectionOwner.Text">
            <summary>
            Text
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ToolBar.IC1ToolBarItemCollectionOwner.Index">
            <summary>
            Index
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1ToolBar.IC1ToolBarItemContainer">
            <summary>
            IC1ToolBarItemContainer interface.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1ToolBar.IC1ToolBarItemContainer.UnSelectedAllItems">
            <summary>
            Unselect all toolbar items.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ToolBar.IC1ToolBarItemContainer.SelectionMode">
            <summary>
            ToolBar item container's selection mode.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ToolBar.IC1ToolBarItemContainer.SelectedItemsCount">
            <summary>
            The count of selected items.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1ToolBar.C1ToolBar.#ctor">
            <summary>
            C1ToolBar's constructor.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1ToolBar.C1ToolBar.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:C1.Web.UI.Controls.C1ToolBar.C1ToolBar"/> class.
            </summary>
            <param name="key">The key.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1ToolBar.C1ToolBar.#ctor(System.Boolean,System.String)">
            <summary>
            Every toolbar render css at design-time
            set renderDesignTimeCss to false to prevent this behavior.
            </summary>
            <param name="renderDesignTimeCss"></param>
            <param name="key"></param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1ToolBar.C1ToolBar.UnSelectedAllItems">
            <summary>
            Set all items unselected.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1ToolBar.C1ToolBar.OnItemClick(C1.Web.UI.Controls.C1ToolBar.C1ToolBarEventArgs)">
            <summary>
            Raise ItemClick event.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1ToolBar.C1ToolBar.OnItemChecked(C1.Web.UI.Controls.C1ToolBar.C1ToolBarEventArgs)">
            <summary>
            Raise ItemChecked event.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1ToolBar.C1ToolBar.OnItemPropertyChanged(C1.Web.UI.Controls.C1ToolBar.C1ToolBarItemPropertyChangedEventArgs)">
            <summary>
            Raise ItemPropertyChanged event.
            </summary>
            <param name="e">A C1ItemPropertyChangedEventArgs object that contains the event data.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1ToolBar.C1ToolBar.OnItemSelect(C1.Web.UI.Controls.C1ToolBar.C1ToolBarEventArgs)">
            <summary>
            Raise ItemSelect event.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1ToolBar.C1ToolBar.DataBind">
            <summary>
            Override DataBind method.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1ToolBar.C1ToolBar.EnsureDataBound">
            <summary>
            Override EnsureDataBound method.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1ToolBar.C1ToolBar.CreateChildControlsFromItems(System.Boolean)">
            <summary>
            Create child controls from items.
            </summary>
            <param name="dataBinding">The value determines whether the databind method is performed.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1ToolBar.C1ToolBar.CreateChildControlsFromItems(C1.Web.UI.Controls.C1ToolBar.IC1ToolBarItemCollectionOwner,System.Int32,System.Boolean)">
            <summary>
            Create child controls from items.
            </summary>
            <param name="item">The specified IC1ToolBarItemCollectionOwner object.</param>
            <param name="position">Index location.</param>
            <param name="dataBinding">The value determines whether the databind method is performed.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1ToolBar.C1ToolBar.FindControl(System.String)">
            <summary>
            Override FindControl method.
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1ToolBar.C1ToolBar.PerformDataBinding">
            <summary>
            Override PerformDataBinding method.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1ToolBar.C1ToolBar.DataBindInternal(System.Web.UI.IHierarchicalEnumerable)">
            <summary>
            Internal DataBind's method.
            </summary>
            <param name="enumerable">The specified IHierarchicalEnumerable object.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1ToolBar.C1ToolBar.GetBinding(System.String)">
            <summary>
            Gets the specified C1ToolBarItemBinding object.
            </summary>
            <param name="dataMember">The specified string.</param>
            <returns>Return the specified C1ToolBarItemBinding object.</returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1ToolBar.C1ToolBar.CreateToolBarItem(System.String)">
            <summary>
            Creates new instance of the C1ToobarItem class.
            </summary>
            <returns>Return the specified C1ToolBarItem object.</returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1ToolBar.C1ToolBar.LoadChildItemsFromJsonData(C1.Web.UI.Controls.C1ToolBar.IC1ToolBarItemCollectionOwner,System.Collections.ArrayList)">
            <summary>
            Loads child items from json's data.
            </summary>
            <param name="owner">The specified IC1ToolBarItemCollectionOwner object.</param>
            <param name="jsonItems">Json's data.</param>
            <returns>Return a bool value whether the ViewState is changed or not.</returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1ToolBar.C1ToolBar.LoadItemPropertiesFromJsonData(C1.Web.UI.Controls.C1ToolBar.IC1ToolBarItemCollectionOwner,System.Collections.Hashtable)">
            <summary>
             Loads item property's value from json's data.
            </summary>
            <param name="item">The specified IC1ToolBarItemCollectionOwner object.</param>
            <param name="jsonItem">Json's data.</param>
            <returns>Return a bool value whether the ViewState is changed or not.</returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1ToolBar.C1ToolBar.SaveLayout(System.String)">
            <summary>
            Saves the control layout properties to the file.
            </summary>
            <param name="filename">The file where the values of the layout properties will be saved.</param> 
        </member>
        <member name="M:C1.Web.UI.Controls.C1ToolBar.C1ToolBar.SaveLayout(System.IO.Stream)">
            <summary>
            Saves control layout properties to the stream.
            </summary>
            <param name="stream">The stream where the values of layout properties will be saved.</param> 
        </member>
        <member name="M:C1.Web.UI.Controls.C1ToolBar.C1ToolBar.LoadLayout(System.String)">
            <summary>
            Loads control layout properties from the file.
            </summary>
            <param name="filename">The file where the values of layout properties will be loaded.</param> 
        </member>
        <member name="M:C1.Web.UI.Controls.C1ToolBar.C1ToolBar.LoadLayout(System.IO.Stream)">
            <summary>
            Load control layout properties from the stream.
            </summary>
            <param name="stream">The stream where the values of layout properties will be loaded.</param> 
        </member>
        <member name="M:C1.Web.UI.Controls.C1ToolBar.C1ToolBar.LoadLayout(System.String,C1.Web.UI.LayoutType)">
            <summary>
            Loads control layout properties with specified types from the file.
            </summary>
            <param name="filename">The file where the values of layout properties will be loaded.</param> 
            <param name="layoutTypes">The layout types to load.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1ToolBar.C1ToolBar.LoadLayout(System.IO.Stream,C1.Web.UI.LayoutType)">
            <summary>
            Loads the control layout properties with specified types from the stream.
            </summary>
            <param name="stream">The stream where the values of the layout properties will be loaded.</param> 
            <param name="layoutTypes">The layout types to load.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1ToolBar.C1ToolBar.RenderDesignTimeStyleSheets(System.Web.UI.HtmlTextWriter,System.Boolean)">
            <summary>
            Override this method if you want to render additional stylesheets definitions what will be used by control only at design-time.
            </summary>
            <remarks>Primarily this method used by control developers.
            Note, stylesheet styles.css from embedded VisualStyle will be included automatically by VisualStyle mechanism.</remarks>
            <param name="writer"></param>
            <param name="beforeVisualStyle"></param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1ToolBar.C1ToolBar.RegisterRunTimeStyleSheets(System.Boolean)">
            <summary>
            Override this method if you want to render additional style sheets definitions what will be used by control only at run-time.
            </summary>
            <remarks>
            Primarily this method is used by control developers. Note, style sheet styles.css from embedded VisualStyle will be included automatically by VisualStyle mechanism.
            </remarks>
        </member>
        <member name="M:C1.Web.UI.Controls.C1ToolBar.C1ToolBar.OnInit(System.EventArgs)">
            <summary>
            OnInit override.
            Used to manipulate statically created <see cref="T:C1.Web.UI.Controls.C1ToolBar.C1ToolBar"/> nodes.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1ToolBar.C1ToolBar.OnPreRender(System.EventArgs)">
            <summary>
            Override OnPreRender method.
            </summary>
            <param name="e">System.EventArgs is the base class for classes containing event data.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1ToolBar.C1ToolBar.AddAttributesToRender(System.Web.UI.HtmlTextWriter)">
            <summary>
            Adds HTML attributes and styles that need to be rendered to the specified HtmlTextWriterTag.
            </summary>
            <param name="writer">A HtmlTextWriter that represents the output stream to render HTML content on the client.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1ToolBar.C1ToolBar.CreateChildControls">
            <summary>
            Override CreateChildControls method.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1ToolBar.C1ToolBar.RenderEndTag(System.Web.UI.HtmlTextWriter)">
            <summary>
            Override RenderEndTag method.
            </summary>
            <param name="writer">A HtmlTextWriter that represents the output stream to render HTML content on the client.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1ToolBar.C1ToolBar.RenderChildren(System.Web.UI.HtmlTextWriter)">
            <summary>
            Renders the content elements of <see cref="T:C1.Web.UI.Controls.C1ToolBar.C1ToolBar"/>.
            </summary>
            <param name="writer"></param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1ToolBar.C1ToolBar.Unit2Int(System.Web.UI.WebControls.Unit)">
            <summary>
            Convert a Unit value to an int value.
            </summary>
            <param name="value">The specified unit value.</param>
            <returns>Return a int value which converts from a unit value.</returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1ToolBar.C1ToolBar.GetScriptDescriptors">
            <summary>
            When overridden in a derived class, registers the ScriptDescriptor objects for the control.
            </summary>
            <returns>An enumeration of ScriptDescriptor objects.</returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1ToolBar.C1ToolBar.GetScriptReferences">
            <summary>
            When overridden in a derived class, registers the script libraries for the control.
            </summary>
            <returns>
            An object that implements the IEnumerable interface and that contains
            ECMAScript (JavaScript) files that have been registered as embedded resources.
            </returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1ToolBar.C1ToolBar.InternalRaisePostbackServerEvents">
            <summary>
            Raise postback event.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1ToolBar.C1ToolBar.LoadViewState(System.Object)">
            <summary>
            Loads the server control's previously saved view state to the control.
            </summary>
            <param name="savedState">An Object that contains the saved view state values for the control.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1ToolBar.C1ToolBar.SaveViewState">
            <summary>
            Saves the changes to a server control's view state to an Object.
            </summary>
            <returns>The Object that contains the view state changes.</returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1ToolBar.C1ToolBar.TrackViewState">
            <summary>
            Instructs the server control to track changes to its view state.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1ToolBar.C1ToolBar.System#Web#UI#IPostBackDataHandler#LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)">
            <summary>
            When implemented by a class, processes postback data for an ASP.NET server control.   
            </summary>
            <param name="postDataKey">The key identifier for the control.</param>
            <param name="postCollection">The collection of all incoming name values.</param>
            <returns>True if the server control's state changes as a result of the postback; otherwise,false.</returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1ToolBar.C1ToolBar.System#Web#UI#IPostBackDataHandler#RaisePostDataChangedEvent">
            <summary>
            When implemented by a class, signals the server control to notify the ASP.NET application that the state of the control has changed.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1ToolBar.C1ToolBar.System#Web#UI#IPostBackEventHandler#RaisePostBackEvent(System.String)">
            <summary>
             When implemented by a class, enables a server control to process an event raised when a form is posted to the server.
            </summary>
            <param name="eventArgument">A System.String that represents an optional event argument to be passed to the event handler.</param>
        </member>
        <member name="E:C1.Web.UI.Controls.C1ToolBar.C1ToolBar.ItemPropertyChanged">
            <summary>
            Fires when the toolbar item's property changed.
            </summary>
        </member>
        <member name="E:C1.Web.UI.Controls.C1ToolBar.C1ToolBar.ItemCheck">
            <summary>
            Fires when the check state of an item changes.  
            </summary>
            <remarks>
            The CheckBoxes property must be set to true in order for check boxes to be displayed. 
            This event will only be fired when a checkbox button item is checked. If the CheckOnClick property is set to true, 
            user clicks the checkbox button will trigger this client side event and when the AutoPostBack property is set to true, 
            page will post back to the server and then this server side event will be fired. 
            
            If the CheckOnClick property is set to true, 
            user presses the access key will also trigger this client side event and when the AutoPostBack property is set to true, 
            page will post back to the server and then this server side event will be fired.
            
            If the CheckOnClick property is set to false, only when user clicks the checked area before text will trigger this client side event and when the AutoPostBack property is set to true, 
            page to post back to the server and then this event will be fired.
            </remarks>
        </member>
        <member name="E:C1.Web.UI.Controls.C1ToolBar.C1ToolBar.ItemClick">
            <summary>
            Occurs when a ToolBar item in a C1ToolBar control is clicked. 
            </summary>
            <remarks>
            Use this event to determine which C1ToolBarItem was clicked. This event is triggered before the Click event. 
            The standard Click event is generated if the mouse is clicked on any party of the C1ToolBar control. 
            The ItemClick event is generated only when the mouse is clicked on the text or image of a C1ToolBarIItem object.
            </remarks>
        </member>
        <member name="E:C1.Web.UI.Controls.C1ToolBar.C1ToolBar.ItemSelect">
            <summary>
            Fires when an item is selected.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ToolBar.C1ToolBar.AllowDrag">
            <summary>
            Gets or sets a value that determines whether the toolbar control can be dragged to rearrange its position.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ToolBar.C1ToolBar.AllowMultipleSelectInControl">
            <summary>
            If false, only a single item can be selected in the all of the groups in the control.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ToolBar.C1ToolBar.AccessKey">
            <summary>
            Gets or sets the access key that allows you to quickly navigate to the Web server control.  
            </summary>
            <remarks>
            Use the AccessKey property to specify the keyboard shortcut for the Web server component. 
            This allows you to navigate quickly to the component by pressing the ALT key and the key for the specified character on the keyboard. 
            For example, setting the access key of a component to the string "D" indicates that the user can navigate to the component by pressing ALT+D.
            </remarks>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ToolBar.C1ToolBar.AutoPostBack">
            <summary>
            Sets or retrieves a value that indicates whether or not the control posts back to the server each time a user interacts with the control. 
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ToolBar.C1ToolBar.Enabled">
            <summary>
            Gets or sets if toolbar is Enabled.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ToolBar.C1ToolBar.EnableViewState">
            <summary>
            Gets or sets if ViewState is enabled.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ToolBar.C1ToolBar.Items">
            <summary>
            Gets a collection of C1ToolBarItem objects that represent all C1ToolBar items such as the ToolBarButton, Group, ToolBarCheckButton, ToolBarDropDownList, ToolBarSplitButton, and ToolBarSeparator. The Items property returns a C1ToolBarItemCollection object that contains a collection of C1ToolBarItem objects.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ToolBar.C1ToolBar.ShowRoundedCorner">
            <summary>
            Specifies whether the toolbar and its items show the rounded corner.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ToolBar.C1ToolBar.Width">
            <summary>
            Gets or sets the width of the control.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ToolBar.C1ToolBar.Height">
            <summary>
            Gets or Sets the Height of the Control.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ToolBar.C1ToolBar.Visible">
            <summary>
            Gets or sets if toolbar is Visible.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ToolBar.C1ToolBar.DisplayVisible">
            <summary>
            Gets or sets a value that indicates whether a server control is rendered as UI on the page.
            </summary>
            <remarks>
            Returns true if the control is visible on the page; otherwise false.
            </remarks>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ToolBar.C1ToolBar.VisualStylePath">
            <summary>
            Gets or sets the path to the visual style folders. The default value for this property is '~/C1WebControls/VisualStyles'
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ToolBar.C1ToolBar.VisualStyle">
            <summary>
            Gets or sets the visual style name that determines the overall appearance of the control.
            </summary>
            <remarks>
             This property allows you to quickly customize the appearance of the ToolBar so it matches the appearance of your application.
             The settings available include ArcticFox which is the default value, Office2007Black, Office2007Blue, Office2007Silver, Vista, and VistaBlack.
            </remarks>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ToolBar.C1ToolBar.WindowCollisionDetection">
            <summary>
            Determines whether or not toolbar dropdown list position will be adjusted to fit in window bounds.
            </summary>
            <remarks>
            Default value is false.
            </remarks>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ToolBar.C1ToolBar.ToolTip">
            <summary>
            Gets or sets the tooltip text that will be displayed when the mouse is over the item.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ToolBar.C1ToolBar.SelectionMode">
            <summary>
            Gets or sets the mode of selection for the items in the control.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ToolBar.C1ToolBar.SelectedItemsCount">
            <summary>
            The count of selected items.
            The property is hidden.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ToolBar.C1ToolBar.ScrollSettings">
            <summary>        
            Specifies the type of scroll settings that can be used on the C1Toolbar. 
            </summary>
            <remarks>
            Use this property to specify the scroll button types,
            scroll button position, scroll content height and width, scroll button orientation, and scroll step. 
            </remarks>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ToolBar.C1ToolBar.Dock">
            <summary>
            Defines which borders of the control are bound to the container.
            </summary>
            <remarks>
            Use the C1ToolBar.Dock property to define how a toolbar is automatically resized as its parent control is resized. 
            For example, setting dock to Left causes the toolbar to align itself with the left edges of its parent control and to resize as the parent control is resized.
            </remarks>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ToolBar.C1ToolBar.DockMode">
            <summary>
            Specifies the position and manner in which a control is docked.
            </summary>
            <remarks>
            Use the C1ToolBar.DockMode property to define the docking behavior of a toolbar control.
            By default, if the control is dragged over a C1ToolBarContainer control and the mouse is released, 
            then the control will be docked to the left edge of the C1ToolBarContainer. 
            </remarks>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ToolBar.C1ToolBar.PostBackReferenceString">
            <summary>
            Get the string value of Href's attribute.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ToolBar.C1ToolBar.EmbeddedVisualStyles">
            <summary>
            Returns string array with embedded Visual Styles names.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ToolBar.C1ToolBar.TagKey">
            <summary>
            Gets the control's tag key.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ToolBar.C1ToolBar.ScrollContainerClientID">
            <summary>
            Gets client id of ScrollContainer.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ToolBar.C1ToolBar.Orientation">
            <summary>
            Specifies whether the C1ToolBar is laid out horizontally or vertically. The default layout is horizontal.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ToolBar.C1ToolBar.C1#Web#UI#Controls#C1ToolBar#IC1ToolBarItemCollectionOwner#Index">
            <summary>
            The index of items.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ToolBar.C1ToolBar.DataBindings">
            <summary>
            Gets DataBindings property.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ToolBar.C1ToolBar.NeedPostback">
            <summary>
            Gets a value indicating whether the C1ToolBar is need post back or not.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ToolBar.C1ToolBar.ItemsTemplate">
            <summary>
            If specified, this template will be added to all toolbar items that will not have other defined templates.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ToolBar.C1ToolBar.ChildItemsTemplate">
            <summary>
            If specified, this template will be added to all toolbar items instead of top level toolbar items.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ToolBar.C1ToolBar.TopItemsTemplate">
            <summary>
            If specified, this template will be added to top level toolbar items.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ToolBar.C1ToolBar.OnClientItemFocus">
            <summary>
            Fires on client side when toolbar item is focused.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ToolBar.C1ToolBar.OnClientItemBlur">
            <summary>
            Fires on client side when toolbar item looses focus.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ToolBar.C1ToolBar.OnClientItemMouseOver">
            <summary>
            Fires on client side when mouse is over toolbar item.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ToolBar.C1ToolBar.OnClientItemMouseOut">
            <summary>
            Fires on client side when mouse becomes out of a toolbar item.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ToolBar.C1ToolBar.OnClientItemMouseDown">
            <summary>
            Fires on client side when mouse is down on toolbar item.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ToolBar.C1ToolBar.OnClientItemMouseUp">
            <summary>
            Fires on client side when mouse is up on toolbar item.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ToolBar.C1ToolBar.OnClientItemCheck">
            <summary>
            Fires on client side when toolbar item is checked.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ToolBar.C1ToolBar.OnClientItemClick">
            <summary>
            Fires on client side when toolbar item is clicked.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ToolBar.C1ToolBar.OnClientItemSelect">
            <summary>
            Fires on client side when toolbar item is selected.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ToolBar.C1ToolBar.OnClientDropDownOpen">
            <summary>
            Fires on client side when toolbar item's nested list is opened.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ToolBar.C1ToolBar.OnClientDropDownClose">
            <summary>
            Fires on client side when toolbar item's nested list is closed.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ToolBar.C1ToolBar.AutoGenerateDataBindings">
            <summary>
            Gets a value indicating whether or not the C1ToolBar generates DataBinds automatically.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ToolBar.C1ToolBar.C1#Web#UI#Controls#C1ToolBar#IC1ToolBarItemCollectionOwner#Owner">
            <summary>
            Gets or sets Owner property.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ToolBar.C1ToolBar.C1#Web#UI#Controls#C1ToolBar#IC1ToolBarItemCollectionOwner#Text">
            <summary>
            Gets or sets Text property.
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1ToolBar.C1ToolBarButton">
            <summary>
            Represents an ASP.NET toolbar button. The C1ToolBarButton object defines a toolbar button. 
            </summary>
            <remarks>
            A button can include text, image, or text and image. 
            Set text with the Text property, and an image with the Image property for each C1ToolBarButton object.
            The buttons can be added at design-time using the designer, programmatically using Add or Remove methods from the C1ToolBarItemCollection collection,
            or on the client-side by using the removeAt client-side method.
            </remarks>
        </member>
        <member name="T:C1.Web.UI.Controls.C1ToolBar.C1ToolBarItem">
            <summary>
            The C1ToolBarItem object represents link type items and provides the following three properties specific to link items: NavigateUrl property, Target property, and Text property. All toolbar items and child toolbar items are stored in the Items collection. C1ToolBar items can be a link item, button item, list item, group item, or separator item. 
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1ToolBar.C1ToolBarItemBase">
            <summary>
            Represents C1ToolBarItemBase, a base class for toolbar items and toolbar group.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1ToolBar.C1ToolBarItemBase.#ctor">
            <summary>
            C1ToolBarItemBase's constructor.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1ToolBar.C1ToolBarItemBase.AddAttributesToRender(System.Web.UI.HtmlTextWriter)">
            <summary>
            Adds HTML attributes and styles that need to be rendered to the specified HtmlTextWriterTag.
            </summary>
            <param name="writer">A HtmlTextWriter that represents the output stream to render HTML content on the client.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1ToolBar.C1ToolBarItemBase.LoadViewState(System.Object)">
            <summary>
            Loads the server control's previously saved view state to the control.
            </summary>
            <param name="state">An Object that contains the saved view state values for the control.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1ToolBar.C1ToolBarItemBase.SaveViewState">
            <summary>
            Saves the changes to a server control's view state to an Object.
            </summary>
            <returns>The Object that contains the view state changes.</returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1ToolBar.C1ToolBarItemBase.TrackViewState">
            <summary>
            Instructs the server control to track changes to its view state.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1ToolBar.C1ToolBarItemBase.System#Web#UI#IStateManager#LoadViewState(System.Object)">
            <summary>
            Loads the server control's previously saved view state to the control.
            </summary>
            <param name="state">An Object that contains the saved view state values for the control.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1ToolBar.C1ToolBarItemBase.System#Web#UI#IStateManager#SaveViewState">
            <summary>
            Saves the changes to a server control's view state to an Object.
            </summary>
            <returns>The Object that contains the view state changes.</returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1ToolBar.C1ToolBarItemBase.System#Web#UI#IStateManager#TrackViewState">
            <summary>
            Instructs the server control to track changes to its view state.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1ToolBar.C1ToolBarItemBase.items_OnCollectionChanged(System.Object,System.EventArgs)">
            <summary>
            fires after C1ToolBarItem's collection changed.
            </summary>
            <param name="sender">sender</param>
            <param name="e">C1ToolBarItemCollectionChangedEventArgs</param>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ToolBar.C1ToolBarItemBase.ShowRoundedCorner">
            <summary>
            Specifies whether the item shows the rounded corner.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ToolBar.C1ToolBarItemBase.Text">
            <summary>
            Gets or sets the text caption for the toolbar item.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ToolBar.C1ToolBarItemBase.Value">
            <summary>
            Gets or sets the value for the toolbar item.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ToolBar.C1ToolBarItemBase.Visible">
            <summary>
            Gets or Sets the Visibility of C1ToolBarItem.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ToolBar.C1ToolBarItemBase.DisplayVisible">
            <summary>
            Gets or sets if toolbar item is Visible.
            </summary>
            <remarks>
            This means that toolbar item html markup will be actually rendered into destination page but display style will be none.
            </remarks>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ToolBar.C1ToolBarItemBase.CssClass">
            <summary>
            Gets or sets the CssClass for the toolbar item.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ToolBar.C1ToolBarItemBase.ClientType">
            <summary>
            This property should be hidden
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ToolBar.C1ToolBarItemBase.Name">
            <summary>
            Gets or sets the name for the toolbar item.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ToolBar.C1ToolBarItemBase.ID">
            <summary>
            This property is hidden for design time properties editor.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ToolBar.C1ToolBarItemBase.Index">
            <summary>
            Gets index of the ToolBar item within parent owner.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ToolBar.C1ToolBarItemBase.StaticKey">
            <summary>
            Gets or Sets the StaticKey for C1ToolBarItem.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ToolBar.C1ToolBarItemBase.Enabled">
            <summary>
             Gets or sets a value indicating whether the ToolBar item is enabled.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ToolBar.C1ToolBarItemBase.System#Web#UI#IStateManager#IsTrackingViewState">
            <summary>
            Get a bool value that indicates whether the server control is saving changes to its view state.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ToolBar.C1ToolBarItemBase.C1#Web#UI#Controls#C1ToolBar#IC1ToolBarItemCollectionOwner#Items">
            <summary>
            Gets this item's inner items.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ToolBar.C1ToolBarItemBase.InnerItems">
            <summary>
            Gets this item's inner items.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ToolBar.C1ToolBarItemBase.C1#Web#UI#Controls#C1ToolBar#IC1ToolBarItemCollectionOwner#Owner">
            <summary>
            Gets this item's owner.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ToolBar.C1ToolBarItemBase.Owner">
            <summary>
            Gets this item's owner.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1ToolBar.C1ToolBarItem.#ctor">
            <summary>
            Creates a new instance of the C1ToolBarItem class
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1ToolBar.C1ToolBarItem.RenderContents(System.Web.UI.HtmlTextWriter)">
            <summary>
            Override RenderConntents method.
            </summary>
            <param name="writer"></param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1ToolBar.C1ToolBarItem.LoadPropertiesFromJsonData(System.Collections.Hashtable,System.Collections.Generic.List{C1.Web.UI.Controls.C1ToolBar.C1ToolBarItemPropertyChangedEventArgs})">
            <summary>
            Load properties's data from json's data.
            </summary>
            <param name="jsonItem">Json's data.</param>
            <param name="propertyChanged">The list of C1ToolBarItemPropertyChangedEventArgs</param>
            <returns>Return a bool value indicating whether the viewstate is changed or unchanged.</returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1ToolBar.C1ToolBarItem.AddAttributesToRender(System.Web.UI.HtmlTextWriter)">
            <summary>
            Adds HTML attributes and styles that need to be rendered to the specified HtmlTextWriterTag.
            </summary>
            <param name="writer">A HtmlTextWriter that represents the output stream to render HTML content on the client.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1ToolBar.C1ToolBarItem.IsFirstItem">
            <summary>
            IsFirstItem Method
            Indicates if this toolbar item is first in parent owner Items collection.
            </summary>
            <returns>This method returns true when toolbar item is first.</returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1ToolBar.C1ToolBarItem.IsLastItem">
            <summary>
            IsLastItem Method
            Indicates if this toolbar item is last in parent owner Items collection.
            </summary>
            <returns>This method returns true when toolbar item is last.</returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1ToolBar.C1ToolBarItem.IsOddItem">
            <summary>
            IsOddItem Method
            Indicates if this toolbar item is odd in parent owner Items collection.
            </summary>
            <returns>This method returns true when toolbar item is odd.</returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1ToolBar.C1ToolBarItem.CreateChildControls">
            <summary>
            Override CreateChildControls method.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1ToolBar.C1ToolBarItem.DataBind(C1.Web.UI.Controls.C1ToolBar.C1ToolBarItemBinding,System.Web.UI.IHierarchicalEnumerable,System.Object,System.Boolean)">
            <summary>
            Binds a data source to invoked server control and all its child controls with an option to raise the System.Web.UI.Control.DataBinding event.
            </summary>
            <param name="binding"></param>
            <param name="enumerable"></param>
            <param name="data"></param>
            <param name="auto"></param>
            <returns></returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1ToolBar.C1ToolBarItem.GetFieldValue(System.Object,System.ComponentModel.PropertyDescriptorCollection,System.String)">
            <summary>
            Gets field's value.
            </summary>
            <param name="data">The specified object.</param>
            <param name="propCollection">The specified PropertyDescriptorCollection.</param>
            <param name="propName">The specified property name.</param>
            <returns>The property's value.</returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1ToolBar.C1ToolBarItem.DataBindInternal(System.Web.UI.IHierarchicalEnumerable,C1.Web.UI.Controls.C1ToolBar.C1ToolBarItemBinding)">
            <summary>
            Internal DataBind method.
            </summary>
            <param name="enumerable">The specified IHierarchicalEnumerable.</param>
            <param name="parBinding">The specified C1ToolBarItemBinding.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1ToolBar.C1ToolBarItem.Clone">
            <summary>
            The object copy deeply.
            </summary>
            <returns>Object</returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1ToolBar.C1ToolBarItem.FindControl(System.String)">
            <summary>
            Override FindControl method
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ToolBar.C1ToolBarItem.IsTemplated">
            <summary>
            Gets whether the item is templated.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ToolBar.C1ToolBarItem.ClientSideHtml">
            <summary>
            The Item's inner html which has been created by client side.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ToolBar.C1ToolBarItem.ItemTemplate">
            <summary>
            Gets or sets the template that will be used for this toolbar item.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ToolBar.C1ToolBarItem.Container">
            <summary>
            Gets or set the container for C1ToolBarItem's template.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ToolBar.C1ToolBarItem.CausesValidation">
            <summary>
            Determines whether validation is performed when the item is clicked.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ToolBar.C1ToolBarItem.CommandArgument">
            <summary>
            Gets or sets an optional parameter passed to the ItemClick and ItemSelected events of the component along with the associated CommandName. 
            </summary>
            <remarks>
            Use the CommandArgument property to specify a parameter that complements the CommandName property. 
            The CommandArgument property complements the CommandName property by allowing you to provide additional information about the command to perform.
            For example, if you set the CommandName property to Sort and the CommandArgument property to Ascending, 
            you specify a command to sort in ascending order.
            </remarks>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ToolBar.C1ToolBarItem.CommandName">
            <summary>
            Gets or sets the command name associated with the Item passed to the ItemClick and ItemSelected events of the component. 
            </summary>
            <remarks>
            When you have multiple C1ToolBarButton items in the control use the CommandName property to specify the command name associated with each C1ToolBarButton item. 
            You can set the CommandName property with any string that identifies the command to perform. 
            You can then programmatically determine the command name of the C1ToolBarButton item and perform the appropriate actions.
            </remarks>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ToolBar.C1ToolBarItem.ShowRoundedCorner">
            <summary>
            Specifies whether the itme shows the rounded corner.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ToolBar.C1ToolBarItem.Text">
            <summary>
            Gets or sets the text caption for the toolbar item.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ToolBar.C1ToolBarItem.ToolTip">
            <summary>
            Gets or sets the ToolTip text displayed when the mouse pointer rests over the item.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ToolBar.C1ToolBarItem.AccessKey">
            <summary>
            String representing keyboard shortcut to call the click event on this item.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ToolBar.C1ToolBarItem.Index">
            <summary>
            Gets index of the ToolBar item within parent owner.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ToolBar.C1ToolBarItem.NavigateUrl">
            <summary>
            Gets or sets the URL to link to when the hyperlink is clicked in the item. Default value is empty string.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ToolBar.C1ToolBarItem.Target">
            <summary>
            Gets or sets the target window or frame to display the Web page content linked to when the toolbar item is clicked or enter key pressed. Default value is empty string.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ToolBar.C1ToolBarItem.ImageUrl">
            <summary>
            Gets or sets the URL path to the image that will be rendered into this item.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ToolBar.C1ToolBarItem.DisabledImageUrl">
            <summary>
            Gets or sets the URL path to the image that will be displayed for the disabled item.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ToolBar.C1ToolBarItem.SelectedImageUrl">
            <summary>
            Gets or sets the URL path that will be displayed for the selected item.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ToolBar.C1ToolBarItem.MouseOverImageUrl">
            <summary>
            Gets or sets the URL path to the image that will displayed when the mouse is over the item.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ToolBar.C1ToolBarItem.SelectedHoverImageUrl">
            <summary>
            Gets or sets the URL path to the image that will be displayed when the mouse hovers over the selected item.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ToolBar.C1ToolBarItem.SelectedDisabledImageUrl">
            <summary>
            Gets or sets the URL path to the image that will be displayed when the item is disabled and selected.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ToolBar.C1ToolBarItem.TextImageRelation">
            <summary>
            Gets or sets flow side for the image. See ImageUrl.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ToolBar.C1ToolBarItem.Enabled">
            <summary>
             Gets or sets a value indicating whether the ToolBar item is enabled.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ToolBar.C1ToolBarItem.Selected">
            <summary>
            Gets or sets a value indicating whether the current item is selected.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ToolBar.C1ToolBarItem.ImageContainer">
            <summary>
            Gets image's container of the Toolbar item.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ToolBar.C1ToolBarItem.TextContainer">
            <summary>
            Gets text's container of the Toolbar item.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ToolBar.C1ToolBarItem.TagKey">
            <summary>
            Gets the System.Web.UI.HtmlTextWriterTag value that corresponds to this Web
            server control.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ToolBar.C1ToolBarItem.ToolBar">
            <summary>
            Gets C1ToolBar object of the ToolBar item.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1ToolBar.C1ToolBarButton.#ctor">
            <summary>
            C1ToolBarButton's constructor.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ToolBar.C1ToolBarButton.ClientType">
            <summary>
            This property should be hidden
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1ToolBar.C1ToolBarCheckButton">
            <summary>
            C1ToolBarCheckButton defines a toolbar check button on a toolbar. 
            </summary>
            <remarks>
            By default, the C1ToolBarCheckButton includes an image for the rectangular box and text that indicates a choice a user can make by selecting the button. 
            Check buttons enable users to choose from one or more options that are not mutually exclusive. 
            The C1ToolBarCheckButton changes between two states when clicked.
            </remarks>
        </member>
        <member name="M:C1.Web.UI.Controls.C1ToolBar.C1ToolBarCheckButton.#ctor">
            <summary>
            C1ToolBarCheckButton's constructor
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1ToolBar.C1ToolBarCheckButton.AddAttributesToRender(System.Web.UI.HtmlTextWriter)">
            <summary>
            Adds HTML attributes and styles that need to be rendered to the specified HtmlTextWriterTag.
            </summary>
            <param name="writer">A HtmlTextWriter that represents the output stream to render HTML content on the client.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1ToolBar.C1ToolBarCheckButton.CreateChildControls">
            <summary>
            override CreateChildControls method.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1ToolBar.C1ToolBarCheckButton.LoadPropertiesFromJsonData(System.Collections.Hashtable,System.Collections.Generic.List{C1.Web.UI.Controls.C1ToolBar.C1ToolBarItemPropertyChangedEventArgs})">
            <summary>
            Load properties's value from josn's data.
            </summary>
            <param name="jsonItem">Josn'data.</param>
            <param name="propertyChanged">The list of C1ItemPropertyChangedEventArgs.</param>
            <returns>Return a bool value indicating whether the viewstate is changed or unchanged.</returns>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ToolBar.C1ToolBarCheckButton.Checked">
            <summary>
            Gets or sets a value indicating whether the C1ToolBarCheckButton item is pressed or not pressed.
            </summary>
            <remarks>
             If true, the button includes a checkmark and it appears pressed. 
             If false, the button does not include a check mark and it appears not pressed. 
            </remarks>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ToolBar.C1ToolBarCheckButton.CheckOnClick">
            <summary>
            Gets or sets a value indicating whether the C1ToolBarCheckButton should automatically appear pressed in and not pressed in when clicked.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ToolBar.C1ToolBarCheckButton.CheckState">
            <summary>
            Gets or sets a value indicating whether the C1ToolBarCheckButton is in the pressed or not pressed state by default, or is in an indeterminate state.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ToolBar.C1ToolBarCheckButton.ClientType">
            <summary>
            This property should be hidden
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1ToolBar.C1ToolBarConstant.ClientType">
            <summary>
            All ClientType Constant.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1ToolBar.C1ToolBarConstant.ClientType.CONST_C1TOOLBAR">
            <summary>
            Value: <value>C1ToolBar</value>
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1ToolBar.C1ToolBarConstant.ClientType.CONST_C1TOOLBARITEM">
            <summary>
            Value: <value>C1ToolBarItem</value>
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1ToolBar.C1ToolBarConstant.ClientType.CONST_C1TOOLBARBUTTON">
            <summary>
            Value: <value>C1ToolBarButton</value>
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1ToolBar.C1ToolBarConstant.ClientType.CONST_C1TOOLBARCHECKBUTTON">
            <summary>
            Value: <value>C1ToolBarCheckButton</value>
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1ToolBar.C1ToolBarConstant.ClientType.CONST_C1TOOLBARDROPDOWNLIST">
            <summary>
            Value: <value>C1ToolBarDropDownList</value>
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1ToolBar.C1ToolBarConstant.ClientType.CONST_C1TOOLBARGROUP">
            <summary>
            Value: <value>C1ToolBarGroup</value>
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1ToolBar.C1ToolBarConstant.ClientType.CONST_C1TOOLBARSEPARATOR">
            <summary>
            Value: <value>C1ToolBarSeparator</value>
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1ToolBar.C1ToolBarConstant.ClientType.CONST_C1TOOLBARSPLITBUTTON">
            <summary>
            Value: <value>C1ToolBarSplitButton</value>
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1ToolBar.C1ToolBarConstant.C1ToolBar">
            <summary>
            All constants in C1ToolBar class.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1ToolBar.C1ToolBarConstant.C1ToolBar.CONST_SCROLLPANEL_ID">
            <summary>
            Value: <value>ScrollPanel</value>
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1ToolBar.C1ToolBarConstant.C1ToolBar.CONST_FLOATER_ID">
            <summary>
            Value: <value>floater</value>
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1ToolBar.C1ToolBarConstant.C1ToolBar.CONST_NOROUNDEDCORNER_ID">
            <summary>
            Value: <value>noroundedcorner</value>
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1ToolBar.C1ToolBarConstant.C1ToolBar.CONST_CONTAINER_ID">
            <summary>
            Value: <value>toolbar-container</value>
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1ToolBar.C1ToolBarConstant.C1ToolBar.CONST_OUTER_ID">
            <summary>
            Value: <value>toolbar-outer</value>
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1ToolBar.C1ToolBarConstant.C1ToolBar.CONST_INNER_ID">
            <summary>
            Value: <value>toolbar-inner</value>
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1ToolBar.C1ToolBarConstant.C1ToolBar.CONST_CONTENT_ID">
            <summary>
            Value: <value>toolbar-content</value>
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1ToolBar.C1ToolBarConstant.C1ToolBarCheckButton">
            <summary>
            All Constants in C1ToolBarCheckButton class.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1ToolBar.C1ToolBarConstant.C1ToolBarCheckButton.CONST_ITEM_CHECKBUTTONIMAGE_ID">
            <summary>
             Value: <value>item-checkbuttonimage</value>
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1ToolBar.C1ToolBarConstant.C1ToolBarGroup.CONST_CONTAINER_ID">
            <summary>
            Value: <value>group-container</value>
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1ToolBar.C1ToolBarConstant.C1ToolBarGroup.CONST_OUNTER_ID">
            <summary>
            Value: <value>group-outer</value>
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1ToolBar.C1ToolBarConstant.C1ToolBarGroup.CONST_INNER_ID">
            <summary>
            Value: <value>group-inner</value>
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1ToolBar.C1ToolBarConstant.C1ToolBarGroup.CONST_CONTENT_ID">
            <summary>
            Value: <value>group-content</value>
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1ToolBar.C1ToolBarConstant.C1ToolBarGroup.CONST_NESTEDITEMS_ID">
            <summary>
            Value: <value>group-nested-items</value>
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1ToolBar.C1ToolBarConstant.C1ToolBarItem">
            <summary>
            All constants in C1ToolBarItem class.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1ToolBar.C1ToolBarConstant.C1ToolBarItem.CONST_TEXTNODE_ID">
            <summary>
            Value: <value>item-text</value>
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1ToolBar.C1ToolBarConstant.C1ToolBarItem.CONST_IMAGENODE_ID">
            <summary>
            Value: <value>item-image</value>
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1ToolBar.C1ToolBarConstant.C1ToolBarItem.CONST_CONTENTELEMENT_ID">
            <summary>
            Value: <value>item-content</value>
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1ToolBar.C1ToolBarConstant.C1ToolBarItem.CONST_CONTAINERELEMENT_ID">
            <summary>
            Value: <value>item-container</value>
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1ToolBar.C1ToolBarConstant.C1ToolBarItem.CONST_OUTERELEMENT_ID">
            <summary>
            Value: <value>item-outer</value>
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1ToolBar.C1ToolBarConstant.C1ToolBarItem.CONST_INNERELEMENT_ID">
            <summary>
            Value: <value>item-inner</value>
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1ToolBar.C1ToolBarConstant.C1ToolBarDropDownBase">
            <summary>
            All constants in C1ToolBarDropDownBase class.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1ToolBar.C1ToolBarConstant.C1ToolBarDropDownBase.CONST_ARROW_ID">
            <summary>
            Value: <value>arrow</value>
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1ToolBar.C1ToolBarConstant.C1ToolBarDropDownBase.CONST_DROPDOWN_CONTAINER_ID">
            <summary>
            Value: <value>dropdown-container</value>
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1ToolBar.C1ToolBarConstant.C1ToolBarDropDownBase.CONST_LIST_CONTAINER_ID">
            <summary>
            Value: <value>list-container</value>
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1ToolBar.C1ToolBarConstant.C1ToolBarDropDownBase.CONST_ITEM_LIST_CONTAINER_ID">
            <summary>
            Value: <value>item-list-container</value>
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1ToolBar.C1ToolBarConstant.C1ToolBarDropDownBase.CONST_ITEMS_CONTAINER_ID">
            <summary>
            Value: <value>_items-container</value>
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1ToolBar.C1ToolBarConstant.C1ToolBarScrollPanel">
            <summary>
            All constants in C1ToolBarScrollPanel class.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1ToolBar.C1ToolBarConstant.C1ToolBarScrollPanel.CONST_FLOWPANEL_ID">
            <summary>
            Value: <value>FlowPanel</value>
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1ToolBar.C1ToolBarConstant.CSS">
            <summary>
            All definitions CSS class name.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1ToolBar.C1ToolBarConstant.CSS.CONST_C1TEMPLATE">
            <summary>
            Value: <value>C1tbTemplate</value>
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1ToolBar.C1ToolBarConstant.CSS.CONST_C1NOROUNDEDCORNER">
            <summary>
            Value: <value>C1tbNoRoundedCorner</value>
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1ToolBar.C1ToolBarConstant.CSS.CONST_C1NOROUNDEDCORNER_C1FOCUS">
            <summary>
            Value: <value>C1tbNoRoundedCorner-Focus</value>
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1ToolBar.C1ToolBarConstant.CSS.CONST_C1LISTITEM_C1NOROUNDEDCORNER_C1SELECTED">
            <summary>
            Value: <value>C1tbListItem-NoRoundedCorner-Selected</value>
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1ToolBar.C1ToolBarConstant.CSS.CONST_C1TOOLBAR">
            <summary>
            Value: <value>C1ToolBar</value>
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1ToolBar.C1ToolBarConstant.CSS.CONST_C1FLOATER">
            <summary>
            Value: <value>C1tbFloater</value>
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1ToolBar.C1ToolBarConstant.CSS.CONST_C1CONTAINER">
            <summary>
            Value: <value>C1tbContainer</value>
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1ToolBar.C1ToolBarConstant.CSS.CONST_C1OUTER">
            <summary>
            Value: <value>C1tbOuter</value>
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1ToolBar.C1ToolBarConstant.CSS.CONST_C1INNER">
            <summary>
            Value: <value>C1tbInner</value>
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1ToolBar.C1ToolBarConstant.CSS.CONST_C1CONTENT">
            <summary>
            Value: <value>C1tbContent</value>
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1ToolBar.C1ToolBarConstant.CSS.CONST_C1LIST">
            <summary>
            Value: <value>C1tbList</value>
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1ToolBar.C1ToolBarConstant.CSS.CONST_C1LISTITEM">
            <summary>
            Value: <value>C1tbListItem</value>
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1ToolBar.C1ToolBarConstant.CSS.CONST_C1LISTITEM_C1NOROUNDEDCORNER">
            <summary>
            Value: <value>C1tbListItem-NoRoundedCorner</value>
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1ToolBar.C1ToolBarConstant.CSS.CONST_C1FIRSTITEM">
            <summary>
            Value: <value>C1tbFirstItem</value>
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1ToolBar.C1ToolBarConstant.CSS.CONST_C1LASTITEM">
            <summary>
            Value: <value>C1tbLastItem</value>
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1ToolBar.C1ToolBarConstant.CSS.CONST_C1ALTERNATINGITEMS">
            <summary>
            Value: <value>C1tbAlternatingItems</value>
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1ToolBar.C1ToolBarConstant.CSS.CONST_C1FIRSTITEM_C1SELECTED">
            <summary>
            Value: <value>C1tbFirstItem-Selected</value>
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1ToolBar.C1ToolBarConstant.CSS.CONST_C1LASTITEM_C1SELECTED">
            <summary>
            Value: <value>C1tbLastItem-Selected</value>
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1ToolBar.C1ToolBarConstant.CSS.CONST_C1ALTERNATINGITEMS_C1SELECTED">
            <summary>
            Value: <value>C1tbAlternatingItems-Selected</value>
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1ToolBar.C1ToolBarConstant.CSS.CONST_C1FIRSTITEM_C1LASTITEM">
            <summary>
            Value: <value>C1tbFirstItem-LastItem</value>
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1ToolBar.C1ToolBarConstant.CSS.CONST_C1FIRSTITEM_C1LASTITEM_C1SELECTED">
            <summary>
            Value: <value>C1tbFirstItem-LastItem-Selected</value>
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1ToolBar.C1ToolBarConstant.CSS.CONST_C1LINK">
            <summary>
            Value: <value>C1tbLink</value>
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1ToolBar.C1ToolBarConstant.CSS.CONST_C1HEADING">
            <summary>
            Value: <value>C1tbHeading</value>
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1ToolBar.C1ToolBarConstant.CSS.CONST_C1TEXTNODE">
            <summary>
            Value: <value>C1tbTextNode</value>
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1ToolBar.C1ToolBarConstant.CSS.CONST_C1IMAGENODE">
            <summary>
            Value: <value>C1tbImageNode</value>
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1ToolBar.C1ToolBarConstant.CSS.CONST_C1CHECKBUTTONIMAGE">
            <summary>
            Value: <value>C1tbCheckButtonImage</value>
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1ToolBar.C1ToolBarConstant.CSS.CONST_C1HOVER">
            <summary>
            Value: <value>C1tbHover</value>
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1ToolBar.C1ToolBarConstant.CSS.CONST_C1FOCUS">
            <summary>
            Value: <value>C1tbFocus</value>
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1ToolBar.C1ToolBarConstant.CSS.CONST_C1LISTITEM_C1FOCUS">
            <summary>
            Value: <value>C1tbListItem-Focus</value>
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1ToolBar.C1ToolBarConstant.CSS.CONST_C1ACTIVE">
            <summary>
            Value: <value>C1tbActive</value>
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1ToolBar.C1ToolBarConstant.CSS.CONST_C1SELECTED">
            <summary>
            Value: <value>C1tbSelected</value>
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1ToolBar.C1ToolBarConstant.CSS.CONST_C1LISTITEM_C1SELECTED">
            <summary>
            Value: <value>C1tbListItem-Selected</value>
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1ToolBar.C1ToolBarConstant.CSS.CONST_C1SELECTED_C1DISABLED">
            <summary>
            Value: <value>C1tbSelected-Disabled</value>
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1ToolBar.C1ToolBarConstant.CSS.CONST_C1OPENED">
            <summary>
            Value: <value>C1tbOpened</value>
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1ToolBar.C1ToolBarConstant.CSS.CONST_C1CLOSED">
            <summary>
            Value: <value>C1tbClosed</value>
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1ToolBar.C1ToolBarConstant.CSS.CONST_C1DISABLED">
            <summary>
            Value: <value>C1tbDisabled</value>
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1ToolBar.C1ToolBarConstant.CSS.CONST_C1CHECKED">
            <summary>
            Value: <value>C1tbChecked</value>
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1ToolBar.C1ToolBarConstant.CSS.CONST_C1INDETERMINATE">
            <summary>
            Value: <value>C1tbIndeterminate</value> 
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1ToolBar.C1ToolBarConstant.CSS.CONST_C1CHECKBUTTON">
            <summary>
            Value: <value>C1tbCheckButton</value>
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1ToolBar.C1ToolBarConstant.CSS.CONST_C1CHECKBUTTONCONTIANER">
            <summary>
            Value: <value>C1tbCheckButtonContianer</value>
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1ToolBar.C1ToolBarConstant.CSS.CONST_C1DROPDOWNLIST">
            <summary>
            Value: <value>C1tbDropDownList</value>
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1ToolBar.C1ToolBarConstant.CSS.CONST_C1DROPDOWNLIST_C1NoRoundedCorner">
            <summary>
            Value: <value>C1tbDropDownList-NoRoundedCorner</value>
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1ToolBar.C1ToolBarConstant.CSS.CONST_C1GROUP">
            <summary>
            Value: <value>C1tbGroup</value>
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1ToolBar.C1ToolBarConstant.CSS.CONST_C1TOPPADDINGGROUP">
            <summary>
            Value: <value>C1tbTopPaddingGroup</value>
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1ToolBar.C1ToolBarConstant.CSS.CONST_C1BOTTOMPADDINGGROUP">
            <summary>
            Value: <value>C1tbBottomPaddingGroup</value>
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1ToolBar.C1ToolBarConstant.CSS.CONST_C1SEPARATOR">
            <summary>
            Value: <value>C1tbSeparator</value>
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1ToolBar.C1ToolBarConstant.CSS.CONST_C1SPLITBUTTON">
            <summary>
            Value: <value>C1tbSplitButton</value>
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1ToolBar.C1ToolBarConstant.CSS.CONST_C1SPLITBUTTON_C1NOROUNDEDCORNER">
            <summary>
            Value: <value>C1tbSplitButton-NoRoundedCorner</value>
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1ToolBar.C1ToolBarConstant.CSS.CONST_C1SPLITBUTTON_C1SELECTED">
            <summary>
            Value: <value>C1tbSplitButton-Selected</value>
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1ToolBar.C1ToolBarConstant.CSS.CONST_C1SPLITBUTTON_C1NOROUNDEDCORNER_C1SELECTED">
            <summary>
            Value: <value>C1tbSplitButton-NoRoundedCorner-Selected</value>
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1ToolBar.C1ToolBarConstant.CSS.CONST_C1DROPDOWNLIST_C1SELECTED">
            <summary>
            Value: <value>C1tbDropDownList-Selected</value>
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1ToolBar.C1ToolBarConstant.CSS.CONST_C1DROPDOWNLIST_C1NOROUNDEDCORNER_C1SELECTED">
            <summary>
            Value: <value>C1tbDropDownList-NoRoundedCorner-Selected</value>
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1ToolBar.C1ToolBarConstant.CSS.CONST_C1NESTEDLISTCONTAINER">
            <summary>
            Value: <value>C1tbNestedListContainer</value>
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1ToolBar.C1ToolBarConstant.CSS.CONST_C1NESTEDLIST">
            <summary>
            Value: <value>C1tbNestedList</value>
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1ToolBar.C1ToolBarConstant.CSS.CONST_C1DROPDOWN_C1NESTEDLIST">
            <summary>
            C1tbDropDown-NestedList
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1ToolBar.C1ToolBarConstant.CSS.CONST_C1HORIZONTAL_SUFFIX">
            <summary>
            Value: <value>-Horizontal</value>
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1ToolBar.C1ToolBarConstant.CSS.CONST_C1HORIZONTAL">
            <summary>
            Value: <value>C1ToolBar-Horizontal</value>
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1ToolBar.C1ToolBarConstant.CSS.CONST_C1VERTICAL_SUFFIX">
            <summary>
            Value: <value>-Vertical</value>
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1ToolBar.C1ToolBarConstant.CSS.CONST_C1VERTICAL">
            <summary>
            Value: <value>C1ToolBar-Vertical</value>
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1ToolBar.C1ToolBarConstant.CSS.CONST_C1TOOLBARITEMARROW">
            <summary>
            Value: <value>C1tbToolBarItemArrow</value>
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1ToolBar.C1ToolBarConstant.CSS.CONST_C1DROPDOWNCONTAINER">
            <summary>
            Value: <value>C1tbDropDownContainer</value>
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1ToolBar.C1ToolBarConstant.CSS.CONST_C1DROPDOWNLIST_NO_ARROW">
            <summary>
            Value: <value>C1tbDropDownListNoArrow</value>
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1ToolBar.C1ToolBarConstant.CSS.CONST_C1IMAGEBEFORETEXT">
            <summary>
            Value: <value>C1tbImageBeforeText</value> 
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1ToolBar.C1ToolBarConstant.CSS.CONST_C1TEXTBEFOREIMAGE">
            <summary>
            Value: <value>C1tbTextBeforeImage</value> 
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1ToolBar.C1ToolBarConstant.CSS.CONST_C1IMAGEABOVETEXT">
            <summary>
            Value: <value>C1tbImageAboveText</value> 
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1ToolBar.C1ToolBarConstant.CSS.CONST_C1TEXTABOVEIMAGE">
            <summary>
            Value: <value>C1tbTextAboveImage</value> 
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1ToolBar.C1ToolBarConstant.CSS.CONST_C1SCROLLCONTAINER">
            <summary>
            Value: <value>C1tbScrollContainer</value> 
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1ToolBar.C1ToolBarConstant.CSS.CONST_C1IMAGETEXTBLANK">
            <summary>
            Value: <value>C1tbImageTextBlank</value> 
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1ToolBar.C1ToolBarConstant.CSS.CSSGroup">
            <summary>
            CSS aggregate class name.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1ToolBar.C1ToolBarConstant.CSS.CSSGroup.ToString">
            <summary>
            Converts the value of this instance to a System.String.
            </summary>
            <returns></returns>
        </member>
        <member name="T:C1.Web.UI.Controls.C1ToolBar.C1ToolBarDropDownBase">
            <summary>
            Is a base class that provides common properties and functionality for all items in C1ToolBar's object model. 
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1ToolBar.C1ToolBarDropDownBase.#ctor">
            <summary>
            C1ToolBarDropDownBase's constructor
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1ToolBar.C1ToolBarDropDownBase.UnSelectedAllItems">
            <summary>
            Set all items unselected.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1ToolBar.C1ToolBarDropDownBase.items_OnCollectionChanged(System.Object,System.EventArgs)">
            <summary>
            Fires after the C1ToolBarItemCollection's item changed.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1ToolBar.C1ToolBarDropDownBase.CreateChildControls">
            <summary>
            Override CreateChildControls method.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1ToolBar.C1ToolBarDropDownBase.FindControl(System.String)">
            <summary>
            Override FindControl method
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ToolBar.C1ToolBarDropDownBase.Items">
            <summary>
            Gets or sets the collection of items when the dropdown button is clicked.  Every item is a C1ToolBarButton.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ToolBar.C1ToolBarDropDownBase.ExpandAnimation">
            <summary>
            Gets or sets the type of expand animation effect. 
            </summary>
            <remarks>
            Use this property to specify the animation effect when the user opens the dropdown object.
            </remarks>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ToolBar.C1ToolBarDropDownBase.ExpandDuration">
            <summary>
            Gets or sets the animation duration. 
            </summary>
            <remarks>
            This property can be used to specify how long the dropdown items in the C1ToolBar will be open.
            </remarks>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ToolBar.C1ToolBarDropDownBase.ExpandDelay">
            <summary>
            Gets or sets the expand delay in milliseconds before the sub toolbar item starts to popup. The default value is 100ms.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ToolBar.C1ToolBarDropDownBase.CollapseAnimation">
            <summary>
            Gets or sets the type of collapse animation effect. 
            </summary>
            <remarks>
            The collapse animation effect occurs while the dropdown items in the C1ToolBar close.
            </remarks>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ToolBar.C1ToolBarDropDownBase.CollapseDuration">
            <summary>
            Gets or sets the animation duration.
            </summary>
            <remarks>
            This property can be used to specify how long the dropdown items in the C1ToolBar will be hidden.
            </remarks>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ToolBar.C1ToolBarDropDownBase.CollapseDelay">
            <summary>
            Gets or sets the collapse delay in milliseconds before the sub toolbar item starts hiding. Default value is 100ms.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ToolBar.C1ToolBarDropDownBase.CollapseEasing">
            <summary>
            Gets or sets the transition effect when the dropdown toolbar items start collapsing or stops collapsing. 
            </summary>
            <remarks>
            To use a transition effect, the CollapseAnimation or ExpandAnimation property must be set to an animation type before you set the CollapseEasing property or ExpandEasing property.
            The default transition effect is EaseLinear. This effect moves smoothly from start to end without acceleration or deceleration.
            </remarks>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ToolBar.C1ToolBarDropDownBase.ExpandEasing">
            <summary>
            Gets or sets the transition effect when the dropdown toolbar items start expanding or stops expanding. 
            </summary>
            <remarks>
            To use a transition effect, the CollapseAnimation or ExpandAnimation property must be set to an animation type before you set the CollapseEasing property or ExpandEasing property. 
            The default transition effect is EaseLinear. This effect moves smoothly from start to end without acceleration or deceleration.
            </remarks>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ToolBar.C1ToolBarDropDownBase.SelectedIndex">
            <summary>
            Gets the index of selected item.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ToolBar.C1ToolBarDropDownBase.SelectedIndexes">
            <summary>
            Gets the index of selected items.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ToolBar.C1ToolBarDropDownBase.Selected">
            <summary>
            This property is hidden.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ToolBar.C1ToolBarDropDownBase.SelectionMode">
            <summary>
            Gets or sets the mode of selection for the items in the control.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ToolBar.C1ToolBarDropDownBase.SelectedItemsCount">
            <summary>
            The count of selected items.
            The property is hidden.
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1ToolBar.C1ToolBarDropDownList">
            <summary>
            
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1ToolBar.C1ToolBarDropDownList.#ctor">
            <summary>
            Creates a new instance of the C1ToolBarDropDownList class.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1ToolBar.C1ToolBarDropDownList.AddAttributesToRender(System.Web.UI.HtmlTextWriter)">
            <summary>
            Adds HTML attributes and styles that need to be rendered to the specified HtmlTextWriterTag.
            </summary>
            <param name="writer">A HtmlTextWriter that represents the output stream to render HTML content on the client.</param>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ToolBar.C1ToolBarDropDownList.ShowDropDownArrow">
            <summary>
            Gets or sets a value indicating whether an arrow is displayed on the C1ToolBarDropDownList item,
            which indicates that further options are available in a drop-down list.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ToolBar.C1ToolBarDropDownList.ClientType">
            <summary>
            This property should be hidden
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1ToolBar.CheckState">
            <summary>
            Specifies the state of a toolbar control that can be checked, unchecked, 
            or set to an indeterminate state.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1ToolBar.CheckState.Unchecked">
            <summary>
            The control is unchecked.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1ToolBar.CheckState.Checked">
            <summary>
            The control is checked.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1ToolBar.CheckState.Indeterminate">
            <summary>
            The control is indeterminate. An indeterminate control generally has a shaded appearance.
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1ToolBar.DockStyle">
            <summary>
            Specifies the position and manner in which a control is docked.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1ToolBar.DockStyle.None">
            <summary>
            The control is not docked.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1ToolBar.DockStyle.Top">
            <summary>
            The control's top edge is docked to the top of its containing control.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1ToolBar.DockStyle.Bottom">
            <summary>
            The control's bottom edge is docked to the bottom of its containing control.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1ToolBar.DockStyle.Left">
            <summary>
            The control's left edge is docked to the left edge of its containing control.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1ToolBar.DockStyle.Right">
            <summary>
            The control's right edge is docked to the right edge of its containing control.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1ToolBar.DockStyle.Fill">
            <summary>
            All the control's edges are docked to the all edges of its containing 
            control and sized appropriately.
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1ToolBar.DockMode">
            <summary>
            Specifies the position and manner in which a control is docked.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1ToolBar.DockMode.ByDefault">
            <summary>
            The control is able to be both docked and undocked.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1ToolBar.DockMode.Docked">
            <summary>
            The control will be docked when control is over the dockable zone.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1ToolBar.DockMode.Floating">
            <summary>
            The control will always be floating.
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1ToolBar.SelectionMode">
            <summary>
            Specifies the selection mode of the items in a group of the control.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1ToolBar.SelectionMode.None">
            <summary>
            No item can be selected in the group.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1ToolBar.SelectionMode.One">
            <summary>
            One item can be selected in the group.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1ToolBar.SelectionMode.MultiSelect">
            <summary>
            One or more items can be selected in the group.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1ToolBar.SelectionMode.AllowUnselectItem">
            <summary>
            Can unselect the selected item.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1ToolBar.SelectionMode.AlwaysHasSelected">
            <summary>
            Always has selected item.
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1ToolBar.DisplayStyle">
            <summary>
            Specifies whether the image and text are rendered.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1ToolBar.DisplayStyle.Text">
            <summary>
            The text is rendered only.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1ToolBar.DisplayStyle.Image">
            <summary>
            The image is rendered only.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1ToolBar.DisplayStyle.ImageAndText">
            <summary>
            The image and text are rendered.
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1ToolBar.C1ToolBarGroup">
            <summary>
            The C1ToolBarGroup object defines a group of toolbar elements. 
            </summary>
            <remarks>
            C1ToolBarGroups are typically used when a group of functions are mutually exclusive. 
            That is, only one of the functions represented by the group of buttons can be on at a time.
            </remarks>
        </member>
        <member name="M:C1.Web.UI.Controls.C1ToolBar.C1ToolBarGroup.#ctor">
            <summary>
            Creates a new instance of the C1ToolBarGroup class.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1ToolBar.C1ToolBarGroup.UnSelectedAllItems">
            <summary>
            Set all items unselected.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1ToolBar.C1ToolBarGroup.AddAttributesToRender(System.Web.UI.HtmlTextWriter)">
            <summary>
            Adds HTML attributes and styles that need to be rendered to the specified HtmlTextWriterTag.
            </summary>
            <param name="writer">A HtmlTextWriter that represents the output stream to render HTML content on the client.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1ToolBar.C1ToolBarGroup.CreateChildControls">
            <summary>
            Override CreateChildControls method.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1ToolBar.C1ToolBarGroup.items_OnCollectionChanged(System.Object,System.EventArgs)">
            <summary>
            fire after C1ToolBarItemCollection's item changed
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1ToolBar.C1ToolBarGroup.LoadPropertiesFromJsonData(System.Collections.Hashtable,System.Collections.Generic.List{C1.Web.UI.Controls.C1ToolBar.C1ToolBarItemPropertyChangedEventArgs})">
            <summary>
            Load properties's data from json's data.
            </summary>
            <param name="jsonItem">Json's data.</param>
            <param name="propertyChanged">The list of C1ToolBarItemPropertyChangedEventArgs</param>
            <returns>Return a bool value indicating whether the viewstate is changed or unchanged.</returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1ToolBar.C1ToolBarGroup.FindControl(System.String)">
            <summary>
            Override FindControl method
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ToolBar.C1ToolBarGroup.Enabled">
            <summary>
            Gets or sets a value indicating whether the group is enabled.
            </summary>        
        </member>
        <member name="P:C1.Web.UI.Controls.C1ToolBar.C1ToolBarGroup.Items">
            <summary>
            Gets or sets the item that is located at a specified index of the collection.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ToolBar.C1ToolBarGroup.Text">
            <summary>
            Gets or sets the text caption for the toolbar item.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ToolBar.C1ToolBarGroup.ShowRoundedCorner">
            <summary>
            Specifies whether the group and its itmes show the rounded corner.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ToolBar.C1ToolBarGroup.SelectionMode">
            <summary>
            Gets or sets the mode of selection for the items in the control.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ToolBar.C1ToolBarGroup.SelectedItemsCount">
            <summary>
            The count of selected items.
            The property is hidden.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ToolBar.C1ToolBarGroup.ClientType">
            <summary>
            This property should be hidden
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ToolBar.C1ToolBarGroup.TagKey">
            <summary>
            Override control's tag.
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1ToolBar.C1ToolBarItemBinding">
            <summary>
            Represents a C1ToolBarItemBinding class to specify 
            the relationship of the data field and C1ToolBarItem's properties.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1ToolBar.C1ToolBarItemBinding.#ctor">
            <summary>
            Creates new instance of the C1ToolBarItemBinding class.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1ToolBar.C1ToolBarItemBinding.#ctor(System.String)">
            <summary>
            Creates new instance of the C1ToolBarItemBinding class.
            </summary>
            <param name="dataMember">Data member to bind a toolbar item.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1ToolBar.C1ToolBarItemBinding.ToString">
            <summary>
            ToString override.
            </summary>
            <returns>string.</returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1ToolBar.C1ToolBarItemBinding.Clone">
            <summary>
            Clone this object.
            </summary>
            <returns></returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1ToolBar.C1ToolBarItemBinding.System#Web#UI#IStateManager#LoadViewState(System.Object)">
            <summary>
            Loads the server control's previously saved view state to the control.
            </summary>
            <param name="state">An Object that contains the saved view state values for the control.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1ToolBar.C1ToolBarItemBinding.System#Web#UI#IStateManager#SaveViewState">
            <summary>
            Saves the changes to a server control's view state to an Object.
            </summary>
            <returns>The Object that contains the view state changes.</returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1ToolBar.C1ToolBarItemBinding.System#Web#UI#IStateManager#TrackViewState">
            <summary>
            Instructs the server control to track changes to its view state.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1ToolBar.C1ToolBarItemBinding.IsEmpty(System.String)">
            <summary>
            Judge whether the current property is empty.
            </summary>
            <param name="propName">The specified property name.</param>
            <returns>Returns true if the current property is empty.</returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1ToolBar.C1ToolBarItemBinding.SetDirty">
            <summary>
            Sets the state of the StateBag object as well as 
            the Dirty property of each of the StateItem objects contained by it.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ToolBar.C1ToolBarItemBinding.AccessKeyField">
            <summary>
            Gets or sets the name of the field from the data source to bind to the AccessKey property of a C1ToolBarItem object to which the C1ToolBarItemBinding object is applied.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ToolBar.C1ToolBarItemBinding.DataMember">
            <summary>
            Gets or sets the data member to bind a toolbar item.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ToolBar.C1ToolBarItemBinding.DisabledImageUrlField">
            <summary>
            Gets or sets the URL field to the disabled image that is displayed next to the text of a toolbar item to which the C1ToolBarItemBinding object is applied.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ToolBar.C1ToolBarItemBinding.EnabledField">
            <summary>
            Gets or sets the name of the field from the data source to bind to the Enabled property of a C1ToolBarItem object to which the C1ToolBarItemBinding object is applied.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ToolBar.C1ToolBarItemBinding.FormatString">
            <summary>
            Gets or sets the string that specifies the display format 
            for the text of a toolbar item to which the C1ToolBarItemBinding object is applied.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ToolBar.C1ToolBarItemBinding.ImageUrlField">
            <summary>
            Gets or sets the name of the field from the data source to bind to the ImageUrl property of a C1ToolBarItem object to which the C1ToolBarItemBinding object is applied.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ToolBar.C1ToolBarItemBinding.MouseOverImageUrlField">
            <summary>
            Gets or sets the name of the field from the data source to bind to the MouseOverImageUrl property of a C1ToolBarItem object to which the C1ToolBarItemBinding object is applied.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ToolBar.C1ToolBarItemBinding.SelectedImageUrlField">
            <summary>
            Gets or sets the name of the field from the data source to bind to the ImageUrlSelected property of a C1ToolBarItem object to which the C1ToolBarItemBinding object is applied.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ToolBar.C1ToolBarItemBinding.SelectedDisabledImageUrlField">
            <summary>
            Gets or sets the name of the field from the data source to bind to the ImageSelectedDisabledURL property of a C1ToolBarItem object to which the C1ToolBarItemBinding object is applied.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ToolBar.C1ToolBarItemBinding.SelectedHoverImageUrlField">
            <summary>
            Gets or sets the name of the field from the data source to bind to the ImageSelectedHoverURL property of a C1ToolBarItem object to which the C1ToolBarItemBinding object is applied.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ToolBar.C1ToolBarItemBinding.NavigateUrlField">
            <summary>
            Gets or sets the name of the field from the data source to bind to the NavigateUrl property of a C1ToolBarItem object to which the C1ToolBarItemBinding object is applied.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ToolBar.C1ToolBarItemBinding.TargetField">
            <summary>
            Gets or sets the name of the field from the data source to bind to the Target property of a C1ToolBarItem object to which the C1ToolBarItemBinding object is applied.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ToolBar.C1ToolBarItemBinding.TextField">
            <summary>
            Gets or sets the name of the field from the data source to bind to the Text property of a C1ToolBarItem object to which the C1ToolBarItemBinding object is applied.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ToolBar.C1ToolBarItemBinding.ToolTipField">
            <summary>
            Gets or sets the name of the field from the data source to bind to the Tooltip property of a C1ToolBarItem object to which the C1ToolBarItemBinding object is applied.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ToolBar.C1ToolBarItemBinding.ValueField">
            <summary>
            Gets or sets the name of the field from the data source to bind to the Value property of a C1ToolBarItem object to which the C1ToolBarItemBinding object is applied.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ToolBar.C1ToolBarItemBinding.System#Web#UI#IStateManager#IsTrackingViewState">
            <summary>
            Gets a value indicating whether a server control is tracking its view state changes.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ToolBar.C1ToolBarItemBinding.ViewState">
            <summary>
            Gets a dictionary of state information that allows you to save and  
            restore the view state of a server control across multiple requests for the same page.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ToolBar.C1ToolBarItemBinding.System#Web#UI#IDataSourceViewSchemaAccessor#DataSourceViewSchema">
            <summary>
            Gets or sets the schema associated with the object.
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1ToolBar.C1ToolBarItemBindingCollection">
            <summary>
            Represents a collection of C1ToolBarItemBinding objects that are used by data-bound C1ToolBar control.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1ToolBar.C1ToolBarItemBindingCollection.#cctor">
            <summary>
            Static C1ToolBarItemBindingCollection constructor.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1ToolBar.C1ToolBarItemBindingCollection.#ctor">
            <summary>
            C1ToolBarItemBindingCollection constructor.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1ToolBar.C1ToolBarItemBindingCollection.#ctor(C1.Web.UI.Controls.C1ToolBar.C1ToolBar)">
            <summary>
            C1ToolBarItemBindingCollection constructor.
            </summary>
            <param name="owner">The collection's owner</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1ToolBar.C1ToolBarItemBindingCollection.Add(C1.Web.UI.Controls.C1ToolBar.C1ToolBarItemBinding)">
            <summary>
            Appends the specified C1ToolBarItemBinding object to the end of the collection.
            </summary>
            <param name="binding">The specified C1ToolBarItemBinding object that will be added to the collection.</param>
            <returns>Returns the current collection's length.</returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1ToolBar.C1ToolBarItemBindingCollection.Contains(C1.Web.UI.Controls.C1ToolBar.C1ToolBarItemBinding)">
            <summary>
            Determines whether the specified C1ToolBarItemBinding object is in the collection.
            </summary>
            <param name="binding">The specified C1ToolBarItemBinding object.</param>
            <returns>Returns true if the current collection contains the specified C1ToolBarItemBinding object.</returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1ToolBar.C1ToolBarItemBindingCollection.CopyTo(C1.Web.UI.Controls.C1ToolBar.C1ToolBarItemBinding[],System.Int32)">
            <summary>
            Overloaded. Copies the contents of the current C1ToolBarItemBinding object.
            </summary>
            <param name="bindingArray">The C1ToolBarItemBinding array.</param>
            <param name="index">The zero-based index in array at which copying begins.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1ToolBar.C1ToolBarItemBindingCollection.IndexOf(C1.Web.UI.Controls.C1ToolBar.C1ToolBarItemBinding)">
            <summary>
            Determines the index of the specified C1ToolBarItemBinding object in the collection.
            </summary>
            <param name="binding">The specified C1ToolBarItemBinding object.</param>
            <returns>Returns the index in array at which the specified C1ToolBarItemBinding object is.</returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1ToolBar.C1ToolBarItemBindingCollection.Insert(System.Int32,C1.Web.UI.Controls.C1ToolBar.C1ToolBarItemBinding)">
            <summary>
            Adds the specified C1ToolBarItemBinding object to the collection at the specified index location.
            </summary>
            <param name="index">index location.</param>
            <param name="binding">The specified C1ToolBarItemBinding object.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1ToolBar.C1ToolBarItemBindingCollection.Remove(C1.Web.UI.Controls.C1ToolBar.C1ToolBarItemBinding)">
            <summary>
            Removes the specified C1ToolBarItemBinding object from the collection.
            </summary>
            <param name="binding">The specified C1ToolBarItemBinding object.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1ToolBar.C1ToolBarItemBindingCollection.RemoveAt(System.Int32)">
            <summary>
            Removes the C1ToolBarItemBinding object at the specified index location from the collection.
            </summary>
            <param name="index">The specified index at which the item will be moved.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1ToolBar.C1ToolBarItemBindingCollection.OnClear">
            <summary>
            OnClear override.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1ToolBar.C1ToolBarItemBindingCollection.OnRemoveComplete(System.Int32,System.Object)">
            <summary>
             OnRemoveComplete override.
            </summary>
            <param name="index"></param>
            <param name="value"></param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1ToolBar.C1ToolBarItemBindingCollection.OnValidate(System.Object)">
            <summary>
             override.
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1ToolBar.C1ToolBarItemBindingCollection.CreateKnownType(System.Int32)">
            <summary>
            CreateKnownType override.
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1ToolBar.C1ToolBarItemBindingCollection.SetDirtyObject(System.Object)">
            <summary>
            SetDirtyObject override.
            </summary>
            <param name="o"></param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1ToolBar.C1ToolBarItemBindingCollection.GetKnownTypes">
            <summary>
            GetKnownTypes override.
            </summary>
            <returns></returns>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ToolBar.C1ToolBarItemBindingCollection.Item(System.Int32)">
            <summary>
            Get binding by index.
            </summary>
            <param name="i">The specified index.</param>
            <returns>Returns the corresponding C1ToolBarItemBinding according to specified index.</returns>
        </member>
        <member name="T:C1.Web.UI.Controls.C1ToolBar.C1ToolBarItemCollection">
            <summary>
            Represents a collection of C1ToolBarItem objects that are used by Items property.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1ToolBar.C1ToolBarItemCollection.#ctor(C1.Web.UI.Controls.C1ToolBar.IC1ToolBarItemCollectionOwner)">
            <summary>
            Creates an instance of the C1ToolBarItemCollection class.
            </summary>
            <param name="owner">The specified IC1ToolBarItemCollectionOwner object.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1ToolBar.C1ToolBarItemCollection.Add(C1.Web.UI.Controls.C1ToolBar.IC1ToolBarItemCollectionOwner)">
            <summary>
            Adds an element into list.
            </summary>
            <param name="item">The specified IC1ToolBarItemCollectionOwner obj.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1ToolBar.C1ToolBarItemCollection.AddRange(C1.Web.UI.Controls.C1ToolBar.IC1ToolBarItemCollectionOwner[])">
            <summary>
            Adds the elements of a C1ToolBarItem's collection to the end of list.
            </summary>
            <param name="items">The specified IC1ToolBarItemCollectionOwner array.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1ToolBar.C1ToolBarItemCollection.Insert(System.Int32,C1.Web.UI.Controls.C1ToolBar.IC1ToolBarItemCollectionOwner)">
            <summary>
            Inserts a IC1ToolBarItemCollectionOwner object into list.
            </summary>
            <param name="index">index location.</param>
            <param name="item">The specified IC1ToolBarItemCollectionOwner object.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1ToolBar.C1ToolBarItemCollection.Remove(C1.Web.UI.Controls.C1ToolBar.IC1ToolBarItemCollectionOwner)">
            <summary>
            Removes item from list.
            </summary>
            <param name="child">The specified IC1ToolBarItemCollectionOwner object.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1ToolBar.C1ToolBarItemCollection.RemoveAt(System.Int32)">
            <summary>
            Removes item from list by index.
            </summary>
            <param name="index">index location.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1ToolBar.C1ToolBarItemCollection.ClearItems">
            <summary>
            Removes all item from list.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1ToolBar.C1ToolBarItemCollection.SetItem(System.Int32,C1.Web.UI.Controls.C1ToolBar.IC1ToolBarItemCollectionOwner)">
            <summary>
            Set the item of list.
            </summary>
            <param name="index">index location.</param>
            <param name="item">The specified IC1ToolBarItemCollectionOwner object.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1ToolBar.C1ToolBarItemCollection.InsertItem(System.Int32,C1.Web.UI.Controls.C1ToolBar.IC1ToolBarItemCollectionOwner)">
            <summary>
            Inserts a IC1ToolBarItemCollectionOwner object into list.
            </summary>
            <param name="index">index location.</param>
            <param name="item">The specified IC1ToolBarItemCollectionOwner object.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1ToolBar.C1ToolBarItemCollection.RemoveItem(System.Int32)">
            <summary>
            Removes item from list by index.
            </summary>
            <param name="index">index location.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1ToolBar.C1ToolBarItemCollection.IndexOf(C1.Web.UI.Controls.C1ToolBar.IC1ToolBarItemCollectionOwner)">
            <summary>
            Searches for the specified object and returns the zero-base index of the list.
            </summary>
            <param name="item">The specified IC1ToolBarItemCollectionOwner object.</param>
            <returns>Returns the zero-base index of the list.</returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1ToolBar.C1ToolBarItemCollection.System#Web#UI#IStateManager#LoadViewState(System.Object)">
            <summary>
            Loads the view state in the item.
            </summary>
            <param name="state">An object that represents the control state to restore.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1ToolBar.C1ToolBarItemCollection.System#Web#UI#IStateManager#SaveViewState">
            <summary>
            Saves the view state for the item.
            </summary>
            <returns></returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1ToolBar.C1ToolBarItemCollection.System#Web#UI#IStateManager#TrackViewState">
            <summary>
            Tracks the view state for the item.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1ToolBar.C1ToolBarItemCollection.LoadViewState(System.Object)">
            <summary>
            Loads the view state in the item.
            </summary>
            <param name="state">An object that represents the control state to restore.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1ToolBar.C1ToolBarItemCollection.SaveViewState">
            <summary>
            Saves the view state for the item.
            </summary>
            <returns></returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1ToolBar.C1ToolBarItemCollection.TrackViewState">
            <summary>
            Tracks the view state for the item.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1ToolBar.C1ToolBarItemCollection.LoadChildItemsViewState(System.Object)">
            <summary>
            Loads child control's ViewState.
            </summary>
            <param name="state">An object that represents the control state to restore.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1ToolBar.C1ToolBarItemCollection.SaveChildItemsViewState">
            <summary>
            Saves child control's ViewState.
            </summary>
            <returns></returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1ToolBar.C1ToolBarItemCollection.TrackChildItemsViewState">
            <summary>
            Tracks child control's ViewState.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1ToolBar.C1ToolBarItemCollection.SetDirty">
            <summary>
            Set dirty for the object.
            </summary>
        </member>
        <member name="E:C1.Web.UI.Controls.C1ToolBar.C1ToolBarItemCollection.ItemChanged">
            <summary>
            Item changed.
            </summary>
        </member>
        <member name="E:C1.Web.UI.Controls.C1ToolBar.C1ToolBarItemCollection.OnCollectionChanged">
            <summary>
            Occurs after <see cref="T:C1.Web.UI.Controls.C1ToolBar.C1ToolBarItemCollection"/> collection was changed.
            </summary>
        </member>
        <member name="E:C1.Web.UI.Controls.C1ToolBar.C1ToolBarItemCollection.OnBeforeCollectionChanged">
            <summary>
            Occurs before <see cref="T:C1.Web.UI.Controls.C1ToolBar.C1ToolBarItemCollection"/> collection was changed.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ToolBar.C1ToolBarItemCollection.Item(System.Int32)">
            <summary>
            Gets or set the specified IC1ToolBarItemCollectionOwner object.
            </summary>
            <param name="index">index location.</param>
            <returns>Return the specified IC1ToolBarItemCollectionOwner object.</returns>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ToolBar.C1ToolBarItemCollection.System#Web#UI#IStateManager#IsTrackingViewState">
            <summary>
            Get a bool value that indicates whether the server control is saving changes to its view state.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ToolBar.C1ToolBarItemCollection.ViewState">
            <summary>
            Gets ViewState property.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ToolBar.C1ToolBarItemCollection.IsTrackingViewState">
            <summary>
            Get a bool value that indicates whether the server control is saving changes to its view state.
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1ToolBar.C1ToolBarItemList">
            <summary>
            Represents a C1ToolBarItemList. It is used in the dropdown or split button.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1ToolBar.C1ToolBarItemList.#ctor(C1.Web.UI.Controls.C1ToolBar.IC1ToolBarItemCollectionOwner,C1.Web.UI.Controls.C1ToolBar.C1ToolBarItemCollection)">
            <summary>
            Creates an instance of the C1ToolBarItemList class
            </summary>
            <param name="owner">The specified IC1ToolBarItemCollectionOwner object.</param>
            <param name="items">The specified C1ToolBarItemCollection object.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1ToolBar.C1ToolBarItemList.AddAttributesToRender(System.Web.UI.HtmlTextWriter)">
            <summary>
            Adds HTML attributes and styles that need to be rendered to the specified HtmlTextWriterTag.
            </summary>
            <param name="writer">A HtmlTextWriter that represents the output stream to render HTML content on the client.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1ToolBar.C1ToolBarItemList.CreateChildControls">
            <summary>
            Override CreateChildControls method.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ToolBar.C1ToolBarItemList.TagKey">
            <summary>
            Gets the control's tag key.
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1ToolBar.C1ToolBarItemTemplateContainer">
            <summary>
            Represents a container that holds the contents of a 
            templated menu item in a C1ToolBar control.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1ToolBar.C1ToolBarItemTemplateContainer.#ctor(System.Int32,C1.Web.UI.Controls.C1ToolBar.C1ToolBarItem)">
            <summary>
            Initializes a new instance of the C1ToolBarItemTemplateContainer class 
            using the specified toolbar item index and toolbar item.
            </summary>
            <param name="itemIndex">Index location.</param>
            <param name="dataItem">The specified C1ToolBarItem object.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1ToolBar.C1ToolBarItemTemplateContainer.OnBubbleEvent(System.Object,System.EventArgs)">
            <summary>
            OnBubbleEvent override.
            </summary>
            <param name="source">The Source of the event.</param>
            <param name="e">An System.EventArgs object that contains the event data.</param>
            <returns></returns>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ToolBar.C1ToolBarItemTemplateContainer.DataItem">
            <summary>
            Gets or sets the item associated with the container.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ToolBar.C1ToolBarItemTemplateContainer.ItemIndex">
            <summary>
            Gets the index of the item associated with the container.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ToolBar.C1ToolBarItemTemplateContainer.System#Web#UI#IDataItemContainer#DataItem">
            <summary>
            Gets the item associated with the container.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ToolBar.C1ToolBarItemTemplateContainer.System#Web#UI#IDataItemContainer#DataItemIndex">
            <summary>
            Gets the index of the item associated with the container.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ToolBar.C1ToolBarItemTemplateContainer.System#Web#UI#IDataItemContainer#DisplayIndex">
            <summary>
            Gets DisplayIndex property.
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1ToolBar.C1ToolBarScrollPanel">
            <summary>
            Instance of this class wraps toolbar items to the scroll panel.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1ToolBar.C1ToolBarScrollPanel.#ctor(C1.Web.UI.Controls.C1ToolBar.IC1ToolBarItemCollectionOwner)">
            <summary>
            C1ToolBarScrollPanel's constructor.
            </summary>
            <param name="owner">The specified IC1ToolBarItemCollectionOwner object.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1ToolBar.C1ToolBarScrollPanel.InternalCreateControls">
            <summary>
            Create controls for ScrollContainer.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1ToolBar.C1ToolBarScrollPanel.AddAttributesToRender(System.Web.UI.HtmlTextWriter)">
            <summary>
            Adds HTML attributes and styles that need to be rendered to the specified HtmlTextWriterTag.
            </summary>
            <param name="writer">A HtmlTextWriter that represents the output stream to render HTML content on the client.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1ToolBar.C1ToolBarScrollPanel.Render(System.Web.UI.HtmlTextWriter)">
            <summary>
            Override Render method.
            </summary>
            <param name="writer">A HtmlTextWriter that represents the output stream to render HTML content on the client.</param>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ToolBar.C1ToolBarScrollPanel.FlowPanel">
            <summary>
            Gets FlowPanel property.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ToolBar.C1ToolBarScrollPanel.ScrollContainer">
            <summary>
            Gets ScrollContainer property.
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1ToolBar.C1ToolBarSeparator">
            <summary>
            C1ToolBarSeparator defines a separator element on a toolbar. 
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1ToolBar.C1ToolBarSeparator.#ctor">
            <summary>
            Creates an instance of the C1ToolBarSeparator class.
            </summary>
            <remarks>
            The separator appears as a solid or dashed vertical line for horizontal toolbars and a horizontal line for vertical toolbars. 
            Proper use of separators can help chunk the information on a toolbar and make it easier to memorize. 
            You can define a new line image for the C1ToolBarSeparator using its CSS selectors.
            </remarks>
        </member>
        <member name="M:C1.Web.UI.Controls.C1ToolBar.C1ToolBarSeparator.AddAttributesToRender(System.Web.UI.HtmlTextWriter)">
            <summary>
            Adds HTML attributes and styles that need to be rendered to the specified HtmlTextWriterTag.
            </summary>
            <param name="writer">A HtmlTextWriter that represents the output stream to render HTML content on the client.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1ToolBar.C1ToolBarSeparator.CreateChildControls">
            <summary>
            Override CreateChildControls method.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ToolBar.C1ToolBarSeparator.AccessKey">
            <summary>
            this property should be hidden
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ToolBar.C1ToolBarSeparator.CausesValidation">
            <summary>
            this property should be hidden
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ToolBar.C1ToolBarSeparator.Font">
            <summary>
            this property should be hidden
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ToolBar.C1ToolBarSeparator.ForeColor">
            <summary>
            this property should be hidden
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ToolBar.C1ToolBarSeparator.ItemTemplate">
            <summary>
            this property should be hidden
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ToolBar.C1ToolBarSeparator.NavigateUrl">
            <summary>
            this property should be hidden
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ToolBar.C1ToolBarSeparator.SkinID">
            <summary>
            this property should be hidden
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ToolBar.C1ToolBarSeparator.Target">
            <summary>
            this property should be hidden
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ToolBar.C1ToolBarSeparator.ToolTip">
            <summary>
            this property should be hidden
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ToolBar.C1ToolBarSeparator.CommandArgument">
            <summary>
            this property should be hidden
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ToolBar.C1ToolBarSeparator.CommandName">
            <summary>
            this property should be hidden
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ToolBar.C1ToolBarSeparator.ImageUrl">
            <summary>
            this property should be hidden
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ToolBar.C1ToolBarSeparator.MouseOverImageUrl">
            <summary>
            this property should be hidden
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ToolBar.C1ToolBarSeparator.Selected">
            <summary>
            this property should be hidden
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ToolBar.C1ToolBarSeparator.SelectedDisabledImageUrl">
            <summary>
            this property should be hidden
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ToolBar.C1ToolBarSeparator.SelectedHoverImageUrl">
            <summary>
            this property should be hidden
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ToolBar.C1ToolBarSeparator.DisabledImageUrl">
            <summary>
            this property should be hidden
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ToolBar.C1ToolBarSeparator.SelectedImageUrl">
            <summary>
            this property should be hidden
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ToolBar.C1ToolBarSeparator.TextImageRelation">
            <summary>
            this property should be hidden
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ToolBar.C1ToolBarSeparator.ClientType">
            <summary>
            This property should be hidden
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1ToolBar.C1ToolBarSerializer">
            <summary>
            Serializes C1ToolBar Control.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1ToolBar.C1ToolBarSerializer.#ctor(System.Object)">
            <summary>
            Constructor.
            </summary>
            <param name="serializableObject">Serializable Object.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1ToolBar.C1ToolBarSerializer.#ctor(System.ComponentModel.Design.IComponentChangeService,System.Object)">
            <summary>
            Constructor.
            </summary>
            <param name="componentChangeService"></param>
            <param name="serializableObject"></param>
        </member>
        <member name="T:C1.Web.UI.Controls.C1ToolBar.C1ToolBarSplitButton">
            <summary>
            The C1ToolBarSplitButton object defines a split toolbar button. 
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1ToolBar.C1ToolBarSplitButton.AddAttributesToRender(System.Web.UI.HtmlTextWriter)">
            <summary>
            Adds HTML attributes and styles that need to be rendered to the specified HtmlTextWriterTag.
            </summary>
            <param name="writer">A HtmlTextWriter that represents the output stream to render HTML content on the client.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1ToolBar.C1ToolBarSplitButton.CreateChildControls">
            <summary>
            Override CreateChildControls method.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1ToolBar.C1ToolBarSplitButton.LoadPropertiesFromJsonData(System.Collections.Hashtable,System.Collections.Generic.List{C1.Web.UI.Controls.C1ToolBar.C1ToolBarItemPropertyChangedEventArgs})">
            <summary>
            Load properties's data from json's data.
            </summary>
            <param name="jsonItem">Json's data.</param>
            <param name="propertyChanged">The list of C1ToolBarItemPropertyChangedEventArgs</param>
            <returns>Return a bool value indicating whether the viewstate is changed or unchanged.</returns>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ToolBar.C1ToolBarSplitButton.DefaultButtonIndex">
            <summary>
            The index of the button which properties will be used by default when the EnabledDefaultButton property set to true. 
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ToolBar.C1ToolBarSplitButton.EnabledDefaultButton">
            <summary>
            Gets or sets a value, indicating if the C1ToolBarSplitButton will use the DefaultButton behavior.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ToolBar.C1ToolBarSplitButton.NestedItemIndex">
            <summary>
            The current item's index which is in SplitButton's item list.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ToolBar.C1ToolBarSplitButton.ClientType">
            <summary>
            This property should be hidden
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1ToolBar.C1ToolBarItemPropertyChangedEventArgs">
            <summary>
            C1ItemPropertyChangedEventArgs is used by the ItemPropertyChanged event.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1ToolBar.C1ToolBarItemPropertyChangedEventArgs.#ctor(C1.Web.UI.Controls.C1ToolBar.C1ToolBarItem,System.String,System.Object)">
            <summary>
            C1ToolBarItemPropertyChangedEventArgs's constructor.
            </summary>
            <param name="item">The specified C1ToolBarItem object.</param>
            <param name="propertyName">The property's name.</param>
            <param name="newValue">The property's new value.</param>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ToolBar.C1ToolBarItemPropertyChangedEventArgs.Item">
            <summary>
             An Item in the control which raised an event.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ToolBar.C1ToolBarItemPropertyChangedEventArgs.PropertyName">
            <summary>
            Gets property's name.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ToolBar.C1ToolBarItemPropertyChangedEventArgs.NewValue">
            <summary>
            Gets new value of the property.
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1ToolBar.C1ToolBarEventArgs">
            <summary>
            C1ToolBarEventArgs is used by the following events: ItemClick, ItemSelected, and ItemPopulate. 
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1ToolBar.C1ToolBarEventArgs.#ctor(C1.Web.UI.Controls.C1ToolBar.C1ToolBarItem)">
            <summary>
            C1ToolBarEventArgs's constructor.
            </summary>
            <param name="item">The specified C1ToolBarItem object.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1ToolBar.C1ToolBarEventArgs.#ctor(C1.Web.UI.Controls.C1ToolBar.C1ToolBarItem,System.Object,System.Web.UI.WebControls.CommandEventArgs)">
            <summary>
            C1ToolBarEventArgs's constructor.
            </summary>
            <param name="item">The specified C1ToolBarItem object.</param>
            <param name="commandSource">The source of command.</param>
            <param name="originalArgs">The specified CommandEventArgs object.</param>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ToolBar.C1ToolBarEventArgs.CommandSource">
            <summary>
            Gets the source of command.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ToolBar.C1ToolBarEventArgs.Item">
            <summary>
             Gets an Item in the control which raised an event.
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1ToolBar.C1ToolBarItemCollectionChangedEventArgs">
            <summary>
            C1ToolBarItemCollectionChangedEventArgs is used for the C1ToolBarItemCollectionChange event.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1ToolBar.C1ToolBarItemCollectionChangedEventArgs.#ctor(C1.Web.UI.Controls.C1ToolBar.IC1ToolBarItemCollectionOwner)">
            <summary>
            constructor of the C1ToolBarItemCollectionChangedEventArgs
            </summary>
            <param name="item"></param>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ToolBar.C1ToolBarItemCollectionChangedEventArgs.Item">
            <summary>
            indicate the item which to be add or remove from the C1ToolBarItemCollection.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ToolBar.C1ToolBarItemCollectionChangedEventArgs.Status">
            <summary>
            indicate the ChangeStatus of the C1ToolBarItemCollection.
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1ToolBar.C1ToolBarItemPropertyChangedEventHandler">
            <summary>
            Delegate type for handling events that are related to the PropertyChanged event.
            </summary>
            <param name="sender">The specified object.</param>
            <param name="e">The specified C1ToolBarItemPropertyChangedEventArgs object.</param>
        </member>
        <member name="T:C1.Web.UI.Controls.C1ToolBar.C1ToolBarEventHandler">
            <summary>
            Delegate type for handling events that are related to the items.
            </summary>
            <param name="sender">The source of the event</param>
            <param name="e">C1MenuEventArgs object that contains the event data</param>
        </member>
        <member name="T:C1.Web.UI.Controls.C1ToolBar.ChangeStatus">
            <summary>
            Specifies <see cref="T:C1.Web.UI.Controls.C1ToolBar.IC1ToolBarItemCollectionOwner"/> change status.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1ToolBar.ChangeStatus.ItemAdd">
            <summary>
            <see cref="T:C1.Web.UI.Controls.C1ToolBar.IC1ToolBarItemCollectionOwner"/> add.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1ToolBar.ChangeStatus.ItemRemove">
            <summary>
            <see cref="T:C1.Web.UI.Controls.C1ToolBar.IC1ToolBarItemCollectionOwner"/> remove.
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1ToolBar.IC1CanDockControl">
            <summary>
            Defines a property which determines the position in which
            the dock control will be docked.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ToolBar.IC1CanDockControl.Dock">
            <summary>
            DockStyle
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1Calendar.C1Calendar">
            <summary>
            ComponentOne Calendar Control for ASP.NET.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Calendar.C1Calendar.#ctor">
            <summary>
            Construct a new instance of C1Calendar.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Calendar.C1Calendar.VerifyLicense(System.String)">
            <summary>
            Verifies the license.
            </summary>
            <param name="key">The key.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Calendar.C1Calendar.GetScriptDescriptors">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Calendar.C1Calendar.GetScriptReferences">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Calendar.C1Calendar.OnSelectedDatesChanged(System.EventArgs)">
            <summary>
            Fires the SelectedDatesChanged event.
            </summary>
            <param name="e">The event arg.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Calendar.C1Calendar.OnDisplayDateChanged(System.EventArgs)">
            <summary>
            Fires the DisplayDateChanged event.
            </summary>
            <param name="e">The event arg.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Calendar.C1Calendar.OnPreRender(System.EventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Calendar.C1Calendar.RenderContents(System.Web.UI.HtmlTextWriter)">
            <summary>
            
            </summary>
            <param name="writer"></param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Calendar.C1Calendar.Render(System.Web.UI.HtmlTextWriter)">
            <summary>
            
            </summary>
            <param name="writer"></param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Calendar.C1Calendar.CreateChildControls">
            <summary>
            
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Calendar.C1Calendar.FindControl(System.String)">
            <summary>
            
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Calendar.C1Calendar.GetControlCssClass">
            <summary>
            Gets the CSS class name for the control.
            </summary>
            <returns></returns>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Calendar.C1Calendar.UniqueID">
            <summary>
            
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Calendar.C1Calendar.InternalWidth">
            <summary>
            
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Calendar.C1Calendar.InternalHeight">
            <summary>
            
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Calendar.C1Calendar.Enabled">
            <summary>
            Gets or sets a value indicating whether the Web server control is enabled.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Calendar.C1Calendar.InternalEnabled">
            <summary>
            
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Calendar.C1Calendar.ShowOtherMonthDays">
            <summary>
            Determines whether to display days that belong to other month in a month view.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Calendar.C1Calendar.PopupMode">
            <summary>
            Determines whether the calendar is in popup mode. User has to call client side methods PopupAt/PopupBeside to popup the calendar.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Calendar.C1Calendar.ToolTipDateFormat">
            <summary>
            Determines the date format for tooltip when mouse is over the calendar days.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Calendar.C1Calendar.DayRows">
            <summary>
            Gets or sets the number of rows in month view.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Calendar.C1Calendar.DayColumns">
            <summary>
            Gets or sets the number of columns in month view.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Calendar.C1Calendar.AutoPostBackOnSelect">
            <summary>
            Gets or sets a value that determines whether post back to server automatically when user selects a date.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Calendar.C1Calendar.AutoPostBackOnNavigate">
            <summary>
            Gets or sets a value that determines whether post back to server automatically when user navigates between months.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Calendar.C1Calendar.CultureInfo">
            <summary>
            Gets or sets the culture information for the calendar control rendering.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Calendar.C1Calendar.UsedCulture">
            <summary>
            CultureInfo object that is currently used by the control.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Calendar.C1Calendar.WeekDayFormat">
            <summary>
            Gets or sets the display format for week headers.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Calendar.C1Calendar.MonthDayFormat">
            <summary>
            Gets or sets the display format for calendar days.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Calendar.C1Calendar.ShowCalendarTitle">
            <summary>
            Determines whether to display the calendar title.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Calendar.C1Calendar.CalendarTitle">
            <summary>
            Determines the string that displays on calendar title.
            </summary>
            <remarks>
            CalenderTitle is the group tile shared by all the month views. To change the title for month views, you have to use
            MonthViewTitle property.
            
            The title string can be any string or string that has date formatting parameters. 
            
            At most four parameters are accepted, each can has its own data format. They are:
            {0} - The value of DiaplayDate.
            {1} - The first month of month views, when multiple monthes are displayed.
            {2} - The last month of month views, when multiple monthes are displayed.
            {3} - The number of month views, when multiple monthes are displayed.
            
            For example:
            "Schedule of {0:MMMM yyyy}".
            "{1:MMMM yyyy} to {2:MMMM yyyy}"
            </remarks>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Calendar.C1Calendar.MonthViewTitle">
            <summary>
            Determines the string that displays on month view title.
            </summary>
            <remarks>
            MonthViewTitle is the tile display on each month view. To change the top most group title shared by month views, you have to use
            CalendarTitle property.
            
            The title string can be any string or string that has date formatting parameters. 
            
            At most four parameters are accepted, each can has its own data format. They are:
            {0} - The value of DiaplayDate.
            {1} - The first month of month views, when multiple monthes are displayed.
            {2} - The last month of month views, when multiple monthes are displayed.
            {3} - The number of month views, when multiple monthes are displayed.
            
            For example:
            "Schedule of {0:MMMM yyyy}".
            "{1:MMMM yyyy} to {2:MMMM yyyy}"
            </remarks>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Calendar.C1Calendar.ShowMonthNavigator">
            <summary>
            Gets or sets a value that determines whether to display month navigator.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Calendar.C1Calendar.AllowQuickPick">
            <summary>
            Gets or sets a value that determines whether can change the view to month/year/decade while clicking on the calendar title.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Calendar.C1Calendar.NextToolTip">
            <summary>
            Gets or sets the tooltip string displayed for the next navigation button.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Calendar.C1Calendar.PrevToolTip">
            <summary>
            Gets or sets the tooltip string for the previous navigation button.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Calendar.C1Calendar.QuickNextToolTip">
            <summary>
            Gets or sets the tooltip string for the next quick-navigation button.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Calendar.C1Calendar.QuickPrevToolTip">
            <summary>
            Gets or sets the tooltip string for the previous quick-navigation button.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Calendar.C1Calendar.NavigationStep">
            <summary>
            Gets or sets the number of months to swap after clicking the navigation button.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Calendar.C1Calendar.QuickNavigationStep">
            <summary>
            Gets or sets the number of months to swap after clicking the quick-navigation button.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Calendar.C1Calendar.NavigationEffect">
            <summary>
            Gets or sets the slide style while month swapping.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Calendar.C1Calendar.NavigationButton">
            <summary>
            Gets or sets the display type of navigation buttons.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Calendar.C1Calendar.Duration">
            <summary>
            Animation duration in milliseconds.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Calendar.C1Calendar.Easing">
            <summary>
            Specifies the transition for animation.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Calendar.C1Calendar.AllowPreview">
            <summary>
            Gets or sets whether the preview area is displayed.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Calendar.C1Calendar.PrevPreviewToolTip">
            <summary>
            Gets or sets the tooltip string for the previous preview button.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Calendar.C1Calendar.NextPreviewToolTip">
            <summary>
            Gets or sets the tooltip string for the next preview button.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Calendar.C1Calendar.FirstDayOfWeek">
            <summary>
            Gets or sets the first day of week.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Calendar.C1Calendar.DisabledDates">
            <summary>
            Gets or sets the disable dates collection.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Calendar.C1Calendar.MaxDate">
            <summary>
            Gets or sets the maximal date for selection.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Calendar.C1Calendar.MinDate">
            <summary>
            Gets or sets the minimal date for selection.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Calendar.C1Calendar.CustomDays">
            <summary>
            Gets the collection of custom days.
            </summary>
            <remarks>
            You can specify custom styles for specific calendar day by defining CustomDay.
            
            C1WebCalendar supports hosting templates in calendar day cells. 
            
            To add template controls, you have to:
            1. Click the ellipsis button right beside the DayTemplates in property grid to open the DayTemplates collection editor.
            2. Add template to this collection, give proper ID.
            3. Select "Edit Templates" in smart tag.
            
            To "bind" template to a calendar day, you have to:
            1. Click the ellipsis button right beside the CustomDays in property grid.
            2. Add CustomDay in this collection.
            3. Specify the TemplateID and Date property. The TemplateID should be the ID of template added in the above steps.
            </remarks>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Calendar.C1Calendar.DayTemplates">
            <summary>
            Gets the template collection.
            </summary>
            <remarks>
            C1WebCalendar supports hosting templates in calendar day cells. 
            
            To add template controls, you have to:
            1. Click the ellipsis button right beside the DayTemplates in property grid to open the DayTemplates collection editor.
            2. Add template to this collection, give proper ID.
            3. Select "Edit Templates" in smart tag.
            
            To "bind" template to a calendar day, you have to:
            1. Click the ellipsis button right beside the CustomDays in property grid.
            2. Add CustomDay in this collection.
            3. Specify the TemplateID and Date property. The TemplateID should be the ID of template added in the above steps.
            </remarks>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Calendar.C1Calendar.HeaderTemplate">
            <summary>
            The header template of Calendar.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Calendar.C1Calendar.HeaderTemplateStr">
            <summary>
            Gets or sets the string for the header template of C1Calendar.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Calendar.C1Calendar.FooterTemplate">
            <summary>
            The footer template of Calendar.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Calendar.C1Calendar.FooterTemplateStr">
            <summary>
            
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Calendar.C1Calendar.DisplayDate">
            <summary>
            Gets or sets the date for the current display month.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Calendar.C1Calendar.MonthCols">
            <summary>
            Gets or sets the number of month view columns.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Calendar.C1Calendar.MonthRows">
            <summary>
            Gets or sets the number of month view rows.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Calendar.C1Calendar.MonthViewSpacing">
            <summary>
            Gets or sets the spacing between month views.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Calendar.C1Calendar.ShowWeekDays">
            <summary>
            Determines whether to display week days.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Calendar.C1Calendar.ShowWeekNumbers">
            <summary>
            Determines whether to display week numbers.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Calendar.C1Calendar.SelectionMode">
            <summary>
            Determines the selection mode.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Calendar.C1Calendar.SelectedDate">
            <summary>
            Gets or sets the latest selected date.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Calendar.C1Calendar.SelectedDates">
            <summary>
            Gets or sets the selected dates collection.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Calendar.C1Calendar.DayNames">
            <summary>
            Gets or sets the names of the days of the week, starting with the name for Sunday.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Calendar.C1Calendar.AbbreviatedDayNames">
            <summary>
            Gets or sets the 3-letter abbreviations for the names of the days of the week.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Calendar.C1Calendar.MonthNames">
            <summary>
            Gets or sets the  month names for the C1Calendar.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Calendar.C1Calendar.LastSelDate">
            <summary>
            Gets or sets the last selected date for C1Calendar.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Calendar.C1Calendar.WebSchedule">
            <summary>
            Gets or sets the C1Schedule control to interact with.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Calendar.C1Calendar.WebScheduleClientObjID">
            <summary>
            
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Calendar.C1Calendar.EmbeddedVisualStyles">
            <summary>
            
            </summary>
        </member>
        <member name="E:C1.Web.UI.Controls.C1Calendar.C1Calendar.SelectedDatesChanged">
            <summary>
            Fires when the SelectedDates property is changed by mouse clicking.
            </summary>
        </member>
        <member name="E:C1.Web.UI.Controls.C1Calendar.C1Calendar.DisplayDateChanged">
            <summary>
            Fires when the DisplayDate property is changed by navigating.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Calendar.C1Calendar.ClientOnSelectedDatesChanged">
            <summary>
            Handler name of the client SelectedDatesChanged event.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Calendar.C1Calendar.ClientOnBeforePopup">
            <summary>
            Gets or sets the method to be called before calendar is popup.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Calendar.C1Calendar.ClientOnAfterPopup">
            <summary>
            Gets or sets the method to be called after calendar is popup.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Calendar.C1Calendar.ClientOnBeforeClose">
            <summary>
            Gets or sets the method to be called before the calendar is closed.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Calendar.C1Calendar.ClientOnAfterClose">
            <summary>
            Gets or sets the method to be called after the calendar is closed.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Calendar.C1Calendar.ClientOnSelChange">
            <summary>
            Gets or sets the method to be called when selection is made.
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1Calendar.C1CalendarDay">
            <summary>
            Class that defines the properties for custom days.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Calendar.C1CalendarDay.#ctor">
            <summary>
            Initialize a new instance of CalendarDay.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Calendar.C1CalendarDay.#ctor(System.DateTime,System.String)">
            <summary>
            
            </summary>
            <param name="date"></param>
            <param name="css"></param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Calendar.C1CalendarDay.#ctor(System.DateTime,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="date"></param>
            <param name="css"></param>
            <param name="templateID"></param>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Calendar.C1CalendarDay.Date">
            <summary>
            The date this custom day represents.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Calendar.C1CalendarDay.ClassName">
            <summary>
            The CSS class name of this calendar day.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Calendar.C1CalendarDay.TemplateID">
            <summary>
            ID of template added in DayTemplates collection.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Calendar.C1CalendarDay.Template">
            <summary>
            Gets or sets the specified template for C1CalendarDay.
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1Calendar.C1CalendarDayCollection">
            <summary>
            Collection of CalendarDay objects.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Calendar.C1CalendarDayCollection.#ctor(C1.Web.UI.Controls.C1Calendar.C1Calendar)">
            <summary>
            Initialize a new instance of C1CalendarDayCollection.
            </summary>
            <param name="calendar"></param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Calendar.C1CalendarDayCollection.OnInsertComplete(System.Int32,System.Object)">
            <summary>
            
            </summary>
            <param name="index"></param>
            <param name="value"></param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Calendar.C1CalendarDayCollection.Add(C1.Web.UI.Controls.C1Calendar.C1CalendarDay)">
            <summary>
            Adds a CalendarDay to this collection.
            </summary>
            <param name="day">A CalendarDay to add.</param>
            <returns>The position in this collection.</returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Calendar.C1CalendarDayCollection.AddRange(C1.Web.UI.Controls.C1Calendar.C1CalendarDay[])">
            <summary>
            Adds a range of CalendarDay to this collection.
            </summary>
            <param name="days">CalendarDay array.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Calendar.C1CalendarDayCollection.Clear">
            <summary>
            Clear this collection.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Calendar.C1CalendarDayCollection.Contains(C1.Web.UI.Controls.C1Calendar.C1CalendarDay)">
            <summary>
            Detects whether the CalendarDay is contained in this collection.
            </summary>
            <param name="day">CalendarDay to detect.</param>
            <returns>True if contained.</returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Calendar.C1CalendarDayCollection.IndexOf(System.Object)">
            <summary>
            Gets the index of a CalendarDay in this collection.
            </summary>
            <param name="day">CalendarDay to detect.</param>
            <returns>Position in this collection.</returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Calendar.C1CalendarDayCollection.Insert(System.Int32,C1.Web.UI.Controls.C1Calendar.C1CalendarDay)">
            <summary>
            Inserts a CalendarDay in this collection.
            </summary>
            <param name="index">Position to insert.</param>
            <param name="day">The CalendarDay to insert.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Calendar.C1CalendarDayCollection.Remove(C1.Web.UI.Controls.C1Calendar.C1CalendarDay)">
            <summary>
            Removes a CalendarDay from this collection.
            </summary>
            <param name="day">The CalendarDay to remove.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Calendar.C1CalendarDayCollection.RemoveAt(System.Int32)">
            <summary>
            Removes a C1CalendarDay from this collection at specified position.
            </summary>
            <param name="index">The index of C1CalendarDay in this collection.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Calendar.C1CalendarDayCollection.RemoveRange(System.Int32,System.Int32)">
            <summary>
            Removes a range of CalendarDay in this collection.
            </summary>
            <param name="index">Start index.</param>
            <param name="count">Number of CalendarDay.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Calendar.C1CalendarDayCollection.Reverse">
            <summary>
            Revers the order of CalendarDays in this collection.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Calendar.C1CalendarDayCollection.Sort">
            <summary>
            Sorts the CalendarDays in this collection.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Calendar.C1CalendarDayCollection.Sort(System.Collections.IComparer)">
            <summary>
            Sorts the CalendarDays in this collection.
            </summary>
            <param name="comparer">Custom comparer.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Calendar.C1CalendarDayCollection.ToArray">
            <summary>
            Converts the collection to CalendarDay array.
            </summary>
            <returns>Array of CalendarDay.</returns>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Calendar.C1CalendarDayCollection.Item(System.Object)">
            <summary>
            Indexer of this collection.
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="T:C1.Web.UI.Controls.C1Calendar.C1CalendarDayTemplate">
            <summary>
            The template host for custom days.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Calendar.C1CalendarDayTemplate.#ctor">
            <summary>
            Constructor of C1CalendarDayTemplate.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Calendar.C1CalendarDayTemplate.Content">
            <summary>
            Gets or sets the ITemplate for the custom calendar day.
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1Calendar.C1CalendarDayTemplateCollection">
            <summary>
            Collection class for C1CalendarDayTemplate.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Calendar.C1CalendarDayTemplateCollection.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Calendar.C1CalendarDayTemplateCollection.Add(C1.Web.UI.Controls.C1Calendar.C1CalendarDayTemplate)">
            <summary>
            Adds a C1CalendarDayTemplate object to the collection.
            </summary>
            <param name="temp">The C1CalendarDayTemplate to be added.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Calendar.C1CalendarDayTemplateCollection.AddRange(C1.Web.UI.Controls.C1Calendar.C1CalendarDayTemplate[])">
            <summary>
            Adds an array of C1CalendarDayTemplate objects.
            </summary>
            <param name="temps">The array of the C1CalendarDayTemplate objects to be added.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Calendar.C1CalendarDayTemplateCollection.Clear">
            <summary>
            Clears this collection.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Calendar.C1CalendarDayTemplateCollection.Contains(C1.Web.UI.Controls.C1Calendar.C1CalendarDayTemplate)">
            <summary>
            Detects whether the C1CalendarDayTemplate object is contained in this collection.
            </summary>
            <param name="temp">The C1CalendarDayTemplate object to be detected.</param>
            <returns>True if exists.</returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Calendar.C1CalendarDayTemplateCollection.Remove(C1.Web.UI.Controls.C1Calendar.C1CalendarDayTemplate)">
            <summary>
            Removes a C1CalendarDayTemplate object from this collection.
            </summary>
            <param name="temp">The C1CalendarDayTemplate object to be removed.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Calendar.C1CalendarDayTemplateCollection.RemoveAt(System.Int32)">
            <summary>
            Removes a C1CalendarDayTemplate object at specified position from this collection.
            </summary>
            <param name="index"></param>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Calendar.C1CalendarDayTemplateCollection.Count">
            <summary>
            Gets the number of C1CalendarDayTemplate objects contained in this collection.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Calendar.C1CalendarDayTemplateCollection.Item(System.Object)">
            <summary>
            Indexer of this collection.
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="T:C1.Web.UI.Controls.C1Calendar.WeekDayFormat">
            <summary>
            Determines the format for displaying the week day.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Calendar.WeekDayFormat.FirstLetter">
            <summary>
            Displays the first single letter of the day of the week.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Calendar.WeekDayFormat.FirstTwoLetters">
            <summary>
            Displays the first two letters of the day of the week.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Calendar.WeekDayFormat.Abbreviated">
            <summary>
            Displays the abbreviated name of the day of the week.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Calendar.WeekDayFormat.Full">
            <summary>
            Displays the full name of the day of the week.
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1Calendar.MonthDayFormat">
            <summary>
            Determines the format for displaying the month day.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Calendar.MonthDayFormat.NoPadding">
            <summary>
            Displays the day in month. Single-digit days will not have a leading zero.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Calendar.MonthDayFormat.ZeroPadding">
            <summary>
            Displays the day in month. Single-digit days will not have a leading zero.
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1Calendar.SelectionMode">
            <summary>
            Determines the mode of selection.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Calendar.SelectionMode.None">
            <summary>
            Selection is not allowed.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Calendar.SelectionMode.Day">
            <summary>
            Only one single day can be selected.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Calendar.SelectionMode.Days">
            <summary>
            More days can be selected, by pressing the Ctrl or Shift keys.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Calendar.SelectionMode.WeekDay">
            <summary>
            Week days are selectable.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Calendar.SelectionMode.WeekNumber">
            <summary>
            Week numbers are selectable.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Calendar.SelectionMode.Month">
            <summary>
            Entire month is selectable.
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1Calendar.NavigationEffect">
            <summary>
            Animation effects while switching between months.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Calendar.NavigationEffect.None">
            <summary>
            No effect.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Calendar.NavigationEffect.Auto">
            <summary>
            Default month view switching behavior.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Calendar.NavigationEffect.Fade">
            <summary>
            The current month view fades out, then the next month view fades in.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Calendar.NavigationEffect.SlideLeft">
            <summary>
            The current month view slides out while the next month view slide in, both from right to left.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Calendar.NavigationEffect.SlideRight">
            <summary>
            The current month view slides out while the next month view slide in, both from left to right.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Calendar.NavigationEffect.SlideTop">
            <summary>
            The current month view slides out while the next month view slide in, both from bottom to top.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Calendar.NavigationEffect.SlideBottom">
            <summary>
            The current month view slides out while the next month view slide in, both from top to bottom.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Calendar.NavigationEffect.SlideLeftRight">
            <summary>
            The current month view slides out from the right to left, while the next month view slides in from the left to right.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Calendar.NavigationEffect.SlideRightLeft">
            <summary>
            The current month view slides out from the left to right, while the next month view slides in from the right to left.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Calendar.NavigationEffect.SlideTopBottom">
            <summary>
            The current month view slides out from the bottom to top, while the next month view slides in from the top to bottom.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Calendar.NavigationEffect.SlideBottomTop">
            <summary>
            The current month view slides out from the top to bottom, while the next month view slides in from the bottom to top.
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1Calendar.NavigationButton">
            <summary>
            Enumeration that determines the display of navigation buttons.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Calendar.NavigationButton.None">
            <summary>
            No navigation buttons are displayed.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Calendar.NavigationButton.Normal">
            <summary>
            Displays the previous and next buttons.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Calendar.NavigationButton.Quick">
            <summary>
            Displays the previous, next, quick previous and quick next buttons.
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1Calendar.C1CalendarTemplateContainer">
            <summary>
            Container control that is used to instantiate calendar day template.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Calendar.C1CalendarTemplateContainer.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1Calendar.C1Date">
            <summary>
            Wrapper class that stores calendar date for persisting.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Calendar.C1Date.#ctor">
            <summary>
            Initialize a new instance of C1Date.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Calendar.C1Date.#ctor(System.DateTime)">
            <summary>
            Initialize a new instance of C1Date.
            </summary>
            <param name="date">The date stored in this wrapper.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Calendar.C1Date.#ctor(System.Int32,System.Int32,System.Int32)">
            <summary>
            Initialize a new instance of C1Date.
            </summary>
            <param name="year">Year.</param>
            <param name="month">Month.</param>
            <param name="day">Day.</param>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Calendar.C1Date.Date">
            <summary>
            Gets or sets the date stored in this wrapper.
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1Calendar.C1DateCollection">
            <summary>
            Collection of C1Date.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Calendar.C1DateCollection.#ctor">
            <summary>
            Initialize a new instance of C1DateCollection.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Calendar.C1DateCollection.Add(System.DateTime)">
            <summary>
            Adds a C1Date object that wrapps the specified date in this collection.
            </summary>
            <param name="date">Date to add.</param>
            <returns>Position in this collection.</returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Calendar.C1DateCollection.Add(C1.Web.UI.Controls.C1Calendar.C1Date)">
            <summary>
            Adds a C1Date object in this collection.
            </summary>
            <param name="date">C1Date to add.</param>
            <returns>Position in this collection.</returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Calendar.C1DateCollection.AddRange(C1.Web.UI.Controls.C1Calendar.C1Date[])">
            <summary>
            Adds a range of C1Date objects.
            </summary>
            <param name="dates">C1Date object array.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Calendar.C1DateCollection.AddRange(System.DateTime,System.DateTime)">
            <summary>
            Adds a range of C1Date objects that represents the dates.
            </summary>
            <param name="start">Start date.</param>
            <param name="end">End date.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Calendar.C1DateCollection.Clear">
            <summary>
            Clears the collection.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Calendar.C1DateCollection.Clone">
            <summary>
            Clone the C1DateCollection.
            </summary>
            <returns>New C1DateCollection.</returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Calendar.C1DateCollection.Contains(System.DateTime)">
            <summary>
            Determines whether the date is contained by one of wrapper in this collection.
            </summary>
            <param name="date">Date object to detect.</param>
            <returns>True if contained.</returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Calendar.C1DateCollection.Contains(C1.Web.UI.Controls.C1Calendar.C1Date)">
            <summary>
            Determines whether the C1Date is contained in this collection.
            </summary>
            <param name="date">C1Date object to detect.</param>
            <returns>True if contained.</returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Calendar.C1DateCollection.IndexOf(System.DateTime)">
            <summary>
            Detects the index of C1Date object that represents the specified date.
            </summary>
            <param name="date">The date to detect.</param>
            <returns>Index of C1Date object that represents the specified date.</returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Calendar.C1DateCollection.IndexOf(System.Object)">
            <summary>
            Detects the index of C1Date object that represents the specified date.
            </summary>
            <param name="date">THe date to detect.</param>
            <returns>Index of C1Date object that represents the specified date.</returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Calendar.C1DateCollection.Insert(System.Int32,C1.Web.UI.Controls.C1Calendar.C1Date)">
            <summary>
            Inserts the C1Date object in this collection.
            </summary>
            <param name="index">Insert position.</param>
            <param name="date">C1Date to insert.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Calendar.C1DateCollection.Remove(C1.Web.UI.Controls.C1Calendar.C1Date)">
            <summary>
            Removes the C1Date object from the collection.
            </summary>
            <param name="date">C1Date object to remove.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Calendar.C1DateCollection.RemoveAt(System.Int32)">
            <summary>
            Removes the C1Date object from the position.
            </summary>
            <param name="index">Positon of C1Date object.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Calendar.C1DateCollection.Sort">
            <summary>
            Sorts the C1Date collection.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Calendar.C1DateCollection.Sort(System.Collections.IComparer)">
            <summary>
            Sorts the C1Date collection by using the specified comparer.
            </summary>
            <param name="comparer">IComparer</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Calendar.C1DateCollection.ToArray">
            <summary>
            Converts the C1Date collection to array.
            </summary>
            <returns>C1Date object array.</returns>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Calendar.C1DateCollection.Item(System.Object)">
            <summary>
            Indexer of this collection.
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="T:C1.Web.UI.Controls.C1Editor.C1Editor">
            <summary>
            Represents a C1Editor in an ASP.NET Web page.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Editor.C1Editor.#ctor">
            <summary>
            Creates a new instance of the C1Editor class.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Editor.C1Editor.OnTextChanged(System.EventArgs)">
            <summary>
            Raises TextChanged event.
            </summary>
            <param name="e">The specified EventArgs object.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Editor.C1Editor.OnTextSaved(System.EventArgs)">
            <summary>
            Raises TextSaved event.
            </summary>
            <param name="e">The specified EventArgs object.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Editor.C1Editor.ClientEncode(System.String)">
            <summary>
            Client Encode
            </summary>
            <param name="html">The specified string.</param>
            <returns>Return a string.</returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Editor.C1Editor.ClientDecode(System.String)">
            <summary>
            Client Decode
            </summary>
            <param name="html">The specified string.</param>
            <returns>Return a string.</returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Editor.C1Editor.CreateChildControls">
            <summary>
            Called by the ASP.NET page framework to notify server controls that use composition-based
            implementation to create any child controls they contain in preparation for posting back or rendering.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Editor.C1Editor.CreateDialog">
            <summary>
            Create a dialog for the control.
            </summary>
            <returns></returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Editor.C1Editor.CreateSubDialog">
            <summary>
            Create a sub dialog for the control.
            </summary>
            <returns></returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Editor.C1Editor.CreateSpellCheckerDialog">
            <summary>
            Create a spell checker dialog for the control.
            </summary>
            <returns></returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Editor.C1Editor.EndWithSlash(System.String)">
            <summary>
            Ends the path with a slash character if it does not has.
            </summary>
            <param name="path"></param>
            <returns></returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Editor.C1Editor.GetImageResource(System.String,C1.Web.UI.Controls.C1Editor.IconType)">
            <summary>
            Gets the URL of image resource.
            </summary>
            <param name="imageName">The specified name.</param>
            <param name="iconType">The specified type.</param>
            <returns>Return image url.</returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Editor.C1Editor.SetEditorIcons(System.Collections.Hashtable)">
            <summary>
            
            </summary>
            <param name="iconsForItems"></param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Editor.C1Editor.GetVisualStyleCssClassName">
            <summary>
            Gets the class name of visual style.
            </summary>
            <returns></returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Editor.C1Editor.OnPreRender(System.EventArgs)">
            <summary>
            Raises the PreRender event.
            </summary>
            <param name="e">An EventArgs object that contains the event data.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Editor.C1Editor.AddAttributesToRender(System.Web.UI.HtmlTextWriter)">
            <summary>
            Adds HTML attributes and styles that need to be rendered to the specified HtmlTextWriterTag.
            </summary>
            <param name="writer">A HtmlTextWriter that represents the output stream to render HTML content on the client.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Editor.C1Editor.Render(System.Web.UI.HtmlTextWriter)">
            <summary>
            Renders the control to the specified HTML writer.
            </summary>
            <param name="writer">The HtmlTextWriter object that receives the control content.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Editor.C1Editor.RenderContents(System.Web.UI.HtmlTextWriter)">
            <summary>
            Renders the contents of the control to the specified writer. This method is used primarily by control developers.
            </summary>
            <param name="writer">A System.Web.UI.HtmlTextWriter that represents the output stream to render HTML content on the client.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Editor.C1Editor.GetScriptDescriptors">
            <summary>
            When overridden in a derived class, registers the ScriptDescriptor objects for the control.
            </summary>
            <returns>An enumeration of ScriptDescriptor objects.</returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Editor.C1Editor.GetScriptReferences">
            <summary>
            When overridden in a derived class, registers the script libraries for the control.
            </summary>
            <returns>
            An object that implements the IEnumerable interface and that contains
            ECMAScript (JavaScript) files that have been registered as embedded resources.
            </returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Editor.C1Editor.RenderDesignTimeStyleSheets(System.Web.UI.HtmlTextWriter,System.Boolean)">
            <summary>
            Override this method if you want to render additional stylesheets definitions what will be used by control only at design-time.
            </summary>
            <remarks>Primarily this method used by control developers.
            Note, stylesheet styles.css from embedded VisualStyle will be included automatically by VisualStyle mechanism.</remarks>
            <param name="writer"></param>
            <param name="beforeVisualStyle"></param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Editor.C1Editor.GetEditorDialogsContent(System.String)">
            <summary>
            Get content of dialog by name.
            </summary>
            <param name="dialogName">The specified dialog name.</param>
            <returns>Return a string.</returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Editor.C1Editor.GetResourceTextContent(System.String,System.Reflection.Assembly)">
            <summary>
            Get content of embedded resource.
            </summary>
            <param name="name">The specified name.</param>
            <param name="assembly">The specified Assembly object.</param>
            <returns>Return a string.</returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Editor.C1Editor.GetCallbackFunction(System.String,System.String,System.String)">
            <summary>
            Get reference of CallbackEvent.
            </summary>
            <param name="Params">The specified parameter.</param>
            <param name="ClientID">The ClientID of control.</param>
            <param name="context">The context of control.</param>
            <returns>Return a string.</returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Editor.C1Editor.base64Encode(System.String)">
            <summary>
            base64Encode
            </summary>
            <param name="data">The string data.</param>
            <returns>Return a string.</returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Editor.C1Editor.base64Decode(System.String)">
            <summary>
            base64Decode
            </summary>
            <param name="data">The string data.</param>
            <returns>Return a string.</returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Editor.C1Editor.GetCallbackResult">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Editor.C1Editor.RaiseCallbackEvent(System.String)">
            <summary>
            
            </summary>
            <param name="eventArgument"></param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Editor.C1Editor.System#Web#UI#IPostBackDataHandler#LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)">
            <summary>
            Processes postback data for an ASP.NET server control.
            </summary>
            <param name="postDataKey">The key identifier for the control.</param>
            <param name="postCollection">The collection of all incoming name values.</param>
            <returns>true if the server control's state changes as a result of the postback; otherwise, false.</returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Editor.C1Editor.System#Web#UI#IPostBackDataHandler#RaisePostDataChangedEvent">
            <summary>
            Notify the ASP.NET application that the state of the control has changed.
            </summary>
        </member>
        <member name="E:C1.Web.UI.Controls.C1Editor.C1Editor.TextChanged">
            <summary>
            TextChanged event.
            </summary>
        </member>
        <member name="E:C1.Web.UI.Controls.C1Editor.C1Editor.TextSaved">
            <summary>
            TextSaved event.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Editor.C1Editor.RibbonUI">
            <summary>
            
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Editor.C1Editor.DictionaryPath">
            <summary>
            SpellChecker dictionary path.
            </summary>
            <example>
            Example of the relative path: "~/Dictionaries/C1Spell_de-DE.dct"
            </example>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Editor.C1Editor.ShowSpellCheckerDialog">
            <summary>
             Indicates whether to show SpellChecker dialog or just allow a user to select suggestions from context menu.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Editor.C1Editor.Height">
            <summary>
             Gets or sets the height of the C1Editor.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Editor.C1Editor.Width">
            <summary>
            Gets or sets the width of the slider.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Editor.C1Editor.EditorMode">
            <summary>
            Editor mode (WYSIWYG/Code/Split).
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Editor.C1Editor.ShowPathSelector">
            <summary>
            Show the path selector.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Editor.C1Editor.FullScreenMode">
            <summary>
            Full screen mode. Set this property to true if you want to switch editor to FullScreen Mode.  All client area of the page will be covered by WebEditor.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Editor.C1Editor.FullScreenModeContainerID">
            <summary>
            Full screen mode container ID. Use this property to specify container which will be used as the parent control for FullScreenMode instead of client's area on the web page.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Editor.C1Editor.DialogUploadFolder">
            <summary>
            Gets or sets the virtual path of the folder, where C1Editor will automatically save the valid files after the FileUpload of dialog completes.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Editor.C1Editor.Text">
            <summary>
            The HTML text to edit.
            </summary>       
        </member>
        <member name="P:C1.Web.UI.Controls.C1Editor.C1Editor.EmbeddedVisualStyles">
            <summary>
            Returns string array with embedded visual style names.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Editor.C1Editor.UseEmbeddedVisualStyles">
            <summary>
            If true then control will use VisualStyle embedded into control's assembly.
            otherwise control will load VisualStyle from disk.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Editor.C1Editor.VisualStylePath">
            <summary>
            Path to visual styles.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Editor.C1Editor.VisualStyle">
            <summary>
            VisualStyle name.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Editor.C1Editor.TagKey">
            <summary>
            Changed the type of  control's  tag.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Editor.C1Editor.Enabled">
            <summary>
            Gets or sets if control is Enabled.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Editor.C1Editor.EnableContextMenu">
            <summary>
            Gets or sets if contextmenu is Enabled.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Editor.C1Editor.EnablePaste">
            <summary>
            Gets or sets if contextmenu is Enabled.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Editor.C1Editor.FindScriptObject">
            <summary>
            Returns javascript string with reference to javascript object
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1Editor.C1EditorConst">
            <summary>
            C1EditorConst
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Editor.C1EditorConst.Page_Insert">
            <summary>
            Insert
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Editor.C1EditorConst.Page_Format">
            <summary>
            Format
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Editor.C1EditorConst.Group_Action">
            <summary>
            Action
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Editor.C1EditorConst.Group_Font">
            <summary>
            Font
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Editor.C1EditorConst.Group_Paragraph">
            <summary>
            Paragraph
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Editor.C1EditorConst.Group_Review">
            <summary>
            Review
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Editor.C1EditorConst.Group_Tables">
            <summary>
            Tables
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Editor.C1EditorConst.Group_Breaks">
            <summary>
            Breaks
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Editor.C1EditorConst.Group_Forms">
            <summary>
            Forms
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Editor.C1EditorConst.Group_Special">
            <summary>
            Special
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Editor.C1EditorConst.Toolbar_Save">
            <summary>
            save_tb
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Editor.C1EditorConst.Toolbar_Edit">
            <summary>
            edit_tb
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Editor.C1EditorConst.Toolbar_Font">
            <summary>
            font_tb
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Editor.C1EditorConst.Toolbar_Paragraph">
            <summary>
            para_tb
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Editor.C1EditorConst.Toolbar_SpellCheck">
            <summary>
            review_spell_tb
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Editor.C1EditorConst.Toolbar_Inspect">
            <summary>
            review_inspect_tb
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Editor.C1EditorConst.Toolbar_Table">
            <summary>
            table_tb
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Editor.C1EditorConst.Toolbar_EditTable">
            <summary>
            table_edit_tb
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Editor.C1EditorConst.Toolbar_Breaks">
            <summary>
            break_tb
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Editor.C1EditorConst.Toolbar_Forms">
            <summary>
            forms_tb
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Editor.C1EditorConst.Toolbar_Link">
            <summary>
            link_tb
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Editor.C1EditorConst.Toolbar_Special">
            <summary>
            special_tb
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1Editor.C1EditorDialogHandler">
            <summary>
            The HttpHandler for dialog.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Editor.C1EditorDialogHandler.GetDocType">
            <summary>
            Get the type of document.
            </summary>
            <returns>Return the specified LiteralControl object.</returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Editor.C1EditorDialogHandler.ResetDefaultMarginAndPadding(System.Web.UI.HtmlControls.HtmlControl)">
            <summary>
            Reset margin and padding of the specified HtmlControl.
            </summary>
            <param name="control">The specified HtmlControl.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Editor.C1EditorDialogHandler.GetHtml">
            <summary>
            Create a html element.
            </summary>
            <returns>Return a html element.</returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Editor.C1EditorDialogHandler.GetHead">
            <summary>
            Create a head element for page.
            </summary>
            <returns>Return a page element.</returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Editor.C1EditorDialogHandler.GetBody">
            <summary>
            Create a body element.
            </summary>
            <returns>Return a body element.</returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Editor.C1EditorDialogHandler.GetForm">
            <summary>
            Create a form.
            </summary>
            <returns>Return a form.</returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Editor.C1EditorDialogHandler.CreatePageControls">
            <summary>
            Create controls for WEB page.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Editor.C1EditorDialogHandler.OnInit(System.EventArgs)">
            <summary>
            Raises the System.Web.UI.Control.Init event to initialize the page.
            </summary>
            <param name="e">An System.EventArgs that contains the event data.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Editor.C1EditorDialogHandler.GetDialog(System.String)">
            <summary>
            Get dialog control.
            </summary>
            <param name="name">The specified name.</param>
            <returns>Return a control.</returns>
        </member>
        <member name="T:C1.Web.UI.Controls.C1Editor.C1EditorFontNameList">
            <summary>
            
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Editor.C1EditorFontNameList.#ctor(C1.Web.UI.Controls.C1Editor.C1Editor)">
            <summary>
            constructor.
            </summary>
            <param name="owner">The specified C1Editor object.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Editor.C1EditorFontNameList.InstantiateIn(System.Web.UI.Control)">
            <summary>
            Create child controls for container.
            </summary>
            <param name="container">The container.</param>
        </member>
        <member name="T:C1.Web.UI.Controls.C1Editor.C1EditorFontSizeList">
            <summary>
            
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Editor.C1EditorFontSizeList.#ctor(C1.Web.UI.Controls.C1Editor.C1Editor)">
            <summary>
            constructor.
            </summary>
            <param name="owner">The specified C1Editor object.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Editor.C1EditorFontSizeList.InstantiateIn(System.Web.UI.Control)">
            <summary>
            Create child controls for container.
            </summary>
            <param name="container">The container.</param>
        </member>
        <member name="T:C1.Web.UI.Controls.C1Editor.C1EditorDesignView">
            <summary>
            Represents the DesignView in C1WebEditor.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Editor.C1EditorDesignView.#ctor(C1.Web.UI.Controls.C1Editor.C1Editor,System.Boolean)">
            <summary>
            constructor.
            </summary>
            <param name="owner">The specified C1Editor object.</param>
            <param name="isDesignMode">The specified bool value.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Editor.C1EditorDesignView.InstantiateIn(System.Web.UI.Control)">
            <summary>
            Create child controls for container.
            </summary>
            <param name="container">The container.</param>
        </member>
        <member name="T:C1.Web.UI.Controls.C1Editor.C1EditorSourceView">
            <summary>
            Represents the SourceView in C1WebEditor.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Editor.C1EditorSourceView.#ctor(C1.Web.UI.Controls.C1Editor.C1Editor,System.Boolean)">
            <summary>
            constructor.
            </summary>
            <param name="owner">The specified C1Editor object.</param>
            <param name="isDesignMode">The bool value.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Editor.C1EditorSourceView.InstantiateIn(System.Web.UI.Control)">
            <summary>
            Create child controls for container.
            </summary>
            <param name="container">The container.</param>
        </member>
        <member name="T:C1.Web.UI.Controls.C1Editor.IconType">
            <summary>
            
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Editor.IconType.None">
            <summary>
            None
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Editor.IconType.Redo">
            <summary>
            Redo
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Editor.IconType.Undo">
            <summary>
            Undo
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Editor.IconType.BackColor">
            <summary>
            BackColor
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Editor.IconType.Indent">
            <summary>
            Indent
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Editor.IconType.Outdent">
            <summary>
            Outdent
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Editor.IconType.Bold">
            <summary>
            Bold
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Editor.IconType.Borders">
            <summary>
            Borders
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Editor.IconType.Br">
            <summary>
            Br
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Editor.IconType.Copy">
            <summary>
            Copy
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Editor.IconType.Cut">
            <summary>
            Cut
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Editor.IconType.Print">
            <summary>
            Print
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Editor.IconType.Button">
            <summary>
            Button
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Editor.IconType.Checkbox">
            <summary>
            Checkbox
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Editor.IconType.Dropdown">
            <summary>
            Dropdown
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Editor.IconType.Form">
            <summary>
            Form
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Editor.IconType.Hiddenfield">
            <summary>
            Hiddenfield
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Editor.IconType.Imagebutton">
            <summary>
            Imagebutton
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Editor.IconType.Listbox">
            <summary>
            Listbox
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Editor.IconType.Passwordfield">
            <summary>
            Passwordfield
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Editor.IconType.Radiobox">
            <summary>
            Radiobox
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Editor.IconType.Textarea">
            <summary>
            Textarea
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Editor.IconType.Textbox">
            <summary>
            Textbox
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Editor.IconType.ForeColor">
            <summary>
            ForeColor
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Editor.IconType.Findandreplace">
            <summary>
            Findandreplace
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Editor.IconType.Fullscreen">
            <summary>
            Fullscreen
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Editor.IconType.Hr">
            <summary>
            Hr
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Editor.IconType.Imagebrowser">
            <summary>
            Imagebrowser
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Editor.IconType.Italic">
            <summary>
            Italic
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Editor.IconType.Justifycenter">
            <summary>
            Justifycenter
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Editor.IconType.Justifyfull">
            <summary>
            Justifyfull
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Editor.IconType.Justifyleft">
            <summary>
            Justifyleft
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Editor.IconType.Justifyright">
            <summary>
            Justifyright
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Editor.IconType.Link32">
            <summary>
            Link32
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Editor.IconType.ListOrdered">
            <summary>
            ListOrdered
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Editor.IconType.ListUnordered">
            <summary>
            ListUnordered
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Editor.IconType.Media">
            <summary>
            Media
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Editor.IconType.Paragraph">
            <summary>
            Paragraph
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Editor.IconType.Paste">
            <summary>
            Paste
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Editor.IconType.Preview">
            <summary>
            Preview
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Editor.IconType.Printpagebreak">
            <summary>
            Printpagebreak
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Editor.IconType.Removeformat">
            <summary>
            Removeformat
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Editor.IconType.Save32">
            <summary>
            Save32
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Editor.IconType.Selectall">
            <summary>
            Selectall
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Editor.IconType.SourceMode">
            <summary>
            SourceMode
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Editor.IconType.Specialcharacters">
            <summary>
            Specialcharacters
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Editor.IconType.Spellcheck32">
            <summary>
            Spellcheck32
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Editor.IconType.SplitMode">
            <summary>
            SplitMode
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Editor.IconType.Table32">
            <summary>
            Table32
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Editor.IconType.Taginspector">
            <summary>
            Taginspector
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Editor.IconType.Deletecell">
            <summary>
            Deletecell
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Editor.IconType.Deletecolumn">
            <summary>
            Deletecolumn
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Editor.IconType.Deleterow">
            <summary>
            Deleterow
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Editor.IconType.Edittable">
            <summary>
            Edittable
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Editor.IconType.Insertcell">
            <summary>
            Insertcell
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Editor.IconType.Insertcolumn">
            <summary>
            Insertcolumn
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Editor.IconType.Insertrow">
            <summary>
            Insertrow
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Editor.IconType.Inserttable">
            <summary>
            Inserttable
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Editor.IconType.Mergecell">
            <summary>
            Mergecell
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Editor.IconType.Splitcell">
            <summary>
            Splitcell
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Editor.IconType.Template">
            <summary>
            Template
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Editor.IconType.TextStrike">
            <summary>
            TextStrike
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Editor.IconType.TextSubscript">
            <summary>
            TextSubscript
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Editor.IconType.TextSuperscript">
            <summary>
            TextSuperscript
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Editor.IconType.Timestamp">
            <summary>
            Timestamp
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Editor.IconType.Underline">
            <summary>
            Underline
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Editor.IconType.Wrap">
            <summary>
            Wrap
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Editor.IconType.WysiwygMode">
            <summary>
            WysiwygMode
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1Editor.ToolBarsSet">
            <summary>
            Enumeration that represents Set of predefined ToolBars 
            available to the end-user.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Editor.ToolBarsSet.None">
            <summary>
            None of predefined ToolBars are available to the end-user.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Editor.ToolBarsSet.Common">
            <summary>
            Common ToolBar.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Editor.ToolBarsSet.Style">
            <summary>
            Style ToolBar.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Editor.ToolBarsSet.Formatting">
            <summary>
            Formatting ToolBar.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Editor.ToolBarsSet.TableEditing">
            <summary>
            TableEditing ToolBar.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Editor.ToolBarsSet.HTMLElements">
            <summary>
            HTML Elements ToolBar.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Editor.ToolBarsSet.EditorMode">
            <summary>
            EditorMode ToolBar.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Editor.ToolBarsSet.All">
            <summary>
            Allows all ToolBars. It is the default value.
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1Editor.EditorMode">
            <summary>
            Represents editor mode (WYSIWYG/Code/Split).
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Editor.EditorMode.WYSIWYG">
            <summary>
            WYSIWYG mode.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Editor.EditorMode.Code">
            <summary>
            Code editing mode.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Editor.EditorMode.Split">
            <summary>
            Split mode.
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1Editor.CommonButton">
            <summary>
            
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Editor.CommonButton.None">
            <summary>
            None of predefined buttons of the CommonToolBar are available to the end-user.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Editor.CommonButton.FullScreen">
            <summary>
            Full Screen
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Editor.CommonButton.Save">
            <summary>
            Save
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Editor.CommonButton.Preview">
            <summary>
            Preview
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Editor.CommonButton.Cut">
            <summary>
            Cut
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Editor.CommonButton.Copy">
            <summary>
            Copy
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Editor.CommonButton.Paste">
            <summary>
            Paste
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Editor.CommonButton.SelectAll">
            <summary>
            Select All
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Editor.CommonButton.Undo">
            <summary>
            Undo
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Editor.CommonButton.Redo">
            <summary>
            Redo
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Editor.CommonButton.FindAndReplace">
            <summary>
            Find and replace
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Editor.CommonButton.ShowTableBorders">
            <summary>
            Show Table Borders
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Editor.CommonButton.InsertHyperlink">
            <summary>
            Insert Hyperlink
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Editor.CommonButton.InsertSpecialCharacter">
            <summary>
            Insert special character
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Editor.CommonButton.InsertDateAndTime">
            <summary>
            Insert Date and Time
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Editor.CommonButton.TagInspector">
            <summary>
            Tag inspector
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Editor.CommonButton.ImageBrowser">
            <summary>
            Image Browser
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Editor.CommonButton.SpellCheck">
            <summary>
            Spell Check
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Editor.CommonButton.CleanUp">
            <summary>
            Cleanup HTML
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Editor.CommonButton.All">
            <summary>
            Allows all buttons of the CommonToolBar. 
            </summary> 
        </member>
        <member name="F:C1.Web.UI.Controls.C1Editor.CommonButton.Print">
            <summary>
            Print
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1Editor.StyleButton">
            <summary>
            
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Editor.StyleButton.None">
            <summary>
            None of predefined buttons of the StyleToolBar are available to the end-user.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Editor.StyleButton.DropDownCSSClass">
            <summary>
            DropDown CSS Class
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Editor.StyleButton.DropDownFormat">
            <summary>
            DropDown Format
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Editor.StyleButton.DropDownFont">
            <summary>
            DropDown Font
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Editor.StyleButton.DropDownSize">
            <summary>
            DropDown Size
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Editor.StyleButton.Bold">
            <summary>
            Bold
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Editor.StyleButton.Italic">
            <summary>
            Italic
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Editor.StyleButton.Underline">
            <summary>
            Underline
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Editor.StyleButton.Strikethrough">
            <summary>
            Strikethrough
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Editor.StyleButton.Subscript">
            <summary>
            Subscript
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Editor.StyleButton.Superscript">
            <summary>
            Superscript
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Editor.StyleButton.RemoveFormat">
            <summary>
            Remove Format
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Editor.StyleButton.All">
            <summary>
            Allows all buttons of the StyleToolBar.
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1Editor.FormattingButton">
            <summary>
            
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Editor.FormattingButton.None">
            <summary>
            None of predefined buttons of the FormattingToolBar are available to the end-user.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Editor.FormattingButton.InsertBreak">
            <summary>
            Insert Break
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Editor.FormattingButton.InsertParagraph">
            <summary>
            Insert Paragraph
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Editor.FormattingButton.InsertPrintPageBreak">
            <summary>
            Insert Print Page Break
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Editor.FormattingButton.InsertHorizontalLine">
            <summary>
            Insert Horizontal Line
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Editor.FormattingButton.JustifyLeft">
            <summary>
            Justify Left
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Editor.FormattingButton.JustifyCenter">
            <summary>
            Justify Center
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Editor.FormattingButton.JustifyRight">
            <summary>
            Justify Right
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Editor.FormattingButton.JustifyFull">
            <summary>
            Justify Full
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Editor.FormattingButton.NumberedList">
            <summary>
            Numbered List
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Editor.FormattingButton.BulletedList">
            <summary>
            Bulleted List
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Editor.FormattingButton.Outdent">
            <summary>
            Outdent
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Editor.FormattingButton.Indent">
            <summary>
            Indent
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Editor.FormattingButton.BackgroundColor">
            <summary>
            Background Color
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Editor.FormattingButton.FontColor">
            <summary>
            Font Color
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Editor.FormattingButton.All">
            <summary>
            Allows all buttons of the FormattingToolBar.
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1Editor.TableEditingButton">
            <summary>
            
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Editor.TableEditingButton.None">
            <summary>
            None of predefined buttons of the TableEditingToolBar are available to the end-user.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Editor.TableEditingButton.InsertTable">
            <summary>
            Insert Table
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Editor.TableEditingButton.EditTable">
            <summary>
            Edit Table
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Editor.TableEditingButton.InsertColumn">
            <summary>
            Insert Column
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Editor.TableEditingButton.InsertRow">
            <summary>
            Insert Row
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Editor.TableEditingButton.InsertCell">
            <summary>
            Insert Cell
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Editor.TableEditingButton.SplitCell">
            <summary>
            Split Cell
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Editor.TableEditingButton.DeleteRow">
            <summary>
            Delete Row
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Editor.TableEditingButton.DeleteColumn">
            <summary>
            Delete Column
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Editor.TableEditingButton.DeleteCell">
            <summary>
            Delete Cell
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Editor.TableEditingButton.MergeCell">
            <summary>
            Merge Cell
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Editor.TableEditingButton.All">
            <summary>
            Allows all buttons of the TableEditingToolBar.
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1Editor.HtmlElementsButton">
            <summary>
            
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Editor.HtmlElementsButton.None">
            <summary>
            None of predefined buttons of the HtmlElementsToolBar are available to the end-user.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Editor.HtmlElementsButton.InsertForm">
            <summary>
            Insert Form
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Editor.HtmlElementsButton.InsertTextArea">
            <summary>
            Insert TextArea
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Editor.HtmlElementsButton.InsertTextBox">
            <summary>
            Insert TextBox
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Editor.HtmlElementsButton.InsertPasswordField">
            <summary>
            Insert Password Field
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Editor.HtmlElementsButton.InsertHiddenField">
            <summary>
            Insert Hidden Field
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Editor.HtmlElementsButton.InsertListBox">
            <summary>
            Insert ListBox
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Editor.HtmlElementsButton.InsertDropDownList">
            <summary>
            Insert DropDownList
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Editor.HtmlElementsButton.InsertRadioButton">
            <summary>
            Insert Radio Button
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Editor.HtmlElementsButton.InsertCheckBox">
            <summary>
            Insert CheckBox
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Editor.HtmlElementsButton.InsertImageButton">
            <summary>
            Insert Image Button
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Editor.HtmlElementsButton.InsertButton">
            <summary>
            Insert Button
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Editor.HtmlElementsButton.InsertMedia">
            <summary>
            Insert Media
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Editor.HtmlElementsButton.All">
            <summary>
            Allows all buttons of the HtmlElementsToolBar.
            </summary>  
        </member>
        <member name="T:C1.Web.UI.Controls.C1Editor.EditorModeButton">
            <summary>
            
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Editor.EditorModeButton.None">
            <summary>
            None of predefined buttons of the EditorModeToolBar are available to the end-user.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Editor.EditorModeButton.DesignView">
            <summary>
            Design View
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Editor.EditorModeButton.SourceView">
            <summary>
            Source View
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Editor.EditorModeButton.SplitView">
            <summary>
            Split View
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Editor.EditorModeButton.WordWrap">
            <summary>
            Word Wrap
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Editor.EditorModeButton.All">
            <summary>
            Allows all buttons of the EditorModeToolBar.
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1Editor.EditorRibbonGroup">
            <summary>
            EditorRibbonGroups
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Editor.EditorRibbonGroup.Action">
            <summary>
            Action
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Editor.EditorRibbonGroup.Font">
            <summary>
            Font
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Editor.EditorRibbonGroup.Paragraph">
            <summary>
            Paragraph
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Editor.EditorRibbonGroup.Review">
            <summary>
            Review
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Editor.EditorRibbonGroup.Tables">
            <summary>
            Tables
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Editor.EditorRibbonGroup.Breaks">
            <summary>
            Breaks
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Editor.EditorRibbonGroup.Forms">
            <summary>
            Breaks
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Editor.EditorRibbonGroup.Special">
            <summary>
            Special
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1Editor.RemovedButtonNamesConverter">
            <summary>
             Provides a unified way of converting types of RemovedButtonNames to other types, as well
             as for accessing standard values and subproperties.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Editor.RemovedButtonNamesConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Returns whether this converter can convert an object of the given type to
            the type of this converter, using the specified context.
            </summary>
            <param name="context">An System.ComponentModel.ITypeDescriptorContext that provides a format context.</param>
            <param name="sourceType">A System.Type that represents the type you want to convert from.</param>
            <returns>true if this converter can perform the conversion; otherwise, false.</returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Editor.RemovedButtonNamesConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            Converts the given object to the type of this converter, using the specified
            context and culture information.
            </summary>
            <param name="context">An System.ComponentModel.ITypeDescriptorContext that provides a format context.</param>
            <param name="culture">The System.Globalization.CultureInfo to use as the current culture.</param>
            <param name="value">The System.Object to convert.</param>
            <returns>An System.Object that represents the converted value.</returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Editor.RemovedButtonNamesConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
             Converts the given value object to the specified type, using the specified
             context and culture information.
            </summary>
            <param name="context">An System.ComponentModel.ITypeDescriptorContext that provides a format context.</param>
            <param name="culture">A System.Globalization.CultureInfo. If null is passed, the current culture is assumed.</param>
            <param name="value">The System.Object to convert.</param>
            <param name="destinationType">The System.Type to convert the value parameter to.</param>
            <returns>An System.Object that represents the converted value.</returns>
        </member>
        <member name="T:C1.Web.UI.Controls.C1Editor.DialogControls.ColorDialog">
            <summary>
            Represents a ColorDialog in an ASP.NET Web page.
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1Editor.DialogControls.UserControlBase">
            <summary>
            Defines the properties, methods that are shared by dialog.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Editor.DialogControls.UserControlBase.CreateChildControls">
            <summary>
            Called by the ASP.NET page framework to notify server controls that use composition-based
            implementation to create any child controls they contain in preparation for
            posting back or rendering.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Editor.DialogControls.UserControlBase.GetEditorDialogsContent(System.String)">
            <summary>
            Gets content of embedded resource.
            </summary>
            <param name="userControlFileName">The specified file name.</param>
            <returns>Return a string.</returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Editor.DialogControls.UserControlBase.FindControlRecursiveInt(System.Web.UI.Control,System.String)">
            <summary>
            Find control from web page.
            </summary>
            <param name="parent">The specified control.</param>
            <param name="id">The ID of control.</param>
            <returns>Return a control.</returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Editor.DialogControls.UserControlBase.FindControlRecursive(System.String)">
            <summary>
            Find control from web page.
            </summary>
            <param name="id">The ID of control.</param>
            <returns>Return a control.</returns>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Editor.DialogControls.UserControlBase.UserControlFileName">
            <summary>
            Gets the file name of embedded resource.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Editor.DialogControls.ColorDialog.OnInit(System.EventArgs)">
            <summary>
            Raises the System.Web.UI.Control.Init event.
            </summary>
            <param name="e">An System.EventArgs object that contains the event data.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Editor.DialogControls.ColorDialog.OnLoad(System.EventArgs)">
            <summary>
            Raises the System.Web.UI.Control.Load event.
            </summary>
            <param name="e">The System.EventArgs object that contains the event data.</param>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Editor.DialogControls.ColorDialog.UserControlFileName">
            <summary>
            Gets file name of UserControl.
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1Editor.DialogControls.HyperLinkDialog">
            <summary>
            Represents a HyperLinkDialog in an ASP.NET Web page.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Editor.DialogControls.HyperLinkDialog.OnInit(System.EventArgs)">
            <summary>
            Raises the System.Web.UI.Control.Init event.
            </summary>
            <param name="e">An System.EventArgs object that contains the event data.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Editor.DialogControls.HyperLinkDialog.OnLoad(System.EventArgs)">
            <summary>
            Raises the System.Web.UI.Control.Load event.
            </summary>
            <param name="e">The System.EventArgs object that contains the event data.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Editor.DialogControls.HyperLinkDialog.Btn_Upload_Click(System.Object,System.EventArgs)">
            <summary>
            Raise click event for upload button.
            </summary>
            <param name="sender">The specified object.</param>
            <param name="e">The specified EventArgs object.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Editor.DialogControls.HyperLinkDialog.GetAppPath">
            <summary>
            Gets App path.
            </summary>
            <returns>Return a string.</returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Editor.DialogControls.HyperLinkDialog.GetAppUrl">
            <summary>
            Gets App url.
            </summary>
            <returns>Return a string.</returns>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Editor.DialogControls.HyperLinkDialog.UserControlFileName">
            <summary>
            Gets file name of UserControl.
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1Editor.DialogControls.ImageEditorDialog">
            <summary>
            Represents a ImageEditorDialog in an ASP.NET Web page.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Editor.DialogControls.ImageEditorDialog.OnInit(System.EventArgs)">
            <summary>
            Raises the System.Web.UI.Control.Init event.
            </summary>
            <param name="e">An System.EventArgs object that contains the event data.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Editor.DialogControls.ImageEditorDialog.Btn_Upload_Click(System.Object,System.EventArgs)">
            <summary>
            Raise click event for upload button.
            </summary>
            <param name="sender">The specified object.</param>
            <param name="e">The specified EventArgs object.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Editor.DialogControls.ImageEditorDialog.OnLoad(System.EventArgs)">
            <summary>
            Raises the System.Web.UI.Control.Load event.
            </summary>
            <param name="e">The System.EventArgs object that contains the event data.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Editor.DialogControls.ImageEditorDialog.LoadFiles">
            <summary>
            Load files.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Editor.DialogControls.ImageEditorDialog.GetAppPath">
            <summary>
            Gets App path.
            </summary>
            <returns>Return a string.</returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Editor.DialogControls.ImageEditorDialog.GetAppUrl">
            <summary>
            Gets App url.
            </summary>
            <returns>Return a string.</returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Editor.DialogControls.ImageEditorDialog.IsValidFileType(System.String)">
            <summary>
            The designated file types on the validity
            </summary>
            <param name="fileName">The specified file name.</param>
            <returns>Return a bool value.</returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Editor.DialogControls.ImageEditorDialog.ReturnFilesArray">
            <summary>
            Gets file array.
            </summary>
            <returns>Return a array.</returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Editor.DialogControls.ImageEditorDialog.IsImageFile(System.IO.FileInfo)">
            <summary>
            Match the image file.
            </summary>
            <param name="aFile">The specified FileInfo object.</param>
            <returns>Return a bool value.</returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Editor.DialogControls.ImageEditorDialog.ReturnDirectoriesArray">
            <summary>
            Gets directory array.
            </summary>
            <returns>Return a array.</returns>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Editor.DialogControls.ImageEditorDialog.UserControlFileName">
            <summary>
            Gets file name of UserControl.
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1Editor.DialogControls.TemplateDialog">
            <summary>
            Represents a TemplateDialog in an ASP.NET Web page.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Editor.DialogControls.TemplateDialog.OnInit(System.EventArgs)">
            <summary>
            Raises the System.Web.UI.Control.Init event.
            </summary>
            <param name="e">An System.EventArgs object that contains the event data.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Editor.DialogControls.TemplateDialog.Btn_Delete_Click(System.Object,System.EventArgs)">
            <summary>
            Raise click event for delete button.
            </summary>
            <param name="sender">The specified object.</param>
            <param name="e">The specified EventArgs object.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Editor.DialogControls.TemplateDialog.Btn_Save_Click(System.Object,System.EventArgs)">
            <summary>
            Raise click event for delete button.
            </summary>
            <param name="sender">The specified object.</param>
            <param name="e">The specified EventArgs object.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Editor.DialogControls.TemplateDialog.OnLoad(System.EventArgs)">
            <summary>
            Raises the System.Web.UI.Control.Load event.
            </summary>
            <param name="e">The System.EventArgs object that contains the event data.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Editor.DialogControls.TemplateDialog.LoadFiles">
            <summary>
            Load files.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Editor.DialogControls.TemplateDialog.IsHtmlFile(System.IO.FileInfo)">
            <summary>
            Match the image file.
            </summary>
            <param name="aFile">The specified FileInfo object.</param>
            <returns>Return a bool value.</returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Editor.DialogControls.TemplateDialog.GetAppPath">
            <summary>
            Gets App path.
            </summary>
            <returns>Return a string.</returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Editor.DialogControls.TemplateDialog.GetAppUrl">
            <summary>
            Gets App url.
            </summary>
            <returns>Return a string.</returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Editor.DialogControls.TemplateDialog.ReturnFilesArray">
            <summary>
            Gets file array.
            </summary>
            <returns>Return a array.</returns>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Editor.DialogControls.TemplateDialog.UserControlFileName">
            <summary>
            Gets file name of UserControl.
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1Gauge.C1GaugeBase">
            <summary>
            The base class for other Gauges.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.C1GaugeBase.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.C1GaugeBase.Load(System.String)">
            <summary>
            Loads a Gauge definition from an XML file.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.C1GaugeBase.Load(System.IO.Stream)">
            <summary>
            Loads a Gauge definition from a <see cref="T:System.IO.Stream"/>.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.C1GaugeBase.Save(System.String)">
            <summary>
            Saves a Gauge definition into an XML file.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.C1GaugeBase.Save(System.String,System.Text.Encoding)">
            <summary>
            Saves a Gauge definition into an XML file.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.C1GaugeBase.Save(System.IO.Stream)">
            <summary>
            Saves a Gauge definition into a <see cref="T:System.IO.Stream"/>.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.C1GaugeBase.Save(System.IO.Stream,System.Text.Encoding)">
            <summary>
            Saves a Gauge definition into a <see cref="T:System.IO.Stream"/>.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.C1GaugeBase.Load(System.Xml.XmlDocument)">
            <summary>
            Loads a Gauge from an <see cref="T:System.Xml.XmlDocument"/>.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.C1GaugeBase.Save(System.Xml.XmlWriter)">
            <summary>
            Saves a Gauge definition into an <see cref="T:System.Xml.XmlWriter"/>.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.C1GaugeBase.LoadView(System.String)">
            <summary>
            Loads a Gauge view from an XML file.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.C1GaugeBase.LoadView(System.IO.Stream)">
            <summary>
            Loads a Gauge view from a <see cref="T:System.IO.Stream"/>.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.C1GaugeBase.SaveView(System.String)">
            <summary>
            Saves a Gauge view into an XML file.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.C1GaugeBase.SaveView(System.String,System.Text.Encoding)">
            <summary>
            Saves a Gauge view into an XML file.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.C1GaugeBase.SaveView(System.IO.Stream)">
            <summary>
            Saves a Gauge view into a <see cref="T:System.IO.Stream"/>.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.C1GaugeBase.SaveView(System.IO.Stream,System.Text.Encoding)">
            <summary>
            Saves a Gauge view into a <see cref="T:System.IO.Stream"/>.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.C1GaugeBase.LoadView(System.Xml.XmlDocument)">
            <summary>
            Loads a Gauge view from an <see cref="T:System.Xml.XmlDocument"/>.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.C1GaugeBase.SaveView(System.Xml.XmlWriter)">
            <summary>
            Saves a Gauge view into an <see cref="T:System.Xml.XmlWriter"/>.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.C1GaugeBase.ShouldSerializeDecorators">
            <summary>
            This member is for internal use only.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.C1GaugeBase.ShouldSerializeFaceShapes">
            <summary>
            This member is for internal use only.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.C1GaugeBase.ShouldSerializeCoverShapes">
            <summary>
            This member is for internal use only.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.C1GaugeBase.ShouldSerializeCommonBorders">
            <summary>
            This member is for internal use only.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.C1GaugeBase.ShouldSerializeCommonFillings">
            <summary>
            This member is for internal use only.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.C1GaugeBase.ShouldSerializeCommonFonts">
            <summary>
            This member is for internal use only.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.C1GaugeBase.ShouldSerializeCommonGradients">
            <summary>
            This member is for internal use only.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.C1GaugeBase.ShouldSerializeCommonImages">
            <summary>
            This member is for internal use only.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.C1GaugeBase.ShouldSerializeCommonShadows">
            <summary>
            This member is for internal use only.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.C1GaugeBase.ShouldSerializeCommonShapes">
            <summary>
            This member is for internal use only.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.C1GaugeBase.ShouldSerializeColorMaps">
            <summary>
            This member is for internal use only.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.C1GaugeBase.ShouldSerializeImageMaps">
            <summary>
            This member is for internal use only.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.C1GaugeBase.ShouldSerializeViewport">
            <summary>
            This member is for internal use only.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.C1GaugeBase.ShouldSerializeMorePointers">
            <summary>
            This member is for internal use only.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.C1GaugeBase.ShouldSerializePointer">
            <summary>
            This member is for internal use only.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.C1GaugeBase.OnPointerValueChanged(C1.Web.UI.Controls.C1Gauge.PointerValueChangedEventArgs)">
            <summary>
            Raises the <see cref="E:C1.Web.UI.Controls.C1Gauge.C1GaugeBase.PointerValueChanged"/> event.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.C1GaugeBase.OnValueChanged(System.EventArgs)">
            <summary>
            Raises the <see cref="E:C1.Web.UI.Controls.C1Gauge.C1GaugeBase.ValueChanged"/> event.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.C1GaugeBase.OnFormatLabel(C1.Web.UI.Controls.C1Gauge.FormatLabelEventArgs)">
            <summary>
            Raises the <see cref="E:C1.Web.UI.Controls.C1Gauge.C1GaugeBase.FormatLabel"/> event.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.C1GaugeBase.Reset">
            <summary>
            Clears all collections and resets the properties to their default values.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.C1GaugeBase.GetValueAt(System.Int32,System.Int32)">
            <summary>
            Returns the Value that corresponds to the specified mouse position:
            (x, y), relative to the parent control.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.C1GaugeBase.RoundValueToSnaps(System.Double,System.Double)">
            <summary>
            Returns the number nearest 'value' that is the multiple of the specified
            snapping interval ('snapInterval').
            </summary>
            <remarks>
            If the Gauge uses logarithmic scale the snapping interval is expected
            to be in logarithmic coordinates.
            </remarks>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.C1GaugeBase.RoundValueToSnaps(System.Double,System.Double,System.Double)">
            <summary>
            Returns the number nearest 'value' that is the multiple of the specified snapping
            interval ('snapInterval') counting from the given origin ('snapOrigin').
            </summary>
            <remarks>
            If the Gauge uses logarithmic scale the snapInterval and snapOrigin values
            are expected to be in logarithmic coordinates.
            </remarks>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.C1GaugeBase.IncValueToSnaps(System.Double,System.Int32,System.Double)">
            <summary>
            Rounds the value to the next intervalsCount'th (first, second, etc.)
            multiple of the specified snapping interval ('snapInterval').
            </summary>
            <remarks>
            If the Gauge uses logarithmic scale the snapInterval value is expected
            to be in logarithmic coordinates.
            </remarks>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.C1GaugeBase.IncValueToSnaps(System.Double,System.Int32,System.Double,System.Double)">
            <summary>
            Rounds the value to the next intervalsCount'th (first, second, etc.)
            multiple of the specified snapping interval ('snapInterval'). The
            snapOrigin parameter specifies the point of origin for snapping.
            </summary>
            <remarks>
            If the Gauge uses logarithmic scale the snapInterval and snapOrigin
            values are expected to be in logarithmic coordinates.
            </remarks>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.C1GaugeBase.ToString">
            <summary>
            Returns a string that represents the current object.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.C1GaugeBase.ValueToAlpha(System.Double)">
            <summary>
            Function that interpolates the current value to 0-1.
            </summary>
            <param name="value">Gauge's value (between Minimum and Maximum).</param>
            <returns>0 when value is the Minimum, 1 when value is the Maximum, something between 0 and 1 in other cases.</returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.C1GaugeBase.AlphaToValue(System.Double)">
            <summary>
            Function that interpolates a 0-1 range to the Gauge value.
            </summary>
            <param name="alpha">The alpha.</param>
            <returns>
            Minimum when alpha is 0, Maximum when value is 1, something between Minimum and Maximum in other cases.
            </returns>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugeBase.BoundValue">
            <summary>
            Gets or sets the bound data value associated with the main pointer.
            </summary>
            <remarks>
            Use this property to bind the Gauge to values that can be null.
            </remarks>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugeBase.MorePointersValue_0">
            <summary>
            Gets or sets the bound data value associated with pointer #0 from the <see cref="P:C1.Web.UI.Controls.C1Gauge.C1GaugeBase.MorePointers"/> collection.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugeBase.MorePointersValue_1">
            <summary>
            Gets or sets the bound data value associated with pointer #1 from the <see cref="P:C1.Web.UI.Controls.C1Gauge.C1GaugeBase.MorePointers"/> collection.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugeBase.MorePointersValue_2">
            <summary>
            Gets or sets the bound data value associated with pointer #2 from the <see cref="P:C1.Web.UI.Controls.C1Gauge.C1GaugeBase.MorePointers"/> collection.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugeBase.MorePointersValue_3">
            <summary>
            Gets or sets the bound data value associated with pointer #3 from the <see cref="P:C1.Web.UI.Controls.C1Gauge.C1GaugeBase.MorePointers"/> collection.
            </summary>
        </member>
        <member name="E:C1.Web.UI.Controls.C1Gauge.C1GaugeBase.BeforeOwnerChanged">
            <summary>
            This event is for internal use only.
            </summary>
        </member>
        <member name="E:C1.Web.UI.Controls.C1Gauge.C1GaugeBase.AfterOwnerChanged">
            <summary>
            This event is for internal use only.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugeBase.Owner">
            <summary>
            Gets the owner control.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugeBase.IsDisposed">
            <summary>
            Gets a value indicating whether the Gauge has already been disposed.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugeBase.Name">
            <summary>
            Gets or sets a name associated with the Gauge.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugeBase.ViewTag">
            <summary>
            Gets or sets a digital tag identifying this element's views.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugeBase.Bounds">
            <summary>
            Gets the size and location of the Gauge, in pixels, relative to the parent control.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugeBase.Decorators">
            <summary>
            Gets the collection of the Gauge decorators.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugeBase.FaceShapes">
            <summary>
            Gets the collection of shapes in the bottom layer (between the background and the decorators).
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugeBase.FaceAhead">
            <summary>
            Gets or sets whether the <see cref="P:C1.Web.UI.Controls.C1Gauge.C1GaugeBase.FaceShapes"/> should appear in front of the other Gauges.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugeBase.CoverShapes">
            <summary>
            Gets the collection of shapes in the top layer (over everything).
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugeBase.CommonBorders">
            <summary>
            Gets the collection of templates for the <see cref="T:C1.Web.UI.Controls.C1Gauge.C1GaugeBorder"/> object.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugeBase.CommonFillings">
            <summary>
            Gets the collection of templates for the <see cref="T:C1.Web.UI.Controls.C1Gauge.C1GaugeFilling"/> object.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugeBase.CommonFonts">
            <summary>
            Gets the collection of templates for text font and color.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugeBase.CommonGradients">
            <summary>
            Gets the collection of templates for the <see cref="T:C1.Web.UI.Controls.C1Gauge.C1GaugeGradient"/> object.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugeBase.CommonImages">
            <summary>
            Gets the collection of templates for the <see cref="T:C1.Web.UI.Controls.C1Gauge.C1GaugeCustomImage"/> object.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugeBase.CommonShadows">
            <summary>
            Gets the collection of templates for the <see cref="T:C1.Web.UI.Controls.C1Gauge.C1GaugeShadow"/> object.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugeBase.CommonShapes">
            <summary>
            Gets the collection of templates for the <see cref="T:C1.Web.UI.Controls.C1Gauge.C1GaugeCustomShape"/> object.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugeBase.ColorMaps">
            <summary>
            Gets the collection of templates for value colors.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugeBase.ImageMaps">
            <summary>
            Gets the collection of templates for value images.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugeBase.Viewport">
            <summary>
            Specifies the bounds of the Gauge working area.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugeBase.MorePointers">
            <summary>
            Gets the collection of the other pointers, except the main pointer.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugeBase.Pointer">
            <summary>
            Gets the main Gauge pointer.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugeBase.Value">
            <summary>
            Gets or sets the current value of the Gauge.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugeBase.Minimum">
            <summary>
            Minimum value for the Gauge.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugeBase.Maximum">
            <summary>
            Maximum value for the Gauge.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugeBase.SlidingScale">
            <summary>
            Optimizes painting for the case if the <see cref="P:C1.Web.UI.Controls.C1Gauge.C1GaugeBase.Minimum"/> and <see cref="P:C1.Web.UI.Controls.C1Gauge.C1GaugeBase.Maximum"/> properties are variable.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugeBase.IsLogarithmic">
            <summary>
            Gets or sets if it uses a logarithmic scale. When true, uses the LogarithmicBase.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugeBase.LogarithmicBase">
            <summary>
            Gets or sets the log base used when the IsLogarithmic is set to True.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugeBase.IsReversed">
            <summary>
            Gets or sets whether scale values should appear in reversed order (from Maximum to Minimum).
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugeBase.Visible">
            <summary>
            Gets or sets whether the Gauge is visible.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugeBase.Enabled">
            <summary>
            Gets or sets whether the Gauge is enabled.
            </summary>
        </member>
        <member name="E:C1.Web.UI.Controls.C1Gauge.C1GaugeBase.PointerValueChanged">
            <summary>
            Occurs when the <see cref="P:C1.Web.UI.Controls.C1Gauge.C1GaugePointer.Value"/> property changes for some Gauge pointer.
            </summary>
        </member>
        <member name="E:C1.Web.UI.Controls.C1Gauge.C1GaugeBase.ValueChanged">
            <summary>
            Occurs when the <see cref="P:C1.Web.UI.Controls.C1Gauge.C1GaugeBase.Value"/> property changes for the main pointer.
            </summary>
        </member>
        <member name="E:C1.Web.UI.Controls.C1Gauge.C1GaugeBase.FormatLabel">
            <summary>
            Occurs when <see cref="T:C1.Web.UI.Controls.C1Gauge.C1GaugeLabels"/> or <see cref="T:C1.Web.UI.Controls.C1Gauge.C1GaugeSingleLabel"/> converts a value to the string representation.
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1Gauge.C1LinearGauge">
            <summary>
            Control that shows a linear Gauge.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.C1LinearGauge.#ctor">
            <summary>
            Initializes a new instance of a <see cref="T:C1.Web.UI.Controls.C1Gauge.C1LinearGauge"/>.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1LinearGauge.AxisStartCoordinate">
            <summary>
            Gets the x-coordinate (for horizontal Gauge) or y-coordinate
            (for vertical Gauge) of the position where the longitudinal axis
            starts, in pixels.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1LinearGauge.AxisLengthInPixels">
            <summary>
            Gets the length of the longitudinal axis, in pixels.
            </summary>
            <remarks>
            Negative value corresponds to the inverted direction of the longitudinal axis.
            </remarks>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1LinearGauge.BaseOriginCoordinate">
            <summary>
            Gets the y-coordinate (for horizontal Gauge) or x-coordinate
            (for vertical Gauge) of the location where the transversal axis
            starts, in pixels.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1LinearGauge.BaseFactorInPixels">
            <summary>
            Gets the length of the transversal axis, in pixels.
            </summary>
            <remarks>
            Negative value corresponds to the inverted direction of the transversal axis.
            </remarks>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1LinearGauge.Orientation">
            <summary>
            Orientation of a <see cref="T:C1.Web.UI.Controls.C1Gauge.C1LinearGauge"/>.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1LinearGauge.AxisStart">
            <summary>
            Gets or sets the fraction-based position where the longitudinal axis starts.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1LinearGauge.AxisLength">
            <summary>
            Gets or sets the fraction-based length of the longitudinal axis.
            </summary>
            <remarks>
            0 represents 0, and 1 represents the length of the <see cref="T:C1.Web.UI.Controls.C1Gauge.C1LinearGauge"/>.
            Negative value inverts the direction of the longitudinal axis.
            </remarks>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1LinearGauge.OffPosition">
            <summary>
            Gets or sets the fraction-based position used when the <see cref="P:C1.Web.UI.Controls.C1Gauge.C1GaugeBase.Value"/> is set to Double.NaN.
            </summary>
            <remarks>
            Set to Double.NaN to hide the pointer.
            </remarks>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1LinearGauge.BaseOrigin">
            <summary>
            Gets or sets the fraction-based location where the transversal axis starts.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1LinearGauge.BaseFactor">
            <summary>
            Gets or sets the fraction-based length of the transversal axis.
            </summary>
            <remarks>
            1 represents the whole height (for a horizontal Gauge) or width
            (for a vertical Gauge). 0 represents 0.
            Negative value inverts the direction of the transversal axis.
            </remarks>
        </member>
        <member name="T:C1.Web.UI.Controls.C1Gauge.C1RadialGauge">
            <summary>
            Control that shows a radial Gauge.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.C1RadialGauge.#ctor">
            <summary>
            Initializes a new instance of a <see cref="T:C1.Web.UI.Controls.C1Gauge.C1RadialGauge"/>.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.C1RadialGauge.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.C1RadialGauge.ShouldSerializeCap">
            <summary>
            This member is for internal use only.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1RadialGauge.RadiusInPixels">
            <summary>
            Gets the radius of a <see cref="T:C1.Web.UI.Controls.C1Gauge.C1RadialGauge"/>, in pixels.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1RadialGauge.PointerOriginXCoordinate">
            <summary>
            Gets the x-coordinate of the pointer origin, in pixels.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1RadialGauge.PointerOriginYCoordinate">
            <summary>
            Gets the y-coordinate of the pointer origin, in pixels.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1RadialGauge.Radius">
            <summary>
            Gets or sets the fraction-based radius of a <see cref="T:C1.Web.UI.Controls.C1Gauge.C1RadialGauge"/>.
            </summary>
            <remarks>
            1 represents the Min(Width, Height) of the Gauge. 0 represents 0.
            </remarks>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1RadialGauge.PointerOriginX">
            <summary>
            Fraction-based X coordinate of the pointer origin of a <see cref="T:C1.Web.UI.Controls.C1Gauge.C1RadialGauge"/>.
            </summary>
            <remarks>
            The Point (0, 0) corresponds to the top-left corner of the Gauge's viewport
            and the Point (0.5, 0.5) is the center of the viewport.
            </remarks>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1RadialGauge.PointerOriginY">
            <summary>
            Fraction-based Y coordinate of the pointer origin of a <see cref="T:C1.Web.UI.Controls.C1Gauge.C1RadialGauge"/>.
            </summary>
            <remarks>
            The Point (0, 0) corresponds to the top-left corner of the Gauge's viewport
            and the Point (0.5, 0.5) is the center of the viewport.
            </remarks>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1RadialGauge.Cap">
            <summary>
            Gets the Gauge pointer cap.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1RadialGauge.StartAngle">
            <summary>
            Start angle for the <see cref="T:C1.Web.UI.Controls.C1Gauge.C1RadialGauge"/> axis. 0 is the topmost point of the circumference.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1RadialGauge.SweepAngle">
            <summary>
            Sweep angle for the <see cref="T:C1.Web.UI.Controls.C1Gauge.C1RadialGauge"/> values. The Maximum value will be placed at StartAngle + SweepAngle
            unless the scale is reversed.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1RadialGauge.OffAngle">
            <summary>
            Gets or sets the angle of the pointer when the <see cref="P:C1.Web.UI.Controls.C1Gauge.C1GaugeBase.Value"/> value is set to Double.NaN.
            </summary>
            <remarks>
            Set to Double.NaN to hide the pointer.
            </remarks>
        </member>
        <member name="T:C1.Web.UI.Controls.C1Gauge.C1GaugeBorder">
            <summary>
            Encapsulates properties of a pen used to draw borders of Gauge elements.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.C1GaugeBorder.#ctor">
            <summary>
            This ctor is for internal use only.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.C1GaugeBorder.ShouldSerializeColor">
            <summary>
            This member is for internal use only.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.C1GaugeBorder.ResetColor">
            <summary>
            This member is for internal use only.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugeBorder.CommonBorderName">
            <summary>
            Gets or sets the name of the border template.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugeBorder.LineStyle">
            <summary>
            Gets or sets the style of lines drawn with a border.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugeBorder.Thickness">
            <summary>
            Gets or sets the logical thickness of the border. Negative value
            specifies the width of the border in pixels.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugeBorder.Color">
            <summary>
            Gets or sets the Color of the border.
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1Gauge.C1GaugeCap">
            <summary>
            Defines properties of the Gauge pointer cap.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.C1GaugeCap.Load(System.Xml.XmlDocument)">
            <summary>
            Loads a pointer cap from an <see cref="T:System.Xml.XmlDocument"/>.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.C1GaugeCap.Save(System.Xml.XmlWriter)">
            <summary>
            Saves a pointer cap into an <see cref="T:System.Xml.XmlWriter"/>.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.C1GaugeCap.ShouldSerializeBorder">
            <summary>
            This member is for internal use only.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.C1GaugeCap.ResetBorder">
            <summary>
            This member is for internal use only.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.C1GaugeCap.ShouldSerializeClippings">
            <summary>
            This member is for internal use only.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.C1GaugeCap.ShouldSerializeFilling">
            <summary>
            This member is for internal use only.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.C1GaugeCap.ResetFilling">
            <summary>
            This member is for internal use only.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.C1GaugeCap.ShouldSerializeGradient">
            <summary>
            This member is for internal use only.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.C1GaugeCap.ResetGradient">
            <summary>
            This member is for internal use only.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.C1GaugeCap.ShouldSerializeMoreCircles">
            <summary>
            This member is for internal use only.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.C1GaugeCap.ShouldSerializeCustomImage">
            <summary>
            This member is for internal use only.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.C1GaugeCap.ResetCustomImage">
            <summary>
            This member is for internal use only.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.C1GaugeCap.ShouldSerializeShadow">
            <summary>
            This member is for internal use only.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.C1GaugeCap.ResetShadow">
            <summary>
            This member is for internal use only.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.C1GaugeCap.ToString">
            <summary>
            Returns a string that represents the current object.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugeCap.Owner">
            <summary>
            Gets the owner Gauge.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugeCap.HitTestable">
            <summary>
            Gets or sets whether the pointer cap can be hit-tested.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugeCap.Radius">
            <summary>
            Gets or sets the logical radius of the pointer cap.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugeCap.Border">
            <summary>
            Gets the properties of the pointer cap border.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugeCap.Clippings">
            <summary>
            Gets the collection of shapes that form the clipping region.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugeCap.Filling">
            <summary>
            Adjusts the interior filling of the pointer cap.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugeCap.Gradient">
            <summary>
            Encapsulates properties of a color gradient.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugeCap.MoreCircles">
            <summary>
            Gets the collection of circles for the pointer cap.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugeCap.CustomImage">
            <summary>
            Gets or sets the custom image to draw on the pointer cap.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugeCap.Shadow">
            <summary>
            Encapsulates properties of the pointer cap shadow.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugeCap.BehindPointers">
            <summary>
            Gets or sets whether the pointer cap should appear behind the Gauge pointers.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugeCap.Visible">
            <summary>
            Gets or sets whether the pointer cap is visible.
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1Gauge.C1GaugeCapCircle">
            <summary>
            Interior filling for the pointer cap.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.C1GaugeCapCircle.#ctor">
            <summary>
            Initializes a new instance of the circle.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.C1GaugeCapCircle.ShouldSerializeFilling">
            <summary>
            This member is for internal use only.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.C1GaugeCapCircle.ResetFilling">
            <summary>
            This member is for internal use only.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.C1GaugeCapCircle.ShouldSerializeGradient">
            <summary>
            This member is for internal use only.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.C1GaugeCapCircle.ResetGradient">
            <summary>
            This member is for internal use only.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugeCapCircle.Owner">
            <summary>
            Gets the owner <see cref="T:C1.Web.UI.Controls.C1Gauge.C1GaugeCap"/>.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugeCapCircle.Radius">
            <summary>
            Gets or sets the circle radius in logical coordinates.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugeCapCircle.Filling">
            <summary>
            Adjusts the interior filling of the circle.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugeCapCircle.Gradient">
            <summary>
            Encapsulates properties of a color gradient.
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1Gauge.C1GaugeClipping">
            <summary>
            Associates a clipping region with a Gauge element.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.C1GaugeClipping.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:C1.Web.UI.Controls.C1Gauge.C1GaugeClipping"/>.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.C1GaugeClipping.#ctor(System.String,C1.Web.UI.Controls.C1Gauge.C1GaugeClipOperation,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:C1.Web.UI.Controls.C1Gauge.C1GaugeClipping"/>.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.C1GaugeClipping.FillShapeNames(System.Collections.IList)">
            <summary>
            This method is for internal use only.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.C1GaugeClipping.ToString">
            <summary>
            Returns a String that represents the current <see cref="T:C1.Web.UI.Controls.C1Gauge.C1GaugeClipping"/>.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugeClipping.Owner">
            <summary>
            Gets the owner Gauge element.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugeClipping.ShapeName">
            <summary>
            Gets or sets the name of a Shape that is used for clipping.
            </summary>
            <remarks>
            An empty string here makes reference to the owner element.
            </remarks>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugeClipping.Operation">
            <summary>
            Specifies how the source and given clipping regions are combined.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugeClipping.ScaleFactor">
            <summary>
            Gets or sets the scale factor for the given Shape when it is used for clipping.
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1Gauge.C1GaugeCustomImage">
            <summary>
            Properties of the user-defined image displayed on a Gauge.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.C1GaugeCustomImage.#ctor">
            <summary>
            This ctor is for internal use only.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugeCustomImage.CommonImageName">
            <summary>
            Gets or sets the name of the image template.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugeCustomImage.Width">
            <summary>
            Gets or sets the logical value representing the width of the image.
            </summary>
            <remarks>
            Can be set to double.NaN (default value) to avoid scaling the image in the X-axis direction.
            </remarks>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugeCustomImage.Height">
            <summary>
            Gets or sets the logical value representing the height of the image.
            </summary>
            <remarks>
            Can be set to double.NaN (default value) to avoid scaling the image in the Y-axis direction.
            </remarks>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugeCustomImage.Image">
            <summary>
            Gets or sets the original image.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugeCustomImage.ImageBase64">
            <summary>
            Serializes the Image property.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugeCustomImage.KeepAspectRatio">
            <summary>
            Gets or sets whether the image aspect ratio should be maintained.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugeCustomImage.KeepSize">
            <summary>
            Gets or sets whether the predefined size of the image should not changed.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugeCustomImage.RotateFlipType">
            <summary>
            Gets or sets the direction of an image's rotation and the axis used to flip the image.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugeCustomImage.Hue">
            <summary>
            Allows to modify the image hue by the specified amount (between -180 and 180).
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugeCustomImage.Saturation">
            <summary>
            Allows to modify the image saturation by the specified amount (between -100 and 100).
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugeCustomImage.Lightness">
            <summary>
            Allows to modify the image lightness by the specified amount (between -100 and 100).
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugeCustomImage.Opacity">
            <summary>
            Gets or sets the opacity of the image between 0.0 (completely invisible) and 1.0 (opaque).
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1Gauge.C1GaugeCustomShape">
            <summary>
            Defines properties of a shape used for Gauge marks and pointers.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.C1GaugeCustomShape.#ctor">
            <summary>
            This ctor is for internal use only.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.C1GaugeCustomShape.ShouldSerializeScaleStartRadius">
            <summary>
            This member is for internal use only.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.C1GaugeCustomShape.ResetScaleStartRadius">
            <summary>
            This member is for internal use only.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.C1GaugeCustomShape.ShouldSerializeScaleEndRadius">
            <summary>
            This member is for internal use only.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.C1GaugeCustomShape.ResetScaleEndRadius">
            <summary>
            This member is for internal use only.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.C1GaugeCustomShape.ShouldSerializeStartAngle">
            <summary>
            This member is for internal use only.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.C1GaugeCustomShape.ResetStartAngle">
            <summary>
            This member is for internal use only.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.C1GaugeCustomShape.ShouldSerializeStartRadius">
            <summary>
            This member is for internal use only.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.C1GaugeCustomShape.ResetStartRadius">
            <summary>
            This member is for internal use only.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.C1GaugeCustomShape.ShouldSerializeStartWidth">
            <summary>
            This member is for internal use only.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.C1GaugeCustomShape.ResetStartWidth">
            <summary>
            This member is for internal use only.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.C1GaugeCustomShape.ShouldSerializeEndAngle">
            <summary>
            This member is for internal use only.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.C1GaugeCustomShape.ResetEndAngle">
            <summary>
            This member is for internal use only.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.C1GaugeCustomShape.ShouldSerializeEndRadius">
            <summary>
            This member is for internal use only.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.C1GaugeCustomShape.ResetEndRadius">
            <summary>
            This member is for internal use only.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.C1GaugeCustomShape.ShouldSerializeEndWidth">
            <summary>
            This member is for internal use only.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.C1GaugeCustomShape.ResetEndWidth">
            <summary>
            This member is for internal use only.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.C1GaugeCustomShape.ShouldSerializeStartSwellAngle">
            <summary>
            This member is for internal use only.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.C1GaugeCustomShape.ResetStartSwellAngle">
            <summary>
            This member is for internal use only.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.C1GaugeCustomShape.ShouldSerializeEndSwellAngle">
            <summary>
            This member is for internal use only.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.C1GaugeCustomShape.ResetEndSwellAngle">
            <summary>
            This member is for internal use only.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.C1GaugeCustomShape.ShouldSerializeStartSwellLength">
            <summary>
            This member is for internal use only.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.C1GaugeCustomShape.ResetStartSwellLength">
            <summary>
            This member is for internal use only.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.C1GaugeCustomShape.ShouldSerializeEndSwellLength">
            <summary>
            This member is for internal use only.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.C1GaugeCustomShape.ResetEndSwellLength">
            <summary>
            This member is for internal use only.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.C1GaugeCustomShape.ShouldSerializeStartSwellWidth">
            <summary>
            This member is for internal use only.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.C1GaugeCustomShape.ResetStartSwellWidth">
            <summary>
            This member is for internal use only.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.C1GaugeCustomShape.ShouldSerializeEndSwellWidth">
            <summary>
            This member is for internal use only.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.C1GaugeCustomShape.ResetEndSwellWidth">
            <summary>
            This member is for internal use only.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugeCustomShape.CommonShapeName">
            <summary>
            Gets or sets the name of the shape template.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugeCustomShape.ScaleStartRadius">
            <summary>
            Gets or sets whether the value of the <see cref="P:C1.Web.UI.Controls.C1Gauge.C1GaugeCustomShape.StartRadius"/> property should be scaled.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugeCustomShape.ScaleEndRadius">
            <summary>
            Gets or sets whether the value of the <see cref="P:C1.Web.UI.Controls.C1Gauge.C1GaugeCustomShape.EndRadius"/> property should be scaled.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugeCustomShape.StartAngle">
            <summary>
            Gets or sets the angle of the start cap (between -90 and 90).
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugeCustomShape.StartRadius">
            <summary>
            Gets or sets the logical radius of the start cap.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugeCustomShape.StartWidth">
            <summary>
            Gets or sets the logical width of the start cap.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugeCustomShape.EndAngle">
            <summary>
            Gets or sets the angle of the end cap (between -90 and 90).
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugeCustomShape.EndRadius">
            <summary>
            Gets or sets the logical radius of the end cap.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugeCustomShape.EndWidth">
            <summary>
            Gets or sets the logical width of the end cap.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugeCustomShape.StartSwellAngle">
            <summary>
            Gets or sets the angle of the swell on the start cap (between -90 and 90).
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugeCustomShape.EndSwellAngle">
            <summary>
            Gets or sets the angle of the swell on the end cap (between -90 and 90).
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugeCustomShape.StartSwellLength">
            <summary>
            Gets or sets the logical length of the swell on the start cap.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugeCustomShape.EndSwellLength">
            <summary>
            Gets or sets the logical length of the swell on the end cap.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugeCustomShape.StartSwellWidth">
            <summary>
            Gets or sets the logical width of the swell on the start cap.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugeCustomShape.EndSwellWidth">
            <summary>
            Gets or sets the logical width of the swell on the end cap.
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1Gauge.C1GaugeFilling">
            <summary>
            Encapsulates properties of a brush used to fill Gauge elements.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.C1GaugeFilling.#ctor">
            <summary>
            This ctor is for internal use only.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.C1GaugeFilling.ShouldSerializeColor">
            <summary>
            This member is for internal use only.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.C1GaugeFilling.ResetColor">
            <summary>
            This member is for internal use only.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.C1GaugeFilling.ShouldSerializeColor2">
            <summary>
            This member is for internal use only.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.C1GaugeFilling.ResetColor2">
            <summary>
            This member is for internal use only.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugeFilling.CommonFillingName">
            <summary>
            Gets or sets the name of the filling template.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugeFilling.BrushType">
            <summary>
            Gets or sets the type of brush that is used to fill the element.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugeFilling.Color">
            <summary>
            Gets or sets the Color used to fill the element.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugeFilling.Opacity">
            <summary>
            Gets or sets the opacity of the first color between 0.0 (completely transparent) and 1.0 (opaque).
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugeFilling.Color2">
            <summary>
            Gets or sets the second Color that can be used in a gradient or hatch brush.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugeFilling.Opacity2">
            <summary>
            Gets or sets the opacity of the second color between 0.0 (completely transparent) and 1.0 (opaque).
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugeFilling.SwapColors">
            <summary>
            Gets or sets whether the <see cref="P:C1.Web.UI.Controls.C1Gauge.C1GaugeFilling.Color"/> should be used instead of <see cref="P:C1.Web.UI.Controls.C1Gauge.C1GaugeFilling.Color2"/> and vice versa.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugeFilling.HatchStyle">
            <summary>
            Gets or sets the style of a hatch brush.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugeFilling.TextureImage">
            <summary>
            Gets or sets the Image in texture brush.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugeFilling.TextureImageBase64">
            <summary>
            Serializes the TextureImage property.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugeFilling.WrapMode">
            <summary>
            Gets or sets the wrap mode for the texture brush.
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1Gauge.C1GaugeGradient">
            <summary>
            Encapsulates properties of a color gradient.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.C1GaugeGradient.#ctor">
            <summary>
            This ctor is for internal use only.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugeGradient.CommonGradientName">
            <summary>
            Gets or sets the name of the gradient template.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugeGradient.Direction">
            <summary>
            Gets or sets the direction of a gradient brush.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugeGradient.Falloff">
            <summary>
            Gets or sets the type of a gradient falloff.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugeGradient.CenterPointX">
            <summary>
            Fraction-based X coordinate of the radial gradient center.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugeGradient.CenterPointY">
            <summary>
            Fraction-based Y coordinate of the radial gradient center.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugeGradient.Focus">
            <summary>
            A value from 0 through 1 that specifies the point where the gradient is composed of only the ending color.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugeGradient.FocusScaleX">
            <summary>
            Specifies the focus point X coordinate (between 0 and 1) for the radial gradient falloff.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugeGradient.FocusScaleY">
            <summary>
            Specifies the focus point Y coordinate (between 0 and 1) for the radial gradient falloff.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugeGradient.TranslateX">
            <summary>
            Moves the gradient area by the specified relative amount along the X-axis (before scaling).
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugeGradient.TranslateY">
            <summary>
            Moves the gradient area by the specified relative amount along the Y-axis (before scaling).
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugeGradient.ScaleX">
            <summary>
            Scales the width of the gradient area by the specified amount (after translation).
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugeGradient.ScaleY">
            <summary>
            Scales the height of the gradient area by the specified amount (after translation).
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1Gauge.C1GaugeHotBrush">
            <summary>
            Specifies the properties of a brush to paint selection on the hot item.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.C1GaugeHotBrush.ShouldSerializeColor1">
            <summary>
            This member is for internal use only.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.C1GaugeHotBrush.ResetColor1">
            <summary>
            This member is for internal use only.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.C1GaugeHotBrush.ShouldSerializeColor2">
            <summary>
            This member is for internal use only.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.C1GaugeHotBrush.ResetColor2">
            <summary>
            This member is for internal use only.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugeHotBrush.Color1">
            <summary>
            Gets or sets the first Color of a hatch brush to paint selection on the hot item.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugeHotBrush.Color2">
            <summary>
            Gets or sets the second Color of a hatch brush to paint selection on the hot item.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugeHotBrush.HatchStyle">
            <summary>
            Gets or sets the style of a hatch brush to paint selection on the hot item.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugeHotBrush.Opacity">
            <summary>
            Gets or sets the opacity of the hot selection between 0.0 (completely transparent) and 1.0 (opaque).
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1Gauge.C1GaugePointer">
            <summary>
            Defines properties of the Gauge pointer.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.C1GaugePointer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:C1.Web.UI.Controls.C1Gauge.C1GaugePointer"/>.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.C1GaugePointer.Load(System.Xml.XmlDocument)">
            <summary>
            Loads a pointer from an <see cref="T:System.Xml.XmlDocument"/>.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.C1GaugePointer.Save(System.Xml.XmlWriter)">
            <summary>
            Saves a pointer into an <see cref="T:System.Xml.XmlWriter"/>.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.C1GaugePointer.ShouldSerializeViewTag">
            <summary>
            This member is for internal use only.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.C1GaugePointer.ShouldSerializeOffset">
            <summary>
            This member is for internal use only.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.C1GaugePointer.ResetOffset">
            <summary>
            This member is for internal use only.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.C1GaugePointer.ShouldSerializeLength">
            <summary>
            This member is for internal use only.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.C1GaugePointer.ResetLength">
            <summary>
            This member is for internal use only.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.C1GaugePointer.ShouldSerializeWidth">
            <summary>
            This member is for internal use only.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.C1GaugePointer.ResetWidth">
            <summary>
            This member is for internal use only.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.C1GaugePointer.ShouldSerializeCustomShape">
            <summary>
            This member is for internal use only.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.C1GaugePointer.ResetCustomShape">
            <summary>
            This member is for internal use only.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.C1GaugePointer.ShouldSerializeBorder">
            <summary>
            This member is for internal use only.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.C1GaugePointer.ResetBorder">
            <summary>
            This member is for internal use only.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.C1GaugePointer.ShouldSerializeClippings">
            <summary>
            This member is for internal use only.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.C1GaugePointer.ShouldSerializeFilling">
            <summary>
            This member is for internal use only.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.C1GaugePointer.ResetFilling">
            <summary>
            This member is for internal use only.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.C1GaugePointer.ShouldSerializeGradient">
            <summary>
            This member is for internal use only.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.C1GaugePointer.ResetGradient">
            <summary>
            This member is for internal use only.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.C1GaugePointer.ShouldSerializeCustomImage">
            <summary>
            This member is for internal use only.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.C1GaugePointer.ResetCustomImage">
            <summary>
            This member is for internal use only.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.C1GaugePointer.ShouldSerializeShadow">
            <summary>
            This member is for internal use only.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.C1GaugePointer.ResetShadow">
            <summary>
            This member is for internal use only.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.C1GaugePointer.GetValueAt(System.Int32,System.Int32)">
            <summary>
            Returns the Value that corresponds to the specified mouse position
            (x, y), relative to the parent control.
            </summary>
            <remarks>
            The result is scaled to the pointer's admitted region.
            </remarks>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.C1GaugePointer.GetValueAt(System.Int32,System.Int32,System.Boolean)">
            <summary>
            Returns the Value that corresponds to the specified mouse position
            (x, y), relative to the parent control. If the 'dragging' parameter
            is True the returned value is the result of dragging the pointer
            from its current position to (x, y).
            </summary>
            <remarks>
            The result is scaled to the pointer's admitted region.
            </remarks>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.C1GaugePointer.UpdateValue(System.Double,System.Double)">
            <summary>
            Updates the pointer's <see cref="P:C1.Web.UI.Controls.C1Gauge.C1GaugePointer.Value"/> with the number nearest 'newValue'
            that is the multiple of the snapping interval ('snapInterval').
            </summary>
            <remarks>
            If the Gauge uses logarithmic scale the snapping interval is expected
            to be in logarithmic coordinates. If not, the 'snapInterval' parameter
            must be in the same scale as the pointer's <see cref="P:C1.Web.UI.Controls.C1Gauge.C1GaugePointer.Value"/>.
            </remarks>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.C1GaugePointer.UpdateValue(System.Double,System.Double,System.Double)">
            <summary>
            Updates the pointer's <see cref="P:C1.Web.UI.Controls.C1Gauge.C1GaugePointer.Value"/> with the number nearest 'newValue'
            that is the multiple of the snapping interval ('snapInterval') counting
            from the given origin ('snapOrigin').
            </summary>
            <remarks>
            If the Gauge uses logarithmic scale the snapInterval and snapOrigin values
            are expected to be in logarithmic coordinates. If not, these values must be
            in the same scale as the pointer's <see cref="P:C1.Web.UI.Controls.C1Gauge.C1GaugePointer.Value"/>.
            </remarks>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.C1GaugePointer.IncValue(System.Int32,System.Double)">
            <summary>
            Increments the pointer's <see cref="P:C1.Web.UI.Controls.C1Gauge.C1GaugePointer.Value"/> to the next intervalsCount'th (first, second, etc.)
            multiple of the snapping interval ('snapInterval').
            </summary>
            <remarks>
            If the Gauge uses logarithmic scale the snapping interval is expected
            to be in logarithmic coordinates. If not, the 'snapInterval' parameter
            must be in the same scale as the pointer's <see cref="P:C1.Web.UI.Controls.C1Gauge.C1GaugePointer.Value"/>.
            </remarks>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.C1GaugePointer.IncValue(System.Int32,System.Double,System.Double)">
            <summary>
            Increments the pointer's <see cref="P:C1.Web.UI.Controls.C1Gauge.C1GaugePointer.Value"/> to the next intervalsCount'th (first, second, etc.)
            multiple of the snapping interval ('snapInterval'). The snapOrigin parameter
            specifies the point of origin for snapping.
            </summary>
            <remarks>
            If the Gauge uses logarithmic scale the snapInterval and snapOrigin values
            are expected to be in logarithmic coordinates. If not, these values must be
            in the same scale as the pointer's <see cref="P:C1.Web.UI.Controls.C1Gauge.C1GaugePointer.Value"/>.
            </remarks>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.C1GaugePointer.ToString">
            <summary>
            Returns a string that represents the current object.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugePointer.Owner">
            <summary>
            Gets the owner Gauge.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugePointer.IsMainPointer">
            <summary>
            Returns True if this pointer is the main in the owner Gauge.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugePointer.HitTestable">
            <summary>
            Gets or sets whether the pointer can be hit-tested.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugePointer.Name">
            <summary>
            Gets or sets a name associated with the <see cref="T:C1.Web.UI.Controls.C1Gauge.C1GaugePointer"/>.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugePointer.ViewTag">
            <summary>
            Gets or sets a digital tag identifying this element's views.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugePointer.ScaledValue">
            <summary>
            Gets the current value scaled by the ValueFactor and ValueOffset.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugePointer.Value">
            <summary>
            Gets or sets the current value of the <see cref="T:C1.Web.UI.Controls.C1Gauge.C1GaugePointer"/>.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugePointer.ValueFactor">
            <summary>
            Gets or sets the value multiplier to coerce the source scale of the value to the Gauge's scale.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugePointer.ValueOffset">
            <summary>
            Gets or sets the value offset to coerce the source scale of the value to the Gauge's scale.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugePointer.SweepTime">
            <summary>
            Gets or sets the time amount (in seconds) that is taken to move the pointer from Minimum to Maximum.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugePointer.Offset">
            <summary>
            Gets or sets the logical offset of the pointer.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugePointer.Offset2">
            <summary>
            Gets or sets the end offset of the pointer (<see cref="P:C1.Web.UI.Controls.C1Gauge.C1GaugePointer.Offset"/> is the start offset).
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugePointer.Length">
            <summary>
            Gets or sets the logical length of the pointer.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugePointer.Length2">
            <summary>
            Gets or sets the end length of the pointer (<see cref="P:C1.Web.UI.Controls.C1Gauge.C1GaugePointer.Length"/> is the start length).
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugePointer.Alignment">
            <summary>
            Alignment of the pointer.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugePointer.ShapeAngle">
            <summary>
            Gets or sets the fixed angle (in degrees) to rotate this pointer.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugePointer.OrthogonalOffset">
            <summary>
            Gets or sets the logical orthogonal offset of the pointer.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugePointer.FlipShape">
            <summary>
            Gets or sets whether the shape of the pointer is inverted.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugePointer.Shape">
            <summary>
            Selects a shape from the set of predefined pointer shapes.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugePointer.Width">
            <summary>
            Gets or sets the logical width of the pointer.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugePointer.CustomShape">
            <summary>
            Gets the custom shape of the pointer.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugePointer.Border">
            <summary>
            Gets the properties of the pointer border.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugePointer.Clippings">
            <summary>
            Gets the collection of shapes that form the clipping region.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugePointer.Filling">
            <summary>
            Adjusts the interior filling of the pointer.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugePointer.Gradient">
            <summary>
            Encapsulates properties of a color gradient.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugePointer.CustomImage">
            <summary>
            Gets or sets the custom image used to draw the pointer.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugePointer.Shadow">
            <summary>
            Encapsulates properties of the pointer shadow.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugePointer.Visible">
            <summary>
            Gets or sets whether the pointer is visible.
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1Gauge.C1GaugeShadow">
            <summary>
            Encapsulates properties of the shadow.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.C1GaugeShadow.#ctor">
            <summary>
            This ctor is for internal use only.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.C1GaugeShadow.ShouldSerializeOpacity">
            <summary>
            This member is for internal use only.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.C1GaugeShadow.ResetOpacity">
            <summary>
            This member is for internal use only.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.C1GaugeShadow.ShouldSerializeColor">
            <summary>
            This member is for internal use only.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.C1GaugeShadow.ResetColor">
            <summary>
            This member is for internal use only.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.C1GaugeShadow.ShouldSerializeOffsetX">
            <summary>
            This member is for internal use only.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.C1GaugeShadow.ResetOffsetX">
            <summary>
            This member is for internal use only.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.C1GaugeShadow.ShouldSerializeOffsetY">
            <summary>
            This member is for internal use only.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.C1GaugeShadow.ResetOffsetY">
            <summary>
            This member is for internal use only.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.C1GaugeShadow.ShouldSerializeVisible">
            <summary>
            This member is for internal use only.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.C1GaugeShadow.ResetVisible">
            <summary>
            This member is for internal use only.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugeShadow.CommonShadowName">
            <summary>
            Gets or sets the name of the shadow template.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugeShadow.Opacity">
            <summary>
            Gets or sets the opacity of the shadow between 0.0 (transparent) and 1.0 (dark).
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugeShadow.Color">
            <summary>
            Gets or sets the color of the shadow.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugeShadow.OffsetX">
            <summary>
            Gets or sets the logical X offset of the shadow.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugeShadow.OffsetY">
            <summary>
            Gets or sets the logical Y offset of the shadow.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugeShadow.Visible">
            <summary>
            Gets or sets whether the shadow is visible.
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1Gauge.C1GaugeValueColor">
            <summary>
            Associates a value with the Color on a <see cref="T:C1.Web.UI.Controls.C1Gauge.C1GaugeDecorator"/>.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.C1GaugeValueColor.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:C1.Web.UI.Controls.C1Gauge.C1GaugeValueColor"/>.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.C1GaugeValueColor.#ctor(System.Double,System.Drawing.Color,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:C1.Web.UI.Controls.C1Gauge.C1GaugeValueColor"/>.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.C1GaugeValueColor.#ctor(System.Double,System.Int32,System.Drawing.Color,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:C1.Web.UI.Controls.C1Gauge.C1GaugeValueColor"/>.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.C1GaugeValueColor.#ctor(System.Double,System.Int32,System.Drawing.Color,System.Double,System.Int64)">
            <summary>
            Initializes a new instance of the <see cref="T:C1.Web.UI.Controls.C1Gauge.C1GaugeValueColor"/>.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.C1GaugeValueColor.ShouldSerializeColor">
            <summary>
            This member is for internal use only.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.C1GaugeValueColor.ResetColor">
            <summary>
            This member is for internal use only.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.C1GaugeValueColor.ToString">
            <summary>
            Returns a String that represents the current <see cref="T:C1.Web.UI.Controls.C1Gauge.C1GaugeValueColor"/>.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugeValueColor.Owner">
            <summary>
            Gets the owner Gauge element.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugeValueColor.ViewTag">
            <summary>
            Gets or sets a digital tag identifying this element's views.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugeValueColor.Value">
            <summary>
            Gets or sets the value position where the associated Color appears.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugeValueColor.PointerIndex">
            <summary>
            Gets or sets the index of a Pointer that gives the value associated with this item.
            </summary>
            <remarks>
            Set to a large value to bind to the main Pointer.
            </remarks>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugeValueColor.Color">
            <summary>
            Gets or sets the Color associated with the value.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugeValueColor.Opacity">
            <summary>
            Gets or sets the opacity of the color between 0.0 (completely transparent) and 1.0 (opaque).
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1Gauge.C1GaugeValueImage">
            <summary>
            Associates a value with the custom image on a <see cref="T:C1.Web.UI.Controls.C1Gauge.C1GaugeDecorator"/>.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.C1GaugeValueImage.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:C1.Web.UI.Controls.C1Gauge.C1GaugeValueImage"/>.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.C1GaugeValueImage.ShouldSerializeCustomImage">
            <summary>
            This member is for internal use only.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.C1GaugeValueImage.ResetCustomImage">
            <summary>
            This member is for internal use only.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.C1GaugeValueImage.ToString">
            <summary>
            Returns a String that represents the current <see cref="T:C1.Web.UI.Controls.C1Gauge.C1GaugeValueImage"/>.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugeValueImage.Owner">
            <summary>
            Gets the owner Gauge element.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugeValueImage.ViewTag">
            <summary>
            Gets or sets a digital tag identifying this element's views.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugeValueImage.Value">
            <summary>
            Gets or sets the value position where the associated image appears.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugeValueImage.PointerIndex">
            <summary>
            Gets or sets the index of a Pointer that gives the value associated with this item.
            </summary>
            <remarks>
            Set to a large value to bind to the main Pointer.
            </remarks>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugeValueImage.CustomImage">
            <summary>
            Gets or sets the custom image associated with this item.
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1Gauge.C1GaugeViewport">
            <summary>
            Specifies the bounds of a Gauge element.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugeViewport.Bounds">
            <summary>
            Gets the size and location of the viewport, in pixels, relative to the parent control.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugeViewport.MarginX">
            <summary>
            Gets or sets the left and right margins (in pixels).
            </summary>
            <remarks>
            Negative value expands the width of viewport.
            </remarks>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugeViewport.MarginY">
            <summary>
            Gets or sets the top and bottom margins (in pixels).
            </summary>
            <remarks>
            Negative value expands the height of viewport.
            </remarks>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugeViewport.X">
            <summary>
            Gets or sets the X-offset of the viewport (in pixels).
            </summary>
            <remarks>
            Negative offset is count from the right edge of the owner element.
            </remarks>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugeViewport.Y">
            <summary>
            Gets or sets the Y-offset of the viewport (in pixels).
            </summary>
            <remarks>
            Negative offset is count from the bottom edge of the owner element.
            </remarks>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugeViewport.Width">
            <summary>
            Gets or sets the width of the viewport (in pixels).
            </summary>
            <remarks>
            Zero width extends the viewport till the opposite edge of the owner element.
            Negative width extends the viewport backwards.
            </remarks>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugeViewport.Height">
            <summary>
            Gets or sets the height of the viewport (in pixels).
            </summary>
            <remarks>
            Zero height extends the viewport till the opposite edge of the owner element.
            Negative height extends the viewport backwards.
            </remarks>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugeViewport.TranslateX">
            <summary>
            Moves the viewport by the specified relative amount along the X-axis (before scaling).
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugeViewport.TranslateY">
            <summary>
            Moves the viewport by the specified relative amount along the Y-axis (before scaling).
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugeViewport.ScaleX">
            <summary>
            Scales the width of the viewport by the specified relative amount (after translation).
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugeViewport.ScaleY">
            <summary>
            Scales the height of the viewport by the specified relative amount (after translation).
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugeViewport.AspectRatio">
            <summary>
            Gets or sets the fixed ratio of width to height of the viewport.
            </summary>
            <remarks>
            Set to Double.NaN to avoid restriction of the aspect ratio.
            </remarks>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugeViewport.AspectPinX">
            <summary>
            Gets or sets the relative X position that remains fixed when the viewport
            moves in order to maintain the aspect ration.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugeViewport.AspectPinY">
            <summary>
            Gets or sets the relative Y position that remains fixed when the viewport
            moves in order to maintain the aspect ratio.
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1Gauge.CapCircleCollection">
            <summary>
            Represents a collection of <see cref="T:C1.Web.UI.Controls.C1Gauge.C1GaugeCapCircle"/> objects.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.CapCircleCollection.Contains(C1.Web.UI.Controls.C1Gauge.C1GaugeCapCircle)">
            <summary>
            Determines whether this collection contains the specified <see cref="T:C1.Web.UI.Controls.C1Gauge.C1GaugeCapCircle"/>.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.CapCircleCollection.IndexOf(C1.Web.UI.Controls.C1Gauge.C1GaugeCapCircle)">
            <summary>
            Determines the index of a specific <see cref="T:C1.Web.UI.Controls.C1Gauge.C1GaugeCapCircle"/> in the collection.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.CapCircleCollection.Add(C1.Web.UI.Controls.C1Gauge.C1GaugeCapCircle)">
            <summary>
            Adds the specified <see cref="T:C1.Web.UI.Controls.C1Gauge.C1GaugeCapCircle"/> to the collection.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.CapCircleCollection.AddRange(C1.Web.UI.Controls.C1Gauge.C1GaugeCapCircle[])">
            <summary>
            Adds a group of <see cref="T:C1.Web.UI.Controls.C1Gauge.C1GaugeCapCircle"/> objects to the end of the collection.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.CapCircleCollection.Insert(System.Int32,C1.Web.UI.Controls.C1Gauge.C1GaugeCapCircle)">
            <summary>
            Inserts the specified <see cref="T:C1.Web.UI.Controls.C1Gauge.C1GaugeCapCircle"/> into this collection at the given index.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.CapCircleCollection.Remove(C1.Web.UI.Controls.C1Gauge.C1GaugeCapCircle)">
            <summary>
            Removes the specified <see cref="T:C1.Web.UI.Controls.C1Gauge.C1GaugeCapCircle"/> from the collection.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.CapCircleCollection.Move(System.Int32,System.Int32)">
            <summary>
            Moves the item with given index (fromIndex) to the new position (toIndex).
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.CapCircleCollection.OnInsertComplete(System.Int32,System.Object)">
            <summary>
            Performs additional custom processes after inserting a <see cref="T:C1.Web.UI.Controls.C1Gauge.C1GaugeCapCircle"/>
            into the <see cref="T:C1.Web.UI.Controls.C1Gauge.CapCircleCollection"/> instance.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.CapCircleCollection.OnRemoveComplete(System.Int32,System.Object)">
            <summary>
            Performs additional custom processes after removing a <see cref="T:C1.Web.UI.Controls.C1Gauge.C1GaugeCapCircle"/>
            from the <see cref="T:C1.Web.UI.Controls.C1Gauge.CapCircleCollection"/> instance.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.CapCircleCollection.OnSetComplete(System.Int32,System.Object,System.Object)">
            <summary>
            Performs additional custom processes after setting a <see cref="T:C1.Web.UI.Controls.C1Gauge.C1GaugeCapCircle"/>
            in the <see cref="T:C1.Web.UI.Controls.C1Gauge.CapCircleCollection"/> instance.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.CapCircleCollection.OnClear">
            <summary>
            Performs additional custom processes when clearing the contents of
            the <see cref="T:C1.Web.UI.Controls.C1Gauge.CapCircleCollection"/> instance.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.CapCircleCollection.OnClearComplete">
            <summary>
            Performs additional custom processes after clearing the contents of
            the <see cref="T:C1.Web.UI.Controls.C1Gauge.CapCircleCollection"/> instance.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.CapCircleCollection.OnValidate(System.Object)">
            <summary>
            Checks whather the type of the value argument is allowable for this collection.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.CapCircleCollection.Item(System.Int32)">
            <summary>
            Gets or sets the <see cref="T:C1.Web.UI.Controls.C1Gauge.C1GaugeCapCircle"/> at the specified position in the collection.
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1Gauge.ClippingCollection">
            <summary>
            Represents a collection of <see cref="T:C1.Web.UI.Controls.C1Gauge.C1GaugeClipping"/> objects.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.ClippingCollection.Contains(C1.Web.UI.Controls.C1Gauge.C1GaugeClipping)">
            <summary>
            Determines whether this collection contains the specified <see cref="T:C1.Web.UI.Controls.C1Gauge.C1GaugeClipping"/>.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.ClippingCollection.IndexOf(C1.Web.UI.Controls.C1Gauge.C1GaugeClipping)">
            <summary>
            Determines the index of a specific <see cref="T:C1.Web.UI.Controls.C1Gauge.C1GaugeClipping"/> in the collection.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.ClippingCollection.Add(C1.Web.UI.Controls.C1Gauge.C1GaugeClipping)">
            <summary>
            Adds the specified <see cref="T:C1.Web.UI.Controls.C1Gauge.C1GaugeClipping"/> to the collection.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.ClippingCollection.AddRange(C1.Web.UI.Controls.C1Gauge.C1GaugeClipping[])">
            <summary>
            Adds a group of <see cref="T:C1.Web.UI.Controls.C1Gauge.C1GaugeClipping"/> objects to the end of the collection.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.ClippingCollection.Insert(System.Int32,C1.Web.UI.Controls.C1Gauge.C1GaugeClipping)">
            <summary>
            Inserts the specified <see cref="T:C1.Web.UI.Controls.C1Gauge.C1GaugeClipping"/> into this collection at the given index.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.ClippingCollection.Remove(C1.Web.UI.Controls.C1Gauge.C1GaugeClipping)">
            <summary>
            Removes the specified <see cref="T:C1.Web.UI.Controls.C1Gauge.C1GaugeClipping"/> from the collection.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.ClippingCollection.Move(System.Int32,System.Int32)">
            <summary>
            Moves the item with given index (fromIndex) to the new position (toIndex).
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.ClippingCollection.OnInsertComplete(System.Int32,System.Object)">
            <summary>
            Performs additional custom processes after inserting a <see cref="T:C1.Web.UI.Controls.C1Gauge.C1GaugeClipping"/>
            into the <see cref="T:C1.Web.UI.Controls.C1Gauge.ClippingCollection"/> instance.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.ClippingCollection.OnRemoveComplete(System.Int32,System.Object)">
            <summary>
            Performs additional custom processes after removing a <see cref="T:C1.Web.UI.Controls.C1Gauge.C1GaugeClipping"/>
            from the <see cref="T:C1.Web.UI.Controls.C1Gauge.ClippingCollection"/> instance.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.ClippingCollection.OnSetComplete(System.Int32,System.Object,System.Object)">
            <summary>
            Performs additional custom processes after setting a <see cref="T:C1.Web.UI.Controls.C1Gauge.C1GaugeClipping"/>
            in the <see cref="T:C1.Web.UI.Controls.C1Gauge.ClippingCollection"/> instance.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.ClippingCollection.OnClear">
            <summary>
            Performs additional custom processes when clearing the contents of
            the <see cref="T:C1.Web.UI.Controls.C1Gauge.ClippingCollection"/> instance.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.ClippingCollection.OnClearComplete">
            <summary>
            Performs additional custom processes after clearing the contents of
            the <see cref="T:C1.Web.UI.Controls.C1Gauge.ClippingCollection"/> instance.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.ClippingCollection.OnValidate(System.Object)">
            <summary>
            Checks whather the type of the value argument is allowable for this collection.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.ClippingCollection.Item(System.Int32)">
            <summary>
            Gets or sets the <see cref="T:C1.Web.UI.Controls.C1Gauge.C1GaugeClipping"/> at the specified position in the collection.
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1Gauge.CommonItemCollection">
            <summary>
            Represents a collection of <see cref="T:C1.Web.UI.Controls.C1Gauge.CommonItem"/> objects.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.CommonItemCollection.Contains(System.String)">
            <summary>
            Determines whether this collection contains a <see cref="T:C1.Web.UI.Controls.C1Gauge.CommonItem"/> with the specified name.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.CommonItemCollection.IndexOf(System.String)">
            <summary>
            Determines index of the first <see cref="T:C1.Web.UI.Controls.C1Gauge.CommonItem"/> with the specified name in the collection.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.CommonItemCollection.ClearAndDispose">
            <summary>
            Removes all common items from the collection, then disposes the items.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.CommonItemCollection.Move(System.Int32,System.Int32)">
            <summary>
            Moves the item with given index (fromIndex) to the new position (toIndex).
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.CommonItemCollection.OnInsertComplete(System.Int32,System.Object)">
            <summary>
            Performs additional custom processes after inserting a <see cref="T:C1.Web.UI.Controls.C1Gauge.CommonItem"/>
            into the <see cref="T:C1.Web.UI.Controls.C1Gauge.CommonItemCollection"/> instance.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.CommonItemCollection.OnRemoveComplete(System.Int32,System.Object)">
            <summary>
            Performs additional custom processes after removing a <see cref="T:C1.Web.UI.Controls.C1Gauge.CommonItem"/>
            from the <see cref="T:C1.Web.UI.Controls.C1Gauge.CommonItemCollection"/> instance.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.CommonItemCollection.OnSetComplete(System.Int32,System.Object,System.Object)">
            <summary>
            Performs additional custom processes after setting a <see cref="T:C1.Web.UI.Controls.C1Gauge.CommonItem"/>
            in the <see cref="T:C1.Web.UI.Controls.C1Gauge.CommonItemCollection"/> instance.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.CommonItemCollection.OnClear">
            <summary>
            Performs additional custom processes when clearing the contents of
            the <see cref="T:C1.Web.UI.Controls.C1Gauge.CommonItemCollection"/> instance.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.CommonItemCollection.OnClearComplete">
            <summary>
            Performs additional custom processes after clearing the contents of
            the <see cref="T:C1.Web.UI.Controls.C1Gauge.CommonItemCollection"/> instance.
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1Gauge.CommonBorderCollection">
            <summary>
            Represents a collection of <see cref="T:C1.Web.UI.Controls.C1Gauge.CommonBorder"/> objects.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.CommonBorderCollection.Contains(C1.Web.UI.Controls.C1Gauge.CommonBorder)">
            <summary>
            Determines whether this collection contains the specified <see cref="T:C1.Web.UI.Controls.C1Gauge.CommonBorder"/>.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.CommonBorderCollection.IndexOf(C1.Web.UI.Controls.C1Gauge.CommonBorder)">
            <summary>
            Determines the index of a specific <see cref="T:C1.Web.UI.Controls.C1Gauge.CommonBorder"/> in the collection.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.CommonBorderCollection.Add(C1.Web.UI.Controls.C1Gauge.CommonBorder)">
            <summary>
            Adds the specified <see cref="T:C1.Web.UI.Controls.C1Gauge.CommonBorder"/> to the collection.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.CommonBorderCollection.AddRange(C1.Web.UI.Controls.C1Gauge.CommonBorder[])">
            <summary>
            Adds a group of <see cref="T:C1.Web.UI.Controls.C1Gauge.CommonBorder"/> objects to the end of the collection.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.CommonBorderCollection.Insert(System.Int32,C1.Web.UI.Controls.C1Gauge.CommonBorder)">
            <summary>
            Inserts the specified <see cref="T:C1.Web.UI.Controls.C1Gauge.CommonBorder"/> into this collection at the given index.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.CommonBorderCollection.Remove(C1.Web.UI.Controls.C1Gauge.CommonBorder)">
            <summary>
            Removes the specified <see cref="T:C1.Web.UI.Controls.C1Gauge.CommonBorder"/> from the collection.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.CommonBorderCollection.OnValidate(System.Object)">
            <summary>
            Checks whather the type of the value argument is allowable for this collection.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.CommonBorderCollection.Item(System.Int32)">
            <summary>
            Gets or sets the <see cref="T:C1.Web.UI.Controls.C1Gauge.CommonBorder"/> at the specified position in the collection.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.CommonBorderCollection.Item(System.String)">
            <summary>
            Gets the first <see cref="T:C1.Web.UI.Controls.C1Gauge.CommonBorder"/> with the specified name in the collection.
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1Gauge.CommonFillingCollection">
            <summary>
            Represents a collection of <see cref="T:C1.Web.UI.Controls.C1Gauge.CommonFilling"/> objects.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.CommonFillingCollection.Contains(C1.Web.UI.Controls.C1Gauge.CommonFilling)">
            <summary>
            Determines whether this collection contains the specified <see cref="T:C1.Web.UI.Controls.C1Gauge.CommonFilling"/>.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.CommonFillingCollection.IndexOf(C1.Web.UI.Controls.C1Gauge.CommonFilling)">
            <summary>
            Determines the index of a specific <see cref="T:C1.Web.UI.Controls.C1Gauge.CommonFilling"/> in the collection.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.CommonFillingCollection.Add(C1.Web.UI.Controls.C1Gauge.CommonFilling)">
            <summary>
            Adds the specified <see cref="T:C1.Web.UI.Controls.C1Gauge.CommonFilling"/> to the collection.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.CommonFillingCollection.AddRange(C1.Web.UI.Controls.C1Gauge.CommonFilling[])">
            <summary>
            Adds a group of <see cref="T:C1.Web.UI.Controls.C1Gauge.CommonFilling"/> objects to the end of the collection.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.CommonFillingCollection.Insert(System.Int32,C1.Web.UI.Controls.C1Gauge.CommonFilling)">
            <summary>
            Inserts the specified <see cref="T:C1.Web.UI.Controls.C1Gauge.CommonFilling"/> into this collection at the given index.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.CommonFillingCollection.Remove(C1.Web.UI.Controls.C1Gauge.CommonFilling)">
            <summary>
            Removes the specified <see cref="T:C1.Web.UI.Controls.C1Gauge.CommonFilling"/> from the collection.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.CommonFillingCollection.OnValidate(System.Object)">
            <summary>
            Checks whather the type of the value argument is allowable for this collection.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.CommonFillingCollection.Item(System.Int32)">
            <summary>
            Gets or sets the <see cref="T:C1.Web.UI.Controls.C1Gauge.CommonFilling"/> at the specified position in the collection.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.CommonFillingCollection.Item(System.String)">
            <summary>
            Gets the first <see cref="T:C1.Web.UI.Controls.C1Gauge.CommonFilling"/> with the specified name in the collection.
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1Gauge.CommonFontCollection">
            <summary>
            Represents a collection of <see cref="T:C1.Web.UI.Controls.C1Gauge.CommonFont"/> objects.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.CommonFontCollection.Contains(C1.Web.UI.Controls.C1Gauge.CommonFont)">
            <summary>
            Determines whether this collection contains the specified <see cref="T:C1.Web.UI.Controls.C1Gauge.CommonFont"/>.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.CommonFontCollection.IndexOf(C1.Web.UI.Controls.C1Gauge.CommonFont)">
            <summary>
            Determines the index of a specific <see cref="T:C1.Web.UI.Controls.C1Gauge.CommonFont"/> in the collection.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.CommonFontCollection.Add(C1.Web.UI.Controls.C1Gauge.CommonFont)">
            <summary>
            Adds the specified <see cref="T:C1.Web.UI.Controls.C1Gauge.CommonFont"/> to the collection.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.CommonFontCollection.AddRange(C1.Web.UI.Controls.C1Gauge.CommonFont[])">
            <summary>
            Adds a group of <see cref="T:C1.Web.UI.Controls.C1Gauge.CommonFont"/> objects to the end of the collection.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.CommonFontCollection.Insert(System.Int32,C1.Web.UI.Controls.C1Gauge.CommonFont)">
            <summary>
            Inserts the specified <see cref="T:C1.Web.UI.Controls.C1Gauge.CommonFont"/> into this collection at the given index.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.CommonFontCollection.Remove(C1.Web.UI.Controls.C1Gauge.CommonFont)">
            <summary>
            Removes the specified <see cref="T:C1.Web.UI.Controls.C1Gauge.CommonFont"/> from the collection.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.CommonFontCollection.OnValidate(System.Object)">
            <summary>
            Checks whather the type of the value argument is allowable for this collection.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.CommonFontCollection.Item(System.Int32)">
            <summary>
            Gets or sets the <see cref="T:C1.Web.UI.Controls.C1Gauge.CommonFont"/> at the specified position in the collection.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.CommonFontCollection.Item(System.String)">
            <summary>
            Gets the first <see cref="T:C1.Web.UI.Controls.C1Gauge.CommonFont"/> with the specified name in the collection.
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1Gauge.CommonGradientCollection">
            <summary>
            Represents a collection of <see cref="T:C1.Web.UI.Controls.C1Gauge.CommonGradient"/> objects.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.CommonGradientCollection.Contains(C1.Web.UI.Controls.C1Gauge.CommonGradient)">
            <summary>
            Determines whether this collection contains the specified <see cref="T:C1.Web.UI.Controls.C1Gauge.CommonGradient"/>.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.CommonGradientCollection.IndexOf(C1.Web.UI.Controls.C1Gauge.CommonGradient)">
            <summary>
            Determines the index of a specific <see cref="T:C1.Web.UI.Controls.C1Gauge.CommonGradient"/> in the collection.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.CommonGradientCollection.Add(C1.Web.UI.Controls.C1Gauge.CommonGradient)">
            <summary>
            Adds the specified <see cref="T:C1.Web.UI.Controls.C1Gauge.CommonGradient"/> to the collection.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.CommonGradientCollection.AddRange(C1.Web.UI.Controls.C1Gauge.CommonGradient[])">
            <summary>
            Adds a group of <see cref="T:C1.Web.UI.Controls.C1Gauge.CommonGradient"/> objects to the end of the collection.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.CommonGradientCollection.Insert(System.Int32,C1.Web.UI.Controls.C1Gauge.CommonGradient)">
            <summary>
            Inserts the specified <see cref="T:C1.Web.UI.Controls.C1Gauge.CommonGradient"/> into this collection at the given index.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.CommonGradientCollection.Remove(C1.Web.UI.Controls.C1Gauge.CommonGradient)">
            <summary>
            Removes the specified <see cref="T:C1.Web.UI.Controls.C1Gauge.CommonGradient"/> from the collection.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.CommonGradientCollection.OnValidate(System.Object)">
            <summary>
            Checks whather the type of the value argument is allowable for this collection.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.CommonGradientCollection.Item(System.Int32)">
            <summary>
            Gets or sets the <see cref="T:C1.Web.UI.Controls.C1Gauge.CommonGradient"/> at the specified position in the collection.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.CommonGradientCollection.Item(System.String)">
            <summary>
            Gets the first <see cref="T:C1.Web.UI.Controls.C1Gauge.CommonGradient"/> with the specified name in the collection.
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1Gauge.CommonImageCollection">
            <summary>
            Represents a collection of <see cref="T:C1.Web.UI.Controls.C1Gauge.CommonImage"/> objects.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.CommonImageCollection.Contains(C1.Web.UI.Controls.C1Gauge.CommonImage)">
            <summary>
            Determines whether this collection contains the specified <see cref="T:C1.Web.UI.Controls.C1Gauge.CommonImage"/>.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.CommonImageCollection.IndexOf(C1.Web.UI.Controls.C1Gauge.CommonImage)">
            <summary>
            Determines the index of a specific <see cref="T:C1.Web.UI.Controls.C1Gauge.CommonImage"/> in the collection.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.CommonImageCollection.Add(C1.Web.UI.Controls.C1Gauge.CommonImage)">
            <summary>
            Adds the specified <see cref="T:C1.Web.UI.Controls.C1Gauge.CommonImage"/> to the collection.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.CommonImageCollection.AddRange(C1.Web.UI.Controls.C1Gauge.CommonImage[])">
            <summary>
            Adds a group of <see cref="T:C1.Web.UI.Controls.C1Gauge.CommonImage"/> objects to the end of the collection.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.CommonImageCollection.Insert(System.Int32,C1.Web.UI.Controls.C1Gauge.CommonImage)">
            <summary>
            Inserts the specified <see cref="T:C1.Web.UI.Controls.C1Gauge.CommonImage"/> into this collection at the given index.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.CommonImageCollection.Remove(C1.Web.UI.Controls.C1Gauge.CommonImage)">
            <summary>
            Removes the specified <see cref="T:C1.Web.UI.Controls.C1Gauge.CommonImage"/> from the collection.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.CommonImageCollection.OnValidate(System.Object)">
            <summary>
            Checks whather the type of the value argument is allowable for this collection.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.CommonImageCollection.Item(System.Int32)">
            <summary>
            Gets or sets the <see cref="T:C1.Web.UI.Controls.C1Gauge.CommonImage"/> at the specified position in the collection.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.CommonImageCollection.Item(System.String)">
            <summary>
            Gets the first <see cref="T:C1.Web.UI.Controls.C1Gauge.CommonImage"/> with the specified name in the collection.
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1Gauge.CommonShadowCollection">
            <summary>
            Represents a collection of <see cref="T:C1.Web.UI.Controls.C1Gauge.CommonShadow"/> objects.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.CommonShadowCollection.Contains(C1.Web.UI.Controls.C1Gauge.CommonShadow)">
            <summary>
            Determines whether this collection contains the specified <see cref="T:C1.Web.UI.Controls.C1Gauge.CommonShadow"/>.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.CommonShadowCollection.IndexOf(C1.Web.UI.Controls.C1Gauge.CommonShadow)">
            <summary>
            Determines the index of a specific <see cref="T:C1.Web.UI.Controls.C1Gauge.CommonShadow"/> in the collection.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.CommonShadowCollection.Add(C1.Web.UI.Controls.C1Gauge.CommonShadow)">
            <summary>
            Adds the specified <see cref="T:C1.Web.UI.Controls.C1Gauge.CommonShadow"/> to the collection.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.CommonShadowCollection.AddRange(C1.Web.UI.Controls.C1Gauge.CommonShadow[])">
            <summary>
            Adds a group of <see cref="T:C1.Web.UI.Controls.C1Gauge.CommonShadow"/> objects to the end of the collection.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.CommonShadowCollection.Insert(System.Int32,C1.Web.UI.Controls.C1Gauge.CommonShadow)">
            <summary>
            Inserts the specified <see cref="T:C1.Web.UI.Controls.C1Gauge.CommonShadow"/> into this collection at the given index.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.CommonShadowCollection.Remove(C1.Web.UI.Controls.C1Gauge.CommonShadow)">
            <summary>
            Removes the specified <see cref="T:C1.Web.UI.Controls.C1Gauge.CommonShadow"/> from the collection.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.CommonShadowCollection.OnValidate(System.Object)">
            <summary>
            Checks whather the type of the value argument is allowable for this collection.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.CommonShadowCollection.Item(System.Int32)">
            <summary>
            Gets or sets the <see cref="T:C1.Web.UI.Controls.C1Gauge.CommonShadow"/> at the specified position in the collection.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.CommonShadowCollection.Item(System.String)">
            <summary>
            Gets the first <see cref="T:C1.Web.UI.Controls.C1Gauge.CommonShadow"/> with the specified name in the collection.
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1Gauge.CommonShapeCollection">
            <summary>
            Represents a collection of <see cref="T:C1.Web.UI.Controls.C1Gauge.CommonShape"/> objects.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.CommonShapeCollection.Contains(C1.Web.UI.Controls.C1Gauge.CommonShape)">
            <summary>
            Determines whether this collection contains the specified <see cref="T:C1.Web.UI.Controls.C1Gauge.CommonShape"/>.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.CommonShapeCollection.IndexOf(C1.Web.UI.Controls.C1Gauge.CommonShape)">
            <summary>
            Determines the index of a specific <see cref="T:C1.Web.UI.Controls.C1Gauge.CommonShape"/> in the collection.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.CommonShapeCollection.Add(C1.Web.UI.Controls.C1Gauge.CommonShape)">
            <summary>
            Adds the specified <see cref="T:C1.Web.UI.Controls.C1Gauge.CommonShape"/> to the collection.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.CommonShapeCollection.AddRange(C1.Web.UI.Controls.C1Gauge.CommonShape[])">
            <summary>
            Adds a group of <see cref="T:C1.Web.UI.Controls.C1Gauge.CommonShape"/> objects to the end of the collection.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.CommonShapeCollection.Insert(System.Int32,C1.Web.UI.Controls.C1Gauge.CommonShape)">
            <summary>
            Inserts the specified <see cref="T:C1.Web.UI.Controls.C1Gauge.CommonShape"/> into this collection at the given index.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.CommonShapeCollection.Remove(C1.Web.UI.Controls.C1Gauge.CommonShape)">
            <summary>
            Removes the specified <see cref="T:C1.Web.UI.Controls.C1Gauge.CommonShape"/> from the collection.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.CommonShapeCollection.OnValidate(System.Object)">
            <summary>
            Checks whather the type of the value argument is allowable for this collection.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.CommonShapeCollection.Item(System.Int32)">
            <summary>
            Gets or sets the <see cref="T:C1.Web.UI.Controls.C1Gauge.CommonShape"/> at the specified position in the collection.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.CommonShapeCollection.Item(System.String)">
            <summary>
            Gets the first <see cref="T:C1.Web.UI.Controls.C1Gauge.CommonShape"/> with the specified name in the collection.
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1Gauge.CommonColorMapCollection">
            <summary>
            Represents a collection of <see cref="T:C1.Web.UI.Controls.C1Gauge.CommonColorMap"/> objects.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.CommonColorMapCollection.Contains(C1.Web.UI.Controls.C1Gauge.CommonColorMap)">
            <summary>
            Determines whether this collection contains the specified <see cref="T:C1.Web.UI.Controls.C1Gauge.CommonColorMap"/>.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.CommonColorMapCollection.IndexOf(C1.Web.UI.Controls.C1Gauge.CommonColorMap)">
            <summary>
            Determines the index of a specific <see cref="T:C1.Web.UI.Controls.C1Gauge.CommonColorMap"/> in the collection.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.CommonColorMapCollection.Add(C1.Web.UI.Controls.C1Gauge.CommonColorMap)">
            <summary>
            Adds the specified <see cref="T:C1.Web.UI.Controls.C1Gauge.CommonColorMap"/> to the collection.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.CommonColorMapCollection.AddRange(C1.Web.UI.Controls.C1Gauge.CommonColorMap[])">
            <summary>
            Adds a group of <see cref="T:C1.Web.UI.Controls.C1Gauge.CommonColorMap"/> objects to the end of the collection.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.CommonColorMapCollection.Insert(System.Int32,C1.Web.UI.Controls.C1Gauge.CommonColorMap)">
            <summary>
            Inserts the specified <see cref="T:C1.Web.UI.Controls.C1Gauge.CommonColorMap"/> into this collection at the given index.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.CommonColorMapCollection.Remove(C1.Web.UI.Controls.C1Gauge.CommonColorMap)">
            <summary>
            Removes the specified <see cref="T:C1.Web.UI.Controls.C1Gauge.CommonColorMap"/> from the collection.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.CommonColorMapCollection.OnValidate(System.Object)">
            <summary>
            Checks whather the type of the value argument is allowable for this collection.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.CommonColorMapCollection.Item(System.Int32)">
            <summary>
            Gets or sets the <see cref="T:C1.Web.UI.Controls.C1Gauge.CommonColorMap"/> at the specified position in the collection.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.CommonColorMapCollection.Item(System.String)">
            <summary>
            Gets the first <see cref="T:C1.Web.UI.Controls.C1Gauge.CommonColorMap"/> with the specified name in the collection.
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1Gauge.CommonImageMapCollection">
            <summary>
            Represents a collection of <see cref="T:C1.Web.UI.Controls.C1Gauge.CommonImageMap"/> objects.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.CommonImageMapCollection.Contains(C1.Web.UI.Controls.C1Gauge.CommonImageMap)">
            <summary>
            Determines whether this collection contains the specified <see cref="T:C1.Web.UI.Controls.C1Gauge.CommonImageMap"/>.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.CommonImageMapCollection.IndexOf(C1.Web.UI.Controls.C1Gauge.CommonImageMap)">
            <summary>
            Determines the index of a specific <see cref="T:C1.Web.UI.Controls.C1Gauge.CommonImageMap"/> in the collection.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.CommonImageMapCollection.Add(C1.Web.UI.Controls.C1Gauge.CommonImageMap)">
            <summary>
            Adds the specified <see cref="T:C1.Web.UI.Controls.C1Gauge.CommonImageMap"/> to the collection.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.CommonImageMapCollection.AddRange(C1.Web.UI.Controls.C1Gauge.CommonImageMap[])">
            <summary>
            Adds a group of <see cref="T:C1.Web.UI.Controls.C1Gauge.CommonImageMap"/> objects to the end of the collection.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.CommonImageMapCollection.Insert(System.Int32,C1.Web.UI.Controls.C1Gauge.CommonImageMap)">
            <summary>
            Inserts the specified <see cref="T:C1.Web.UI.Controls.C1Gauge.CommonImageMap"/> into this collection at the given index.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.CommonImageMapCollection.Remove(C1.Web.UI.Controls.C1Gauge.CommonImageMap)">
            <summary>
            Removes the specified <see cref="T:C1.Web.UI.Controls.C1Gauge.CommonImageMap"/> from the collection.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.CommonImageMapCollection.OnValidate(System.Object)">
            <summary>
            Checks whather the type of the value argument is allowable for this collection.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.CommonImageMapCollection.Item(System.Int32)">
            <summary>
            Gets or sets the <see cref="T:C1.Web.UI.Controls.C1Gauge.CommonImageMap"/> at the specified position in the collection.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.CommonImageMapCollection.Item(System.String)">
            <summary>
            Gets the first <see cref="T:C1.Web.UI.Controls.C1Gauge.CommonImageMap"/> with the specified name in the collection.
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1Gauge.DecoratorCollection">
            <summary>
            Represents a collection of <see cref="T:C1.Web.UI.Controls.C1Gauge.C1GaugeDecorator"/> objects.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.DecoratorCollection.Contains(C1.Web.UI.Controls.C1Gauge.C1GaugeDecorator)">
            <summary>
            Determines whether this collection contains the specified <see cref="T:C1.Web.UI.Controls.C1Gauge.C1GaugeDecorator"/>.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.DecoratorCollection.Contains(System.String)">
            <summary>
            Determines whether this collection contains a <see cref="T:C1.Web.UI.Controls.C1Gauge.C1GaugeDecorator"/> with the specified name.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.DecoratorCollection.IndexOf(C1.Web.UI.Controls.C1Gauge.C1GaugeDecorator)">
            <summary>
            Determines the index of a specific <see cref="T:C1.Web.UI.Controls.C1Gauge.C1GaugeDecorator"/> in the collection.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.DecoratorCollection.IndexOf(System.String)">
            <summary>
            Determines index of the first <see cref="T:C1.Web.UI.Controls.C1Gauge.C1GaugeDecorator"/> with the specified name in the collection.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.DecoratorCollection.Add(C1.Web.UI.Controls.C1Gauge.C1GaugeDecorator)">
            <summary>
            Adds the specified <see cref="T:C1.Web.UI.Controls.C1Gauge.C1GaugeDecorator"/> to the collection.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.DecoratorCollection.AddRange(C1.Web.UI.Controls.C1Gauge.C1GaugeDecorator[])">
            <summary>
            Adds a group of <see cref="T:C1.Web.UI.Controls.C1Gauge.C1GaugeDecorator"/> objects to the end of the collection.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.DecoratorCollection.Insert(System.Int32,C1.Web.UI.Controls.C1Gauge.C1GaugeDecorator)">
            <summary>
            Inserts the specified <see cref="T:C1.Web.UI.Controls.C1Gauge.C1GaugeDecorator"/> into this collection at the given index.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.DecoratorCollection.Remove(C1.Web.UI.Controls.C1Gauge.C1GaugeDecorator)">
            <summary>
            Removes the specified <see cref="T:C1.Web.UI.Controls.C1Gauge.C1GaugeDecorator"/> from the collection.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.DecoratorCollection.ClearAndDispose">
            <summary>
            Removes all decorators from the collection, then disposes the decorators.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.DecoratorCollection.Move(System.Int32,System.Int32)">
            <summary>
            Moves the item with given index (fromIndex) to the new position (toIndex).
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.DecoratorCollection.OnInsertComplete(System.Int32,System.Object)">
            <summary>
            Performs additional custom processes after inserting a <see cref="T:C1.Web.UI.Controls.C1Gauge.C1GaugeDecorator"/>
            into the <see cref="T:C1.Web.UI.Controls.C1Gauge.DecoratorCollection"/> instance.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.DecoratorCollection.OnRemoveComplete(System.Int32,System.Object)">
            <summary>
            Performs additional custom processes after removing a <see cref="T:C1.Web.UI.Controls.C1Gauge.C1GaugeDecorator"/>
            from the <see cref="T:C1.Web.UI.Controls.C1Gauge.DecoratorCollection"/> instance.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.DecoratorCollection.OnSetComplete(System.Int32,System.Object,System.Object)">
            <summary>
            Performs additional custom processes after setting a <see cref="T:C1.Web.UI.Controls.C1Gauge.C1GaugeDecorator"/>
            in the <see cref="T:C1.Web.UI.Controls.C1Gauge.DecoratorCollection"/> instance.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.DecoratorCollection.OnClear">
            <summary>
            Performs additional custom processes when clearing the contents of
            the <see cref="T:C1.Web.UI.Controls.C1Gauge.DecoratorCollection"/> instance.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.DecoratorCollection.OnClearComplete">
            <summary>
            Performs additional custom processes after clearing the contents of
            the <see cref="T:C1.Web.UI.Controls.C1Gauge.DecoratorCollection"/> instance.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.DecoratorCollection.OnValidate(System.Object)">
            <summary>
            Checks whather the type of the value argument is allowable for this collection.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.DecoratorCollection.Item(System.Int32)">
            <summary>
            Gets or sets the <see cref="T:C1.Web.UI.Controls.C1Gauge.C1GaugeDecorator"/> at the specified position in the collection.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.DecoratorCollection.Item(System.String)">
            <summary>
            Gets the first <see cref="T:C1.Web.UI.Controls.C1Gauge.C1GaugeDecorator"/> with the specified name in the collection.
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1Gauge.GaugeCollection">
            <summary>
            Represents a collection of <see cref="T:C1.Web.UI.Controls.C1Gauge.C1GaugeBase"/> objects.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.GaugeCollection.Contains(C1.Web.UI.Controls.C1Gauge.C1GaugeBase)">
            <summary>
            Determines whether this collection contains the specified <see cref="T:C1.Web.UI.Controls.C1Gauge.C1GaugeBase"/>.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.GaugeCollection.Contains(System.String)">
            <summary>
            Determines whether this collection contains a <see cref="T:C1.Web.UI.Controls.C1Gauge.C1GaugeBase"/> with the specified name.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.GaugeCollection.IndexOf(C1.Web.UI.Controls.C1Gauge.C1GaugeBase)">
            <summary>
            Determines the index of a specific <see cref="T:C1.Web.UI.Controls.C1Gauge.C1GaugeBase"/> in the collection.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.GaugeCollection.IndexOf(System.String)">
            <summary>
            Determines index of the first <see cref="T:C1.Web.UI.Controls.C1Gauge.C1GaugeBase"/> with the specified name in the collection.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.GaugeCollection.Add(C1.Web.UI.Controls.C1Gauge.C1GaugeBase)">
            <summary>
            Adds the specified <see cref="T:C1.Web.UI.Controls.C1Gauge.C1GaugeBase"/> to the collection.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.GaugeCollection.AddRange(C1.Web.UI.Controls.C1Gauge.C1GaugeBase[])">
            <summary>
            Adds a group of <see cref="T:C1.Web.UI.Controls.C1Gauge.C1GaugeBase"/> objects to the end of the collection.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.GaugeCollection.Insert(System.Int32,C1.Web.UI.Controls.C1Gauge.C1GaugeBase)">
            <summary>
            Inserts the specified <see cref="T:C1.Web.UI.Controls.C1Gauge.C1GaugeBase"/> into this collection at the given index.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.GaugeCollection.Remove(C1.Web.UI.Controls.C1Gauge.C1GaugeBase)">
            <summary>
            Removes the specified <see cref="T:C1.Web.UI.Controls.C1Gauge.C1GaugeBase"/> from the collection.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.GaugeCollection.ClearAndDispose">
            <summary>
            Removes all Gauges from the collection, then disposes the Gauges.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.GaugeCollection.Move(System.Int32,System.Int32)">
            <summary>
            Moves the item with given index (fromIndex) to the new position (toIndex).
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.GaugeCollection.OnInsertComplete(System.Int32,System.Object)">
            <summary>
            Performs additional custom processes after inserting a <see cref="T:C1.Web.UI.Controls.C1Gauge.C1GaugeBase"/>
            into the <see cref="T:C1.Web.UI.Controls.C1Gauge.GaugeCollection"/> instance.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.GaugeCollection.OnRemoveComplete(System.Int32,System.Object)">
            <summary>
            Performs additional custom processes after removing a <see cref="T:C1.Web.UI.Controls.C1Gauge.C1GaugeBase"/>
            from the <see cref="T:C1.Web.UI.Controls.C1Gauge.GaugeCollection"/> instance.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.GaugeCollection.OnSetComplete(System.Int32,System.Object,System.Object)">
            <summary>
            Performs additional custom processes after setting a <see cref="T:C1.Web.UI.Controls.C1Gauge.C1GaugeBase"/>
            in the <see cref="T:C1.Web.UI.Controls.C1Gauge.GaugeCollection"/> instance.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.GaugeCollection.OnClear">
            <summary>
            Performs additional custom processes when clearing the contents of
            the <see cref="T:C1.Web.UI.Controls.C1Gauge.GaugeCollection"/> instance.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.GaugeCollection.OnClearComplete">
            <summary>
            Performs additional custom processes after clearing the contents of
            the <see cref="T:C1.Web.UI.Controls.C1Gauge.GaugeCollection"/> instance.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.GaugeCollection.OnValidate(System.Object)">
            <summary>
            Checks whather the type of the value argument is allowable for this collection.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.GaugeCollection.Item(System.Int32)">
            <summary>
            Gets or sets the <see cref="T:C1.Web.UI.Controls.C1Gauge.C1GaugeBase"/> at the specified position in the collection.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.GaugeCollection.Item(System.String)">
            <summary>
            Gets the first <see cref="T:C1.Web.UI.Controls.C1Gauge.C1GaugeBase"/> with the specified name in the collection.
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1Gauge.PointerCollection">
            <summary>
            Represents a collection of <see cref="T:C1.Web.UI.Controls.C1Gauge.C1GaugePointer"/> objects.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.PointerCollection.Contains(C1.Web.UI.Controls.C1Gauge.C1GaugePointer)">
            <summary>
            Determines whether this collection contains the specified <see cref="T:C1.Web.UI.Controls.C1Gauge.C1GaugePointer"/>.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.PointerCollection.Contains(System.String)">
            <summary>
            Determines whether this collection contains a <see cref="T:C1.Web.UI.Controls.C1Gauge.C1GaugePointer"/> with the specified name.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.PointerCollection.IndexOf(C1.Web.UI.Controls.C1Gauge.C1GaugePointer)">
            <summary>
            Determines the index of a specific <see cref="T:C1.Web.UI.Controls.C1Gauge.C1GaugePointer"/> in the collection.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.PointerCollection.IndexOf(System.String)">
            <summary>
            Determines index of the first <see cref="T:C1.Web.UI.Controls.C1Gauge.C1GaugePointer"/> with the specified name in the collection.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.PointerCollection.Add(C1.Web.UI.Controls.C1Gauge.C1GaugePointer)">
            <summary>
            Adds the specified <see cref="T:C1.Web.UI.Controls.C1Gauge.C1GaugePointer"/> to the collection.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.PointerCollection.AddRange(C1.Web.UI.Controls.C1Gauge.C1GaugePointer[])">
            <summary>
            Adds a group of <see cref="T:C1.Web.UI.Controls.C1Gauge.C1GaugePointer"/> objects to the end of the collection.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.PointerCollection.Insert(System.Int32,C1.Web.UI.Controls.C1Gauge.C1GaugePointer)">
            <summary>
            Inserts the specified <see cref="T:C1.Web.UI.Controls.C1Gauge.C1GaugePointer"/> into this collection at the given index.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.PointerCollection.Remove(C1.Web.UI.Controls.C1Gauge.C1GaugePointer)">
            <summary>
            Removes the specified <see cref="T:C1.Web.UI.Controls.C1Gauge.C1GaugePointer"/> from the collection.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.PointerCollection.ClearAndDispose">
            <summary>
            Removes all pointers from the collection, then disposes the pointers.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.PointerCollection.Move(System.Int32,System.Int32)">
            <summary>
            Moves the item with given index (fromIndex) to the new position (toIndex).
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.PointerCollection.OnInsertComplete(System.Int32,System.Object)">
            <summary>
            Performs additional custom processes after inserting a <see cref="T:C1.Web.UI.Controls.C1Gauge.C1GaugePointer"/>
            into the <see cref="T:C1.Web.UI.Controls.C1Gauge.PointerCollection"/> instance.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.PointerCollection.OnRemoveComplete(System.Int32,System.Object)">
            <summary>
            Performs additional custom processes after removing a <see cref="T:C1.Web.UI.Controls.C1Gauge.C1GaugePointer"/>
            from the <see cref="T:C1.Web.UI.Controls.C1Gauge.PointerCollection"/> instance.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.PointerCollection.OnSetComplete(System.Int32,System.Object,System.Object)">
            <summary>
            Performs additional custom processes after setting a <see cref="T:C1.Web.UI.Controls.C1Gauge.C1GaugePointer"/>
            in the <see cref="T:C1.Web.UI.Controls.C1Gauge.PointerCollection"/> instance.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.PointerCollection.OnClear">
            <summary>
            Performs additional custom processes when clearing the contents of
            the <see cref="T:C1.Web.UI.Controls.C1Gauge.PointerCollection"/> instance.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.PointerCollection.OnClearComplete">
            <summary>
            Performs additional custom processes after clearing the contents of
            the <see cref="T:C1.Web.UI.Controls.C1Gauge.PointerCollection"/> instance.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.PointerCollection.OnValidate(System.Object)">
            <summary>
            Checks whather the type of the value argument is allowable for this collection.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.PointerCollection.Item(System.Int32)">
            <summary>
            Gets or sets the <see cref="T:C1.Web.UI.Controls.C1Gauge.C1GaugePointer"/> at the specified position in the collection.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.PointerCollection.Item(System.String)">
            <summary>
            Gets the first <see cref="T:C1.Web.UI.Controls.C1Gauge.C1GaugePointer"/> with the specified name in the collection.
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1Gauge.ShapeCollection">
            <summary>
            Represents a collection of <see cref="T:C1.Web.UI.Controls.C1Gauge.C1GaugeBaseShape"/> objects.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.ShapeCollection.Contains(C1.Web.UI.Controls.C1Gauge.C1GaugeBaseShape)">
            <summary>
            Determines whether this collection contains the specified <see cref="T:C1.Web.UI.Controls.C1Gauge.C1GaugeBaseShape"/>.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.ShapeCollection.Contains(System.String)">
            <summary>
            Determines whether this collection contains a <see cref="T:C1.Web.UI.Controls.C1Gauge.C1GaugeBaseShape"/> with the specified name.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.ShapeCollection.IndexOf(C1.Web.UI.Controls.C1Gauge.C1GaugeBaseShape)">
            <summary>
            Determines the index of a specific <see cref="T:C1.Web.UI.Controls.C1Gauge.C1GaugeBaseShape"/> in the collection.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.ShapeCollection.IndexOf(System.String)">
            <summary>
            Determines index of the first <see cref="T:C1.Web.UI.Controls.C1Gauge.C1GaugeBaseShape"/> with the specified name in the collection.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.ShapeCollection.Add(C1.Web.UI.Controls.C1Gauge.C1GaugeBaseShape)">
            <summary>
            Adds the specified <see cref="T:C1.Web.UI.Controls.C1Gauge.C1GaugeBaseShape"/> to the collection.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.ShapeCollection.AddRange(C1.Web.UI.Controls.C1Gauge.C1GaugeBaseShape[])">
            <summary>
            Adds a group of <see cref="T:C1.Web.UI.Controls.C1Gauge.C1GaugeBaseShape"/> objects to the end of the collection.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.ShapeCollection.Insert(System.Int32,C1.Web.UI.Controls.C1Gauge.C1GaugeBaseShape)">
            <summary>
            Inserts the specified <see cref="T:C1.Web.UI.Controls.C1Gauge.C1GaugeBaseShape"/> into this collection at the given index.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.ShapeCollection.Remove(C1.Web.UI.Controls.C1Gauge.C1GaugeBaseShape)">
            <summary>
            Removes the specified <see cref="T:C1.Web.UI.Controls.C1Gauge.C1GaugeBaseShape"/> from the collection.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.ShapeCollection.ClearAndDispose">
            <summary>
            Removes all shapes from the collection, then disposes the shapes.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.ShapeCollection.Move(System.Int32,System.Int32)">
            <summary>
            Moves the item with given index (fromIndex) to the new position (toIndex).
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.ShapeCollection.OnInsertComplete(System.Int32,System.Object)">
            <summary>
            Performs additional custom processes after inserting a <see cref="T:C1.Web.UI.Controls.C1Gauge.C1GaugeBaseShape"/>
            into the <see cref="T:C1.Web.UI.Controls.C1Gauge.ShapeCollection"/> instance.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.ShapeCollection.OnRemoveComplete(System.Int32,System.Object)">
            <summary>
            Performs additional custom processes after removing a <see cref="T:C1.Web.UI.Controls.C1Gauge.C1GaugeBaseShape"/>
            from the <see cref="T:C1.Web.UI.Controls.C1Gauge.ShapeCollection"/> instance.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.ShapeCollection.OnSetComplete(System.Int32,System.Object,System.Object)">
            <summary>
            Performs additional custom processes after setting a <see cref="T:C1.Web.UI.Controls.C1Gauge.C1GaugeBaseShape"/>
            in the <see cref="T:C1.Web.UI.Controls.C1Gauge.ShapeCollection"/> instance.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.ShapeCollection.OnClear">
            <summary>
            Performs additional custom processes when clearing the contents of
            the <see cref="T:C1.Web.UI.Controls.C1Gauge.ShapeCollection"/> instance.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.ShapeCollection.OnClearComplete">
            <summary>
            Performs additional custom processes after clearing the contents of
            the <see cref="T:C1.Web.UI.Controls.C1Gauge.ShapeCollection"/> instance.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.ShapeCollection.OnValidate(System.Object)">
            <summary>
            Checks whather the type of the value argument is allowable for this collection.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.ShapeCollection.Item(System.Int32)">
            <summary>
            Gets or sets the <see cref="T:C1.Web.UI.Controls.C1Gauge.C1GaugeBaseShape"/> at the specified position in the collection.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.ShapeCollection.Item(System.String)">
            <summary>
            Gets the first <see cref="T:C1.Web.UI.Controls.C1Gauge.C1GaugeBaseShape"/> with the specified name in the collection.
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1Gauge.ValueColorCollection">
            <summary>
            Represents a collection of <see cref="T:C1.Web.UI.Controls.C1Gauge.C1GaugeValueColor"/> objects.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.ValueColorCollection.Contains(C1.Web.UI.Controls.C1Gauge.C1GaugeValueColor)">
            <summary>
            Determines whether this collection contains the specified <see cref="T:C1.Web.UI.Controls.C1Gauge.C1GaugeValueColor"/>.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.ValueColorCollection.IndexOf(C1.Web.UI.Controls.C1Gauge.C1GaugeValueColor)">
            <summary>
            Determines the index of a specific <see cref="T:C1.Web.UI.Controls.C1Gauge.C1GaugeValueColor"/> in the collection.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.ValueColorCollection.Add(C1.Web.UI.Controls.C1Gauge.C1GaugeValueColor)">
            <summary>
            Adds the specified <see cref="T:C1.Web.UI.Controls.C1Gauge.C1GaugeValueColor"/> to the collection.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.ValueColorCollection.AddRange(C1.Web.UI.Controls.C1Gauge.C1GaugeValueColor[])">
            <summary>
            Adds a group of <see cref="T:C1.Web.UI.Controls.C1Gauge.C1GaugeValueColor"/> objects to the end of the collection.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.ValueColorCollection.Insert(System.Int32,C1.Web.UI.Controls.C1Gauge.C1GaugeValueColor)">
            <summary>
            Inserts the specified <see cref="T:C1.Web.UI.Controls.C1Gauge.C1GaugeValueColor"/> into this collection at the given index.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.ValueColorCollection.Remove(C1.Web.UI.Controls.C1Gauge.C1GaugeValueColor)">
            <summary>
            Removes the specified <see cref="T:C1.Web.UI.Controls.C1Gauge.C1GaugeValueColor"/> from the collection.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.ValueColorCollection.Move(System.Int32,System.Int32)">
            <summary>
            Moves the item with given index (fromIndex) to the new position (toIndex).
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.ValueColorCollection.OnInsertComplete(System.Int32,System.Object)">
            <summary>
            Performs additional custom processes after inserting a <see cref="T:C1.Web.UI.Controls.C1Gauge.C1GaugeValueColor"/>
            into the <see cref="T:C1.Web.UI.Controls.C1Gauge.ValueColorCollection"/> instance.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.ValueColorCollection.OnRemoveComplete(System.Int32,System.Object)">
            <summary>
            Performs additional custom processes after removing a <see cref="T:C1.Web.UI.Controls.C1Gauge.C1GaugeValueColor"/>
            from the <see cref="T:C1.Web.UI.Controls.C1Gauge.ValueColorCollection"/> instance.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.ValueColorCollection.OnSetComplete(System.Int32,System.Object,System.Object)">
            <summary>
            Performs additional custom processes after setting a <see cref="T:C1.Web.UI.Controls.C1Gauge.C1GaugeValueColor"/>
            in the <see cref="T:C1.Web.UI.Controls.C1Gauge.ValueColorCollection"/> instance.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.ValueColorCollection.OnClear">
            <summary>
            Performs additional custom processes when clearing the contents of
            the <see cref="T:C1.Web.UI.Controls.C1Gauge.ValueColorCollection"/> instance.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.ValueColorCollection.OnClearComplete">
            <summary>
            Performs additional custom processes after clearing the contents of
            the <see cref="T:C1.Web.UI.Controls.C1Gauge.ValueColorCollection"/> instance.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.ValueColorCollection.OnValidate(System.Object)">
            <summary>
            Checks whather the type of the value argument is allowable for this collection.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.ValueColorCollection.Item(System.Int32)">
            <summary>
            Gets or sets the <see cref="T:C1.Web.UI.Controls.C1Gauge.C1GaugeValueColor"/> at the specified position in the collection.
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1Gauge.ValueImageCollection">
            <summary>
            Represents a collection of <see cref="T:C1.Web.UI.Controls.C1Gauge.C1GaugeValueImage"/> objects.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.ValueImageCollection.Contains(C1.Web.UI.Controls.C1Gauge.C1GaugeValueImage)">
            <summary>
            Determines whether this collection contains the specified <see cref="T:C1.Web.UI.Controls.C1Gauge.C1GaugeValueImage"/>.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.ValueImageCollection.IndexOf(C1.Web.UI.Controls.C1Gauge.C1GaugeValueImage)">
            <summary>
            Determines the index of a specific <see cref="T:C1.Web.UI.Controls.C1Gauge.C1GaugeValueImage"/> in the collection.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.ValueImageCollection.Add(C1.Web.UI.Controls.C1Gauge.C1GaugeValueImage)">
            <summary>
            Adds the specified <see cref="T:C1.Web.UI.Controls.C1Gauge.C1GaugeValueImage"/> to the collection.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.ValueImageCollection.AddRange(C1.Web.UI.Controls.C1Gauge.C1GaugeValueImage[])">
            <summary>
            Adds a group of <see cref="T:C1.Web.UI.Controls.C1Gauge.C1GaugeValueImage"/> objects to the end of the collection.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.ValueImageCollection.Insert(System.Int32,C1.Web.UI.Controls.C1Gauge.C1GaugeValueImage)">
            <summary>
            Inserts the specified <see cref="T:C1.Web.UI.Controls.C1Gauge.C1GaugeValueImage"/> into this collection at the given index.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.ValueImageCollection.Remove(C1.Web.UI.Controls.C1Gauge.C1GaugeValueImage)">
            <summary>
            Removes the specified <see cref="T:C1.Web.UI.Controls.C1Gauge.C1GaugeValueImage"/> from the collection.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.ValueImageCollection.ClearAndDispose">
            <summary>
            Removes all items from the collection, then disposes the items.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.ValueImageCollection.Move(System.Int32,System.Int32)">
            <summary>
            Moves the item with given index (fromIndex) to the new position (toIndex).
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.ValueImageCollection.OnInsertComplete(System.Int32,System.Object)">
            <summary>
            Performs additional custom processes after inserting a <see cref="T:C1.Web.UI.Controls.C1Gauge.C1GaugeValueImage"/>
            into the <see cref="T:C1.Web.UI.Controls.C1Gauge.ValueImageCollection"/> instance.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.ValueImageCollection.OnRemoveComplete(System.Int32,System.Object)">
            <summary>
            Performs additional custom processes after removing a <see cref="T:C1.Web.UI.Controls.C1Gauge.C1GaugeValueImage"/>
            from the <see cref="T:C1.Web.UI.Controls.C1Gauge.ValueImageCollection"/> instance.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.ValueImageCollection.OnSetComplete(System.Int32,System.Object,System.Object)">
            <summary>
            Performs additional custom processes after setting a <see cref="T:C1.Web.UI.Controls.C1Gauge.C1GaugeValueImage"/>
            in the <see cref="T:C1.Web.UI.Controls.C1Gauge.ValueImageCollection"/> instance.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.ValueImageCollection.OnClear">
            <summary>
            Performs additional custom processes when clearing the contents of
            the <see cref="T:C1.Web.UI.Controls.C1Gauge.ValueImageCollection"/> instance.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.ValueImageCollection.OnClearComplete">
            <summary>
            Performs additional custom processes after clearing the contents of
            the <see cref="T:C1.Web.UI.Controls.C1Gauge.ValueImageCollection"/> instance.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.ValueImageCollection.OnValidate(System.Object)">
            <summary>
            Checks whather the type of the value argument is allowable for this collection.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.ValueImageCollection.Item(System.Int32)">
            <summary>
            Gets or sets the <see cref="T:C1.Web.UI.Controls.C1Gauge.C1GaugeValueImage"/> at the specified position in the collection.
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1Gauge.CommonBorder">
            <summary>
            Defines a template for <see cref="T:C1.Web.UI.Controls.C1Gauge.C1GaugeBorder"/> to be used in multiple elements.
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1Gauge.CommonItem">
            <summary>
            Defines a common template for various items to be used in multiple elements.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.CommonItem.Owner">
            <summary>
            Gets the owner Gauge element.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.CommonItem.Name">
            <summary>
            Gets or sets a name associated with the common item.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.CommonBorder.ShouldSerializeColor">
            <summary>
            This member is for internal use only.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.CommonBorder.ResetColor">
            <summary>
            This member is for internal use only.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.CommonBorder.LineStyle">
            <summary>
            Gets or sets the style of lines drawn with a border.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.CommonBorder.Thickness">
            <summary>
            Gets or sets the logical thickness of the border. Negative value
            specifies the width of the border in pixels.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.CommonBorder.Color">
            <summary>
            Gets or sets the Color of the border.
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1Gauge.CommonColorMap">
            <summary>
            Defines a template for <see cref="T:C1.Web.UI.Controls.C1Gauge.ValueColorCollection"/> to be used in multiple elements.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.CommonColorMap.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:C1.Web.UI.Controls.C1Gauge.CommonColorMap"/>.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.CommonColorMap.ShouldSerializeValueColors">
            <summary>
            This member is for internal use only.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.CommonColorMap.ViewTag">
            <summary>
            Gets or sets a digital tag identifying this element's views.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.CommonColorMap.ValueColorFalloff">
            <summary>
            Gets or sets the blending mode for value colors.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.CommonColorMap.ValueColors">
            <summary>
            Gets the collection of values with their associated colors.
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1Gauge.CommonFilling">
            <summary>
            Defines a template for <see cref="T:C1.Web.UI.Controls.C1Gauge.C1GaugeFilling"/> to be used in multiple elements.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.CommonFilling.ShouldSerializeColor">
            <summary>
            This member is for internal use only.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.CommonFilling.ResetColor">
            <summary>
            This member is for internal use only.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.CommonFilling.ShouldSerializeColor2">
            <summary>
            This member is for internal use only.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.CommonFilling.ResetColor2">
            <summary>
            This member is for internal use only.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.CommonFilling.BrushType">
            <summary>
            Gets or sets the type of brush that is used to fill the element.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.CommonFilling.Color">
            <summary>
            Gets or sets the Color used to fill the element.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.CommonFilling.Opacity">
            <summary>
            Gets or sets the opacity of the first color between 0.0 (completely transparent) and 1.0 (opaque).
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.CommonFilling.Color2">
            <summary>
            Gets or sets the second Color that can be used in a gradient or hatch brush.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.CommonFilling.Opacity2">
            <summary>
            Gets or sets the opacity of the second color between 0.0 (completely transparent) and 1.0 (opaque).
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.CommonFilling.SwapColors">
            <summary>
            Gets or sets whether the <see cref="P:C1.Web.UI.Controls.C1Gauge.CommonFilling.Color"/> should be used instead of <see cref="P:C1.Web.UI.Controls.C1Gauge.CommonFilling.Color2"/> and vice versa.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.CommonFilling.HatchStyle">
            <summary>
            Gets or sets the style of a hatch brush.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.CommonFilling.TextureImage">
            <summary>
            Gets or sets the Image in texture brush.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.CommonFilling.TextureImageBase64">
            <summary>
            Serializes the TextureImage property.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.CommonFilling.WrapMode">
            <summary>
            Gets or sets the wrap mode for the texture brush.
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1Gauge.CommonFont">
            <summary>
            Defines a template for text font and color to be used in multiple elements.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.CommonFont.ShouldSerializeColor">
            <summary>
            This member is for internal use only.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.CommonFont.ResetColor">
            <summary>
            This member is for internal use only.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.CommonFont.Color">
            <summary>
            Gets or sets the Color used to display text label.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.CommonFont.Font">
            <summary>
            Gets or sets the font used to display text label.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.CommonFont.FontSize">
            <summary>
            Logical value representing the scalable font size.
            </summary>
            <remarks>
            Set to Double.NaN to use the fixed font size.
            </remarks>
        </member>
        <member name="T:C1.Web.UI.Controls.C1Gauge.CommonGradient">
            <summary>
            Defines a template for <see cref="T:C1.Web.UI.Controls.C1Gauge.C1GaugeGradient"/> to be used in multiple elements.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.CommonGradient.Direction">
            <summary>
            Gets or sets the direction of a gradient brush.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.CommonGradient.Falloff">
            <summary>
            Gets or sets the type of a gradient falloff.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.CommonGradient.CenterPointX">
            <summary>
            Fraction-based X coordinate of the radial gradient center.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.CommonGradient.CenterPointY">
            <summary>
            Fraction-based Y coordinate of the radial gradient center.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.CommonGradient.Focus">
            <summary>
            A value from 0 through 1 that specifies the point where the gradient is composed of only the ending color.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.CommonGradient.FocusScaleX">
            <summary>
            Specifies the focus point X coordinate (between 0 and 1) for the radial gradient falloff.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.CommonGradient.FocusScaleY">
            <summary>
            Specifies the focus point Y coordinate (between 0 and 1) for the radial gradient falloff.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.CommonGradient.TranslateX">
            <summary>
            Moves the gradient area by the specified relative amount along the X-axis (before scaling).
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.CommonGradient.TranslateY">
            <summary>
            Moves the gradient area by the specified relative amount along the Y-axis (before scaling).
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.CommonGradient.ScaleX">
            <summary>
            Scales the width of the gradient area by the specified amount (after translation).
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.CommonGradient.ScaleY">
            <summary>
            Scales the height of the gradient area by the specified amount (after translation).
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1Gauge.CommonImage">
            <summary>
            Defines a template for <see cref="T:C1.Web.UI.Controls.C1Gauge.C1GaugeCustomImage"/> to be used in multiple elements.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.CommonImage.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:C1.Web.UI.Controls.C1Gauge.CommonImage"/>.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.CommonImage.Width">
            <summary>
            Gets or sets the logical value representing the width of the image.
            </summary>
            <remarks>
            Can be set to double.NaN (default value) to avoid scaling the image in the X-axis direction.
            </remarks>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.CommonImage.Height">
            <summary>
            Gets or sets the logical value representing the height of the image.
            </summary>
            <remarks>
            Can be set to double.NaN (default value) to avoid scaling the image in the Y-axis direction.
            </remarks>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.CommonImage.Image">
            <summary>
            Gets or sets the original image.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.CommonImage.ImageBase64">
            <summary>
            Serializes the Image property.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.CommonImage.KeepAspectRatio">
            <summary>
            Gets or sets whether the image aspect ratio should be maintained.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.CommonImage.KeepSize">
            <summary>
            Gets or sets whether the predefined size of the image should not changed.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.CommonImage.RotateFlipType">
            <summary>
            Gets or sets the direction of an image's rotation and the axis used to flip the image.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.CommonImage.Hue">
            <summary>
            Allows to modify the image hue by the specified amount (between -180 and 180).
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.CommonImage.Saturation">
            <summary>
            Allows to modify the image saturation by the specified amount (between -100 and 100).
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.CommonImage.Lightness">
            <summary>
            Allows to modify the image lightness by the specified amount (between -100 and 100).
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.CommonImage.Opacity">
            <summary>
            Gets or sets the opacity of the image between 0.0 (completely invisible) and 1.0 (opaque).
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1Gauge.CommonImageMap">
            <summary>
            Defines a template for <see cref="T:C1.Web.UI.Controls.C1Gauge.ValueImageCollection"/> to be used in multiple elements.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.CommonImageMap.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:C1.Web.UI.Controls.C1Gauge.CommonImageMap"/>.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.CommonImageMap.ShouldSerializeValueImages">
            <summary>
            This member is for internal use only.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.CommonImageMap.ViewTag">
            <summary>
            Gets or sets a digital tag identifying this element's views.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.CommonImageMap.ValueImages">
            <summary>
            Gets the collection of values with their associated images.
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1Gauge.CommonShadow">
            <summary>
            Defines a template for <see cref="T:C1.Web.UI.Controls.C1Gauge.C1GaugeShadow"/> to be used in multiple elements.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.CommonShadow.ShouldSerializeColor">
            <summary>
            This member is for internal use only.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.CommonShadow.ResetColor">
            <summary>
            This member is for internal use only.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.CommonShadow.Opacity">
            <summary>
            Gets or sets the opacity of the shadow between 0.0 (transparent) and 1.0 (dark).
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.CommonShadow.Color">
            <summary>
            Gets or sets the color of the shadow.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.CommonShadow.OffsetX">
            <summary>
            Gets or sets the logical X offset of the shadow.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.CommonShadow.OffsetY">
            <summary>
            Gets or sets the logical Y offset of the shadow.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.CommonShadow.Visible">
            <summary>
            Gets or sets whether the shadow is visible.
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1Gauge.CommonShape">
            <summary>
            Defines a template for <see cref="T:C1.Web.UI.Controls.C1Gauge.C1GaugeCustomShape"/> to be used in multiple elements.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.CommonShape.ScaleStartRadius">
            <summary>
            Gets or sets whether the value of the <see cref="P:C1.Web.UI.Controls.C1Gauge.CommonShape.StartRadius"/> property should be scaled.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.CommonShape.ScaleEndRadius">
            <summary>
            Gets or sets whether the value of the <see cref="P:C1.Web.UI.Controls.C1Gauge.CommonShape.EndRadius"/> property should be scaled.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.CommonShape.StartAngle">
            <summary>
            Gets or sets the angle of the start cap (between -90 and 90).
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.CommonShape.StartRadius">
            <summary>
            Gets or sets the logical radius of the start cap.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.CommonShape.StartWidth">
            <summary>
            Gets or sets the logical width of the start cap.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.CommonShape.EndAngle">
            <summary>
            Gets or sets the angle of the end cap (between -90 and 90).
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.CommonShape.EndRadius">
            <summary>
            Gets or sets the logical radius of the end cap.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.CommonShape.EndWidth">
            <summary>
            Gets or sets the logical width of the end cap.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.CommonShape.StartSwellAngle">
            <summary>
            Gets or sets the angle of the swell on the start cap (between -90 and 90).
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.CommonShape.EndSwellAngle">
            <summary>
            Gets or sets the angle of the swell on the end cap (between -90 and 90).
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.CommonShape.StartSwellLength">
            <summary>
            Gets or sets the logical length of the swell on the start cap.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.CommonShape.EndSwellLength">
            <summary>
            Gets or sets the logical length of the swell on the end cap.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.CommonShape.StartSwellWidth">
            <summary>
            Gets or sets the logical width of the swell on the start cap.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.CommonShape.EndSwellWidth">
            <summary>
            Gets or sets the logical width of the swell on the end cap.
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1Gauge.C1GaugeDecorator">
            <summary>
            Base class for all the Gauge decorators.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.C1GaugeDecorator.#ctor">
            <summary>
            Initializes a new instance of the decorator.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.C1GaugeDecorator.Load(System.Xml.XmlDocument)">
            <summary>
            Loads a decorator from an <see cref="T:System.Xml.XmlDocument"/>.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.C1GaugeDecorator.Save(System.Xml.XmlWriter)">
            <summary>
            Saves a decorator into an <see cref="T:System.Xml.XmlWriter"/>.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.C1GaugeDecorator.ShouldSerializeLocation">
            <summary>
            This member is for internal use only.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.C1GaugeDecorator.ResetLocation">
            <summary>
            This member is for internal use only.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.C1GaugeDecorator.ShouldSerializeClippings">
            <summary>
            This member is for internal use only.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.C1GaugeDecorator.ShouldSerializeShadow">
            <summary>
            This member is for internal use only.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.C1GaugeDecorator.ResetShadow">
            <summary>
            This member is for internal use only.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.C1GaugeDecorator.ShouldSerializeValueColors">
            <summary>
            This member is for internal use only.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.C1GaugeDecorator.FillCommonFontNames(System.Collections.IList)">
            <summary>
            This method is for internal use only.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.C1GaugeDecorator.FillColorMapNames(System.Collections.IList)">
            <summary>
            This method is for internal use only.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.C1GaugeDecorator.FillImageMapNames(System.Collections.IList)">
            <summary>
            This method is for internal use only.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.C1GaugeDecorator.ToString">
            <summary>
            Returns a string that represents the current object.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugeDecorator.Owner">
            <summary>
            Gets the owner Gauge.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugeDecorator.HitTestable">
            <summary>
            Gets or sets whether the decorator can be hit-tested.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugeDecorator.Name">
            <summary>
            Gets or sets a name associated with the decorator.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugeDecorator.ViewTag">
            <summary>
            Gets or sets a digital tag identifying this element's views.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugeDecorator.Location">
            <summary>
            Logical value representing the start location of the decorator.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugeDecorator.Alignment">
            <summary>
            Alignment of the decorator.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugeDecorator.AlignmentOffset">
            <summary>
            Gets or sets the alignment offset of the decorator (in pixels).
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugeDecorator.Clippings">
            <summary>
            Gets the collection of shapes that form the clipping region.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugeDecorator.Shadow">
            <summary>
            Encapsulates properties of the decorator shadow.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugeDecorator.ColorMapName">
            <summary>
            Gets or sets the name of template for the <see cref="P:C1.Web.UI.Controls.C1Gauge.C1GaugeDecorator.ValueColors"/> collection.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugeDecorator.ValueColorFalloff">
            <summary>
            Gets or sets the blending mode for value colors.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugeDecorator.ValueColors">
            <summary>
            Gets the collection of values with their associated colors.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugeDecorator.Visible">
            <summary>
            Gets or sets whether the decorator is visible.
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1Gauge.C1GaugeLabels">
            <summary>
            <see cref="T:C1.Web.UI.Controls.C1Gauge.C1GaugeDecorator"/> used to display a sequence of labels on the Gauge.
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1Gauge.C1GaugeScaleDecorator">
            <summary>
            Base class for the Gauge decorators showing a scale, such as marks or labels.
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1Gauge.C1GaugeMultivalueDecorator">
            <summary>
            Base class for the Gauge decorators that spread over a set of values.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugeMultivalueDecorator.From">
            <summary>
            Gets or sets the value where the decorator starts. Set to Double.NaN to bind to Gauge's minimum.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugeMultivalueDecorator.To">
            <summary>
            Gets or sets the value where the decorator ends. Set to Double.NaN to bind to Gauge's maximum.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugeMultivalueDecorator.FromPointerIndex">
            <summary>
            Gets or sets the index of a Pointer that specifies where the decorator starts.
            </summary>
            <remarks>
            Set to a large value to bind to the main Pointer.
            </remarks>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugeMultivalueDecorator.ToPointerIndex">
            <summary>
            Gets or sets the index of a Pointer that specifies where the decorator ends.
            </summary>
            <remarks>
            Set to a large value to bind to the main Pointer.
            </remarks>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugeMultivalueDecorator.ScaleFrom">
            <summary>
            Gets or sets the value where the scale graduation starts and the start location and width are defined.
            Set to Double.NaN to bind to the <see cref="P:C1.Web.UI.Controls.C1Gauge.C1GaugeMultivalueDecorator.From"/> value.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugeMultivalueDecorator.ScaleTo">
            <summary>
            Gets or sets the value where the scale graduation ends and the end location and width are defined.
            Set to Double.NaN to bind to the <see cref="P:C1.Web.UI.Controls.C1Gauge.C1GaugeMultivalueDecorator.To"/> value.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugeMultivalueDecorator.Location2">
            <summary>
            Gets or sets the end location of the <see cref="T:C1.Web.UI.Controls.C1Gauge.C1GaugeDecorator"/> (<see cref="P:C1.Web.UI.Controls.C1Gauge.C1GaugeDecorator.Location"/> is the start location).
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugeScaleDecorator.Interval">
            <summary>
            Value interval to draw each mark or label.
            </summary>
            <remarks>
            If the Gauge uses logarithmic scale this interval must be specified
            in logarithmic coordinates, such as (Log(Value2) - Log(Value1)).
            </remarks>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugeScaleDecorator.IntervalCoeff">
            <summary>
            Gets or sets the multiplier for the value interval (or the number of subintervals for logarithmic scale).
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugeScaleDecorator.IntervalWidth">
            <summary>
            Gets or sets the logical distance between tick marks or labels.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugeScaleDecorator.Resolution">
            <summary>
            Gets or sets the minimum displayed value interval if the scale is nonuniform.
            </summary>
            <remarks>
            If the Gauge uses logarithmic scale the value resolution must be specified
            in logarithmic coordinates.
            </remarks>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugeScaleDecorator.ShowIrregularFrom">
            <summary>
            Gets or sets whether the From value should appear even if it doesn't conform with the specified interval.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugeScaleDecorator.ShowIrregularTo">
            <summary>
            Gets or sets whether the To value should appear even if it doesn't conform with the specified interval.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugeScaleDecorator.SequenceNo">
            <summary>
            The sequence number for this marks (or labels) decorator. Displayed values will not appear
            on the subsequent marks (or labels) with the same sequence number.
            </summary>
            <remarks>
            Set to -1 to ignore the order of this decorator.
            </remarks>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.C1GaugeLabels.ShouldSerializeColor">
            <summary>
            This member is for internal use only.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.C1GaugeLabels.ResetColor">
            <summary>
            This member is for internal use only.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.C1GaugeLabels.ShouldSerializeIsRotated">
            <summary>
            This member is for internal use only.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.C1GaugeLabels.ResetIsRotated">
            <summary>
            This member is for internal use only.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.C1GaugeLabels.ShouldSerializeAllowFlip">
            <summary>
            This member is for internal use only.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.C1GaugeLabels.ResetAllowFlip">
            <summary>
            This member is for internal use only.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugeLabels.ValueFactor">
            <summary>
            Gets or sets the value multiplier when showing labels.
            </summary>
            <remarks>
            Allows to increase or decrease the displayed value by the specified multiplier.
            </remarks>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugeLabels.ValueOffset">
            <summary>
            Gets or sets the value offset when showing labels.
            </summary>
            <remarks>
            Allows to increase or decrease the displayed value by adding the specified amount.
            </remarks>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugeLabels.CommonFontName">
            <summary>
            Gets or sets the name of the font and color template.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugeLabels.Color">
            <summary>
            Gets or sets the Color used to display text on labels.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugeLabels.Font">
            <summary>
            Gets or sets the font used to display text in labels.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugeLabels.FontSize">
            <summary>
            Logical value representing the scalable font size.
            </summary>
            <remarks>
            Set to Double.NaN to use the fixed font size.
            </remarks>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugeLabels.FontSize2">
            <summary>
            Gets or sets the end font size of the labels (<see cref="P:C1.Web.UI.Controls.C1Gauge.C1GaugeLabels.FontSize"/> is the start font size).
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugeLabels.Format">
            <summary>
            Standard or custom numeric format string for the labels.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugeLabels.TextAngle">
            <summary>
            Gets or sets the angle (in degrees) to rotate the label text.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugeLabels.OrthogonalAlignment">
            <summary>
            Gets or sets the orthogonal alignment of the text labels.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugeLabels.OrthogonalOffset">
            <summary>
            Gets or sets the logical orthogonal offset of the text labels.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugeLabels.IsRotated">
            <summary>
            Gets or sets if the labels should be rotated depending on their values (for radial Gauges only).
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugeLabels.AllowFlip">
            <summary>
            Gets or sets whether the labels should be flipped if they appear inverted (for radial Gauges only).
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1Gauge.C1GaugeMarks">
            <summary>
            <see cref="T:C1.Web.UI.Controls.C1Gauge.C1GaugeDecorator"/> used to display a sequence of tick marks on the Gauge.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.C1GaugeMarks.#ctor">
            <summary>
            Initializes a new instance of the decorator.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.C1GaugeMarks.ShouldSerializeIsRotated">
            <summary>
            This member is for internal use only.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.C1GaugeMarks.ResetIsRotated">
            <summary>
            This member is for internal use only.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.C1GaugeMarks.ShouldSerializeWidth">
            <summary>
            This member is for internal use only.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.C1GaugeMarks.ResetWidth">
            <summary>
            This member is for internal use only.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.C1GaugeMarks.ShouldSerializeCustomShape">
            <summary>
            This member is for internal use only.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.C1GaugeMarks.ResetCustomShape">
            <summary>
            This member is for internal use only.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.C1GaugeMarks.ShouldSerializeBorder">
            <summary>
            This member is for internal use only.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.C1GaugeMarks.ResetBorder">
            <summary>
            This member is for internal use only.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.C1GaugeMarks.ShouldSerializeFilling">
            <summary>
            This member is for internal use only.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.C1GaugeMarks.ResetFilling">
            <summary>
            This member is for internal use only.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.C1GaugeMarks.ShouldSerializeGradient">
            <summary>
            This member is for internal use only.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.C1GaugeMarks.ResetGradient">
            <summary>
            This member is for internal use only.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.C1GaugeMarks.ShouldSerializeCustomImage">
            <summary>
            This member is for internal use only.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.C1GaugeMarks.ResetCustomImage">
            <summary>
            This member is for internal use only.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.C1GaugeMarks.ShouldSerializeValueImages">
            <summary>
            This member is for internal use only.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugeMarks.Length">
            <summary>
            Logical value representing the length of each tick mark.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugeMarks.Length2">
            <summary>
            Gets or sets the end length of the tick marks (<see cref="P:C1.Web.UI.Controls.C1Gauge.C1GaugeMarks.Length"/> is the start length).
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugeMarks.ShapeAngle">
            <summary>
            Gets or sets the fixed angle (in degrees) to rotate the tick marks.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugeMarks.OrthogonalAlignment">
            <summary>
            Gets or sets the orthogonal alignment of the tick marks.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugeMarks.OrthogonalOffset">
            <summary>
            Gets or sets the logical orthogonal offset of the tick marks.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugeMarks.IsRotated">
            <summary>
            Gets or sets if the tick marks should be rotated depending on their values (for radial Gauges only).
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugeMarks.FlipShape">
            <summary>
            Gets or sets whether the shape of a tick mark is inverted.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugeMarks.Shape">
            <summary>
            Selects a shape from the set of predefined mark shapes.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugeMarks.Width">
            <summary>
            Gets or sets the logical width of a tick mark.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugeMarks.CustomShape">
            <summary>
            Gets the custom shape for the tick marks.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugeMarks.Border">
            <summary>
            Gets the properties of the tick marks border.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugeMarks.Filling">
            <summary>
            Adjusts the interior filling of tick marks.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugeMarks.Gradient">
            <summary>
            Encapsulates properties of a color gradient.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugeMarks.CustomImage">
            <summary>
            Gets or sets the custom image for the tick marks.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugeMarks.ImageMapName">
            <summary>
            Gets or sets the name of template for the <see cref="P:C1.Web.UI.Controls.C1Gauge.C1GaugeMarks.ValueImages"/> collection.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugeMarks.ValueImages">
            <summary>
            Gets the collection of values with their associated images.
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1Gauge.C1GaugeRange">
            <summary>
            <see cref="T:C1.Web.UI.Controls.C1Gauge.C1GaugeDecorator"/> used to display a range on the Gauge.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.C1GaugeRange.#ctor">
            <summary>
            Initializes a new instance of the decorator.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.C1GaugeRange.ShouldSerializeBorder">
            <summary>
            This member is for internal use only.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.C1GaugeRange.ResetBorder">
            <summary>
            This member is for internal use only.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.C1GaugeRange.ShouldSerializeFilling">
            <summary>
            This member is for internal use only.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.C1GaugeRange.ResetFilling">
            <summary>
            This member is for internal use only.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.C1GaugeRange.ShouldSerializeGradient">
            <summary>
            This member is for internal use only.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.C1GaugeRange.ResetGradient">
            <summary>
            This member is for internal use only.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugeRange.AdjustAngle">
            <summary>
            Gets or sets whether the angle of a linear range should depend on the location difference.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugeRange.AntiAliasing">
            <summary>
            Gets or sets the anti-aliasing method for the range filling.
            </summary>
            <remarks>
            Applying anti-aliasing to a bound range has significant performance impact.
            Instead, you may draw a border of the same color as the background.
            </remarks>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugeRange.Width">
            <summary>
            Gets or sets the range's logical width.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugeRange.Width2">
            <summary>
            Gets or sets the end width of the <see cref="T:C1.Web.UI.Controls.C1Gauge.C1GaugeRange"/> (<see cref="P:C1.Web.UI.Controls.C1Gauge.C1GaugeRange.Width"/> is the start width).
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugeRange.Border">
            <summary>
            Gets the properties of the border of this <see cref="T:C1.Web.UI.Controls.C1Gauge.C1GaugeRange"/>.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugeRange.Filling">
            <summary>
            Adjusts the interior filling of this <see cref="T:C1.Web.UI.Controls.C1Gauge.C1GaugeRange"/>.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugeRange.Gradient">
            <summary>
            Encapsulates properties of a color gradient.
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1Gauge.C1GaugeSingleLabel">
            <summary>
            <see cref="T:C1.Web.UI.Controls.C1Gauge.C1GaugeDecorator"/> used to display a single label on the Gauge.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.C1GaugeSingleLabel.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:C1.Web.UI.Controls.C1Gauge.C1GaugeSingleLabel"/>.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.C1GaugeSingleLabel.ShouldSerializeAngle">
            <summary>
            This member is for internal use only.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.C1GaugeSingleLabel.ResetAngle">
            <summary>
            This member is for internal use only.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.C1GaugeSingleLabel.ShouldSerializePosition">
            <summary>
            This member is for internal use only.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.C1GaugeSingleLabel.ResetPosition">
            <summary>
            This member is for internal use only.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.C1GaugeSingleLabel.ShouldSerializeColor">
            <summary>
            This member is for internal use only.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.C1GaugeSingleLabel.ResetColor">
            <summary>
            This member is for internal use only.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.C1GaugeSingleLabel.ShouldSerializeIsRotated">
            <summary>
            This member is for internal use only.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.C1GaugeSingleLabel.ResetIsRotated">
            <summary>
            This member is for internal use only.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.C1GaugeSingleLabel.ShouldSerializeAllowFlip">
            <summary>
            This member is for internal use only.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.C1GaugeSingleLabel.ResetAllowFlip">
            <summary>
            This member is for internal use only.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugeSingleLabel.Angle">
            <summary>
            Gets or sets the angle relative to the Gauge pointer origin where the label should appear (for radial Gauges only).
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugeSingleLabel.Position">
            <summary>
            Gets or sets the fraction-based position where this label should appear (for linear Gauges only).
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugeSingleLabel.Value">
            <summary>
            Gets or sets the value associated with this label.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugeSingleLabel.PointerIndex">
            <summary>
            Gets or sets the index of a Pointer that gives the value associated with this label.
            </summary>
            <remarks>
            Set to a large value to bind to the main Pointer.
            </remarks>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugeSingleLabel.ImmediateUpdate">
            <summary>
            Gets or sets whether the bound label should ignore the Pointer's sweep time.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugeSingleLabel.ValueFactor">
            <summary>
            Gets or sets the value multiplier when showing the label.
            </summary>
            <remarks>
            Allows to increase or decrease the displayed value by the specified multiplier.
            </remarks>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugeSingleLabel.ValueOffset">
            <summary>
            Gets or sets the value offset when showing the label.
            </summary>
            <remarks>
            Allows to increase or decrease the displayed value by adding the specified amount.
            </remarks>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugeSingleLabel.SequenceNo">
            <summary>
            The sequence number for this label. Displayed value will not appear
            on the subsequent labels with the same sequence number.
            </summary>
            <remarks>
            Set to -1 to ignore the order of this label.
            </remarks>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugeSingleLabel.Format">
            <summary>
            Standard or custom numeric format string for the label.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugeSingleLabel.Text">
            <summary>
            Gets or sets the text displayed in this label.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugeSingleLabel.CommonFontName">
            <summary>
            Gets or sets the name of the font and color template.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugeSingleLabel.Color">
            <summary>
            Gets or sets the Color used to display text label.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugeSingleLabel.Font">
            <summary>
            Gets or sets the font used to display text label.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugeSingleLabel.FontSize">
            <summary>
            Logical value representing the scalable font size.
            </summary>
            <remarks>
            Set to Double.NaN to use the fixed font size.
            </remarks>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugeSingleLabel.TextAngle">
            <summary>
            Gets or sets the angle (in degrees) to rotate the label text.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugeSingleLabel.OrthogonalAlignment">
            <summary>
            Gets or sets the orthogonal alignment of the text label.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugeSingleLabel.OrthogonalOffset">
            <summary>
            Gets or sets the logical orthogonal offset of the text label.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugeSingleLabel.IsRotated">
            <summary>
            Gets or sets if the label should be rotated depending on its angle (for radial Gauges only).
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugeSingleLabel.AllowFlip">
            <summary>
            Gets or sets whether the label should be flipped if it appears inverted (for radial Gauges only).
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1Gauge.C1GaugeSingleMark">
            <summary>
            <see cref="T:C1.Web.UI.Controls.C1Gauge.C1GaugeDecorator"/> used to display a single mark on the Gauge.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.C1GaugeSingleMark.#ctor">
            <summary>
            Initializes a new instance of the decorator.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.C1GaugeSingleMark.ShouldSerializeAngle">
            <summary>
            This member is for internal use only.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.C1GaugeSingleMark.ResetAngle">
            <summary>
            This member is for internal use only.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.C1GaugeSingleMark.ShouldSerializePosition">
            <summary>
            This member is for internal use only.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.C1GaugeSingleMark.ResetPosition">
            <summary>
            This member is for internal use only.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.C1GaugeSingleMark.ShouldSerializeIsRotated">
            <summary>
            This member is for internal use only.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.C1GaugeSingleMark.ResetIsRotated">
            <summary>
            This member is for internal use only.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.C1GaugeSingleMark.ShouldSerializeWidth">
            <summary>
            This member is for internal use only.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.C1GaugeSingleMark.ResetWidth">
            <summary>
            This member is for internal use only.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.C1GaugeSingleMark.ShouldSerializeCustomShape">
            <summary>
            This member is for internal use only.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.C1GaugeSingleMark.ResetCustomShape">
            <summary>
            This member is for internal use only.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.C1GaugeSingleMark.ShouldSerializeBorder">
            <summary>
            This member is for internal use only.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.C1GaugeSingleMark.ResetBorder">
            <summary>
            This member is for internal use only.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.C1GaugeSingleMark.ShouldSerializeFilling">
            <summary>
            This member is for internal use only.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.C1GaugeSingleMark.ResetFilling">
            <summary>
            This member is for internal use only.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.C1GaugeSingleMark.ShouldSerializeGradient">
            <summary>
            This member is for internal use only.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.C1GaugeSingleMark.ResetGradient">
            <summary>
            This member is for internal use only.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.C1GaugeSingleMark.ShouldSerializeCustomImage">
            <summary>
            This member is for internal use only.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.C1GaugeSingleMark.ResetCustomImage">
            <summary>
            This member is for internal use only.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.C1GaugeSingleMark.ShouldSerializeValueImages">
            <summary>
            This member is for internal use only.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugeSingleMark.Angle">
            <summary>
            Gets or sets the angle relative to the Gauge pointer origin where the tick mark should appear (for radial Gauges only).
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugeSingleMark.Position">
            <summary>
            Gets or sets the fraction-based position where the tick mark should appear (for linear Gauges only).
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugeSingleMark.Value">
            <summary>
            Gets or sets the value associated with this tick mark.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugeSingleMark.PointerIndex">
            <summary>
            Gets or sets the index of a Pointer that gives the value associated with this tick mark.
            </summary>
            <remarks>
            Set to a large value to bind to the main Pointer.
            </remarks>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugeSingleMark.ImmediateUpdate">
            <summary>
            Gets or sets whether the bound tick mark should ignore the Pointer's sweep time.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugeSingleMark.SequenceNo">
            <summary>
            The sequence number for this tick mark. Displayed value will not appear
            on the subsequent marks with the same sequence number.
            </summary>
            <remarks>
            Set to -1 to ignore the order of this tick mark.
            </remarks>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugeSingleMark.Length">
            <summary>
            Logical value representing the length of this tick mark.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugeSingleMark.ShapeAngle">
            <summary>
            Gets or sets the fixed angle (in degrees) to rotate this tick mark.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugeSingleMark.OrthogonalAlignment">
            <summary>
            Gets or sets the orthogonal alignment of the tick mark.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugeSingleMark.OrthogonalOffset">
            <summary>
            Gets or sets the logical orthogonal offset of the tick mark.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugeSingleMark.IsRotated">
            <summary>
            Gets or sets if the tick mark should be rotated depending on its angle (for radial Gauges only).
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugeSingleMark.FlipShape">
            <summary>
            Gets or sets whether the shape of a tick mark is inverted.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugeSingleMark.Shape">
            <summary>
            Selects a shape from the set of predefined mark shapes.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugeSingleMark.Width">
            <summary>
            Gets or sets the logical width of a tick mark.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugeSingleMark.CustomShape">
            <summary>
            Gets the custom shape for this tick mark.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugeSingleMark.Border">
            <summary>
            Gets the properties of the tick mark border.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugeSingleMark.Filling">
            <summary>
            Adjusts the interior filling of a tick mark.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugeSingleMark.Gradient">
            <summary>
            Encapsulates properties of a color gradient.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugeSingleMark.CustomImage">
            <summary>
            Gets or sets the custom image for the tick mark.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugeSingleMark.ImageMapName">
            <summary>
            Gets or sets the name of template for the <see cref="P:C1.Web.UI.Controls.C1Gauge.C1GaugeSingleMark.ValueImages"/> collection.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugeSingleMark.ValueImages">
            <summary>
            Gets the collection of values with their associated images.
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1Gauge.C1GaugeAlignment">
            <summary>
            Aligment possibilities for a decorator (relative to the Gauge's axis).
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Gauge.C1GaugeAlignment.In">
            <summary>
            The decorator is located inside the axis.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Gauge.C1GaugeAlignment.Out">
            <summary>
            The decorator is located outside the axis.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Gauge.C1GaugeAlignment.Center">
            <summary>
            The decorator is located centered in a the axis.
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1Gauge.C1GaugeBorderStyle">
            <summary>
            Specifies the style of lines drawn with a <see cref="T:C1.Web.UI.Controls.C1Gauge.C1GaugeBorder"/>.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Gauge.C1GaugeBorderStyle.None">
            <summary>
            Hides the border.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Gauge.C1GaugeBorderStyle.Solid">
            <summary>
            Specifies a solid line.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Gauge.C1GaugeBorderStyle.Dash">
            <summary>
            Specifies a line consisting of dashes.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Gauge.C1GaugeBorderStyle.Dot">
            <summary>
            Specifies a line consisting of dots.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Gauge.C1GaugeBorderStyle.DashDot">
            <summary>
            Specifies a line consisting of a repeating pattern of dash-dot.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Gauge.C1GaugeBorderStyle.DashDotDot">
            <summary>
            Specifies a line consisting of a repeating pattern of dash-dot-dot.
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1Gauge.C1GaugeBrushType">
            <summary>
            The type of brush that is used to fill a Gauge element. 
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Gauge.C1GaugeBrushType.None">
            <summary>
            Don't fill the Gauge element.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Gauge.C1GaugeBrushType.SolidColor">
            <summary>
            Use a brush of a single color.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Gauge.C1GaugeBrushType.Gradient">
            <summary>
            Use a brush with color gradient.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Gauge.C1GaugeBrushType.Hatch">
            <summary>
            Use a brush with a hatch style.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Gauge.C1GaugeBrushType.Texture">
            <summary>
            Use an image to fill interior of a Gauge element.
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1Gauge.C1GaugeClipOperation">
            <summary>
            Specifies how the source and given clipping regions can be combined.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Gauge.C1GaugeClipOperation.None">
            <summary>
            The source region remains unchanged.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Gauge.C1GaugeClipOperation.Replace">
            <summary>
            The source clipping region is replaced by the given region.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Gauge.C1GaugeClipOperation.Intersect">
            <summary>
            Two clipping regions are combined by taking their intersection.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Gauge.C1GaugeClipOperation.Union">
            <summary>
            Two clipping regions are combined by taking the union of both.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Gauge.C1GaugeClipOperation.Xor">
            <summary>
            Two clipping regions are combined by taking only the areas enclosed by one or the other region, but not both.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Gauge.C1GaugeClipOperation.Exclude">
            <summary>
            Specifies that the source region is replaced by the result of the given region being removed from the source region.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Gauge.C1GaugeClipOperation.Complement">
            <summary>
            Specifies that the source region is replaced by the result of the source region being removed from the given region.
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1Gauge.C1GaugeRangeAntiAliasing">
            <summary>
            Specifies the anti-aliasing mode for the internal filling of a <see cref="T:C1.Web.UI.Controls.C1Gauge.C1GaugeRange"/>.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Gauge.C1GaugeRangeAntiAliasing.None">
            <summary>
            The special anti-aliasing is not applied to the range's filling.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Gauge.C1GaugeRangeAntiAliasing.LowQuality">
            <summary>
            Applies the fast low-quality anti-aliasing to the range's filling.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Gauge.C1GaugeRangeAntiAliasing.HighQuality">
            <summary>
            Applies the slow but high-quality anti-aliasing to the range's filling.
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1Gauge.C1GaugeFlipType">
            <summary>
            Specifies the axis used to flip the image.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Gauge.C1GaugeFlipType.FlipNone">
            <summary>
            Specifies no flipping.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Gauge.C1GaugeFlipType.FlipX">
            <summary>
            Specifies a horizontal flip.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Gauge.C1GaugeFlipType.FlipY">
            <summary>
            Specifies a vertical flip.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Gauge.C1GaugeFlipType.FlipXY">
            <summary>
            Specifies a horizontal and vertical flip.
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1Gauge.C1GaugeGradientDirection">
            <summary>
            The set of possible gradient directions.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Gauge.C1GaugeGradientDirection.Horizontal">
            <summary>
            Specifies a gradient from left to right.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Gauge.C1GaugeGradientDirection.Vertical">
            <summary>
            Specifies a gradient from top to bottom.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Gauge.C1GaugeGradientDirection.ForwardDiagonal">
            <summary>
            Specifies a gradient from upper left to lower right.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Gauge.C1GaugeGradientDirection.BackwardDiagonal">
            <summary>
            Specifies a gradient from upper right to lower left.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Gauge.C1GaugeGradientDirection.RadialInner">
            <summary>
            Specifies a gradient from center radially (inscribed ellipse).
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Gauge.C1GaugeGradientDirection.RadialOuter">
            <summary>
            Specifies a gradient from center radially (circumellipse).
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Gauge.C1GaugeGradientDirection.CornerRay">
            <summary>
            Specifies a gradient from center to four corners.
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1Gauge.C1GaugeGradientFalloff">
            <summary>
            Defines the type of a gradient falloff.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Gauge.C1GaugeGradientFalloff.Plain">
            <summary>
            Creates an even linear blend from the starting color to the ending color.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Gauge.C1GaugeGradientFalloff.Triangular">
            <summary>
            Creates a gradient with a center color and a linear falloff to a single color on both ends.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Gauge.C1GaugeGradientFalloff.SigmaBell">
            <summary>
            Creates a gradient falloff based on a bell-shaped curve.
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1Gauge.C1GaugeHatchStyle">
            <summary>
            Specifies the different patterns available for the hatch brush.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Gauge.C1GaugeHatchStyle.Horizontal">
            <summary>
            A pattern of horizontal lines.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Gauge.C1GaugeHatchStyle.Vertical">
            <summary>
            A pattern of vertical lines.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Gauge.C1GaugeHatchStyle.ForwardDiagonal">
            <summary>
            A pattern of lines on a diagonal from upper left to lower right.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Gauge.C1GaugeHatchStyle.BackwardDiagonal">
            <summary>
            A pattern of lines on a diagonal from upper right to lower left.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Gauge.C1GaugeHatchStyle.Cross">
            <summary>
            Specifies horizontal and vertical lines that cross.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Gauge.C1GaugeHatchStyle.DiagonalCross">
            <summary>
            A pattern of crisscross diagonal lines.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Gauge.C1GaugeHatchStyle.Percent05">
            <summary>
            Specifies a 5-percent hatch. The ratio of foreground color to background
            color is 5:100.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Gauge.C1GaugeHatchStyle.Percent10">
            <summary>
            Specifies a 10-percent hatch. The ratio of foreground color to background
            color is 10:100.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Gauge.C1GaugeHatchStyle.Percent20">
            <summary>
            Specifies a 20-percent hatch. The ratio of foreground color to background
            color is 20:100.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Gauge.C1GaugeHatchStyle.Percent25">
            <summary>
            Specifies a 25-percent hatch. The ratio of foreground color to background
            color is 25:100.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Gauge.C1GaugeHatchStyle.Percent30">
            <summary>
            Specifies a 30-percent hatch. The ratio of foreground color to background
            color is 30:100.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Gauge.C1GaugeHatchStyle.Percent40">
            <summary>
            Specifies a 40-percent hatch. The ratio of foreground color to background
            color is 40:100.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Gauge.C1GaugeHatchStyle.Percent50">
            <summary>
            Specifies a 50-percent hatch. The ratio of foreground color to background
            color is 50:100.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Gauge.C1GaugeHatchStyle.Percent60">
            <summary>
            Specifies a 60-percent hatch. The ratio of foreground color to background
            color is 60:100.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Gauge.C1GaugeHatchStyle.Percent70">
            <summary>
            Specifies a 70-percent hatch. The ratio of foreground color to background
            color is 70:100.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Gauge.C1GaugeHatchStyle.Percent75">
            <summary>
            Specifies a 75-percent hatch. The ratio of foreground color to background
            color is 75:100.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Gauge.C1GaugeHatchStyle.Percent80">
            <summary>
            Specifies a 80-percent hatch. The ratio of foreground color to background
            color is 80:100.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Gauge.C1GaugeHatchStyle.Percent90">
            <summary>
            Specifies a 90-percent hatch. The ratio of foreground color to background
            color is 90:100.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Gauge.C1GaugeHatchStyle.LightDownwardDiagonal">
            <summary>
            Specifies diagonal lines that slant to the right from top points to bottom
            points and are spaced 50 percent closer together than ForwardDiagonal,
            but are not antialiased.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Gauge.C1GaugeHatchStyle.LightUpwardDiagonal">
            <summary>
            Specifies diagonal lines that slant to the left from top points to bottom
            points and are spaced 50 percent closer together than BackwardDiagonal,
            but they are not antialiased.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Gauge.C1GaugeHatchStyle.DarkDownwardDiagonal">
            <summary>
            Specifies diagonal lines that slant to the right from top points to bottom
            points, are spaced 50 percent closer together than, and are twice the width
            of ForwardDiagonal. This hatch pattern is not antialiased.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Gauge.C1GaugeHatchStyle.DarkUpwardDiagonal">
            <summary>
            Specifies diagonal lines that slant to the left from top points to bottom
            points, are spaced 50 percent closer together than BackwardDiagonal,
            and are twice its width, but the lines are not antialiased.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Gauge.C1GaugeHatchStyle.WideDownwardDiagonal">
            <summary>
            Specifies diagonal lines that slant to the right from top points to bottom
            points, have the same spacing as hatch style ForwardDiagonal,
            and are triple its width, but are not antialiased.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Gauge.C1GaugeHatchStyle.WideUpwardDiagonal">
            <summary>
            Specifies diagonal lines that slant to the left from top points to bottom
            points, have the same spacing as hatch style BackwardDiagonal,
            and are triple its width, but are not antialiased.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Gauge.C1GaugeHatchStyle.LightVertical">
            <summary>
            Specifies vertical lines that are spaced 50 percent closer together than Vertical.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Gauge.C1GaugeHatchStyle.LightHorizontal">
            <summary>
            Specifies horizontal lines that are spaced 50 percent closer together than Horizontal.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Gauge.C1GaugeHatchStyle.NarrowVertical">
            <summary>
            Specifies vertical lines that are spaced 75 percent closer together than
            hatch style Vertical (or 25 percent closer together than LightVertical).
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Gauge.C1GaugeHatchStyle.NarrowHorizontal">
            <summary>
            Specifies horizontal lines that are spaced 75 percent closer together than
            hatch style Horizontal (or 25 percent closer together than LightHorizontal).
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Gauge.C1GaugeHatchStyle.DarkVertical">
            <summary>
            Specifies vertical lines that are spaced 50 percent closer together than
            Vertical and are twice its width.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Gauge.C1GaugeHatchStyle.DarkHorizontal">
            <summary>
            Specifies horizontal lines that are spaced 50 percent closer together than
            Horizontal and are twice the width of Horizontal.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Gauge.C1GaugeHatchStyle.DashedDownwardDiagonal">
            <summary>
            Specifies dashed diagonal lines, that slant to the right from top points
            to bottom points.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Gauge.C1GaugeHatchStyle.DashedUpwardDiagonal">
            <summary>
            Specifies dashed diagonal lines, that slant to the left from top points to
            bottom points.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Gauge.C1GaugeHatchStyle.DashedHorizontal">
            <summary>
            Specifies dashed horizontal lines.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Gauge.C1GaugeHatchStyle.DashedVertical">
            <summary>
            Specifies dashed vertical lines.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Gauge.C1GaugeHatchStyle.SmallConfetti">
            <summary>
            Specifies a hatch that has the appearance of confetti.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Gauge.C1GaugeHatchStyle.LargeConfetti">
            <summary>
            Specifies a hatch that has the appearance of confetti, and is composed of
            larger pieces than SmallConfetti.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Gauge.C1GaugeHatchStyle.ZigZag">
            <summary>
            Specifies horizontal lines that are composed of zigzags.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Gauge.C1GaugeHatchStyle.Wave">
            <summary>
            Specifies horizontal lines that are composed of tildes.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Gauge.C1GaugeHatchStyle.DiagonalBrick">
            <summary>
            Specifies a hatch that has the appearance of layered bricks that slant to
            the left from top points to bottom points.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Gauge.C1GaugeHatchStyle.HorizontalBrick">
            <summary>
            Specifies a hatch that has the appearance of horizontally layered bricks.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Gauge.C1GaugeHatchStyle.Weave">
            <summary>
            Specifies a hatch that has the appearance of a woven material.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Gauge.C1GaugeHatchStyle.Plaid">
            <summary>
            Specifies a hatch that has the appearance of a plaid material.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Gauge.C1GaugeHatchStyle.Divot">
            <summary>
            Specifies a hatch that has the appearance of divots.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Gauge.C1GaugeHatchStyle.DottedGrid">
            <summary>
            Specifies horizontal and vertical lines, each of which is composed of dots,
            that cross.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Gauge.C1GaugeHatchStyle.DottedDiamond">
            <summary>
            Specifies forward diagonal and backward diagonal lines, each of which is
            composed of dots, that cross.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Gauge.C1GaugeHatchStyle.Shingle">
            <summary>
            Specifies a hatch that has the appearance of diagonally layered shingles
            that slant to the right from top points to bottom points.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Gauge.C1GaugeHatchStyle.Trellis">
            <summary>
            Specifies a hatch that has the appearance of a trellis.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Gauge.C1GaugeHatchStyle.Sphere">
            <summary>
            Specifies a hatch that has the appearance of spheres laid adjacent to one
            another.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Gauge.C1GaugeHatchStyle.SmallGrid">
            <summary>
            Specifies horizontal and vertical lines that cross and are spaced 50 percent
            closer together than hatch style Cross.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Gauge.C1GaugeHatchStyle.SmallCheckerBoard">
            <summary>
            Specifies a hatch that has the appearance of a checkerboard.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Gauge.C1GaugeHatchStyle.LargeCheckerBoard">
            <summary>
            Specifies a hatch that has the appearance of a checkerboard with squares
            that are twice the size of SmallCheckerBoard.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Gauge.C1GaugeHatchStyle.OutlinedDiamond">
            <summary>
            Specifies forward diagonal and backward diagonal lines that cross but are
            not antialiased.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Gauge.C1GaugeHatchStyle.SolidDiamond">
            <summary>
            Specifies a hatch that has the appearance of a checkerboard placed diagonally.
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1Gauge.C1GaugeMarkShape">
            <summary>
            The set of standard tick mark shapes.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Gauge.C1GaugeMarkShape.Custom">
            <summary>
            Use the custom shape for tick marks.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Gauge.C1GaugeMarkShape.Rectangle">
            <summary>
            Display a tick mark as rectangle.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Gauge.C1GaugeMarkShape.Round">
            <summary>
            Display a tick mark as circle or round rectangle.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Gauge.C1GaugeMarkShape.Triangle">
            <summary>
            Display a tick mark as triangle.
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1Gauge.C1GaugeOrientation">
            <summary>
            Specifies the orientation of a <see cref="T:C1.Web.UI.Controls.C1Gauge.C1LinearGauge"/>.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Gauge.C1GaugeOrientation.Horizontal">
            <summary>
            The gauge is oriented horizontally.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Gauge.C1GaugeOrientation.Vertical">
            <summary>
            The gauge is oriented vertically.
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1Gauge.C1GaugePointerShape">
            <summary>
            The set of standard pointer shapes.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Gauge.C1GaugePointerShape.Custom">
            <summary>
            Use the custom shape for the pointer.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Gauge.C1GaugePointerShape.Arrow1">
            <summary>
            Display pointer as arrow.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Gauge.C1GaugePointerShape.Arrow2">
            <summary>
            Display pointer as arrow.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Gauge.C1GaugePointerShape.Arrow3">
            <summary>
            Display pointer as arrow.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Gauge.C1GaugePointerShape.Rectangle">
            <summary>
            Display pointer as rectangle.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Gauge.C1GaugePointerShape.Round">
            <summary>
            Display pointer as circle or round rectangle.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Gauge.C1GaugePointerShape.Thumb">
            <summary>
            Display a thumb for the linear pointer.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Gauge.C1GaugePointerShape.Triangle">
            <summary>
            Display pointer as triangle.
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1Gauge.C1GaugeRotateFlipType">
            <summary>
            Specifies the direction of an image's rotation and the axis used to flip the image.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Gauge.C1GaugeRotateFlipType.RotateNoneFlipNone">
            <summary>
            Specifies no rotation and no flipping.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Gauge.C1GaugeRotateFlipType.Rotate90FlipNone">
            <summary>
            Specifies a 90-degree rotation without flipping.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Gauge.C1GaugeRotateFlipType.Rotate180FlipNone">
            <summary>
            Specifies a 180-degree rotation without flipping.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Gauge.C1GaugeRotateFlipType.Rotate270FlipNone">
            <summary>
            Specifies a 270-degree rotation without flipping.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Gauge.C1GaugeRotateFlipType.RotateNoneFlipX">
            <summary>
            Specifies no rotation followed by a horizontal flip.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Gauge.C1GaugeRotateFlipType.Rotate90FlipX">
            <summary>
            Specifies a 90-degree rotation followed by a horizontal flip.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Gauge.C1GaugeRotateFlipType.Rotate180FlipX">
            <summary>
            Specifies a 180-degree rotation followed by a horizontal flip.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Gauge.C1GaugeRotateFlipType.Rotate270FlipX">
            <summary>
            Specifies a 270-degree rotation followed by a horizontal flip.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Gauge.C1GaugeRotateFlipType.RotateNoneFlipY">
            <summary>
            Specifies no rotation followed by a vertical flip.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Gauge.C1GaugeRotateFlipType.Rotate90FlipY">
            <summary>
            Specifies a 90-degree rotation followed by a vertical flip.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Gauge.C1GaugeRotateFlipType.Rotate180FlipY">
            <summary>
            Specifies a 180-degree rotation followed by a vertical flip.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Gauge.C1GaugeRotateFlipType.Rotate270FlipY">
            <summary>
            Specifies a 270-degree rotation followed by a vertical flip.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Gauge.C1GaugeRotateFlipType.RotateNoneFlipXY">
            <summary>
            Specifies no rotation followed by a horizontal and vertical flip.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Gauge.C1GaugeRotateFlipType.Rotate90FlipXY">
            <summary>
            Specifies a 90-degree rotation followed by a horizontal and vertical flip.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Gauge.C1GaugeRotateFlipType.Rotate180FlipXY">
            <summary>
            Specifies a 180-degree rotation followed by a horizontal and vertical flip.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Gauge.C1GaugeRotateFlipType.Rotate270FlipXY">
            <summary>
            Specifies a 270-degree rotation followed by a horizontal and vertical flip.
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1Gauge.C1GaugeValueColorFalloff">
            <summary>
            Specifies the blending mode for value Colors on a <see cref="T:C1.Web.UI.Controls.C1Gauge.C1GaugeDecorator"/>.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Gauge.C1GaugeValueColorFalloff.None">
            <summary>
            Display the same color till the next color position starts.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Gauge.C1GaugeValueColorFalloff.Linear">
            <summary>
            Display a linear falloff between the previous and the next color positions.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Gauge.C1GaugeValueColorFalloff.Smooth">
            <summary>
            Display a smooth falloff between the previous and the next color positions.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Gauge.C1GaugeValueColorFalloff.Sharp">
            <summary>
            Display a sharp falloff between the previous and the next color positions.
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1Gauge.C1GaugeImageLayout">
            <summary>
            Specifies the position of the background image.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Gauge.C1GaugeImageLayout.None">
            <summary>
            The image is left-aligned at the top across the control's client rectangle.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Gauge.C1GaugeImageLayout.Tile">
            <summary>
            The image is tiled across the control's client rectangle.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Gauge.C1GaugeImageLayout.Center">
            <summary>
            The image is centered within the control's client rectangle.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Gauge.C1GaugeImageLayout.Stretch">
            <summary>
            The image is streched across the control's client rectangle.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Gauge.C1GaugeImageLayout.Zoom">
            <summary>
            The image is enlarged within the control's client rectangle.
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1Gauge.FormatLabelEventHandler">
            <summary>
            Represents the method that handles the FormatLabel event.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">A FormatLabelEventArgs object that contains the event data.</param>
        </member>
        <member name="T:C1.Web.UI.Controls.C1Gauge.FormatLabelEventArgs">
            <summary>
            Provides data for the FormatLabel event.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.FormatLabelEventArgs.Decorator">
            <summary>
            Gets the <see cref="T:C1.Web.UI.Controls.C1Gauge.C1GaugeDecorator"/> object.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.FormatLabelEventArgs.Value">
            <summary>
            Gets the source value displayed in the label.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.FormatLabelEventArgs.ScaledValue">
            <summary>
            Gets the source value scaled by the ValueFactor and ValueOffset.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.FormatLabelEventArgs.Text">
            <summary>
            Gets or sets the text displayed in the label.
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1Gauge.PointerValueChangedEventHandler">
            <summary>
            Represents the method that handles the PointerValueChanged event.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">A PointerValueChangedEventArgs object that contains the event data.</param>
        </member>
        <member name="T:C1.Web.UI.Controls.C1Gauge.PointerValueChangedEventArgs">
            <summary>
            Provides data for the PointerValueChanged event.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.PointerValueChangedEventArgs.Pointer">
            <summary>
            Gets the Gauge pointer which value has been changed.
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1Gauge.C1GaugeBaseShape">
            <summary>
            The base class for shapes, such as <see cref="T:C1.Web.UI.Controls.C1Gauge.C1GaugeRectangle"/> or <see cref="T:C1.Web.UI.Controls.C1Gauge.C1GaugeSector"/>.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.C1GaugeBaseShape.#ctor">
            <summary>
            Initializes a new instance of the shape.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.C1GaugeBaseShape.Load(System.Xml.XmlDocument)">
            <summary>
            Loads a shape from an <see cref="T:System.Xml.XmlDocument"/>.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.C1GaugeBaseShape.Save(System.Xml.XmlWriter)">
            <summary>
            Saves a shape into an <see cref="T:System.Xml.XmlWriter"/>.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.C1GaugeBaseShape.ShouldSerializeViewport">
            <summary>
            This member is for internal use only.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.C1GaugeBaseShape.ShouldSerializeClippings">
            <summary>
            This member is for internal use only.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.C1GaugeBaseShape.ToString">
            <summary>
            Returns a string that represents the current object.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugeBaseShape.Owner">
            <summary>
            Gets the owner Gauge element.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugeBaseShape.HitTestable">
            <summary>
            Gets or sets whether the shape can be hit-tested.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugeBaseShape.Name">
            <summary>
            Gets or sets a name associated with the shape.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugeBaseShape.CenterPointX">
            <summary>
            Gets or sets the fraction-based X position of the shape center.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugeBaseShape.CenterPointY">
            <summary>
            Gets or sets the fraction-based Y position of the shape center.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugeBaseShape.Viewport">
            <summary>
            Specifies the outer bounds for the shape.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugeBaseShape.Clippings">
            <summary>
            Gets the collection of shapes that form the clipping region.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugeBaseShape.Visible">
            <summary>
            Gets or sets whether the shape is visible.
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1Gauge.C1GaugeCaption">
            <summary>
            Draws a text caption.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.C1GaugeCaption.#ctor">
            <summary>
            Initializes a new instance of the shape.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.C1GaugeCaption.ShouldSerializeColor">
            <summary>
            This member is for internal use only.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.C1GaugeCaption.ResetColor">
            <summary>
            This member is for internal use only.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.C1GaugeCaption.FillCommonFontNames(System.Collections.IList)">
            <summary>
            This method is for internal use only.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugeCaption.Text">
            <summary>
            Gets or sets the text displayed in this caption.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugeCaption.CommonFontName">
            <summary>
            Gets or sets the name of the font and color template.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugeCaption.Color">
            <summary>
            Gets or sets the Color used to display text caption.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugeCaption.Font">
            <summary>
            Gets or sets the font used to display text caption.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugeCaption.FontSize">
            <summary>
            Logical value representing the scalable font size.
            </summary>
            <remarks>
            Set to Double.NaN to use the fixed font size.
            </remarks>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugeCaption.NoClip">
            <summary>
            If set to True, unwrapped text reaching outside the formatting rectangle is allowed to show.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugeCaption.NoWrap">
            <summary>
            If set to True, text wrapping between lines when formatting within a rectangle is disabled.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugeCaption.Trimming">
            <summary>
            Indicates how text is trimmed when it exceeds the edges of the layout rectangle.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugeCaption.DirectionRightToLeft">
            <summary>
            Gets or sets whether the Text is displayed from right to left.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugeCaption.DirectionVertical">
            <summary>
            Gets or sets whether the Text is displayed in vertical direction.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugeCaption.Alignment">
            <summary>
            Gets or sets text alignment information on the vertical plane.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugeCaption.LineAlignment">
            <summary>
            Gets or sets the line alignment on the horizontal plane.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugeCaption.RotateAngle">
            <summary>
            Gets or sets the rotation angle (pivot point is at the center of the caption).
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugeCaption.Width">
            <summary>
            Gets or sets the logical (positive) or fraction-based (negative) width of the caption.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugeCaption.Height">
            <summary>
            Gets or sets the logical (positive) or fraction-based (negative) height of the caption.
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1Gauge.C1GaugeEllipse">
            <summary>
            Draws a filled ellipse.
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1Gauge.C1GaugeFilledShape">
            <summary>
            The base class for shapes that draw the border and fill the interior.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.C1GaugeFilledShape.#ctor">
            <summary>
            Initializes a new instance of the shape.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.C1GaugeFilledShape.ShouldSerializeBorder">
            <summary>
            This member is for internal use only.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.C1GaugeFilledShape.ResetBorder">
            <summary>
            This member is for internal use only.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.C1GaugeFilledShape.ShouldSerializeFilling">
            <summary>
            This member is for internal use only.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.C1GaugeFilledShape.ResetFilling">
            <summary>
            This member is for internal use only.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.C1GaugeFilledShape.ShouldSerializeGradient">
            <summary>
            This member is for internal use only.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.C1GaugeFilledShape.ResetGradient">
            <summary>
            This member is for internal use only.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugeFilledShape.Border">
            <summary>
            Gets the properties of the shape border.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugeFilledShape.Filling">
            <summary>
            Adjusts the interior filling of the shape.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugeFilledShape.Gradient">
            <summary>
            Encapsulates properties of a color gradient.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.C1GaugeEllipse.#ctor">
            <summary>
            Initializes a new instance of the shape.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugeEllipse.Width">
            <summary>
            Gets or sets the logical (positive) or fraction-based (negative) width of the ellipse.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugeEllipse.Height">
            <summary>
            Gets or sets the logical (positive) or fraction-based (negative) height of the ellipse.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugeEllipse.RotateAngle">
            <summary>
            Gets or sets the rotation angle (pivot point is at the center of the ellipse).
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1Gauge.C1GaugeImage">
            <summary>
            Draws an image.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.C1GaugeImage.#ctor">
            <summary>
            Initializes a new instance of the shape.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.C1GaugeImage.FillCommonImageNames(System.Collections.IList)">
            <summary>
            This method is for internal use only.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugeImage.Width">
            <summary>
            Gets or sets the logical (positive) or fraction-based (negative) width of the image.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugeImage.Height">
            <summary>
            Gets or sets the logical (positive) or fraction-based (negative) height of the image.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugeImage.RotateAngle">
            <summary>
            Gets or sets the rotation angle (pivot point is at the center of the image).
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugeImage.CommonImageName">
            <summary>
            Gets or sets the name of the image template.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugeImage.FlipType">
            <summary>
            Gets or sets the axis used to flip the image.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugeImage.Image">
            <summary>
            Gets or sets the image.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugeImage.ImageBase64">
            <summary>
            Serializes the Image property.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugeImage.KeepAspectRatio">
            <summary>
            Gets or sets whether the image aspect ratio should be maintained.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugeImage.KeepSize">
            <summary>
            Gets or sets whether the predefined size of the image should not changed.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugeImage.Hue">
            <summary>
            Allows to modify the image hue by the specified amount (between -180 and 180).
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugeImage.Saturation">
            <summary>
            Allows to modify the image saturation by the specified amount (between -100 and 100).
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugeImage.Lightness">
            <summary>
            Allows to modify the image lightness by the specified amount (between -100 and 100).
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugeImage.Opacity">
            <summary>
            Gets or sets the opacity of the image between 0.0 (completely invisible) and 1.0 (opaque).
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1Gauge.C1GaugeRectangle">
            <summary>
            Draws a filled rectangle.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.C1GaugeRectangle.#ctor">
            <summary>
            Initializes a new instance of the shape.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugeRectangle.Width">
            <summary>
            Gets or sets the logical (positive) or fraction-based (negative) width of the rectangle.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugeRectangle.Height">
            <summary>
            Gets or sets the logical (positive) or fraction-based (negative) height of the rectangle.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugeRectangle.SlantAngle">
            <summary>
            Gets or sets the slant angle of the left side (or both sides).
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugeRectangle.SlantAngle2">
            <summary>
            Gets or sets the slant angle of the right side.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugeRectangle.CornerRadius">
            <summary>
            Gets or sets the default radius for the rectangle corners.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugeRectangle.RotateAngle">
            <summary>
            Gets or sets the rotation angle (pivot point is at the center of the rectangle).
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugeRectangle.LeftTop">
            <summary>
            Gets or sets the radius for the left top corner.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugeRectangle.LeftBottom">
            <summary>
            Gets or sets the radius for the left bottom corner.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugeRectangle.RightTop">
            <summary>
            Gets or sets the radius for the right top corner.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugeRectangle.RightBottom">
            <summary>
            Gets or sets the radius for the right bottom corner.
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1Gauge.C1GaugeSector">
            <summary>
            Draws a filled circular sector.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.C1GaugeSector.#ctor">
            <summary>
            Initializes a new instance of the shape.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugeSector.OuterRadius">
            <summary>
            Gets or sets the logical outer radius of the sector.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugeSector.CenterRadius">
            <summary>
            Gets or sets the logical radius of the sector center.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugeSector.InnerOffset">
            <summary>
            Gets or sets the logical offset of the inner circle (if the <see cref="P:C1.Web.UI.Controls.C1Gauge.C1GaugeSector.SweepAngle"/> is less than 180 degrees).
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugeSector.InnerRadius">
            <summary>
            Gets or sets the logical inner radius of the sector.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugeSector.CornerRadius">
            <summary>
            Gets or sets the radius for the sector corners.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugeSector.StartAngle">
            <summary>
            Start angle for the <see cref="T:C1.Web.UI.Controls.C1Gauge.C1GaugeSector"/>. 0 is the topmost point of the circumference.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugeSector.SweepAngle">
            <summary>
            Sweep angle for the <see cref="T:C1.Web.UI.Controls.C1Gauge.C1GaugeSector"/>.
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1Gauge.C1GaugeSegment">
            <summary>
            Draws a filled circular segment.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.C1GaugeSegment.#ctor">
            <summary>
            Initializes a new instance of the shape.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugeSegment.OuterRadius">
            <summary>
            Gets or sets the logical radius of the circular segment.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugeSegment.InnerRadius">
            <summary>
            Gets or sets the radius of the "chord" line.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugeSegment.CornerRadius">
            <summary>
            Gets or sets the radius for the segment corners.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugeSegment.StartAngle">
            <summary>
            Start angle for the <see cref="T:C1.Web.UI.Controls.C1Gauge.C1GaugeSegment"/>. 0 is the topmost point of the circumference.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugeSegment.SweepAngle">
            <summary>
            Sweep angle for the <see cref="T:C1.Web.UI.Controls.C1Gauge.C1GaugeSegment"/>.
            </summary>
        </member>
        <member name="T:C1.C1Schedule.Localization.StringTables">
            <summary>
            StringTables
            this class contains a single static method InitTables that populates the
            tables used by the Localizer class.
            </summary>
        </member>
        <member name="F:C1.Util.Licensing.AboutForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:C1.Util.Licensing.AboutForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:C1.Util.Licensing.AboutForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:C1.Util.Licensing.ProviderInfo">
            <summary>
            <para>Provides static <see cref="M:C1.Util.Licensing.ProviderInfo.Validate(System.Type,System.Object)"/> methods that 
            should be called from the constructors of licensed classes.</para>
            <para>Also provides a static <see cref="M:C1.Util.Licensing.ProviderInfo.ShowAboutBox(System.Object)"/> method that can 
            be called to show the about box with product and licensing information.</para>
            </summary>
        </member>
        <member name="M:C1.Util.Licensing.ProviderInfo.Validate(System.Type,System.Object)">
            <summary>
            Perform license validation. Call this method from the licensed object's 
            constructor to save a license key at design time, validate it at runtime, 
            and display a nag dialog if a valid license is not found.
            </summary>
            <param name="type">Type of licensed object (use typeof() and not GetType()).</param>
            <param name="instance">Reference to the licensed object (not currently used).</param>
            <returns>A <see cref="T:C1.Util.Licensing.LicenseInfo"/> object that contains information about the license.</returns>
            <remarks>
            <para>Check the <b>ShouldNag</b> property of the returned <see cref="T:C1.Util.Licensing.LicenseInfo"/> 
            to determine whether the licensed class should nag the user. This value is set
            to true in situations where a valid license was not found but a nag dialog
            could not be displayed. In these cases, the licensed class is supposed to nag
            in some other way (with a watermark for example).</para>
            </remarks>
        </member>
        <member name="M:C1.Util.Licensing.ProviderInfo.Validate(System.Type,System.Object,System.Boolean)">
            <summary>
            Perform license validation. Call this method from the licensed object's 
            constructor to save a license key at design time, validate it at runtime, 
            and display a nag dialog if a valid license is not found.
            </summary>
            <param name="type">Type of licensed object (use typeof() and not GetType()).</param>
            <param name="instance">Reference to the licensed object (not currently used).</param>
            <param name="showNagDialog">Whether the nag dialog should be displayed when a valid license is not found.</param>
            <returns>A <see cref="T:C1.Util.Licensing.LicenseInfo"/> object that contains information about the license.</returns>
            <remarks>
            <para>This overload was created for use in WPF. It should be called in the control's constructor
            in order to support license persistence correctly. But it should not show the nag dialog until the
            control is fully loaded, or the VS designer may remain blank.</para>
            <para>So the solution is this:</para>
            <code>
            LicenseInfo _licInfo;
            public LicensedControl()
            {
              // check license but don't nag yet
              _licInfo = ProviderInfo.Validate(typeof(LicensedControl), this, false);
              
              // perform licensing after control is fully loaded
              Loaded += LicensedControl_Loaded;
            }
            void LicensedControl_Loaded(object sender, RoutedEventArgs e)
            {
              // nag after loading
              if (_licInfo.ShouldNag)
              {
                ProviderInfo.ShowAboutBox(this);
              }
            }
            </code>
            </remarks>
        </member>
        <member name="M:C1.Util.Licensing.ProviderInfo.Nag(System.Type,C1.Util.Licensing.LicenseInfo,System.Boolean)">
            <summary>
            Nag user by showing AboutBox with license information.
            Show it only once per day per assembly.
            </summary>
            <param name="type">Type of licensed object (use typeof() and not GetType()).</param>
            <param name="li"><see cref="T:C1.Util.Licensing.LicenseInfo"/> object that contains information about the license.</param>
            <param name="designTime">Whether we're running at design or run time.</param>
        </member>
        <member name="M:C1.Util.Licensing.ProviderInfo.Validate(System.Type,System.Object,System.Reflection.Assembly,System.String)">
            <summary>
            Version of Validate used by constructors that take runtime keys.
            </summary>
            <param name="type">Type of licensed object (use typeof() and not GetType()).</param>
            <param name="instance">Reference to the licensed object.</param>
            <param name="callingAsm">Assembly that contains the owner licensed control.</param>
            <param name="runtimeKey">Any valid C1 runtime key.</param>
            <returns>A <see cref="T:C1.Util.Licensing.LicenseInfo"/> with information about the runtime key.</returns>
            <remarks>
            <para>This allows a licensed C1 class to create other C1 objects bypassing 
            license verification for the child objects.</para>
            <para>For extra safety, we check that the owner object is defined in an assembly
            the contains a 'C1ProductInfo' attribute.</para>
            </remarks>
        </member>
        <member name="M:C1.Util.Licensing.ProviderInfo.ValidateDesigntime(System.Type,System.ComponentModel.LicenseContext)">
            <summary>
            Design time validation. Looks for a license in the registry and saves it in the
            provided <see cref="T:System.ComponentModel.LicenseContext"/>.
            </summary>
            <param name="type">Type of licensed object (use typeof() and not GetType()).</param>
            <param name="context"><see cref="T:System.ComponentModel.LicenseContext"/> where the runtime key will be stored.</param>
            <returns>A <see cref="T:C1.Util.Licensing.LicenseInfo"/> with information about the license.</returns>
            <remarks>
            Call this method from application-type products (that always require a license to be
            installed in the registry). In this case, the <paramref name="context"/> parameter 
            should be set to null.
            </remarks>
        </member>
        <member name="M:C1.Util.Licensing.ProviderInfo.ValidateRuntime(System.Type,System.ComponentModel.LicenseContext)">
            <summary>
            Runtime validation.
            Looks for a runtime key stored in the current application's resources.
            </summary>
            <param name="type">Type of licensed object (use typeof() and not GetType()).</param>
            <param name="context"><see cref="T:System.ComponentModel.LicenseContext"/> where the runtime key will be stored.</param>
            <returns>A <see cref="T:C1.Util.Licensing.LicenseInfo"/> with information about the license.</returns>
        </member>
        <member name="M:C1.Util.Licensing.ProviderInfo.ShowAboutBox(System.Object)">
            <summary>
            Shows the About Box for an instance of a C1 product.
            </summary>
        </member>
        <member name="M:C1.Util.Licensing.ProviderInfo.GetC1Type(System.Object)">
            <summary>
            Get the type whose assembly contains a 'C1ProductInfoAttribute'.
            </summary>
            <param name="instance">Instance of an object whose type is to be checked.</param>
            <returns>The type whose assembly contains a 'C1ProductInfoAttribute'</returns>
        </member>
        <member name="T:C1.Util.Licensing.LicenseInfo">
            <summary>
            Contains information about a license stored in an application.
            </summary>
        </member>
        <member name="M:C1.Util.Licensing.LicenseInfo.#ctor(System.Type,C1.Util.Licensing.LicenseStatus,C1.Util.Licensing.ProductLicense)">
            <summary>
            Initializes a new instance of a <see cref="T:C1.Util.Licensing.LicenseInfo"/> class.
            </summary>
        </member>
        <member name="M:C1.Util.Licensing.LicenseInfo.#ctor(System.Type,C1.Util.Licensing.LicenseStatus)">
            <summary>
            Initializes a new instance of a <see cref="T:C1.Util.Licensing.LicenseInfo"/> class.
            </summary>
        </member>
        <member name="P:C1.Util.Licensing.LicenseInfo.LicenseStatus">
            <summary>
            Gets or sets the status of this license (valid, expired, unlicensed).
            </summary>
        </member>
        <member name="P:C1.Util.Licensing.LicenseInfo.License">
            <summary>
            Gets or sets the <see cref="T:C1.Util.Licensing.ProductLicense"/> associated with this license.
            </summary>
        </member>
        <member name="P:C1.Util.Licensing.LicenseInfo.Type">
            <summary>
            Gets or sets the <see cref="P:C1.Util.Licensing.LicenseInfo.Type"/> associated with this license.
            </summary>
        </member>
        <member name="P:C1.Util.Licensing.LicenseInfo.EvaluationDaysElapsed">
            <summary>
            Gets the number of evaluation days elapsed.
            Returns -1 for valid licenses.
            </summary>
        </member>
        <member name="P:C1.Util.Licensing.LicenseInfo.EvaluationDaysLeft">
            <summary>
            Gets the number of evaluation days still left.
            </summary>
        </member>
        <member name="P:C1.Util.Licensing.LicenseInfo.ShouldNag">
            <summary>
            Gets or sets a value that determines whether the caller should
            nag the user. This is the case when the component/control is 
            not licensed, but is not running in interactive mode. So we can't
            show a dialog and the caller is supposed to nag some other way
            (typically by adding watermarks to the UI or output).
            </summary>
        </member>
        <member name="P:C1.Util.Licensing.LicenseInfo.IsValid">
            <summary>
            Gets a value that determines whether the license found is valid.
            </summary>
        </member>
        <member name="P:C1.Util.Licensing.LicenseInfo.IsExpired">
            <summary>
            Gets a value that determines whether the license found is expired.
            </summary>
        </member>
        <member name="P:C1.Util.Licensing.LicenseInfo.IsLocalHost">
            <summary>
            Gets a value that determines whether the component is running under
            localhost and therefore should not nag the user with alert dialogs.
            </summary>
        </member>
        <member name="P:C1.Util.Licensing.LicenseInfo.Full">
            <summary>
            Gets a value that determines whether the license found is valid.
            </summary>
        </member>
        <member name="P:C1.Util.Licensing.LicenseInfo.Expired">
            <summary>
            Gets a value that determines whether the license found is expired.
            </summary>
        </member>
        <member name="T:C1.Util.Licensing.SafeLicenseContext">
            <summary>
            
            Provides a version of GetSavedLicenseKey that doesn't require
            special permissions.
            
            The code was mostly copied from the .NET framework, but then changed 
            in a few places to require fewer permissions (assembly name, file io, 
            etc). 
            
            The main change is the use of a custom deserializer to read Hashtable 
            objects instead of the original BinaryFormatter, which requires
            permissions.
            
            </summary>
        </member>
        <member name="T:C1.Util.Licensing.C1AboutNameAttribute">
            <summary>
            Attribute used to specify the product name shown on the About Box.
            </summary>
        </member>
        <member name="T:C1.Util.Licensing.C1ProductInfoAttribute">
            <summary>
            Attribute used to attach licensing/product information to assemblies.
            </summary>
        </member>
        <member name="T:C1.Util.Licensing.C1ProductSupportAttribute">
            <summary>
            Attribute used to attach support information to assemblies.
            </summary>
        </member>
        <member name="T:C1.Util.Localization.C1DescriptionAttribute">
            <summary>
            C1DescriptionAttribute replaces the DescriptionAttribute
            and uses the C1Localizer class to return the localized Attribute string
            </summary>
        </member>
        <member name="T:C1.Util.Localization.C1CategoryAttribute">
            <summary>
            C1CategoryAttribute replaces the CategoryAttribute
            and uses the C1Localizer class to return the localized Attribute string
            </summary>
        </member>
        <member name="T:C1.Util.Localization.C1Localizer">
            <summary>
            Localization tables and methods for looking up localized strings.
            </summary>
        </member>
        <member name="T:C1.Util.Licensing.ProductLicense">
            <summary>
            Represents a license for a product (e.g. C1BarCode, C1Studio Enterprise).
            
            Provides methods for:
            - generating new license keys (administrative task)
            - checking license key validity (used by installer and products)
            - generating and checking runtime keys (used by products)
            - installing/uninstalling licenses (used by installer)
            
            The install/uninstall code requires elevated permissions, and is
            used only by setups and utilities (not by controls). The code is 
            implemented in the ProductLicense.Installer.cs, which controls should
            not include since it won't be useful to them.
            
            When a product is sold, we send the user a license KEY. The user installs
            a license on his machine by providing his name, his company name, and the 
            key.
            
            The <see cref="P:C1.Util.Licensing.ProductLicense.Key"/> is a string in the following format:
            
                AAQYYCC-XX-NNNNNN-DD-DZZZZZZ
                
            Where:
            
                AA:     Product code (should match one of the products in the 
                        product catalog (see ProductInformation.GetProductCatalog()).
                Q:      Quarter when the license key was issued (1, 2, or 3)
                YY:     Year when the license key was issued (e.g., 10 for 2010)
                CC:     Order code, two chars that indicate whether this is a 
                        new sale, upgrade, renewal, special offer, etc.
                XX:     Hash code to ensure key validity.
                NNNNNN: Unique serial number.
                DDD:    Vendor code, three chars
                ZZZZZZ: Combination of random numbers for uniqueness and extra hash.
                
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1ComboBox.C1ComboBox">
            <summary>
            Represents the <see cref="T:C1.Web.UI.Controls.C1ComboBox.C1ComboBox"/> control.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1ComboBox.C1ComboBox.#ctor">
            <summary>
             Initializes a new instance of the <seealso cref="T:C1.Web.UI.Controls.C1ComboBox.C1ComboBox"/> class.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1ComboBox.C1ComboBox.OnLoad(System.EventArgs)">
            <summary>
            OnLoad override.
            At this point tree view raise all its events.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1ComboBox.C1ComboBox.ProcessCallBack(System.String,System.String)">
            <summary>
            Processes call back command of C1ComboBox.
            </summary>
            <param name="name">Command name</param>
            <param name="clientArgs">Command args</param>
            <returns></returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1ComboBox.C1ComboBox.RaiseItemsRequested(C1.Web.UI.Controls.C1ComboBox.C1ComboBoxItemsRequestedEventArgs)">
            <summary>
            RaiseItemsRequested
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1ComboBox.C1ComboBox.SortItems">
            <summary>
            SortItems with default <see cref="T:System.Collections.IComparer"/> object.
            </summary>
            <example>
            Following code shows how to use this method.
            <code lang="C#"> 
            C1ComboBox comboBox = new C1ComboBox();
            comboBox.Items.Add(new C1ComboBoxItem("test2"));
            comboBox.Items.Add(new C1ComboBoxItem("test1"));
            // after sort test1 will be the first item.
            comboBox.SortItems();
            </code>
            </example>
        </member>
        <member name="M:C1.Web.UI.Controls.C1ComboBox.C1ComboBox.SortItems(System.Collections.IComparer)">
            <summary>
            Sorts <see cref="T:C1.Web.UI.Controls.C1ComboBox.C1ComboBoxItem"/>s with given <see cref="T:System.Collections.IComparer"/> object.
            </summary>
            <param name="comparer">Custom IComparer object.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1ComboBox.C1ComboBox.OnInit(System.EventArgs)">
            <summary>
            Handles the Init event of this control.
            </summary>
            <param name="e">An EventArgs object that contains the event data.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1ComboBox.C1ComboBox.AddAttributesToRender(System.Web.UI.HtmlTextWriter)">
            <summary>
            Adds HTML attributes and styles that need to be rendered to the specified <see cref="T:System.Web.UI.HtmlTextWriter"/>
            </summary>
            <param name="writer">The <see cref="T:System.Web.UI.HtmlTextWriter"/> object that receives the server control content.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1ComboBox.C1ComboBox.RenderControl(System.Web.UI.HtmlTextWriter)">
            <summary>
            Outputs server control content to a provided System.Web.UI.HtmlTextWriter object.
            </summary>
            <param name="writer"> The System.Web.UI.HTmlTextWriter object that receives the control content.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1ComboBox.C1ComboBox.RenderContents(System.Web.UI.HtmlTextWriter)">
            <summary>
            Renders the contents of the control to the specified writer. 
            </summary>
            <param name="writer">A System.Web.UI.HtmlTextWriter that represents the output stream to render HTML content on the client.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1ComboBox.C1ComboBox.CreateMoreResultBox">
            <summary>
            CreateMoreResultBox
            </summary>
            <returns></returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1ComboBox.C1ComboBox.OnPreRender(System.EventArgs)">
            <summary>
            Handlers the PreRender event.
            </summary>
            <param name="e">An EventArgs object that contains the event data.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1ComboBox.C1ComboBox.GetScriptDescriptors">
            <summary>
            Registers the ScriptDescriptor objects for <see cref="T:C1.Web.UI.Controls.C1ComboBox.C1ComboBox"/>.
            </summary>
            <returns>Returns a collection of <see cref="T:System.Web.UI.ScriptDescriptor"/> instances.</returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1ComboBox.C1ComboBox.GetScriptReferences">
            <summary>
            Registers the script references for <see cref="T:C1.Web.UI.Controls.C1ComboBox.C1ComboBox"/>.
            </summary>
            <returns>Returns a collection of <see cref="T:System.Web.UI.ScriptReference"/> instances with the required client-script blocks.</returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1ComboBox.C1ComboBox.FindItemByText(System.String)">
            <summary>
            Find a <see cref="T:C1.Web.UI.Controls.C1ComboBox.C1ComboBoxItem"/> by its <see cref="P:C1.Web.UI.Controls.C1ComboBox.C1ComboBoxItem.Text"/> property.
            </summary>
            <param name="text">Text used to match the item.</param>
            <returns>The first matched item. If no match is found, null is returned.</returns>
            <example>
            <code lang="C#"> 
            C1ComboBox comboBox = new C1ComboBox();
            comboBox.Items.Add(new C1ComboBoxItem("text1"));
            comboBox.Items.Add(new C1ComboBoxItem("text2"));
            // the first item is found.
            C1ComboBoxItem match = comboBox.FindItemByText("text1");
            </code>
            </example>
        </member>
        <member name="M:C1.Web.UI.Controls.C1ComboBox.C1ComboBox.FindItemByValue(System.String)">
            <summary>
            Find a <see cref="T:C1.Web.UI.Controls.C1ComboBox.C1ComboBoxItem"/>  by its <see cref="P:C1.Web.UI.Controls.C1ComboBox.C1ComboBoxItem.Value"/> property.
            </summary>
            <param name="value">C1ComboBoxItem.Value used to match the item.</param>
            <returns>The first matched item. If no match is found, null is returned.</returns>
            <example>
            <code lang="C#"> 
            C1ComboBox comboBox = new C1ComboBox();
            comboBox.Items.Add(new C1ComboBoxItem("text1","value1"));
            comboBox.Items.Add(new C1ComboBoxItem("text2","value2"));
            // the first item is found.
            C1ComboBoxItem match = comboBox.FindItemByValue("value1");
            </code>
            </example>
        </member>
        <member name="M:C1.Web.UI.Controls.C1ComboBox.C1ComboBox.FindItemIndexByText(System.String)">
            <summary>
            Returns index of a <see cref="T:C1.Web.UI.Controls.C1ComboBox.C1ComboBoxItem"/> by its <see cref="P:C1.Web.UI.Controls.C1ComboBox.C1ComboBoxItem.Text"/> property.
            </summary>
            <param name="text">Text used to match the item.</param>
            <returns>Index of C1ComboBoxItem. If no match is found, -1 is returned.</returns>
            <example>
            <code lang="C#"> 
            C1ComboBox comboBox = new C1ComboBox();
            comboBox.Items.Add(new C1ComboBoxItem("text1","value1"));
            comboBox.Items.Add(new C1ComboBoxItem("text2","value2"));
            // 1 is returned.
            int index = comboBox.FindItemIndexByText("text2");
            </code>
            </example>
        </member>
        <member name="M:C1.Web.UI.Controls.C1ComboBox.C1ComboBox.FindItemIndexByValue(System.String)">
            <summary>
            Returns index of a <see cref="T:C1.Web.UI.Controls.C1ComboBox.C1ComboBoxItem"/> by its <see cref="P:C1.Web.UI.Controls.C1ComboBox.C1ComboBoxItem.Value"/> property.
            </summary>
            <param name="value">Value used to match the item.</param>
            <returns>Index of C1ComboBoxItem. If no match is found, -1 is returned.</returns>
            <example>
            <code lang="C#"> 
            C1ComboBox comboBox = new C1ComboBox();
            comboBox.Items.Add(new C1ComboBoxItem("text1","value1"));
            comboBox.Items.Add(new C1ComboBoxItem("text2","value2"));
            // 0 is returned.
            int index = comboBox.FindItemIndexByValue("value1");
            </code>
            </example>
        </member>
        <member name="M:C1.Web.UI.Controls.C1ComboBox.C1ComboBox.ClearSelection">
            <summary>
             Clears the current selection by unselecting all selected cells.
            </summary>
             <example>
             Following code shows how to use this method.
             <code lang="C#"> 
             C1ComboBox comboBox = new C1ComboBox();
             comboBox.Items.Add(new C1ComboBoxItem("test1"));
             comboBox.Items.Add(new C1ComboBoxItem("test2"));
             // Clear added items.
             comboBox.ClearSelection();
             </code>
             </example>
        </member>
        <member name="M:C1.Web.UI.Controls.C1ComboBox.C1ComboBox.LoadViewState(System.Object)">
            <summary>
            Restores view-state information from a previous request that was saved with the SaveViewState() method.
            </summary>
            <param name="savedState">An object that represents the control state to restore.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1ComboBox.C1ComboBox.SaveViewState">
            <summary>
            Saves any state that was modified after the TrackViewState() method was invoked.
            </summary>
            <returns>An object that contains the current view state of the control; otherwise, if there is no view state associated with the control, null.</returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1ComboBox.C1ComboBox.PerformDataBinding(System.Collections.IEnumerable)">
            <summary>
            When overridden in a derived class, binds data from the data source to the control.
            </summary>
            <param name="dataSource">The <see cref="T:System.Collections.IEnumerable"/> list of data returned from a <see cref="M:System.Web.UI.WebControls.DataBoundControl.PerformSelect"/> method call.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1ComboBox.C1ComboBox.System#Web#UI#ICallbackEventHandler#GetCallbackResult">
            <summary>
            ICallbackEventHandler.GetCallbackResult implementation.
            </summary>
            <returns>Call back result.</returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1ComboBox.C1ComboBox.System#Web#UI#ICallbackEventHandler#RaiseCallbackEvent(System.String)">
            <summary>
            ICallbackEventHandler.RaiseCallbackEvent implementation.
            </summary>
            <param name="eventArgument"> A System.String that represents an optional event argument to be passed to the event handler.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1ComboBox.C1ComboBox.System#Web#UI#IPostBackDataHandler#RaisePostDataChangedEvent">
            <summary>
            IPostBackDataHandler.RaisePostDataChangedEvent implementation.
            Notifies the ASP.NET application that the state of the control has changed.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1ComboBox.C1ComboBox.System#Web#UI#IPostBackDataHandler#LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)">
            <summary>
            Processes postback data.
            </summary>
            <param name="postDataKey">The key identifier for the control.</param>
            <param name="postCollection">The collection of all incoming name values.</param>
            <returns></returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1ComboBox.C1ComboBox.AssignComboBoxProperties(System.Collections.IDictionary)">
            <summary>
            AssignComboBoxProperties
            </summary>
            <param name="hashtable"></param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1ComboBox.C1ComboBox.System#Web#UI#IPostBackEventHandler#RaisePostBackEvent(System.String)">
            <summary>
             Enables a server control to process an event raised when a form is posted to the server
            </summary>
            <param name="eventArgument">A String that represents an optional event argument to be passed to the event handler.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1ComboBox.C1ComboBox.SaveLayout(System.String)">
            <summary>
            Saves the control layout properties to the file.
            </summary>
            <param name="filename">The file where the values of the layout properties will be saved.</param> 
            <example>
            Following code shows how to use this method.
            <code lang="C#"> 
            C1ComboBox comboBox = new C1ComboBox();
            comboBox.Items.Add(new C1ComboBoxItem("test1"));
            comboBox.Items.Add(new C1ComboBoxItem("test2"));
            string path = "c:\comboBox.xml";
            // the comboBox is saved in comboBox.xml
            comboBox.SaveLayout(path);
            </code>
            </example>
        </member>
        <member name="M:C1.Web.UI.Controls.C1ComboBox.C1ComboBox.SaveLayout(System.IO.Stream)">
            <summary>
            Saves control layout properties to the stream.
            </summary>
            <param name="stream">The stream where the values of layout properties will be saved.</param>
            <example>
            Following code shows how to use this method.
            <code lang="C#"> 
            // save comboBox properties to a MemoryStream object.
            MemoryStream m = new MemoryStream();
            C1ComboBox comboBox = new C1ComboBox();
            comboBox.Items.Add(new C1ComboBoxItem("test1"));
            comboBox.Items.Add(new C1ComboBoxItem("test2"));
            comboBox.SaveLayout(m);
            </code>
            </example>
        </member>
        <member name="M:C1.Web.UI.Controls.C1ComboBox.C1ComboBox.LoadLayout(System.String)">
            <summary>
            Loads control layout properties from the file.
            </summary>
            <param name="filename">The file where the values of layout properties will be loaded.</param> 
            <example>
            Following code shows how to use this method.
            <code lang="C#"> 
            C1ComboBox comboBox = new C1ComboBox();
            comboBox.Items.Add(new C1ComboBoxItem("test1"));
            comboBox.Items.Add(new C1ComboBoxItem("test2"));
            string path = "c:\comboBox.xml";
            // the comboBox is saved in comboBox.xml
            comboBox.SaveLayout(path);
            
            // load from comboBox.xml
            C1ComboBox comboBox2 = new C1ComboBox();
            comboBox2.LoadLayout(path);
            </code>
            </example>
        </member>
        <member name="M:C1.Web.UI.Controls.C1ComboBox.C1ComboBox.LoadLayout(System.IO.Stream)">
            <summary>
            Load control layout properties from the stream.
            </summary>
            <param name="stream">The stream where the values of layout properties will be loaded.</param>
            <example>
            Following code shows how to use this method.
            <code lang="C#"> 
            // save comboBox properties to a MemoryStream object.
            MemoryStream m = new MemoryStream();
            C1ComboBox comboBox = new C1ComboBox();
            comboBox.Items.Add(new C1ComboBoxItem("test1"));
            comboBox.Items.Add(new C1ComboBoxItem("test2"));
            comboBox.SaveLayout(m);
            // load from stream.
            C1ComboBox comboBox2 = new C1ComboBox();
            comboBox2.LoadLayout(m);
            </code>
            </example>
        </member>
        <member name="M:C1.Web.UI.Controls.C1ComboBox.C1ComboBox.LoadLayout(System.String,C1.Web.UI.LayoutType)">
            <summary>
            Loads control layout properties with specified types from the file.
            </summary>
            <param name="filename">The file where the values of layout properties will be loaded.</param> 
            <param name="layoutTypes">The layout types to load.</param>
            <example>
            Following code shows how to use this method.
            <code lang="C#"> 
            C1ComboBox comboBox = new C1ComboBox();
            comboBox.Items.Add(new C1ComboBoxItem("test1"));
            comboBox.Items.Add(new C1ComboBoxItem("test2"));
            string path = "c:\comboBox.xml";
            // the comboBox is saved in comboBox.xml
            comboBox.SaveLayout(path);
            
            // load from comboBox.xml, only properties with Appearance category is loaded.
            C1ComboBox comboBox2 = new C1ComboBox();
            comboBox2.LoadLayout(path, LayoutType.Appearance);
            </code>
            </example>
        </member>
        <member name="M:C1.Web.UI.Controls.C1ComboBox.C1ComboBox.LoadLayout(System.IO.Stream,C1.Web.UI.LayoutType)">
            <summary>
            Loads the control layout properties with specified types from the stream.
            </summary>
            <param name="stream">The stream where the values of the layout properties will be loaded.</param> 
            <param name="layoutTypes">The layout types to load.</param>
            <example>
            Following code shows how to use this method.
            <code lang="C#"> 
            // save comboBox properties to a MemoryStream object.
            MemoryStream m = new MemoryStream();
            C1ComboBox comboBox = new C1ComboBox();
            comboBox.Items.Add(new C1ComboBoxItem("test1"));
            comboBox.Items.Add(new C1ComboBoxItem("test2"));
            comboBox.SaveLayout(m);
            // load from stream, only properties with Appearance category is loaded.
            C1ComboBox comboBox2 = new C1ComboBox();
            comboBox2.LoadLayout(m, LayoutType.Appearance);
            </code>
            </example>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ComboBox.C1ComboBox.AccessKey">
            <summary>
            Gets or sets the <see cref="P:C1.Web.UI.Controls.C1ComboBox.C1ComboBox.AccessKey"/> for <see cref="T:C1.Web.UI.Controls.C1ComboBox.C1ComboBox"/>.
            </summary>
            <example>
            <code>
            <![CDATA[<cc1:C1ComboBox ID="c1ComboBox2" runat="server" AccessKey="M"></cc1:C1ComboBox>]]>
            </code>
            </example>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ComboBox.C1ComboBox.AppendDataBoundItems">
            <summary>
             Gets or sets a value determines whether to append bound items for <see cref="T:C1.Web.UI.Controls.C1ComboBox.C1ComboBox"/>.
            </summary>
             <example>
             <code>
             <![CDATA[<cc1:C1ComboBox ID="c1ComboBox2" runat="server" AppendDataBoundItems="true"></cc1:C1ComboBox>]]>
             </code>
             </example>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ComboBox.C1ComboBox.AutoComplete">
            <summary>
             Gets or sets a value determines whether <seealso cref="T:C1.Web.UI.Controls.C1ComboBox.C1ComboBox"/> supports auto complete feature.
            </summary>
             <example>
             <code>
             <![CDATA[<cc1:C1ComboBox ID="c1ComboBox2" runat="server" AutoComplete="true"></cc1:C1ComboBox>]]>
             </code>
             </example>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ComboBox.C1ComboBox.DropDownPositioningMode">
            <summary>
            Gets or sets a value determines the position of the drop-down list when it opens or pops up.
            </summary>
            <example>
            <code>
            <![CDATA[<cc1:C1ComboBox ID="c1ComboBox2" runat="server" DropDownPositioningMode="RightBottom"></cc1:C1ComboBox>]]>
            </code>
            </example>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ComboBox.C1ComboBox.AutoCompleteDelay">
            <summary>
             Gets or sets the time delay before auto completion starts (in milliseconds).
            </summary>
             <example>
             <code>
             <![CDATA[<cc1:C1ComboBox ID="c1ComboBox2" runat="server" AutoCompleteDelay="500"></cc1:C1ComboBox>]]>
             </code>
             </example>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ComboBox.C1ComboBox.ForceSelectionText">
            <summary>
             Gets or sets a value that determines whether arbitrary text can be entered in the <see cref="T:C1.Web.UI.Controls.C1ComboBox.C1ComboBox"/> text box.
            </summary>
             <example>
             <code>
             <![CDATA[<cc1:C1ComboBox ID="c1ComboBox2" runat="server" ForceSelectionText="true"></cc1:C1ComboBox>]]>
             </code>
             </example>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ComboBox.C1ComboBox.EmbeddedVisualStyles">
            <summary>
            Returns a string array with embedded visual style names.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ComboBox.C1ComboBox.MultipleSelectionSeparator">
            <summary>
             Gets or sets the character or string used to separate multiple selections from the <see cref="T:C1.Web.UI.Controls.C1ComboBox.C1ComboBox"/> drop-down list.
            </summary>
             <example>
             <code>
             <![CDATA[<cc1:C1ComboBox ID="c1ComboBox2" runat="server" MultipleSelectionSeparator=","></cc1:C1ComboBox>]]>
             </code>
             </example>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ComboBox.C1ComboBox.SelectionMode">
            <summary>
             Gets or sets SelectionMode of this <see cref="T:C1.Web.UI.Controls.C1ComboBox.C1ComboBox"/>.
            </summary>
             <example>
             <code>
             <![CDATA[<cc1:C1ComboBox ID="c1ComboBox2" runat="server" SelectionMode="Multiple"></cc1:C1ComboBox>]]>
             </code>
             </example>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ComboBox.C1ComboBox.AutoPostBack">
            <summary>
             Gets or sets a value indicating whether a postback to the server automatically occurs when the user changes the <see cref="T:C1.Web.UI.Controls.C1ComboBox.C1ComboBox"/> selection.
            </summary>
             <example>
             <code>
             <![CDATA[<cc1:C1ComboBox ID="c1ComboBox2" runat="server" AutoPostBack="true"></cc1:C1ComboBox>]]>
             </code>
             </example>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ComboBox.C1ComboBox.CausesValidation">
            <summary>
             Gets or sets a value indicating whether item select causes validation.
            </summary>
             <example>
             <code>
             <![CDATA[<cc1:C1ComboBox ID="c1ComboBox2" runat="server" CausesValidation="false"></cc1:C1ComboBox>]]>
             </code>
             </example>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ComboBox.C1ComboBox.Columns">
            <summary>
            Gets or sets the columns.
            </summary>
            <value>The columns.</value>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ComboBox.C1ComboBox.ValidationGroup">
            <summary>
             Gets or sets the ValidationGroup that <see cref="T:C1.Web.UI.Controls.C1ComboBox.C1ComboBox"/> belongs to.
            </summary>
             <example>
             <code>
             <![CDATA[<cc1:C1ComboBox ID="c1ComboBox2" runat="server" ValidationGroup="group1"></cc1:C1ComboBox>]]>
             </code>
             </example>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ComboBox.C1ComboBox.ShowTrigger">
            <summary>
             Gets or sets a value that determines whether to show the Trigger button. 
             The Trigger button is the arrow in the <see cref="T:C1.Web.UI.Controls.C1ComboBox.C1ComboBox"/> that you click to expand the drop-down list.
            </summary>
             <example>
             <code>
             <![CDATA[<cc1:C1ComboBox ID="c1ComboBox2" runat="server" ShowTrigger="false"></cc1:C1ComboBox>]]>
             </code>
             </example>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ComboBox.C1ComboBox.DropDownResizable">
            <summary>
            Gets or sets a value indicating whether the drop-down list is resizable.
            </summary>
            <example>
            <code>
            <![CDATA[<cc1:C1ComboBox ID="c1ComboBox2" runat="server" DropDownResizable="true"></cc1:C1ComboBox>]]>
            </code>
            </example>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ComboBox.C1ComboBox.Enabled">
            <summary>
            Gets or sets a value indicating whether <see cref="T:C1.Web.UI.Controls.C1ComboBox.C1ComboBox"/> is enabled.
            </summary>
            <example>
            <code>
            <![CDATA[<cc1:C1ComboBox ID="c1ComboBox2" runat="server" Enabled="false"></cc1:C1ComboBox>]]>
            </code>
            </example>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ComboBox.C1ComboBox.ParentEnable">
            <summary>
            Gets or sets parent control enable state.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ComboBox.C1ComboBox.SetTextOnArrowNavigation">
            <summary>
             Gets or sets a value that determines whether the text is set for the input field of <see cref="T:C1.Web.UI.Controls.C1ComboBox.C1ComboBox"/> during arrow key navigation.
            </summary>
             <example>
             <code>
             <![CDATA[<cc1:C1ComboBox ID="c1ComboBox2" runat="server" SetTextOnArrowNavigation="false"></cc1:C1ComboBox>]]>
             </code>
             </example>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ComboBox.C1ComboBox.HideDropDownListOnBlur">
            <summary>
             Gets or sets a value indicating whether the drop-down list for the <see cref="T:C1.Web.UI.Controls.C1ComboBox.C1ComboBox"/>  should be closed on blur.
            </summary>
             <example>
             <code>
             <![CDATA[<cc1:C1ComboBox ID="c1ComboBox2" runat="server" HideDropDownListOnBlur="false"></cc1:C1ComboBox>]]>
             </code>
             </example>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ComboBox.C1ComboBox.ExpandAnimation">
            <summary>
            Gets or sets the <see cref="T:C1.Web.UI.AnimationEffect"/> to use when the drop-down list is expanding.
            </summary>
            <example>
            <code>
            <![CDATA[<cc1:C1ComboBox ID="c1ComboBox2" runat="server" ExpandAnimation="DropInFromTop"></cc1:C1ComboBox>]]>
            </code>
            </example>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ComboBox.C1ComboBox.ExpandDuration">
            <summary>
            Gets or sets the duration of the animation when drop-down list is expanding.
            </summary>
            <example>
            <code>
            <![CDATA[<cc1:C1ComboBox ID="c1ComboBox2" runat="server" ExpandDuration="2000"></cc1:C1ComboBox>]]>
            </code>
            </example>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ComboBox.C1ComboBox.ExpandEasing">
            <summary>
            Gets or sets the transition of the animation when drop-down list is expanding. 
            </summary>
            <example>
            <code>
            <![CDATA[<cc1:C1ComboBox ID="c1ComboBox2" runat="server" ExpandEasing="EaseInCubic"></cc1:C1ComboBox>]]>
            </code>
            </example>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ComboBox.C1ComboBox.DropDownWidth">
            <summary>
             Gets or sets the drop-down list width (in pixels). 
             If the value is less than zero, the width of the C1ComboBox will be used.
            </summary>
             <example>
             <code>
             <![CDATA[<cc1:C1ComboBox ID="c1ComboBox2" runat="server" DropDownWidth="200"></cc1:C1ComboBox>]]>
             </code>
             </example>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ComboBox.C1ComboBox.Width">
            <summary>
             Gets or sets the width of the drop-down list (in pixels).
            </summary>
             <example>
             <code>
             <![CDATA[<cc1:C1ComboBox ID="c1ComboBox2" runat="server" Width="200"></cc1:C1ComboBox>]]>
             </code>
             </example>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ComboBox.C1ComboBox.EnableCallBackMode">
            <summary>
             Gets or sets a value that determines whether to enable callback to load <see cref="T:C1.Web.UI.Controls.C1ComboBox.C1ComboBoxItem"/>s on demand.
            </summary>
             <example>
             <code>
             <![CDATA[<cc1:C1ComboBox ID="c1ComboBox2" runat="server" EnableCallBackMode="true"></cc1:C1ComboBox>]]>
             </code>
             </example>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ComboBox.C1ComboBox.TagKey">
            <summary>
            Gets the value that corresponds to this Web server control.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ComboBox.C1ComboBox.WindowCollisionDetection">
            <summary>
             Determines whether to enforce Window Collision Detection for the drop-down list.
            </summary>
             <example>
             <code>
             <![CDATA[<cc1:C1ComboBox ID="c1ComboBox2" runat="server" WindowCollisionDetection="true"></cc1:C1ComboBox>]]>
             </code>
             </example>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ComboBox.C1ComboBox.CallBackOnScrollingToEnd">
            <summary>
             Gets or sets a value determines whether to fetch more on scrolling to end.
            </summary>
             <example>
             <code>
             <![CDATA[<cc1:C1ComboBox ID="c1ComboBox2" runat="server" CallBackOnScrollingToEnd="true"></cc1:C1ComboBox>]]>
             </code>
             </example>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ComboBox.C1ComboBox.ErrorText">
            <summary>
             Gets or sets the text to display if an error occurs during a call back to the server.
            </summary>
             <example>
             <code>
             <![CDATA[<cc1:C1ComboBox ID="c1ComboBox2" runat="server" ErrorText="Error occurred!"></cc1:C1ComboBox>]]>
             </code>
             </example>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ComboBox.C1ComboBox.CollapseAnimation">
            <summary>
            Gets or sets the <see cref="T:C1.Web.UI.AnimationEffect"/> to use when the drop-down list is collapsing.
            </summary>
            <example>
            <code>
            <![CDATA[<cc1:C1ComboBox ID="c1ComboBox2" runat="server" CollapseAnimation="DropInFromTop"></cc1:C1ComboBox>]]>
            </code>
            </example>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ComboBox.C1ComboBox.CollapseDuration">
            <summary>
            Gets or sets the duration of the animation when the drop-down list is collapsing.
            </summary>
            <example>
            <code>
            <![CDATA[<cc1:C1ComboBox ID="c1ComboBox2" runat="server" CollapseDuration="2000"></cc1:C1ComboBox>]]>
            </code>
            </example>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ComboBox.C1ComboBox.CollapseEasing">
            <summary>
            Gets or sets the transition of the animation when the drop-down list is collapsing.
            </summary>
            <example>
            <code>
            <![CDATA[<cc1:C1ComboBox ID="c1ComboBox2" runat="server" CollapseEasing="EaseInCirc"></cc1:C1ComboBox>]]>
            </code>
            </example>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ComboBox.C1ComboBox.TemplateItemHighlighted">
            <summary>
             Gets or sets a value indicating whether to highlight the items when using template.
            </summary>
             <example>
             <code>
             <![CDATA[<cc1:C1ComboBox ID="c1ComboBox2" runat="server" TemplateItemHighlighted="false"></cc1:C1ComboBox>]]>
             </code>
             </example>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ComboBox.C1ComboBox.IsCaseSensitive">
            <summary>
             Gets or sets a value that determines whether text matching should be case sensitive.
            </summary>
             <example>
             <code>
             <![CDATA[<cc1:C1ComboBox ID="c1ComboBox2" runat="server" IsCaseSensitive="true"></cc1:C1ComboBox>]]>
             </code>
             </example>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ComboBox.C1ComboBox.IsEditable">
            <summary>
             Gets or sets a value that determines whether text is editable.
            </summary>
             <example>
             <code>
             <![CDATA[<cc1:C1ComboBox ID="c1ComboBox2" runat="server" IsEditable="true"></cc1:C1ComboBox>]]>
             </code>
             </example>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ComboBox.C1ComboBox.IsTemplated">
            <summary>
             Gets a value indicating whether C1ComboBox uses an item template.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ComboBox.C1ComboBox.Items">
            <summary>
             Gets children items of <see cref="T:C1.Web.UI.Controls.C1ComboBox.C1ComboBox"/>.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ComboBox.C1ComboBox.LoadingText">
            <summary>
             Gets or sets the text to display during a call back to the server.
            </summary>
             <example>
             <code>
             <![CDATA[<cc1:C1ComboBox ID="c1ComboBox2" runat="server" LoadingText="Loading items..."></cc1:C1ComboBox>]]>
             </code>
             </example>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ComboBox.C1ComboBox.LoadOnDemandDelay">
            <summary>
            Gets or sets the time delay before starting a call back to the server.
            </summary>
            <example>
            <code>
            <![CDATA[<cc1:C1ComboBox ID="c1ComboBox2" runat="server" LoadOnDemandDelay="500"></cc1:C1ComboBox>]]>
            </code>
            </example>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ComboBox.C1ComboBox.OffsetX">
            <summary>
             Offsets the normal positions of <see cref="T:C1.Web.UI.Controls.C1ComboBox.C1ComboBox"/> drop-down list items along the x-axis by the number specified.
            </summary>
             <example>
             <code>
             <![CDATA[<cc1:C1ComboBox ID="c1ComboBox2" runat="server" OffsetX="10"></cc1:C1ComboBox>]]>
             </code>
             </example>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ComboBox.C1ComboBox.OffsetY">
            <summary>
             Offsets the normal positions of <see cref="T:C1.Web.UI.Controls.C1ComboBox.C1ComboBox"/> drop-down list items along the y-axis by the number specified.
            </summary>
             <example>
             <code>
             <![CDATA[<cc1:C1ComboBox ID="c1ComboBox2" runat="server" OffsetY="10"></cc1:C1ComboBox>]]>
             </code>
             </example>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ComboBox.C1ComboBox.OnClientBlur">
            <summary>
             The client-side event fired when the <see cref="T:C1.Web.UI.Controls.C1ComboBox.C1ComboBox"/>  loses focus.
            </summary>
             <example>
             <code>
             <![CDATA[<cc1:C1ComboBox ID="c1ComboBox2" runat="server" OnClientBlur="onblurHandler"></cc1:C1ComboBox>]]>
             </code>
             </example>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ComboBox.C1ComboBox.OnClientDropDownCollapsing">
            <summary>
             The client-side event that is fired when the drop-down list is about to be closed.
            </summary>
             <example>
             <code>
             <![CDATA[<cc1:C1ComboBox ID="c1ComboBox2" runat="server" OnClientDropDownCollapsing="onBeforeCollapsingHandler"></cc1:C1ComboBox>]]>
             </code>
             </example>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ComboBox.C1ComboBox.OnClientDropDownCollapsed">
            <summary>
             The client-side event that is fired when the drop-down list is closed.
            </summary>
             <example>
             <code>
             <![CDATA[<cc1:C1ComboBox ID="c1ComboBox2" runat="server" OnClientDropDownCollapsed="onBeforeCollapsedHandler"></cc1:C1ComboBox>]]>
             </code>
             </example>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ComboBox.C1ComboBox.OnClientDropDownExpanding">
            <summary>
             The client-side event that is fired when the drop-down list is about to be expanded.
            </summary>
             <example>
             <code>
             <![CDATA[<cc1:C1ComboBox ID="c1ComboBox2" runat="server" OnClientDropDownExpanding="onBeforeExpandingHandler"></cc1:C1ComboBox>]]>
             </code>
             </example>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ComboBox.C1ComboBox.OnClientDropDownExpanded">
            <summary>
             The client-side event that is fired when the drop-down list is expanded.
            </summary>
             <example>
             <code>
             <![CDATA[<cc1:C1ComboBox ID="c1ComboBox2" runat="server" OnClientDropDownExpanding="onBeforeExpandedHandler"></cc1:C1ComboBox>]]>
             </code>
             </example>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ComboBox.C1ComboBox.OnClientFocus">
            <summary>
             The client-side event that is fired when the <see cref="T:C1.Web.UI.Controls.C1ComboBox.C1ComboBox"/> gains focus.
            </summary>
             <example>
             <code>
             <![CDATA[<cc1:C1ComboBox ID="c1ComboBox2" runat="server" OnClientFocus="onFocusHandler"></cc1:C1ComboBox>]]>
             </code>
             </example>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ComboBox.C1ComboBox.OnClientItemsRequested">
            <summary>
             The client-side event fired after the request for items has completed.
            </summary>
             <example>
             <code>
             <![CDATA[<cc1:C1ComboBox ID="c1ComboBox2" runat="server" OnClientFocus="onItemsRequestedHandler"></cc1:C1ComboBox>]]>
             </code>
             </example>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ComboBox.C1ComboBox.OnClientItemsRequestFailed">
            <summary>
             The client-side event fired after the request for items has failed.
            </summary>
             <example>
             <code>
             <![CDATA[<cc1:C1ComboBox ID="c1ComboBox2" runat="server" OnClientItemsRequestFailed="onItemsRequestFailedHandler"></cc1:C1ComboBox>]]>
             </code>
             </example>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ComboBox.C1ComboBox.OnClientItemsRequesting">
            <summary>
             The client-side event that is fired before the items are requested server-side.
            </summary>
             <example>
             <code>
             <![CDATA[<cc1:C1ComboBox ID="c1ComboBox2" runat="server" OnClientItemsRequesting="onItemsRequestingHandler"></cc1:C1ComboBox>]]>
             </code>
             </example>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ComboBox.C1ComboBox.OnClientKeyPressing">
            <summary>
             The client-side event that is fired when the specified key is pressed.
            </summary>
             <example>
             <code>
             <![CDATA[<cc1:C1ComboBox ID="c1ComboBox2" runat="server" OnClientKeyPressing="onKeyPressingHandler"></cc1:C1ComboBox>]]>
             </code>
             </example>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ComboBox.C1ComboBox.OnClientInitialized">
            <summary>
             The name of the javascript function called after a <see cref="T:C1.Web.UI.Controls.C1ComboBox.C1ComboBox"/> is initialized.
            </summary>
             <example>
             <code>
             <![CDATA[<cc1:C1ComboBox ID="c1ComboBox2" runat="server" OnClientInitialized="onInitializedHandler"></cc1:C1ComboBox>]]>
             </code>
             </example>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ComboBox.C1ComboBox.OnClientSelectedIndexChanged">
            <summary>
            The client-side event that is fired after the selected index of the <see cref="T:C1.Web.UI.Controls.C1ComboBox.C1ComboBox"/> has changed.
            </summary>
             <example>
             <code>
             <![CDATA[<cc1:C1ComboBox ID="c1ComboBox2" runat="server" OnClientSelectedIndexChanged="onSelectedIndexChangedHandler"></cc1:C1ComboBox>]]>
             </code>
             </example>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ComboBox.C1ComboBox.OnClientSelectedIndexChanging">
            <summary>
             The client-side event that is fired when the selected index of the C1ComboBox is about to change.
            </summary>
             <example>
             <code>
             <![CDATA[<cc1:C1ComboBox ID="c1ComboBox2" runat="server" OnClientSelectedIndexChanging="onSelectedIndexChangingHandler"></cc1:C1ComboBox>]]>
             </code>
             </example>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ComboBox.C1ComboBox.OnClientTextChanged">
            <summary>
             The client-side event that is fired when the <see cref="P:C1.Web.UI.Controls.C1ComboBox.C1ComboBox.Text"/> property is changed.
            </summary>
             <example>
             <code>
             <![CDATA[<cc1:C1ComboBox ID="c1ComboBox2" runat="server" OnClientTextChanged="onTextChangedHandler"></cc1:C1ComboBox>]]>
             </code>
             </example>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ComboBox.C1ComboBox.OnClientTextExceeded">
            <summary>
             The client-side event that is fired when the Text entered in the <see cref="T:C1.Web.UI.Controls.C1ComboBox.C1ComboBox"/> exceeds the maximum length allowed.
            </summary>
             <example>
             <code>
             <![CDATA[<cc1:C1ComboBox ID="c1ComboBox2" runat="server" OnClientTextExceeded="onTextExceededHandler"></cc1:C1ComboBox>]]>
             </code>
             </example>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ComboBox.C1ComboBox.OpenDropDownOnLoad">
            <summary>
             Gets or sets a value indicating whether to show the drop-down list when a document is loaded.
            </summary>
             <example>
             <code>
             <![CDATA[<cc1:C1ComboBox ID="c1ComboBox2" runat="server" OpenDropDownOnLoad="true"></cc1:C1ComboBox>]]>
             </code>
             </example>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ComboBox.C1ComboBox.ShowMoreButton">
            <summary>
             Gets or sets a value indicating whether to show the "more" arrow button in drop-down list.
            </summary>
             <example>
             <code>
             <![CDATA[<cc1:C1ComboBox ID="c1ComboBox2" runat="server" ShowMoreButton="true"></cc1:C1ComboBox>]]>
             </code>
             </example>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ComboBox.C1ComboBox.TriggerPosition">
            <summary>
             Determines whether the trigger button, or drop-down arrow, appears on the left or right of the <see cref="T:C1.Web.UI.Controls.C1ComboBox.C1ComboBox"/>.
            </summary>
             <example>
             <code>
             <![CDATA[<cc1:C1ComboBox ID="c1ComboBox2" runat="server" TriggerPosition="Right"></cc1:C1ComboBox>]]>
             </code>
             </example>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ComboBox.C1ComboBox.ZIndex">
            <summary>
             Gets or sets the ZIndex for the C1ComboBox drop-down list, if needed. 
             The default value is 0, which allows the system to assign the ZIndex value for the drop-down list.
            </summary>
             <example>
             <code>
             <![CDATA[<cc1:C1ComboBox ID="c1ComboBox2" runat="server" ZIndex="20"></cc1:C1ComboBox>]]>
             </code>
             </example>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ComboBox.C1ComboBox.EmptyText">
            <summary>
             Gets or sets the text to show when the <see cref="T:C1.Web.UI.Controls.C1ComboBox.C1ComboBox"/> text box is empty.
            </summary>
             <example>
             <code>
             <![CDATA[<cc1:C1ComboBox ID="c1ComboBox2" runat="server" EmptyText="Please Select"></cc1:C1ComboBox>]]>
             </code>
             </example>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ComboBox.C1ComboBox.Visible">
            <summary>
             Gets or sets whether this control is visible.
            </summary>
             <example>
             <code>
             <![CDATA[<cc1:C1ComboBox ID="c1ComboBox2" runat="server" Visible="false"></cc1:C1ComboBox>]]>
             </code>
             </example>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ComboBox.C1ComboBox.FilterType">
            <summary>
             Gets or sets the FilterType used for <see cref="T:C1.Web.UI.Controls.C1ComboBox.C1ComboBox"/>.
            </summary>
             <example>
             <code>
             <![CDATA[<cc1:C1ComboBox ID="c1ComboBox2" runat="server" FilterType="Contains"></cc1:C1ComboBox>]]>
             </code>
             </example>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ComboBox.C1ComboBox.HeaderTemplate">
            <summary>
              Gets or sets the header template used for the <see cref="T:C1.Web.UI.Controls.C1ComboBox.C1ComboBox"/> drop-down list.
            </summary>
             <example>
             <code>
            <![CDATA[<cc1:C1ComboBox ID="c1ComboBox2" runat="server">
                <HeaderTemplate>
                     Template content
                </HeaderTemplate>
            </cc1:C1ComboBox>]]>
             </code>
             </example>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ComboBox.C1ComboBox.AutoFilter">
            <summary>
             Gets or sets a value that determines whether to automatically filter the <see cref="T:C1.Web.UI.Controls.C1ComboBox.C1ComboBox"/> drop-down list on keypress.
            </summary>
             <example>
             <code>
             <![CDATA[<cc1:C1ComboBox ID="c1ComboBox2" runat="server" AutoFilter="false"></cc1:C1ComboBox>]]>
             </code>
             </example>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ComboBox.C1ComboBox.DropDownHeight">
            <summary>
            Gets or sets the height of the drop-down list.
            </summary>
            <example>
            <code>
            <![CDATA[<cc1:C1ComboBox ID="c1ComboBox2" runat="server" DropDownHeight="500"></cc1:C1ComboBox>]]>
            </code>
            </example>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ComboBox.C1ComboBox.Height">
            <summary>
            This property is hidden.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ComboBox.C1ComboBox.ItemsTemplate">
            <summary>
             Gets or sets the items template used for <see cref="T:C1.Web.UI.Controls.C1ComboBox.C1ComboBox"/>.
            </summary>
             <example>
             <code>
            <![CDATA[<cc1:C1ComboBox ID="c1ComboBox2" runat="server">
                <ItemsTemplate>
                     Template content
                </ItemsTemplate>
            </cc1:C1ComboBox>]]>
             </code>
             </example>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ComboBox.C1ComboBox.MaxLength">
            <summary>
             Gets or sets the maximum number of characters that can be entered in the <see cref="T:C1.Web.UI.Controls.C1ComboBox.C1ComboBox"/>  text box.
            </summary>
             <example>
             <code>
             <![CDATA[<cc1:C1ComboBox ID="c1ComboBox2" runat="server" MaxLength="10"></cc1:C1ComboBox>]]>
             </code>
             </example>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ComboBox.C1ComboBox.SelectedIndex">
            <summary>
             Gets or sets the SelectedIndex of <see cref="T:C1.Web.UI.Controls.C1ComboBox.C1ComboBox"/>.
            </summary>
             <example>
             <code lang="C#">
             C1ComboBox c = new C1ComboBox();
             c.Items.Add(new C1ComboBoxItem("test1"));
             c.Items.Add(new C1ComboBoxItem("test2"));
             // select the test2 item.
             c.SelectedIndex = 1;
             </code>
             </example>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ComboBox.C1ComboBox.SelectedValue">
            <summary>
             Gets or sets the SelectedValue of <see cref="T:C1.Web.UI.Controls.C1ComboBox.C1ComboBox"/>.
            </summary>
             <example>
             <code lang="C#">
             C1ComboBox c = new C1ComboBox();
             c.Items.Add(new C1ComboBoxItem("test1"));
             c.Items.Add(new C1ComboBoxItem("test2"));
             // select the test2 item.
             c.SelectedValue = "test2";
             </code>
             </example>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ComboBox.C1ComboBox.SelectedIndices">
            <summary>
            Gets or sets the SelectedIndices of <see cref="T:C1.Web.UI.Controls.C1ComboBox.C1ComboBox"/>.
            </summary>
            <example>
            <code lang="C#">
            C1ComboBox c = new C1ComboBox();
            c.Items.Add(new C1ComboBoxItem("test1"));
            c.Items.Add(new C1ComboBoxItem("test2"));
            c.SelectionMode = C1ComboBoxSelectionMode.Multiple;
            ArrayList indicesToSelect = new ArrayList();
            indicesToSelect.Add(0);
            indicesToSelect.Add(1);
            // select 2 items.
            c.SelectedIndices = indicesToSelect;
            </code>
            </example>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ComboBox.C1ComboBox.SelectedItem">
            <summary>
             Gets the SelectedItem of <see cref="T:C1.Web.UI.Controls.C1ComboBox.C1ComboBox"/>.
            </summary>
             <example>
             <code lang="C#">
             C1ComboBox c = new C1ComboBox();
             c.Items.Add(new C1ComboBoxItem("test1"));
             c.Items.Add(new C1ComboBoxItem("test2"));
             c.SelectedIndex = 1;
             // item will refer to test2.
             C1ComboBoxItem item = c.SelectedItem;
             </code>
             </example>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ComboBox.C1ComboBox.SelectedItems">
            <summary>
             Gets the SelectedItems of <see cref="T:C1.Web.UI.Controls.C1ComboBox.C1ComboBox"/>.
            </summary>
             <example>
             <code lang="C#">
             C1ComboBox c = new C1ComboBox();
             c.Items.Add(new C1ComboBoxItem("test1"));
             c.Items.Add(new C1ComboBoxItem("test2"));
             c.SelectionMode = C1ComboBoxSelectionMode.Multiple;
             ArrayList indicesToSelect = new ArrayList();
             indicesToSelect.Add(0);
             indicesToSelect.Add(1);
             // select 2 items.
             c.SelectedIndices = indicesToSelect;
             C1ComboBoxItem[] items = new C1ComboBoxItem[2];
             items = c.SelectedItems;
             </code>
             </example>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ComboBox.C1ComboBox.FooterTemplate">
             <summary>
             Gets or sets the footer template used for the <see cref="T:C1.Web.UI.Controls.C1ComboBox.C1ComboBox"/>  drop-down list.
             </summary>
             <example>
             <code>
            <![CDATA[<cc1:C1ComboBox ID="c1ComboBox2" runat="server">
                <FooterTemplate>
                     Template content
                </FooterTemplate>
            </cc1:C1ComboBox>]]>
             </code>
             </example>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ComboBox.C1ComboBox.ToolTip">
            <summary>
            Gets or sets the tooltip for the <see cref="T:C1.Web.UI.Controls.C1ComboBox.C1ComboBox"/>.
            </summary>
            <example>
            <code>
            <![CDATA[<cc1:C1ComboBox ID="c1ComboBox2" runat="server" ToolTip="Tooltip"></cc1:C1ComboBox>]]>
            </code>
            </example>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ComboBox.C1ComboBox.IsMultipleColumn">
            <summary>
            Gets a value indicating whether C1ComboBox is multiple column.
            </summary>
            <value>
            <c>true</c> if this instance is multiple column; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ComboBox.C1ComboBox.Sort">
            <summary>
             Determines whether the items in the C1ComboBoxItems list appear in ascending or descending order.
             </summary>
             <example>
             <code>
             <![CDATA[<cc1:C1ComboBox ID="c1ComboBox2" runat="server" Sort="Asc"></cc1:C1ComboBox>]]>
             </code>
             </example>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ComboBox.C1ComboBox.SortCaseSensitive">
            <summary>
            Gets or sets a value indicating Sort CaseSensitive.
            </summary>
            <example>
            <code>
            <![CDATA[<cc1:C1ComboBox ID="c1ComboBox2" runat="server" SortCaseSensitive="true"></cc1:C1ComboBox>]]>
            </code>
            </example>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ComboBox.C1ComboBox.DropDownFooter">
            <summary>
             Gets the footer control of the drop-down list C1ComboBox.
            </summary>
             <example>
             <code>
             C1ComboBox c = new C1ComboBox();
             c.Items.Add(new C1ComboBoxItem("test1"));
             c.Items.Add(new C1ComboBoxItem("test2"));
             c.DropDownFooter.Controls.Add(new TextBox());
             </code>
             </example>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ComboBox.C1ComboBox.DropDownHeader">
            <summary>
            Gets the footer control of the drop-down list C1ComboBox.
            </summary>
            <example>
            <code>
            C1ComboBox c = new C1ComboBox();
            c.Items.Add(new C1ComboBoxItem("test1"));
            c.Items.Add(new C1ComboBoxItem("test2"));
            c.DropDownHeader.Controls.Add(new TextBox());
            </code>
            </example>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ComboBox.C1ComboBox.DataTextField">
            <summary>
             Gets or sets the field in the data source from which to load text values.
            </summary>
             <example>
             <code lang="C#">
             C1ComboBox c = new C1ComboBox();
             c.DataSource = data;
             c.DataTextField = "textField";
             c.DataValueField = "valueField";
             c.DataBind();
             </code>
             </example>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ComboBox.C1ComboBox.DataValueField">
            <summary>
             Gets or sets the field in the data source from which to load item values.
            </summary>
             <example>
             <code lang="C#">
             C1ComboBox c = new C1ComboBox();
             c.DataSource = data;
             c.DataTextField = "textField";
             c.DataValueField = "valueField";
             c.DataBind();
             </code>
             </example>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ComboBox.C1ComboBox.VisualStylePath">
            <summary>
            Gets or sets the path to the visual style folder.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ComboBox.C1ComboBox.VisualStyle">
            <summary>
            Gets or sets VisualStyle name for C1ComboBox.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ComboBox.C1ComboBox.Valid">
            <summary>
            Gets or sets whether length of text in C1ComboBox exceeds the length defined in <see cref="P:C1.Web.UI.Controls.C1ComboBox.C1ComboBox.MaxLength"/>.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ComboBox.C1ComboBox.ClientVisible">
            <summary>
            Client side visibility of C1ComboBox
            </summary>
        </member>
        <member name="E:C1.Web.UI.Controls.C1ComboBox.C1ComboBox.BoundItemCreated">
            <summary>
             Occurs after <see cref="T:C1.Web.UI.Controls.C1ComboBox.C1ComboBoxItem"/> is created in data binding.
            </summary>
        </member>
        <member name="E:C1.Web.UI.Controls.C1ComboBox.C1ComboBox.ItemDataBinding">
            <summary>
            Occurs when <see cref="T:C1.Web.UI.Controls.C1ComboBox.C1ComboBoxItem"/> is binding data.
            </summary>
        </member>
        <member name="E:C1.Web.UI.Controls.C1ComboBox.C1ComboBox.ItemsRequested">
            <summary>
            Occurs when C1ComboBox requests data from client side.
            </summary>
        </member>
        <member name="E:C1.Web.UI.Controls.C1ComboBox.C1ComboBox.SelectedIndexChanged">
            <summary>
            Occurs when the SelectedIndex property has changed.
            </summary>
        </member>
        <member name="E:C1.Web.UI.Controls.C1ComboBox.C1ComboBox.TextChanged">
            <summary>
            Occurs when the text in the C1ComboBox text box changes.
            </summary>
        </member>
        <member name="E:C1.Web.UI.Controls.C1ComboBox.C1ComboBox.TextExceeded">
            <summary>
            Occurs when the length of text in the C1ComboBox exceeds the <see cref="P:C1.Web.UI.Controls.C1ComboBox.C1ComboBox.MaxLength"/>.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ComboBox.C1ComboBox.Text">
            <summary>
             Gets or sets text for <see cref="T:C1.Web.UI.Controls.C1ComboBox.C1ComboBox"/>.
            </summary>
             <example>
             <code lang="C#"> 
             C1ComboBox comboBox = new C1ComboBox();
             C1ComboBoxItem item = new C1ComboBoxItem("test1");
             item.Selected = true;
             comboBox.Items.Add(item);
             // txt is "test1";
             string txt = comboBox.Text;
             </code>
             </example>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ComboBox.C1ComboBox.FooterText">
            <summary>
            Gets or sets the C1ComboBox footer text.
            </summary>
            <value>The footer text.</value>
        </member>
        <member name="T:C1.Web.UI.Controls.C1ComboBox.C1ComboBoxItem">
            <summary>
            Represents an item in the <see cref="T:C1.Web.UI.Controls.C1ComboBox.C1ComboBox"/> drop-down list.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1ComboBox.C1ComboBoxItem.#ctor(System.String,System.String)">
            <summary>
             Initializes a new instance of the <see cref="T:C1.Web.UI.Controls.C1ComboBox.C1ComboBoxItem"/> class.
            </summary>
            <param name="text"><see cref="T:C1.Web.UI.Controls.C1ComboBox.C1ComboBoxItem"/> Text.</param>
            <param name="value"><see cref="T:C1.Web.UI.Controls.C1ComboBox.C1ComboBoxItem"/> Value.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1ComboBox.C1ComboBoxItem.#ctor(System.String)">
            <summary>
             Initializes a new instance of the C1ComboBoxItem class.
            </summary>
            <param name="text"><see cref="T:C1.Web.UI.Controls.C1ComboBox.C1ComboBoxItem"/> text.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1ComboBox.C1ComboBoxItem.#ctor">
            <summary>
             Initializes a new instance of the C1ComboBoxItem class.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1ComboBox.C1ComboBoxItem.#ctor(System.Int32,System.Object)">
            <summary>
            Initializes a new instance of the C1ComboBoxItem class.
            </summary>
            <param name="itemIndex">Index of current item.</param>
            <param name="dataItem">Related data item.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1ComboBox.C1ComboBoxItem.CreateChildControls">
            <summary>
            Called by the ASP.NET page framework to notify server controls that use composition-based implementation to create any child controls they contain in preparation for posting back or rendering.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1ComboBox.C1ComboBoxItem.AddAttributesToRender(System.Web.UI.HtmlTextWriter)">
            <summary>
            Adds HTML attributes and styles that need to be rendered to the specified HtmlTextWriterTag. 
            </summary>
            <param name="writer">An <see cref="T:System.Web.UI.HtmlTextWriter"/> that represents the output stream to render HTML content on the client.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1ComboBox.C1ComboBoxItem.Remove">
            <summary>
             Removes this <see cref="T:C1.Web.UI.Controls.C1ComboBox.C1ComboBoxItem"/> from <see cref="P:C1.Web.UI.Controls.C1ComboBox.C1ComboBox.Items"/> collection.
            </summary>
             <example>
             Following code shows how to use this method.
             <code lang="C#">
             C1ComboBox comboBox = new C1ComboBox();
             comboBox.Items.Add(new C1ComboBoxItem("test2"));
             comboBox.Items.Add(new C1ComboBoxItem("test1"));
             // test2 will be removed from collection.
             comboBox.Items[0].Remove();
             </code>
             </example>
        </member>
        <member name="M:C1.Web.UI.Controls.C1ComboBox.C1ComboBoxItem.RenderControl(System.Web.UI.HtmlTextWriter)">
            <summary>
            Outputs server control content to a provided <see cref="T:System.Web.UI.HtmlTextWriter"/> object and stores tracing information about the control if tracing is enabled.
            </summary>
            <param name="writer">The HTmlTextWriter object that receives the control content.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1ComboBox.C1ComboBoxItem.RenderBeginTag(System.Web.UI.HtmlTextWriter)">
            <summary>
            RenderBeginTag
            </summary>
            <param name="writer"></param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1ComboBox.C1ComboBoxItem.RenderContents(System.Web.UI.HtmlTextWriter)">
            <summary>
            Renders the contents of the control to the specified writer. 
            </summary>
            <param name="writer">A System.Web.UI.HtmlTextWriter that represents the output stream to render HTML content on the client.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1ComboBox.C1ComboBoxItem.OnPreRender(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Web.UI.Control.PreRender"/> event.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs"/> object that contains the event data.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1ComboBox.C1ComboBoxItem.SetParent(C1.Web.UI.Controls.C1ComboBox.C1ComboBox)">
            <summary>
            Specifies owner of this <see cref="T:C1.Web.UI.Controls.C1ComboBox.C1ComboBoxItem"/>.
            </summary>
            <param name="owner"><see cref="T:C1.Web.UI.Controls.C1ComboBox.C1ComboBox"/> object.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1ComboBox.C1ComboBoxItem.System#IComparable#CompareTo(System.Object)">
            <summary>
             IComparable.CompareTo implementation.
            </summary>
            <param name="obj"></param>
            <returns></returns>
            <exception cref="T:System.ArgumentException"></exception>
            <exception cref="T:System.Exception"></exception>
        </member>
        <member name="M:C1.Web.UI.Controls.C1ComboBox.C1ComboBoxItem.AssignProperties(System.Collections.Hashtable)">
            <summary>
            AssignProperties
            </summary>
            <param name="ht">Properties</param>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ComboBox.C1ComboBoxItem.CurrentImageUrl">
            <summary>
            Gets current image Url.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ComboBox.C1ComboBoxItem.TemplateContainer">
            <summary>
            Gets or sets the template container.
            </summary>
            <value>The template container.</value>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ComboBox.C1ComboBoxItem.CustomAttributes">
            <summary>
             Gets custom attributes HashTable of <see cref="T:C1.Web.UI.Controls.C1ComboBox.C1ComboBoxItem"/>.
             This Hashtable could be used to store additional info.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ComboBox.C1ComboBoxItem.Cells">
            <summary>
            Gets the column data.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ComboBox.C1ComboBoxItem.Visible">
            <summary>
            Gets or sets a value that indicates whether a server control is rendered as UI on the page.
            </summary>
            <value></value>
            <returns>true if the control is visible on the page; otherwise false.
            </returns>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ComboBox.C1ComboBoxItem.Enabled">
            <summary>
            Determines whether the <see cref="T:C1.Web.UI.Controls.C1ComboBox.C1ComboBoxItem"/> is enabled in the <see cref="T:C1.Web.UI.Controls.C1ComboBox.C1ComboBox"/> drop-down list.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ComboBox.C1ComboBoxItem.HighLightedImageUrl">
            <summary>
             Gets or sets the URL for the image to be used to show highlighted state.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ComboBox.C1ComboBoxItem.ImageUrl">
            <summary>
              Gets or sets the URL for the image used to show normal state.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ComboBox.C1ComboBoxItem.DisabledImageUrl">
            <summary>
             Gets or sets the URL for the image to be used for disabled state.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ComboBox.C1ComboBoxItem.Index">
            <summary>
            Gets the <see cref="T:C1.Web.UI.Controls.C1ComboBox.C1ComboBoxItem"/> index in collection.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ComboBox.C1ComboBoxItem.IsSeparator">
            <summary>
             Determines if the <see cref="T:C1.Web.UI.Controls.C1ComboBox.C1ComboBoxItem"/> is a separator so that keyboard navigation ignores it.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ComboBox.C1ComboBoxItem.Owner">
            <summary>
             Owner
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ComboBox.C1ComboBoxItem.ParentComboBox">
            <summary>
             Gets the parent <see cref="T:C1.Web.UI.Controls.C1ComboBox.C1ComboBox"/>.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ComboBox.C1ComboBoxItem.Selected">
            <summary>
            Determines whether the <see cref="T:C1.Web.UI.Controls.C1ComboBox.C1ComboBoxItem"/> is selected.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ComboBox.C1ComboBoxItem.TagKey">
            <summary>
            Gets the value that corresponds to this Web server control. This property is used primarily by control developers.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ComboBox.C1ComboBoxItem.Templated">
            <summary>
             Gets or sets value indicating if this item uses template
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ComboBox.C1ComboBoxItem.Text">
            <summary>
             Gets or sets the text of the <see cref="T:C1.Web.UI.Controls.C1ComboBox.C1ComboBoxItem"/>.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ComboBox.C1ComboBoxItem.ToolTip">
            <summary>
            Gets or sets a tooltip for the current <see cref="T:C1.Web.UI.Controls.C1ComboBox.C1ComboBoxItem"/>.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ComboBox.C1ComboBoxItem.Value">
            <summary>
             Gets or sets a value for this <see cref="T:C1.Web.UI.Controls.C1ComboBox.C1ComboBoxItem"/>.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ComboBox.C1ComboBoxItem.StaticKey">
            <summary>
            Key for C1ComboItem declared on aspx page.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ComboBox.C1ComboBoxItem.Width">
            <summary>
            Gets or sets the width of the <see cref="T:C1.Web.UI.Controls.C1ComboBox.C1ComboBoxItem"/> in the <see cref="T:C1.Web.UI.Controls.C1ComboBox.C1ComboBox"/> drop-down list.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ComboBox.C1ComboBoxItem.Height">
            <summary>
            Gets or sets the height of the <see cref="T:C1.Web.UI.Controls.C1ComboBox.C1ComboBoxItem"/> in the <see cref="T:C1.Web.UI.Controls.C1ComboBox.C1ComboBox"/> drop-down list.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ComboBox.C1ComboBoxItem.DataItem">
            <summary>
            Gets DataItem of this C1ComboBoxItem.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ComboBox.C1ComboBoxItem.DataItemIndex">
            <summary>
            Gets DataItemIndex of this C1ComboBoxItem.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ComboBox.C1ComboBoxItem.DisplayIndex">
            <summary>
            Gets DisplayIndex of this C1ComboBoxItem.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ComboBox.C1ComboBoxItem.AccessKey">
            <summary>
            This property is hidden.
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1ComboBox.C1ComboBoxItemCollection">
            <summary>
            Represents a collection of <see cref="T:C1.Web.UI.Controls.C1ComboBox.C1ComboBoxItem"/> objects.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1ComboBox.C1ComboBoxItemCollection.#ctor(C1.Web.UI.Controls.C1ComboBox.C1ComboBox)">
            <summary>
            Initializes a new instance of the <see cref="T:C1.Web.UI.Controls.C1ComboBox.C1ComboBoxItemCollection"/> class..
            </summary>
            <param name="owner">Parent ComboBox.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1ComboBox.C1ComboBoxItemCollection.Clear">
            <summary>
            Removes all <see cref="T:C1.Web.UI.Controls.C1ComboBox.C1ComboBoxItem"/>s from the collection.
            </summary>
            <example>
            <code lang="C#">
            C1ComboBox c = new C1ComboBox();
            c.Items.Add(new C1ComboBoxItem("test1"));
            c.Items.Add(new C1ComboBoxItem("test2"));
            // items are clear.
            c.Items.Clear();
            </code>
            </example>
        </member>
        <member name="M:C1.Web.UI.Controls.C1ComboBox.C1ComboBoxItemCollection.Add(C1.Web.UI.Controls.C1ComboBox.C1ComboBoxItem)">
            <summary>
            Adds a new <see cref="T:C1.Web.UI.Controls.C1ComboBox.C1ComboBoxItem"/> to the end of the list.
            </summary>
            <param name="child">Item to add.</param>
            <example>
            <code lang="C#">
            C1ComboBox c = new C1ComboBox();
            c.Items.Add(new C1ComboBoxItem("test1"));
            c.Items.Add(new C1ComboBoxItem("test2"));
            </code>
            </example>
        </member>
        <member name="M:C1.Web.UI.Controls.C1ComboBox.C1ComboBoxItemCollection.Insert(System.Int32,C1.Web.UI.Controls.C1ComboBox.C1ComboBoxItem)">
            <summary>
            Inserts a <see cref="T:C1.Web.UI.Controls.C1ComboBox.C1ComboBoxItem"/> at the specified position in the collection.
            </summary>
            <param name="index">Position where the C1ComboBoxItem will be added. The value should be greater than or equal to 0.</param>
            <param name="child"><see cref="T:C1.Web.UI.Controls.C1ComboBox.C1ComboBoxItem"/> instance.</param>
            <example>
            <code lang="C#">
            C1ComboBox c = new C1ComboBox();
            c.Items.Add(new C1ComboBoxItem("test1"));
            c.Items.Insert(0,new C1ComboBoxItem("test2"));
            </code>
            </example>
        </member>
        <member name="M:C1.Web.UI.Controls.C1ComboBox.C1ComboBoxItemCollection.Remove(C1.Web.UI.Controls.C1ComboBox.C1ComboBoxItem)">
            <summary>
            Removes the specified <see cref="T:C1.Web.UI.Controls.C1ComboBox.C1ComboBoxItem"/> from the list.
            </summary>
            <param name="child"><see cref="T:C1.Web.UI.Controls.C1ComboBox.C1ComboBoxItem"/> to remove.</param>
            <example>
            <code lang="C#">
            C1ComboBox c = new C1ComboBox();
            C1ComboBoxItem item = new C1ComboBoxItem("test1")
            c.Items.Add(item);
            c.Items.Remove(item);
            </code>
            </example>
        </member>
        <member name="M:C1.Web.UI.Controls.C1ComboBox.C1ComboBoxItemCollection.RemoveAt(System.Int32)">
            <summary>
            Removes the <see cref="T:C1.Web.UI.Controls.C1ComboBox.C1ComboBoxItem"/> at the specified index from the list.
            </summary>
            <param name="index">Index of <see cref="T:C1.Web.UI.Controls.C1ComboBox.C1ComboBoxItem"/> to remove.</param>
            <example>
            <code lang="C#">
            C1ComboBox c = new C1ComboBox();
            c.Items.Add(new C1ComboBoxItem("test1"));
            c.Items.RemoveAt(0);
            </code>
            </example>
        </member>
        <member name="M:C1.Web.UI.Controls.C1ComboBox.C1ComboBoxItemCollection.InternalClearSelection">
            <summary>
            InternalClearSelection
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1ComboBox.C1ComboBoxItemCollection.GetSelectedItems">
            <summary>
            Gets selected items.
            </summary>
            <returns></returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1ComboBox.C1ComboBoxItemCollection.Sort(System.Collections.IComparer)">
            <summary>
            Sort
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1ComboBox.C1ComboBoxItemCollection.Sort">
            <summary>
            Sort with default comparer.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1ComboBox.C1ComboBoxItemCollection.CrateCollectionFromJson(System.Collections.ArrayList)">
            <summary>
            CrateCollectionFromJson
            </summary>
            <param name="list">list</param>
            <returns></returns>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ComboBox.C1ComboBoxItemCollection.IsEmpty">
            <summary>
            Gets value that indicates if the collection is empty or not.
            If collection is empty than it will be skipped during the serialization process.
            </summary>
            <example>
            <code lang="C#"> 
            C1ComboBox comboBox = new C1ComboBox();
            bool b = comboBox.Items.IsEmpty;
            // b == true;
            </code>
            </example>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ComboBox.C1ComboBoxItemCollection.SelectedIndices">
            <summary>
            Gets or sets the selected indices of <see cref="T:C1.Web.UI.Controls.C1ComboBox.C1ComboBox"/>.
            </summary>
            <example>
            <code lang="C#">
            C1ComboBox c = new C1ComboBox();
            c.Items.Add(new C1ComboBoxItem("test1"));
            c.Items.Add(new C1ComboBoxItem("test2"));
            c.SelectionMode = C1ComboBoxSelectionMode.Multiple;
            ArrayList indicesToSelect = new ArrayList();
            indicesToSelect.Add(0);
            indicesToSelect.Add(1);
            c.SelectedIndices = indicesToSelect;
            </code>
            </example>
        </member>
        <member name="T:C1.Web.UI.Controls.C1ComboBox.C1ComboBoxSerializer">
            <summary>
            Represents C1ComboBoxSerializer which will serialize C1ComboBox.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1ComboBox.C1ComboBoxSerializer.#ctor(System.Object)">
            <summary>
            Initializes a new instance of the C1ComboBoxSerializer class..
            </summary>
            <param name="serializableObject">Object to serialize.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1ComboBox.C1ComboBoxSerializer.#ctor(System.ComponentModel.Design.IComponentChangeService,System.Object)">
            <summary>
            Initializes a new instance of the C1ComboBoxSerializer class.
            </summary>
            <param name="componentChangeService">IComponentChangeService</param>
            <param name="serializableObject">Object to serialize.</param>
        </member>
        <member name="T:C1.Web.UI.Controls.C1ComboBox.C1ComboBoxTemplateContainer">
            <summary>
            Template container for C1ComboBox.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1ComboBox.C1ComboBoxTemplateContainer.#ctor">
            <summary>
            Initializes a new instance of the C1ComboBoxTemplateContainer class.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1ComboBox.C1ComboBoxTemplateContainer.#ctor(System.Int32,System.Object)">
            <summary>
            Initializes a new instance of the C1ComboBoxTemplateContainer class.
            </summary>
            <param name="itemIndex">Index of current item.</param>
            <param name="dataItem">Related data item.</param>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ComboBox.C1ComboBoxTemplateContainer.ParentComboBox">
            <summary>
            Parent ComboBox instance.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ComboBox.C1ComboBoxTemplateContainer.ComboBoxItem">
            <summary>
            C1ComboBoxItem with this template container.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ComboBox.C1ComboBoxTemplateContainer.TagKey">
            <summary>
            Gets the value that corresponds to this Web server control.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ComboBox.C1ComboBoxTemplateContainer.DataItem">
            <summary>
            Gets an object that is used in simplified data-binding operations.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ComboBox.C1ComboBoxTemplateContainer.DataItemIndex">
            <summary>
            Gets the index of the data item.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ComboBox.C1ComboBoxTemplateContainer.DisplayIndex">
            <summary>
             Gets the display order of the C1ComboBoxItem relative to the currently displayed C1ComboBoxItems.
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1ComboBox.SortType">
            <summary>
             Determines whether the items in the <see cref="T:C1.Web.UI.Controls.C1ComboBox.C1ComboBoxItem"/>s list appear in ascending or descending order.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1ComboBox.SortType.Desc">
            <summary>
             Descending.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1ComboBox.SortType.Asc">
            <summary>
             Ascending.
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1ComboBox.FilterSetting">
            <summary>
            Represents filtering options available.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1ComboBox.FilterSetting.Contains">
            <summary>
            Matches item if its text contains the filtering text.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1ComboBox.FilterSetting.StartWith">
            <summary>
            Matches item only if its text starts with the filtering text.
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1ComboBox.C1ComboBoxSelectionMode">
            <summary>
            Represents selection modes available.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1ComboBox.C1ComboBoxSelectionMode.Single">
            <summary>
            Single Mode. Allows only one <see cref="T:C1.Web.UI.Controls.C1ComboBox.C1ComboBoxItem"/> to be selected.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1ComboBox.C1ComboBoxSelectionMode.Multiple">
            <summary>
            Multiple Mode. Allows multiple <see cref="T:C1.Web.UI.Controls.C1ComboBox.C1ComboBoxItem"/>s to be selected.
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1ComboBox.TriggerPosition">
            <summary>
            Determines whether the trigger button, or drop-down arrow, appears on the left or right of the <see cref="T:C1.Web.UI.Controls.C1ComboBox.C1ComboBox"/>.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1ComboBox.TriggerPosition.Left">
            <summary>
            Sets the trigger button, or drop-down arrow, to appear on the left of the <see cref="T:C1.Web.UI.Controls.C1ComboBox.C1ComboBox"/>.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1ComboBox.TriggerPosition.Right">
            <summary>
            Sets the trigger button, or drop-down arrow, to appear on the right of the <see cref="T:C1.Web.UI.Controls.C1ComboBox.C1ComboBox"/>.
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1ComboBox.PositioningMode">
            <summary>
            Determines the position of the drop-down list when it opens or pops up.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1ComboBox.PositioningMode.Absolute">
            <summary>
            Absolute mode.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1ComboBox.PositioningMode.Center">
            <summary>
            Center.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1ComboBox.PositioningMode.TopLeft">
            <summary>
            Top Left.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1ComboBox.PositioningMode.TopRight">
            <summary>
            Top Right
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1ComboBox.PositioningMode.TopCenter">
            <summary>
            Top Center.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1ComboBox.PositioningMode.RightTop">
            <summary>
            Right Top.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1ComboBox.PositioningMode.RightBottom">
            <summary>
            Right Bottom.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1ComboBox.PositioningMode.RightMiddle">
            <summary>
            Right Middle.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1ComboBox.PositioningMode.BottomLeft">
            <summary>
            Bottom Left.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1ComboBox.PositioningMode.BottomRight">
            <summary>
            Bottom Right.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1ComboBox.PositioningMode.BottomCenter">
            <summary>
            Bottom Center.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1ComboBox.PositioningMode.LeftTop">
            <summary>
            Left Top.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1ComboBox.PositioningMode.LeftBottom">
            <summary>
            Left Bottom.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1ComboBox.PositioningMode.LeftMiddle">
            <summary>
            Left Middle.
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1ComboBox.C1ComboBoxEventHandler">
            <summary>
             Represents the method that will handle <see cref="E:C1.Web.UI.Controls.C1ComboBox.C1ComboBox.SelectedIndexChanged"/> event.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="args">An <see cref="T:C1.Web.UI.Controls.C1ComboBox.C1ComboBoxEventArgs"/> that contains event data.</param>
        </member>
        <member name="T:C1.Web.UI.Controls.C1ComboBox.C1ComboBoxItemEventHandler">
            <summary>
             Represents the method that will handle an data binding events of <see cref="T:C1.Web.UI.Controls.C1ComboBox.C1ComboBox"/>.
             Such as <see cref="E:C1.Web.UI.Controls.C1ComboBox.C1ComboBox.BoundItemCreated"/> event and <see cref="E:C1.Web.UI.Controls.C1ComboBox.C1ComboBox.ItemDataBinding"/> event.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="args">An <see cref="T:C1.Web.UI.Controls.C1ComboBox.C1ComboBoxItemEventArgs"/> that contains event data.</param>
        </member>
        <member name="T:C1.Web.UI.Controls.C1ComboBox.C1ComboBoxItemsRequestedHandler">
            <summary>
             Represents the method that will handle <see cref="E:C1.Web.UI.Controls.C1ComboBox.C1ComboBox.ItemsRequested"/> event.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="args">An <see cref="T:C1.Web.UI.Controls.C1ComboBox.C1ComboBoxItemsRequestedEventArgs"/> that contains event data.</param>
        </member>
        <member name="T:C1.Web.UI.Controls.C1ComboBox.C1ComboBoxItemEventArgs">
            <summary>
            Contains event data for data binding events.
            Such as <see cref="E:C1.Web.UI.Controls.C1ComboBox.C1ComboBox.BoundItemCreated"/> event and <see cref="E:C1.Web.UI.Controls.C1ComboBox.C1ComboBox.ItemDataBinding"/> event.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1ComboBox.C1ComboBoxItemEventArgs.#ctor(C1.Web.UI.Controls.C1ComboBox.C1ComboBoxItem)">
            <summary>
            Initializes a new instance of the C1ComboBox class.
            </summary>
            <param name="item"><see cref="T:C1.Web.UI.Controls.C1ComboBox.C1ComboBoxItem"/> related with this event</param>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ComboBox.C1ComboBoxItemEventArgs.Item">
            <summary>
            Gets the <see cref="T:C1.Web.UI.Controls.C1ComboBox.C1ComboBoxItem"/> related with this event.
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1ComboBox.C1ComboBoxEventArgs">
            <summary>
             Contains event data for <see cref="E:C1.Web.UI.Controls.C1ComboBox.C1ComboBox.SelectedIndexChanged"/> event and <see cref="E:C1.Web.UI.Controls.C1ComboBox.C1ComboBox.TextChanged"/> event.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ComboBox.C1ComboBoxEventArgs.NewValue">
            <summary>
            Gets or sets the new value.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ComboBox.C1ComboBoxEventArgs.OldValue">
            <summary>
            Gets or sets the old value.
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1ComboBox.C1ComboBoxItemsRequestedEventArgs">
            <summary>
             Contains event data for <see cref="E:C1.Web.UI.Controls.C1ComboBox.C1ComboBox.ItemsRequested"/> event.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ComboBox.C1ComboBoxItemsRequestedEventArgs.FilterText">
            <summary>
            Gets or sets the text used to filter items.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ComboBox.C1ComboBoxItemsRequestedEventArgs.Message">
            <summary>
            Gets or sets the message that will be displayed after 'show more' arrow.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ComboBox.C1ComboBoxItemsRequestedEventArgs.ClientItemsNumber">
            <summary>
            Gets or sets the number of client items.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ComboBox.C1ComboBoxItemsRequestedEventArgs.EndOfItems">
            <summary>
             Gets or sets a Boolean value indicating whether client side has rich the end of all items.
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1ComboBox.C1ComboBoxBindColumn">
            <summary>
            Represents C1ComboBox data bind column.
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1ComboBox.C1ComboBoxColumn">
            <summary>
            C1ComboColumnBase class.
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1ComboBox.C1ComboBoxControlBase">
            <summary>
            This class inherits from WebControl and hides useless properties.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ComboBox.C1ComboBoxControlBase.BackColor">
            <summary>
            This property is hidden.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ComboBox.C1ComboBoxControlBase.BorderColor">
            <summary>
            This property is hidden.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ComboBox.C1ComboBoxControlBase.BorderStyle">
            <summary>
            This property is hidden.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ComboBox.C1ComboBoxControlBase.BorderWidth">
            <summary>
            This property is hidden.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ComboBox.C1ComboBoxControlBase.Font">
            <summary>
            This property is hidden.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ComboBox.C1ComboBoxControlBase.ForeColor">
            <summary>
            
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ComboBox.C1ComboBoxControlBase.AccessKey">
            <summary>
            Gets or sets the access key that allows you to quickly navigate to the Web server control.
            </summary>
            <value></value>
            <returns>
            The access key for quick navigation to the Web server control. The default value is <see cref="F:System.String.Empty"/>, which indicates that this property is not set.
            </returns>
            <exception cref="T:System.ArgumentOutOfRangeException">
            The specified access key is neither null, <see cref="F:System.String.Empty"/> nor a single character string.
            </exception>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ComboBox.C1ComboBoxControlBase.TabIndex">
            <summary>
            Gets or sets the tab index of the Web server control.
            </summary>
            <value></value>
            <returns>
            The tab index of the Web server control. The default is 0, which indicates that this property is not set.
            </returns>
            <exception cref="T:System.ArgumentOutOfRangeException">
            The specified tab index is not between -32768 and 32767.
            </exception>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ComboBox.C1ComboBoxControlBase.EnableTheming">
            <summary>
            Gets or sets a value indicating whether themes apply to this control.
            </summary>
            <value></value>
            <returns>true to use themes; otherwise, false. The default is false.
            </returns>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ComboBox.C1ComboBoxControlBase.EnableViewState">
            <summary>
            Gets or sets a value indicating whether the server control persists its view state, and the view state of any child controls it contains, to the requesting client.
            </summary>
            <value></value>
            <returns>true if the server control maintains its view state; otherwise false. The default is true.
            </returns>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ComboBox.C1ComboBoxControlBase.SkinID">
            <summary>
            Gets or sets the skin to apply to the control.
            </summary>
            <value></value>
            <returns>
            The name of the skin to apply to the control. The default is <see cref="F:System.String.Empty"/>.
            </returns>
            <exception cref="T:System.ArgumentException">
            The skin specified in the <see cref="P:System.Web.UI.WebControls.WebControl.SkinID"/> property does not exist in the theme.
            </exception>
        </member>
        <member name="M:C1.Web.UI.Controls.C1ComboBox.C1ComboBoxColumn.RenderContents(System.Web.UI.HtmlTextWriter)">
            <summary>
            Renders the contents of the control to the specified writer. This method is used primarily by control developers.
            </summary>
            <param name="writer">A <see cref="T:System.Web.UI.HtmlTextWriter"/> that represents the output stream to render HTML content on the client.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1ComboBox.C1ComboBoxColumn.AddAttributesToRender(System.Web.UI.HtmlTextWriter)">
            <summary>
            Adds HTML attributes and styles that need to be rendered to the specified <see cref="T:System.Web.UI.HtmlTextWriterTag"/>. This method is used primarily by control developers.
            </summary>
            <param name="writer">A <see cref="T:System.Web.UI.HtmlTextWriter"/> that represents the output stream to render HTML content on the client.</param>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ComboBox.C1ComboBoxColumn.ColumnType">
            <summary>
            Gets or sets the type name of the column.
            </summary>
            <value>The header text.</value>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ComboBox.C1ComboBoxColumn.Visible">
            <summary>
            Gets or sets a value indicating whether the Web server control is visible.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ComboBox.C1ComboBoxColumn.Enabled">
            <summary>
            Gets or sets a value indicating whether the Web server control is enabled.
            </summary>
            <value></value>
            <returns>true if control is enabled; otherwise, false. The default is true.
            </returns>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ComboBox.C1ComboBoxColumn.StaticKey">
            <summary>
            Gets or sets the static key of the column.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ComboBox.C1ComboBoxColumn.HeaderText">
            <summary>
            Gets or sets the header text of column.
            </summary>
            <value>The header text.</value>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ComboBox.C1ComboBoxColumn.TagKey">
            <summary>
            Gets the <see cref="T:System.Web.UI.HtmlTextWriterTag"/> value that corresponds to this Web server control. This property is used primarily by control developers.
            </summary>
            <value></value>
            <returns>
            One of the <see cref="T:System.Web.UI.HtmlTextWriterTag"/> enumeration values.
            </returns>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ComboBox.C1ComboBoxBindColumn.ColumnType">
            <summary>
            Gets or sets the type name of the column.
            </summary>
            <value>The header text.</value>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ComboBox.C1ComboBoxBindColumn.FieldName">
            <summary>
            Gets or sets the header text of column.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ComboBox.C1ComboBoxBindColumn.ForamtString">
            <summary>
            Gets or sets the format string of the column.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ComboBox.C1ComboBoxBindColumn.HeaderText">
            <summary>
            Gets or sets the header text of column.
            </summary>
            <value>The header text.</value>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ComboBox.C1ComboBoxBindColumn.ColumnTemplate">
            <summary>
            Gets or sets the column template.
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1ComboBox.C1ComboCell">
            <summary>
            C1ComboCell class.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1ComboBox.C1ComboCell.RenderContents(System.Web.UI.HtmlTextWriter)">
            <summary>
            Renders the contents of the control to the specified writer. This method is used primarily by control developers.
            </summary>
            <param name="writer">A <see cref="T:System.Web.UI.HtmlTextWriter"/> that represents the output stream to render HTML content on the client.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1ComboBox.C1ComboCell.AddAttributesToRender(System.Web.UI.HtmlTextWriter)">
            <summary>
            Adds HTML attributes and styles that need to be rendered to the specified <see cref="T:System.Web.UI.HtmlTextWriterTag"/>. This method is used primarily by control developers.
            </summary>
            <param name="writer">A <see cref="T:System.Web.UI.HtmlTextWriter"/> that represents the output stream to render HTML content on the client.</param>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ComboBox.C1ComboCell.Text">
            <summary>
            Gets or sets the value.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ComboBox.C1ComboCell.TagKey">
            <summary>
            Gets the <see cref="T:System.Web.UI.HtmlTextWriterTag"/> value that corresponds to this Web server control. This property is used primarily by control developers.
            </summary>
            <value></value>
            <returns>
            One of the <see cref="T:System.Web.UI.HtmlTextWriterTag"/> enumeration values.
            </returns>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ComboBox.C1ComboCell.ParentItem">
            <summary>
            Gets or sets the parent item.
            </summary>
            <value>The parent item.</value>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ComboBox.C1ComboCell.Visible">
            <summary>
            Hides Visible property from user.
            Cell will not support Visible property.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ComboBox.C1ComboCell.Enabled">
            <summary>
            Hides Enabled property from user.
            Cell will not support Enabled property.
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1ComboBox.C1ComboCellCollection">
            <summary>
            Represents C1ComboCell collection.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1ComboBox.C1ComboCellCollection.#ctor(C1.Web.UI.Controls.C1ComboBox.C1ComboBoxItem)">
            <summary>
            Initializes a new instance of the <see cref="T:C1.Web.UI.Controls.C1ComboBox.C1ComboCellCollection"/> class.
            </summary>
            <param name="item">The item.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1ComboBox.C1ComboCellCollection.InsertItem(System.Int32,C1.Web.UI.Controls.C1ComboBox.C1ComboCell)">
            <summary>
            Inserts an element into the <see cref="T:System.Collections.ObjectModel.Collection`1"/> at the specified index.
            </summary>
            <param name="index">The zero-based index at which <paramref name="item"/> should be inserted.</param>
            <param name="item">The object to insert. The value can be null for reference types.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            	<paramref name="index"/> is less than zero.
            -or-
            <paramref name="index"/> is greater than <see cref="P:System.Collections.ObjectModel.Collection`1.Count"/>.
            </exception>
        </member>
        <member name="T:C1.Web.UI.Controls.C1ComboBox.C1ComboColumnCollection">
            <summary>
            Represents C1ComboColumn collection.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1ComboBox.C1ComboColumnCollection.#ctor(C1.Web.UI.Controls.C1ComboBox.C1ComboBox)">
            <summary>
            Initializes a new instance of the <see cref="T:C1.Web.UI.Controls.C1ComboBox.C1ComboColumnCollection"/> class.
            </summary>
            <param name="owner"></param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1ComboBox.C1ComboColumnCollection.FromJson(System.Collections.ArrayList)">
            <summary>
            Froms the json.
            </summary>
            <param name="al">The al.</param>
        </member>
        <member name="T:C1.Web.UI.Controls.C1Editor.C1EditorGroup">
            <summary>
            C1EditorGroup
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Editor.C1EditorGroup.Name">
            <summary>
            Name
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Editor.C1EditorGroup.HeaderText">
            <summary>
            HeaderText
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Editor.C1EditorGroup.CssClass">
            <summary>
            CssClass
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Editor.C1EditorGroup.UpperID">
            <summary>
            UpperID
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Editor.C1EditorGroup.ToolBars">
            <summary>
            ToolBars
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1Editor.C1EditorGroupCollection">
            <summary>
            C1EditorGroupCollection
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Editor.C1EditorGroupCollection.Add(C1.Web.UI.Controls.C1Editor.C1EditorGroup)">
            <summary>
            Add C1EditorGroup to collection.
            </summary>
            <param name="aTabPage">The specified object.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Editor.C1EditorGroupCollection.Remove(C1.Web.UI.Controls.C1Editor.C1EditorGroup)">
            <summary>
            Remove C1EditorGroup from collection.
            </summary>
            <param name="aTabPage">The specified C1EditorGroup object.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Editor.C1EditorGroupCollection.Remove(System.String)">
            <summary>
            Remove C1EditorGroup from collection by key name.
            </summary>
            <param name="Name">The specified key.</param>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Editor.C1EditorGroupCollection.Item(System.Int32)">
            <summary>
            Get C1EditorGroup by index of collection.
            </summary>
            <param name="Index">The specified index.</param>
            <returns>Return C1EditorGroup object.</returns>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Editor.C1EditorGroupCollection.Item(System.String)">
            <summary>
            Get C1EditorGroup by key of collection.
            </summary>
            <param name="Name">The specified key.</param>
            <returns>Return C1EditorGroup object.</returns>
        </member>
        <member name="T:C1.Web.UI.Controls.C1Editor.C1EditorTabPage">
            <summary>
            C1EditorTabPage
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Editor.C1EditorTabPage.Name">
            <summary>
            Name
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Editor.C1EditorTabPage.Text">
            <summary>
            Text
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Editor.C1EditorTabPage.Groups">
            <summary>
            Groups
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1Editor.C1EditorTabPageCollection">
            <summary>
            C1EditorTabPageCollection
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Editor.C1EditorTabPageCollection.#ctor">
            <summary>
            constructor
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Editor.C1EditorTabPageCollection.Add(C1.Web.UI.Controls.C1Editor.C1EditorTabPage)">
            <summary>
            Add TabPage to collection.
            </summary>
            <param name="aTabPage">The specified C1EditorTabPage object.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Editor.C1EditorTabPageCollection.Remove(C1.Web.UI.Controls.C1Editor.C1EditorTabPage)">
            <summary>
            Remove TabPage from collection.
            </summary>
            <param name="aTabPage">The specified C1EditorTabPage object.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Editor.C1EditorTabPageCollection.Remove(System.String)">
            <summary>
            Remove C1EditorTabPage by key name of collection.
            </summary>
            <param name="Name">The specified key.</param>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Editor.C1EditorTabPageCollection.Item(System.Int32)">
            <summary>
            Get C1EditorTabPage by index of collection.
            </summary>
            <param name="Index">The specified index.</param>
            <returns>Return C1EditorTabPage object.</returns>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Editor.C1EditorTabPageCollection.Item(System.String)">
            <summary>
            Get C1EditorTabPage by key name of collection.
            </summary>
            <param name="Name">The specified key.</param>
            <returns>Return C1EditorTabPage object.</returns>
        </member>
        <member name="T:C1.Web.UI.Controls.C1Editor.C1EditorToolbarCollection">
            <summary>
            C1EditorToolbarCollection
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Editor.C1EditorToolbarCollection.Add(C1.Web.UI.Controls.C1ToolBar.C1ToolBar)">
            <summary>
            Add toolbar to collection.
            </summary>
            <param name="aToolBar">The specified C1ToolBar object.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Editor.C1EditorToolbarCollection.Remove(C1.Web.UI.Controls.C1ToolBar.C1ToolBar)">
            <summary>
            Remove toolbar from collection.
            </summary>
            <param name="aToolBar">The specified C1ToolBar object.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Editor.C1EditorToolbarCollection.Remove(System.String)">
            <summary>
            Remove C1ToolBar from collection by id.
            </summary>
            <param name="ID"></param>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Editor.C1EditorToolbarCollection.Item(System.Int32)">
            <summary>
            Get C1ToolBar by index of collection.
            </summary>
            <param name="Index">The specified index.</param>
            <returns>return C1ToolBar object.</returns>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Editor.C1EditorToolbarCollection.Item(System.String)">
            <summary>
             Get C1ToolBar by key of collection.
            </summary>
            <param name="ID">The specified key.</param>
            <returns>return C1ToolBar object.</returns>
        </member>
        <member name="T:C1.Web.UI.Controls.C1FormDecorator.C1FormDecorator">
            <summary>
            Represents a C1FormDecorator in an ASP.NET Web page.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1FormDecorator.C1FormDecorator.#ctor">
            <summary>
            Creates a new instance of the C1FormDecorator class.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1FormDecorator.C1FormDecorator.AddAttributesToRender(System.Web.UI.HtmlTextWriter)">
            <summary>
            Override AddAttributesToRender method
            </summary>
            <param name="writer"></param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1FormDecorator.C1FormDecorator.OnPreRender(System.EventArgs)">
            <summary>
            Raises the PreRender event.
            </summary>
            <param name="e">An EventArgs object that contains the event data.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1FormDecorator.C1FormDecorator.Render(System.Web.UI.HtmlTextWriter)">
            <summary>
            Renders the control to the specified HTML writer.
            </summary>
            <param name="writer">The HtmlTextWriter object that receives the control content.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1FormDecorator.C1FormDecorator.RenderContents(System.Web.UI.HtmlTextWriter)">
            <summary>
            Renders the contents of the control to the specified writer. This method is used primarily by control developers.
            </summary>
            <param name="writer">A System.Web.UI.HtmlTextWriter that represents the output stream to render HTML content on the client.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1FormDecorator.C1FormDecorator.GetScriptDescriptors">
            <summary>
            When overridden in a derived class, registers the ScriptDescriptor objects for the control.
            </summary>
            <returns>An enumeration of ScriptDescriptor objects.</returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1FormDecorator.C1FormDecorator.GetScriptReferences">
            <summary>
            When overridden in a derived class, registers the script libraries for the control.
            </summary>
            <returns>
            An object that implements the IEnumerable interface and that contains
            ECMAScript (JavaScript) files that have been registered as embedded resources.
            </returns>
        </member>
        <member name="P:C1.Web.UI.Controls.C1FormDecorator.C1FormDecorator.SkinID">
            <summary>
            SkinID
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1FormDecorator.C1FormDecorator.CssClass">
            <summary>
            CssClass
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1FormDecorator.C1FormDecorator.ToolTip">
            <summary>
            ToolTip
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1FormDecorator.C1FormDecorator.Enabled">
            <summary>
            Enabled
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1FormDecorator.C1FormDecorator.Width">
            <summary>
            Width
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1FormDecorator.C1FormDecorator.Height">
            <summary>
            Height
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1FormDecorator.C1FormDecorator.DecoratedControls">
            <summary>
            Get/Set the DecoratedControls enum of C1FormDecorator
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1FormDecorator.C1FormDecorator.DecorationZoneID">
            <summary>
            Gets or sets the client id of a html element whose children will be decorated.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1FormDecorator.C1FormDecorator.VisualStylePath">
            <summary>
            Path to visual styles.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1FormDecorator.C1FormDecorator.VisualStyle">
            <summary>
            VisualStyle name.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1FormDecorator.C1FormDecorator.UseEmbeddedVisualStyles">
            <summary>
            If true then control will use VisualStyle embedded into control's assembly.
            otherwise control will load VisualStyle from disk.
            </summary>     
        </member>
        <member name="P:C1.Web.UI.Controls.C1FormDecorator.C1FormDecorator.EmbeddedVisualStyles">
            <summary>
            Returns string array with embedded visual style names.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1FormDecorator.C1FormDecorator.TagKey">
            <summary>
            Changed the type of  control's  tag.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1FormDecorator.C1FormDecorator.DropDownShowAnimation">
            <summary>
            Show Animation Effect.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1FormDecorator.C1FormDecorator.DropDownShowDuration">
            <summary>
            Show Animation duration in milliseconds.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1FormDecorator.C1FormDecorator.DropDownShowDelay">
            <summary>
            Show delay in milliseconds before tooltip start popups.
            Default value is 100.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1FormDecorator.C1FormDecorator.DropDownShowEasing">
            <summary>
            Specifies the transition for show animation.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1FormDecorator.C1FormDecorator.DropDownHideAnimation">
            <summary>
            Hide Animation Effect.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1FormDecorator.C1FormDecorator.DropDownHideDuration">
            <summary>
            Hide Animation duration in milliseconds.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1FormDecorator.C1FormDecorator.DropDownHideDelay">
            <summary>
            Hide delay in milliseconds before tooltip start popups.
            Default value is 100.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1FormDecorator.C1FormDecorator.DropDownHideEasing">
            <summary>
            Specifies the transition for Hide animation.
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1FormDecorator.FormDecoratorDecoratedControls">
            <summary>
            Get/Set the DecoratedControls enum of C1FormDecorator
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1FormDecorator.FormDecoratorDecoratedControls.None">
            <summary>
            None
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1FormDecorator.FormDecoratorDecoratedControls.CheckBox">
            <summary>
            CheckBox
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1FormDecorator.FormDecoratorDecoratedControls.RadioButton">
            <summary>
            RadioButton
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1FormDecorator.FormDecoratorDecoratedControls.TextBox">
            <summary>
            TextBox
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1FormDecorator.FormDecoratorDecoratedControls.TextArea">
            <summary>
            TextArea
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1FormDecorator.FormDecoratorDecoratedControls.Button">
            <summary>
            Button
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1FormDecorator.FormDecoratorDecoratedControls.FieldSet">
            <summary>
            FieldSet
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1FormDecorator.FormDecoratorDecoratedControls.Label">
            <summary>
            Label
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1FormDecorator.FormDecoratorDecoratedControls.H3H4H5">
            <summary>
            H3H4H5
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1FormDecorator.FormDecoratorDecoratedControls.DropDownList">
            <summary>
            DropDownList
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1FormDecorator.FormDecoratorDecoratedControls.All">
            <summary>
            All
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1Gauge.C1Gauge">
            <summary>
            Gauge control for ASP.NET.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.C1Gauge.#ctor">
            <summary>
            C1Gauge constructor.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.C1Gauge.Load(System.String)">
            <summary>
            Loads the contents of <see cref="T:C1.Web.UI.Controls.C1Gauge.C1Gauge"/> from an XML file.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.C1Gauge.Load(System.IO.Stream)">
            <summary>
            Loads the contents of <see cref="T:C1.Web.UI.Controls.C1Gauge.C1Gauge"/> from a <see cref="T:System.IO.Stream"/>.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.C1Gauge.Load(System.Xml.XmlDocument)">
            <summary>
            Loads the contents of <see cref="T:C1.Web.UI.Controls.C1Gauge.C1Gauge"/> from an <see cref="T:System.Xml.XmlDocument"/>.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.C1Gauge.Save(System.String)">
            <summary>
            Saves the contents of <see cref="T:C1.Web.UI.Controls.C1Gauge.C1Gauge"/> into an XML file.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.C1Gauge.Save(System.String,System.Text.Encoding)">
            <summary>
            Saves the contents of <see cref="T:C1.Web.UI.Controls.C1Gauge.C1Gauge"/> into an XML file.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.C1Gauge.Save(System.IO.Stream)">
            <summary>
            Saves the contents of <see cref="T:C1.Web.UI.Controls.C1Gauge.C1Gauge"/> into a <see cref="T:System.IO.Stream"/>.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.C1Gauge.Save(System.IO.Stream,System.Text.Encoding)">
            <summary>
            Saves the contents of <see cref="T:C1.Web.UI.Controls.C1Gauge.C1Gauge"/> into a <see cref="T:System.IO.Stream"/>.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.C1Gauge.Save(System.Xml.XmlWriter)">
            <summary>
            Saves the contents of <see cref="T:C1.Web.UI.Controls.C1Gauge.C1Gauge"/> into an <see cref="T:System.Xml.XmlWriter"/>.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.C1Gauge.LoadView(System.String)">
            <summary>
            Loads a View of <see cref="T:C1.Web.UI.Controls.C1Gauge.C1Gauge"/> from an XML file.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.C1Gauge.LoadView(System.IO.Stream)">
            <summary>
            Loads a View of <see cref="T:C1.Web.UI.Controls.C1Gauge.C1Gauge"/> from a <see cref="T:System.IO.Stream"/>.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.C1Gauge.LoadView(System.Xml.XmlDocument)">
            <summary>
            Loads a View of <see cref="T:C1.Web.UI.Controls.C1Gauge.C1Gauge"/> from an <see cref="T:System.Xml.XmlDocument"/>.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.C1Gauge.SaveView(System.String)">
            <summary>
            Saves a View of <see cref="T:C1.Web.UI.Controls.C1Gauge.C1Gauge"/> into an XML file.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.C1Gauge.SaveView(System.String,System.Text.Encoding)">
            <summary>
            Saves a View of <see cref="T:C1.Web.UI.Controls.C1Gauge.C1Gauge"/> into an XML file.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.C1Gauge.SaveView(System.IO.Stream)">
            <summary>
            Saves a View of <see cref="T:C1.Web.UI.Controls.C1Gauge.C1Gauge"/> into a <see cref="T:System.IO.Stream"/>.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.C1Gauge.SaveView(System.IO.Stream,System.Text.Encoding)">
            <summary>
            Saves a View of <see cref="T:C1.Web.UI.Controls.C1Gauge.C1Gauge"/> into a <see cref="T:System.IO.Stream"/>.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.C1Gauge.SaveView(System.Xml.XmlWriter)">
            <summary>
            Saves a View of <see cref="T:C1.Web.UI.Controls.C1Gauge.C1Gauge"/> into an <see cref="T:System.Xml.XmlWriter"/>.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.C1Gauge.ShouldSerializeGauges">
            <summary>
            This member is for internal use only.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.C1Gauge.ShouldSerializeFaceShapes">
            <summary>
            This member is for internal use only.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.C1Gauge.ShouldSerializeCoverShapes">
            <summary>
            This member is for internal use only.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.C1Gauge.ShouldSerializeShadow">
            <summary>
            This member is for internal use only.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.C1Gauge.ShouldSerializeViewport">
            <summary>
            This member is for internal use only.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.C1Gauge.ShouldSerializeCommonBorders">
            <summary>
            This member is for internal use only.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.C1Gauge.ShouldSerializeCommonFillings">
            <summary>
            This member is for internal use only.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.C1Gauge.ShouldSerializeCommonFonts">
            <summary>
            This member is for internal use only.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.C1Gauge.ShouldSerializeCommonGradients">
            <summary>
            This member is for internal use only.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.C1Gauge.ShouldSerializeCommonImages">
            <summary>
            This member is for internal use only.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.C1Gauge.ShouldSerializeCommonShadows">
            <summary>
            This member is for internal use only.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.C1Gauge.ShouldSerializeCommonShapes">
            <summary>
            This member is for internal use only.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.C1Gauge.OnInit(System.EventArgs)">
            <summary>
            Called before control initialization.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.C1Gauge.EnsureChildControls">
            <summary>
            Determines whether the server control contains child controls. If it does not, it creates child controls.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.C1Gauge.CreateChildControls">
            <summary>
            
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.C1Gauge.OnPreRender(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Web.UI.Control.PreRender"/> event.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs"/> object that contains the event data.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.C1Gauge.Render(System.Web.UI.HtmlTextWriter)">
            <summary>
            Render override.
            </summary>
            <param name="writer"></param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.C1Gauge.GetScriptDescriptors">
            <summary>
            Get script descriptors.
            </summary>
            <returns></returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.C1Gauge.GetScriptReferences">
            <summary>
            Get script references.
            </summary>
            <returns></returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.C1Gauge.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)">
            <summary>
            LoadPostData.
            </summary>
            <param name="postDataKey"></param>
            <param name="postCollection"></param>
            <returns></returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.C1Gauge.RaisePostDataChangedEvent">
            <summary>
            RaisePostDataChangedEvent.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.C1Gauge.RaisePostBackEvent(System.String)">
            <summary>
            RaisePostBackEvent.
            </summary>
            <param name="eventArgument"></param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.C1Gauge.System#Web#UI#IStateManager#LoadViewState(System.Object)">
            <summary>
            When implemented by a class, loads the server control's previously saved view state to the control.
            </summary>
            <param name="state">An <see cref="T:System.Object"/> that contains the saved view state values for the control.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.C1Gauge.System#Web#UI#IStateManager#SaveViewState">
            <summary>
            Saves any state that was modified after the <see cref="M:System.Web.UI.WebControls.Style.TrackViewState"/> method was invoked.
            </summary>
            <returns>
            An object that contains the current view state of the control; otherwise, if there is no view state associated with the control, null.
            </returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.C1Gauge.System#Web#UI#IStateManager#TrackViewState">
            <summary>
            Causes the control to track changes to its view state so they can be stored in the object's <see cref="P:System.Web.UI.Control.ViewState"/> property.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.C1Gauge.OnLoad(System.EventArgs)">
            <summary>
            Raises the System.Web.UI.Control.Load event.
            </summary>
            <param name="e">The System.EventArgs object that contains the event data.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.C1Gauge.InternalRaisePostbackServerEvents">
            <summary>
            Internal RaisePostbackServerEvents.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.C1Gauge.GetVisualStyleCssClassName">
            <summary>
            GetVisualStyleCssClassName.
            </summary>
            <returns></returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.C1Gauge.System#Web#UI#ICallbackEventHandler#GetCallbackResult">
            <summary>
            ICallbackEventHandler.GetCallbackResult implementation.
            </summary>
            <returns>Call back result.</returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.C1Gauge.System#Web#UI#ICallbackEventHandler#RaiseCallbackEvent(System.String)">
            <summary>
            ICallbackEventHandler.RaiseCallbackEvent implementation.
            </summary>
            <param name="eventArgument"> A System.String that represents an optional event argument to be passed to the event handler.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.C1Gauge.ProcessCallBack(System.String,System.String)">
            <summary>
            Processes call back command of C1ComboBox.
            </summary>
            <param name="name">Command name</param>
            <param name="clientArgs">Command args</param>
            <returns></returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.C1Gauge.getResponsePage">
            <summary>
            Gets the response page name.
            </summary>
            <returns></returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.C1Gauge.ShouldSerializeSlidingExpiration">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Gauge.C1Gauge.ResetSlidingExpiration">
            <summary>
            
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1Gauge.EnableAjax">
            <summary>
            Gets or sets a value that determines whether the gauge is updated without a page refresh.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1Gauge.ErrorText">
            <summary>
            Gets or sets the format string for error message.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1Gauge.AlternateText">
            <summary>
            Gets or sets the alternate text displayed in the control when the image is
            unavailable. Browsers that support the ToolTips feature display this text as a ToolTip.
            </summary>
            <seealso cref="P:System.Web.UI.WebControls.Image.AlternateText"/>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1Gauge.DescriptionUrl">
            <summary>
            Gets or sets the location to a detailed description for the image.
            </summary>
            <seealso cref="P:System.Web.UI.WebControls.Image.DescriptionUrl"/>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1Gauge.GenerateEmptyAlternateText">
            <summary>
            Gets or sets a value indicating whether the control generates an alternate text attribute for an empty string value.
            </summary>
            <seealso cref="P:System.Web.UI.WebControls.Image.GenerateEmptyAlternateText"/>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1Gauge.ImageUrl">
            <summary>
            
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1Gauge.AccessKey">
            <summary>
            Gets or sets the access key that allows you to quickly navigate 
            to the Web server control.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1Gauge.BackImageUrl">
            <summary>
            Gets or sets the background image url for gauge control.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1Gauge.BackImageLayout">
            <summary>
            Gets or sets a value indicating the position of the background image.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1Gauge.ViewTag">
            <summary>
            Gets or sets a digital tag identifying this element's views.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1Gauge.Gauges">
            <summary>
            Gets the collection of Gauges.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1Gauge.FaceShapes">
            <summary>
            Gets the collection of shapes in the bottom layer (between the background and Gauges).
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1Gauge.CoverShapes">
            <summary>
            Gets the collection of shapes in the top layer (over everything).
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1Gauge.TextRenderingHint">
            <summary>
            Gets or sets the quality of text rendering.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1Gauge.UseAntiAliasing">
            <summary>
            Gets or sets whether antialiasing is used when drawing Gauge elements.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1Gauge.UsePixelOffset">
            <summary>
            Gets or sets whether pixels are offset during rendering.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1Gauge.Shadow">
            <summary>
            Encapsulates properties of the shadow.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1Gauge.Viewport">
            <summary>
            Specifies the bounds of the Gauge container working area.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1Gauge.CommonBorders">
            <summary>
            Gets the collection of templates for the <see cref="T:C1.Web.UI.Controls.C1Gauge.C1GaugeBorder"/> object.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1Gauge.CommonFillings">
            <summary>
            Gets the collection of templates for the <see cref="T:C1.Web.UI.Controls.C1Gauge.C1GaugeFilling"/> object.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1Gauge.CommonFonts">
            <summary>
            Gets the collection of templates for text font and color.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1Gauge.CommonGradients">
            <summary>
            Gets the collection of templates for the <see cref="T:C1.Web.UI.Controls.C1Gauge.C1GaugeGradient"/> object.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1Gauge.CommonImages">
            <summary>
            Gets the collection of templates for the <see cref="T:C1.Web.UI.Controls.C1Gauge.C1GaugeCustomImage"/> object.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1Gauge.CommonShadows">
            <summary>
            Gets the collection of templates for the <see cref="T:C1.Web.UI.Controls.C1Gauge.C1GaugeShadow"/> object.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1Gauge.CommonShapes">
            <summary>
            Gets the collection of templates for the <see cref="T:C1.Web.UI.Controls.C1Gauge.C1GaugeCustomShape"/> object.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1Gauge.EmbeddedVisualStyles">
            <summary>
            Returns string array with embedded Visual Styles names.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1Gauge.VisualStyle">
            <summary>
            Gets or sets the visual style name used by the control.
            </summary>
            <remarks>
            If this value is empty then visual style will be not rendered.
            Default value is "ArcticFox".
            </remarks>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1Gauge.UseEmbeddedVisualStyles">
            <summary>
            If true then control will use VisualStyle embedded into control's assembly.
            otherwise control will load VisualStyle from disk.
            </summary>        
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1Gauge.VisualStylePath">
            <summary>
            Gets or sets the path to the visual style folder.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1Gauge.Enabled">
            <summary>
            
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1Gauge.Controls">
            <summary>
            Controls collection.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1Gauge.System#Web#UI#IStateManager#IsTrackingViewState">
            <summary>
            Gets a value that indicates whether the server control is saving changes to its view state.
            </summary>
            <value></value>
            <returns>true if the control is marked to save its state; otherwise, false.</returns>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1Gauge.ImageRenderMethod">
            <summary>
            Indicates the method by which the HTML image tag source URL is rendered.
            </summary>
            <remarks>
            For more information, see the ImageRenderMethod Property topic.
            </remarks>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1Gauge.ImageTransferMethod">
            <summary>
            Indicates the method by which image data is transferred to the source page.
            </summary>
            <remarks>
            When a secondary URL is used to stream image data back to an &lt;IMG&gt; tag on the primary page,
            it is necessary to transfer the guage data through either a session object, cache object, or a file. 
            </remarks>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1Gauge.ImageIdGeneration">
            <summary>
            Gets or sets the level of uniqueness of the ID transfer object.
            </summary>
            <remarks>
            <para>
            When guage data is transferred from one page to another, IDs are created for the Session or Cache variables
            or for a filename in order to render a guage image. This property determines whether a unique ID is created
            each time the guage image is accessed (i.e. when the guage image is accessed by a single user),
            or if the same ID is to be used for the duration of the application life (i.e. when the identical guage image
            is accessed by multiple users or accessed repeatedly by a single user). 
            </para>
            <para>
            Note: The ImageIdGeneration property has no effect with the ImageRenderMethodEnum.File or ImageRenderMethodEnum.BinaryWrite. 
            </para>
            </remarks>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1Gauge.ImageUri">
            <summary>
            Specifies a path for various render methods.
            </summary>
            <remarks>
            This property specifies a pathname. It has different applications for different properties and settings.
            For more information, see ImageRenderMethod Property. Also refer to File-based Rendering Tutorials,
            HTTPHandler-based Rendering Tutorials, and ASP Page-based Rendering Tutorials. 
            </remarks>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1Gauge.HttpHandlerType">
            <summary>
            
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1Gauge.AbsoluteExpiration">
            <summary>
            Specifies the absolute expiration time when the image expires from the session, cache, or file object. 
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1Gauge.ImageFormat">
            <summary>
            Gets or sets the Image format to be used for the client side image.
            </summary>
            <remarks>
            Note that while this property accepts a .Net ImageFormat value, the only image formats available
            to the C1Gauge programmer are gif, jpeg, and png.
            </remarks>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1Gauge.ImageQuality">
            <summary>
            Gets or sets the image quality created when the ImageFormat is set to jpeg.
            </summary>
            <remarks>
            This property accepts an integer from 0 to 100 which specifies the quality of the jpeg image file.
            </remarks>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1Gauge.SlidingExpiration">
            <summary>
            Gets or sets the interval between the time the image was last accessed and the time
            when the image expires from the session, cache, or file object. 
            </summary>
            <remarks>
            If this value is the equivalent of 5 minutes, the image expires and is removed from the transfer
            object 5 minutes after it was last accessed.
            </remarks>
        </member>
        <member name="T:C1.Web.UI.Controls.C1Gauge.ImageIdGeneration">
            <summary>
            Use the members of this enumeration to set the value of the 
            <see cref="P:C1.Web.UI.Controls.C1Gauge.C1Gauge.ImageIdGeneration"/>
            property in the C1Gauge class.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Gauge.ImageIdGeneration.Unique">
            <summary>
            Unique ID is created each time the chart image is accessed.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Gauge.ImageIdGeneration.Application">
            <summary>
            The same ID is to be used for the duration of the application life.
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1Gauge.ImageRenderMethod">
            <summary>
            Use the members of this enumeration to set the value of the 
            <see cref="P:C1.Web.UI.Controls.C1Gauge.C1Gauge.ImageRenderMethod"/> property
            in the C1Gauge class.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Gauge.ImageRenderMethod.File">
            <summary>
            C1Gauge will generate image files that can be referenced directly by an &lt;IMG&gt; tag.
            The &lt;IMG&gt; tag will be generated and will reference the file specified by the ImageUri property.
            If the ImageUri property is not specified, then a name for the temporary file will be generated
            and the URL will reference the temporary file.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Gauge.ImageRenderMethod.HttpHandler">
            <summary>
            C1Gauge supports the IHTTPHandler interface and will generate an appropriately placed
            &lt;IMG&gt; tag within the page that references its internal HTTPHandler to stream the image to the client. 
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Gauge.ImageRenderMethod.BinaryWrite">
            <summary>
            C1Gauge will perform a binary write to its host page response stream directly,
            without transferring data to another page. However, the binary image data will be the only data returned. 
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Gauge.ImageRenderMethod.AspPage">
            <summary>
            C1Gauge will utilize a secondary asp(x) page to stream the image data back to an imbedded &lt;IMG&gt;
            tag on the primary page. If this option is selected, the chart will generate an appropriately placed &lt;IMG&gt;
            tag within the page that hosts the chart. The positioning of the &lt;IMG&gt; tag will be in the same location as
            shown on the Visual Studio design page, and &lt;IMG&gt; tag src attribute will reference the specified asp(x) page.
            The path to the page will be that specified by the ImageUri property. 
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Gauge.ImageRenderMethod.Manual">
            <summary>
            C1Gauge does nothing to render itself at runtime. All operations required for generating and placing
            the chart image within the page are the responsibility of the programmer.
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1Gauge.ImageTransferMethod">
            <summary>
            Use the members of this enumeration to set the value of the
            <see cref="P:C1.Web.UI.Controls.C1Gauge.C1Gauge.ImageTransferMethod"/>
            property in the C1WebChart class.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Gauge.ImageTransferMethod.Session">
            <summary>
            Image is transferred in a session object.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Gauge.ImageTransferMethod.Cache">
            <summary>
            Image is transferred in a cache object.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Gauge.ImageTransferMethod.File">
            <summary>
            Image is transferred in a file.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Gauge.ImageTransferMethod.None">
            <summary>
            Image is not transferred.
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1Gauge.UriMapper">
            <summary>
            Takes a string with a uri and maps it to a local file,
            even if the string contains the protocol scheme and host.
            Also performs some convenient tests and operations with
            the result.
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1Gauge.C1GaugeHttpHandler">
            <summary>
            Http handler for gauge image rendering.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Gauge.C1GaugeHttpHandler.IsReusable">
            <summary>
             Gets a value indicating whether another request can use the System.Web.IHttpHandler instance.
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1GridView.BandProcessor">
            <summary>
            Helper class for supplementary table used to build multicolumn headers..
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1GridView.BandProcessor.GenerateTable(C1.Web.UI.Controls.C1GridView.C1BaseFieldCollection,System.Collections.Generic.List{C1.Web.UI.Controls.C1GridView.C1BaseField},System.Boolean)">
            <summary>
            Creates table to generate multicolumn headers..
            </summary>
            <param name="root">Root node. An instance of <see cref="T:C1.Web.UI.Controls.C1GridView.C1BaseFieldCollection"/> or <see cref="T:C1.Web.UI.Controls.C1GridView.C1Band"/>.</param>
            <param name="leaves">Collection of  ending nodes (leaves) of the tree.</param>
            <param name="parentVisibility">Determines if parent is visible.</param>
            <returns>Constructed table.</returns>
            <remarks>
            Table height is calculated as maximum size of the route in the tree (only visible items counted). Width
            is number of leaves, both visible and invisible. Table is generated thus each leaf has corresponding column.
            </remarks>
        </member>
        <member name="M:C1.Web.UI.Controls.C1GridView.BandProcessor.GetDimension(System.Object,System.Boolean)">
            <summary>
            Determines required sizes of the table which is required to hold multicolumn headers and builds collection
            of leaves. Leaf is either <see cref="T:C1.Web.UI.Controls.C1GridView.C1Field"/> or <see cref="T:C1.Web.UI.Controls.C1GridView.C1Band"/> with empty (containing no visible
            items) <see cref="P:C1.Web.UI.Controls.C1GridView.C1Band.Columns"/> collection.
            </summary>
            <param name="root">Root node. An instance of <see cref="T:C1.Web.UI.Controls.C1GridView.C1BaseFieldCollection"/> or <see cref="T:C1.Web.UI.Controls.C1GridView.C1Band"/>.</param>
            <param name="parentVisibility">Determines if parent is visible.</param>
            <returns>Maximum deep.</returns>
            <remarks>
            Returning value does not count invisible leaves.
            Also sets <see cref="P:C1.Web.UI.Controls.C1GridView.C1BaseField.IsLeaf"/> and <see cref="P:C1.Web.UI.Controls.C1GridView.C1BaseField.ParentVisibility"/> properties of the nodes.
            </remarks>
        </member>
        <member name="T:C1.Web.UI.Controls.C1GridView.C1BaseFieldCollection">
            <summary>
            Provides access to the columns that are contained by a parent column.	 
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1GridView.IOwnerable">
            <summary>
            Infrastructure.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1GridView.IOwnerable.Owner">
            <summary>
            
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1GridView.C1BaseFieldCollection.#ctor">
            <summary>
            Constructor. Initializes a new instance of the <see cref="T:C1.Web.UI.Controls.C1GridView.C1BaseFieldCollection"/> class.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1GridView.C1BaseFieldCollection.#ctor(C1.Web.UI.Controls.C1GridView.IOwnerable)">
            <summary>
            Constructor. Initializes a new instance of the <see cref="T:C1.Web.UI.Controls.C1GridView.C1BaseFieldCollection"/> class.
            </summary>
            <param name="owner">Owner.</param>
            <remarks>
            Infrastructure.
            </remarks>
        </member>
        <member name="M:C1.Web.UI.Controls.C1GridView.C1BaseFieldCollection.Add(C1.Web.UI.Controls.C1GridView.C1BaseField)">
            <summary>
            Adds the specified <see cref="T:C1.Web.UI.Controls.C1GridView.C1BaseField"/> derived column object to the end of
            the <see cref="T:C1.Web.UI.Controls.C1GridView.C1BaseFieldCollection"/>.
            </summary>
            <param name="gridColumn">
            The <see cref="T:C1.Web.UI.Controls.C1GridView.C1BaseField"/> derived column object to append to the <see cref="T:C1.Web.UI.Controls.C1GridView.C1BaseFieldCollection"/> 
            </param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1GridView.C1BaseFieldCollection.ColumnByName(System.String)">
            <summary>
            Gets the <see cref="T:C1.Web.UI.Controls.C1GridView.C1BaseField"/> derived column object from the name specified.
            </summary>
            <param name="name">Name of the column to search.</param>
            <returns>The <see cref="T:C1.Web.UI.Controls.C1GridView.C1BaseField"/> derived column object with specified name.</returns>
            <remarks>
            A column is searched for in the tree of columns belonging to the collection.
            </remarks>
            <exception cref="T:System.ArgumentException">Thrown when a column with the specified name can not be found.</exception>
        </member>
        <member name="M:C1.Web.UI.Controls.C1GridView.C1BaseFieldCollection.IndexOf(C1.Web.UI.Controls.C1GridView.C1BaseField)">
            <summary>
            Returns the index of the specified <see cref="T:C1.Web.UI.Controls.C1GridView.C1BaseField"/> derived column object from the
            <see cref="T:C1.Web.UI.Controls.C1GridView.C1BaseFieldCollection"/> collection.
            </summary>
            <param name="col">
            The <see cref="T:C1.Web.UI.Controls.C1GridView.C1BaseField"/> derived column object to search for in the <see cref="T:C1.Web.UI.Controls.C1GridView.C1BaseFieldCollection"/>. 
            </param>
            <returns>
            The index position of the specified <see cref="T:C1.Web.UI.Controls.C1GridView.C1BaseField"/> derived column object in the
            <see cref="T:C1.Web.UI.Controls.C1GridView.C1BaseFieldCollection"/>. The default value is -1, which indicates that the specified
            <see cref="T:C1.Web.UI.Controls.C1GridView.C1BaseField"/> derived object is not found.
            </returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1GridView.C1BaseFieldCollection.Insert(System.Int32,C1.Web.UI.Controls.C1GridView.C1BaseField)">
            <summary>
            Inserts the specified <see cref="T:C1.Web.UI.Controls.C1GridView.C1BaseField"/> derived column object into the collection at specified index.
            </summary>
            <param name="index">The zero-based index at which <paramref name="col"/> should be inserted.</param>
            <param name="col">The <see cref="T:C1.Web.UI.Controls.C1GridView.C1BaseField"/> derived column object to insert.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1GridView.C1BaseFieldCollection.Remove(C1.Web.UI.Controls.C1GridView.C1BaseField)">
            <summary>
            Removes the specified <see cref="T:C1.Web.UI.Controls.C1GridView.C1BaseField"/> derived column object from the <see cref="T:C1.Web.UI.Controls.C1GridView.C1BaseFieldCollection"/>.
            </summary>
            <param name="col">The <see cref="T:C1.Web.UI.Controls.C1GridView.C1BaseField"/> derived column object to remove.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1GridView.C1BaseFieldCollection.RemoveAt(System.Int32)">
            <summary>
            Deletes the column from the collection at the specified index. 
            </summary>
            <param name="index">The zero-based index of the element to remove.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1GridView.C1BaseFieldCollection.Traverse">
            <summary>
            Iterates trough the collection from the top to the bottom.
            </summary>
            <returns>List iterator.</returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1GridView.C1BaseFieldCollection.TraverseReverse">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1GridView.C1BaseFieldCollection.TraverseReverseBottomUp">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1GridView.C1BaseFieldCollection.CreateKnownType(System.Int32)">
            <summary>
            Creates a default instance of the <see cref="T:C1.Web.UI.Controls.C1GridView.C1BaseField"/> type object that is identified by the provided index.
            </summary>
            <param name="index">The index of the <see cref="T:C1.Web.UI.Controls.C1GridView.C1BaseField"/> type to create from the ordered list of types that are returned by the <see cref="M:C1.Web.UI.Controls.C1GridView.C1BaseFieldCollection.GetKnownTypes"/> method.</param>
            <returns>
            An object that represents an instance of a class that is derived from the <see cref="T:C1.Web.UI.Controls.C1GridView.C1BaseField"/> class, according to the index provided.
            </returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1GridView.C1BaseFieldCollection.GetKnownTypes">
            <summary>
            Gets an array of <see cref="T:C1.Web.UI.Controls.C1GridView.C1BaseField"/> types that the <see cref="T:C1.Web.UI.Controls.C1GridView.C1BaseFieldCollection"/> collection can contain.
            </summary>
            <returns>
            An array of type objects that identify the types of <see cref="T:C1.Web.UI.Controls.C1GridView.C1BaseField"/> objects that the collection can contain.
            </returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1GridView.C1BaseFieldCollection.OnClearComplete">
            <summary>
            Performs additional processing after all items are removed from the collection.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1GridView.C1BaseFieldCollection.OnInsertComplete(System.Int32,System.Object)">
            <summary>
            Performs additional processing after an item is added to the collection.
            </summary>
            <param name="index">The index in the collection that the <see cref="T:C1.Web.UI.Controls.C1GridView.C1BaseField"/> object was inserted at.</param>
            <param name="value">The object that was inserted into the <see cref="T:C1.Web.UI.Controls.C1GridView.C1BaseFieldCollection"/> collection.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1GridView.C1BaseFieldCollection.OnRemoveComplete(System.Int32,System.Object)">
            <summary>
            Performs additional processing after an item is removed from the collection.
            </summary>
            <param name="index">The index in the collection that the <see cref="T:C1.Web.UI.Controls.C1GridView.C1BaseField"/> object was removed from.</param>
            <param name="value">The object that was removed from the <see cref="T:C1.Web.UI.Controls.C1GridView.C1BaseFieldCollection"/> collection.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1GridView.C1BaseFieldCollection.SetDirtyObject(System.Object)">
            <summary>
            Instructs the specified <see cref="T:C1.Web.UI.Controls.C1GridView.C1BaseField"/> object to record its complete state to view state, instead of recording only changed information.
            </summary>
            <param name="o">The object to mark as changed since the last time that view state was loaded or saved.</param>
        </member>
        <member name="P:C1.Web.UI.Controls.C1GridView.C1BaseFieldCollection.Item(System.Int32)">
            <summary>
            Gets a <see cref="T:C1.Web.UI.Controls.C1GridView.C1BaseField"/> derived column object from the <see cref="T:C1.Web.UI.Controls.C1GridView.C1BaseFieldCollection"/>
            collection at the specified index.
            In C#, this property is the indexer for the <see cref="T:C1.Web.UI.Controls.C1GridView.C1BaseFieldCollection"/> class.
            </summary>
            <param name="index">
            The index of the <see cref="T:C1.Web.UI.Controls.C1GridView.C1BaseField"/> derived object in the <see cref="T:C1.Web.UI.Controls.C1GridView.C1BaseFieldCollection"/> collection
            to retrieve.
            </param>
        </member>
        <member name="T:C1.Web.UI.Controls.C1GridView.GroupColumnCollection">
            <summary>
            Provides access to columns contained in the grouping area.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1GridView.GroupColumnCollection.Add(C1.Web.UI.Controls.C1GridView.C1Field)">
            <summary>
            Adds the specified <see cref="T:C1.Web.UI.Controls.C1GridView.C1Field"/> derived column object to the end of
            the <see cref="T:C1.Web.UI.Controls.C1GridView.GroupColumnCollection"/>.
            </summary>
            <param name="col">
            The <see cref="T:C1.Web.UI.Controls.C1GridView.C1Field"/> derived column object to append to the <see cref="T:C1.Web.UI.Controls.C1GridView.GroupColumnCollection"/> 
            </param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1GridView.GroupColumnCollection.IndexOf(C1.Web.UI.Controls.C1GridView.C1Field)">
            <summary>
            Returns the index of the specified <see cref="T:C1.Web.UI.Controls.C1GridView.C1Field"/> within the collection. 
            </summary>
            <param name="col">The <see cref="T:C1.Web.UI.Controls.C1GridView.C1Field"/> to locate in the collection.</param>
            <returns>The zero-based index of the <see cref="T:C1.Web.UI.Controls.C1GridView.C1Field"/> within the collection, or -1 if the <see cref="T:C1.Web.UI.Controls.C1GridView.C1Field"/> is not in the collection.</returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1GridView.GroupColumnCollection.Insert(System.Int32,C1.Web.UI.Controls.C1GridView.C1Field)">
            <summary>
            Inserts the specified <see cref="T:C1.Web.UI.Controls.C1GridView.C1Field"/> derived column object into the collection at the specified index.
            </summary>
            <param name="index">The zero-based index at which <paramref name="col"/> should be inserted.</param>
            <param name="col">The <see cref="T:C1.Web.UI.Controls.C1GridView.C1Field"/> derived column object to insert.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1GridView.GroupColumnCollection.Remove(C1.Web.UI.Controls.C1GridView.C1Field)">
            <summary>
            Removes the specified <see cref="T:C1.Web.UI.Controls.C1GridView.C1Field"/> derived column object from the <see cref="T:C1.Web.UI.Controls.C1GridView.GroupColumnCollection"/>.
            </summary>
            <param name="col">The <see cref="T:C1.Web.UI.Controls.C1GridView.C1Field"/> derived column object to remove.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1GridView.GroupColumnCollection.OnClear">
            <summary>
            Performs additional custom processes when clearing the contents of the <see cref="T:C1.Web.UI.Controls.C1GridView.GroupColumnCollection"/> collection.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1GridView.GroupColumnCollection.OnRemoveComplete(System.Int32,System.Object)">
            <summary>
            Performs additional processing after an item is removed from the collection.
            </summary>
            <param name="index">The index in the collection that the <see cref="T:C1.Web.UI.Controls.C1GridView.C1Field"/> object was removed from.</param>
            <param name="value">The object that was removed from the <see cref="T:C1.Web.UI.Controls.C1GridView.GroupColumnCollection"/> collection.</param>
        </member>
        <member name="P:C1.Web.UI.Controls.C1GridView.GroupColumnCollection.Item(System.Int32)">
            <summary>
            Indexer for this collection.
            </summary>
            <param name="index">The index in the collection.</param>
            <returns><see cref="T:C1.Web.UI.Controls.C1GridView.C1Field"/> object at the specified index.</returns>
        </member>
        <member name="T:C1.Web.UI.Controls.C1GridView.C1GridViewSerializer">
            <summary>
            Represent serializer used by <see cref="T:C1.Web.UI.Controls.C1GridView.C1GridView"/>. 
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1GridView.C1GridViewSerializer.#ctor(System.Object)">
            <summary>
            Constructor.
            </summary>
            <param name="serializableObject"></param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1GridView.C1GridViewSerializer.OnAddItem(System.Object,System.Object)">
            <summary>
            Overridden.
            </summary>
            <param name="collection"></param>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1GridView.C1GridViewSerializer.OnClearItems(System.Object)">
            <summary>
            Overridden.
            </summary>
            <param name="collection"></param>
            <returns></returns>
        </member>
        <member name="T:C1.Web.UI.Controls.C1GridView.Data.UpdateBinding">
            <summary>
            Class UpdateBinding.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1GridView.Data.UpdateBinding.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1GridView.Data.UpdateBinding.#ctor(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="controlProperty"></param>
            <param name="updateField"></param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1GridView.Data.UpdateBinding.ToString">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="P:C1.Web.UI.Controls.C1GridView.Data.UpdateBinding.ControlProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1GridView.Data.UpdateBinding.UpdateField">
            <summary>
            
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1GridView.Data.UpdateBindingCollection">
            <summary>
            Class UpdateBindingCollection.
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1GridView.ICreateable">
            <summary>
            Infrastructure.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1GridView.ICreateable.CreateInstance">
             <summary>
            
             </summary>
             <returns></returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1GridView.ICreateable.CopyFrom(System.Object)">
            <summary>
            
            </summary>
            <param name="other"></param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1GridView.Data.UpdateBindingCollection.Add(C1.Web.UI.Controls.C1GridView.Data.UpdateBinding)">
            <summary>
            
            </summary>
            <param name="binding"></param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1GridView.Data.UpdateBindingCollection.Insert(System.Int32,C1.Web.UI.Controls.C1GridView.Data.UpdateBinding)">
            <summary>
            
            </summary>
            <param name="index"></param>
            <param name="binding"></param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1GridView.Data.UpdateBindingCollection.IndexOf(C1.Web.UI.Controls.C1GridView.Data.UpdateBinding)">
            <summary>
            
            </summary>
            <param name="binding"></param>
            <returns></returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1GridView.Data.UpdateBindingCollection.CopyFrom(C1.Web.UI.Controls.C1GridView.Data.UpdateBindingCollection)">
            <summary>
            
            </summary>
            <param name="other"></param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1GridView.Data.UpdateBindingCollection.NewBinding">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:C1.Web.UI.Controls.C1GridView.C1GridView">
            <summary>
            Represents the C1GridView control.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1GridView.C1GridView.#ctor">
            <summary>
            Constructor. Creates a new instance of the <see cref="T:C1.Web.UI.Controls.C1GridView.C1GridView"/> class.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1GridView.C1GridView.#ctor(System.String)">
            <summary>
            Constructor. Creates a new instance of the <see cref="T:C1.Web.UI.Controls.C1GridView.C1GridView"/> class.
            </summary>
            <param name="runtimeKey">The key.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1GridView.C1GridView.DataBind">
            <summary>
            Binds the <see cref="T:C1.Web.UI.Controls.C1GridView.C1GridView"/> control to the data source.
            </summary>
            <remarks>
            Calling this method is the same as calling DataBind(false).
            </remarks>
        </member>
        <member name="M:C1.Web.UI.Controls.C1GridView.C1GridView.DataBind(System.Boolean)">
            <summary>
            Binds the <see cref="T:C1.Web.UI.Controls.C1GridView.C1GridView"/> control to the specified data source.
            </summary>
            <param name="keepGroups">
            Indicates whether control must keep the expanded/collapsed state of the groups
            between postbacks or not.
            </param>
            <remarks>
            The DataBind method can be used to maintain the expanded/collapsed state of grouped rows when the grid
            is bound to its datasource. Passing in True to this method keeps the current expanded/collapsed state of
            the grouped rows. Passing in False (the same as calling DataBind()) uses the initial state as set in the
            <see cref="P:C1.Web.UI.Controls.C1GridView.GroupInfo.OutlineMode"/> property.
            </remarks>
        </member>
        <member name="M:C1.Web.UI.Controls.C1GridView.C1GridView.DeleteRow(System.Int32)">
            <summary>
            Deletes the record at the specified index from the data source.
            </summary>
            <param name="rowIndex">The index of the row to delete.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1GridView.C1GridView.LoadLayout(System.String)">
            <summary>
            Loads control layout properties from the file.
            </summary>
            <param name="filename">XML file to load.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1GridView.C1GridView.LoadLayout(System.IO.Stream)">
            <summary>
            Loads control layout properties from the stream.
            </summary>
            <param name="stream">Stream to load.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1GridView.C1GridView.LoadLayout(System.String,C1.Web.UI.LayoutType)">
            <summary>
            Loads control layout properties with specified types from the file.
            </summary>
            <param name="filename">XML file to load.</param>
            <param name="layoutTypes">Layout types to load.</param> 
        </member>
        <member name="M:C1.Web.UI.Controls.C1GridView.C1GridView.LoadLayout(System.IO.Stream,C1.Web.UI.LayoutType)">
            <summary>
            Loads control layout properties with specified types from the stream.
            </summary>
            <param name="stream">Stream to load.</param>
            <param name="layoutTypes">Layout types to load.</param> 
        </member>
        <member name="M:C1.Web.UI.Controls.C1GridView.C1GridView.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)">
            <summary>
            Processes post-back data from a server control.
            </summary>
            <param name="postDataKey">Required. The key identifier for the control.</param>
            <param name="values">Required. The collection of all incoming name values.</param>
            <returns>
            True if the server control's state changes as a result of the post back; otherwise False.
            </returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1GridView.C1GridView.RaisePostBackEvent(System.String)">
            <summary>
            Enables a server control to process an event raised when a form is posted to the server.
            </summary>
            <param name="eventargs">
            A String that represents an optional event argument to be passed to the event handler.
            </param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1GridView.C1GridView.RaisePostDataChangedEvent">
            <summary>
            Signals the server control object to notify the Microsoft ASP .NET application that the state of the
            control has changed.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1GridView.C1GridView.OnDataBinding(System.EventArgs)">
            <summary>
            Raises the <see cref="T:System.Web.UI.DataBinding"/> event.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1GridView.C1GridView.ResetGroupIndent">
            <summary>
            Reset the <see cref="P:C1.Web.UI.Controls.C1GridView.C1GridView.GroupIndent"/> property.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1GridView.C1GridView.SaveLayout(System.String)">
            <summary>
            Saves control layout properties to the specified file.
            </summary>
            <param name="filename">XML file to save.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1GridView.C1GridView.SaveLayout(System.IO.Stream)">
            <summary>
            Saves control layout properties to the specified stream.
            </summary>
            <param name="stream">Stream to save.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1GridView.C1GridView.UpdateRow(System.Int32)">
            <summary>
            Updates the record at the specified row index using the field values of the row.
            </summary>
            <param name="rowIndex">The index of the row to update.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1GridView.C1GridView.AddAttributesToRender(System.Web.UI.HtmlTextWriter)">
            <summary>
            Adds the HTML attributes and styles of a <see cref="T:C1.Web.UI.Controls.C1GridView.C1GridView"/> control to be rendered to
            the specified output stream.
            </summary>
            <param name="writer">An <see cref="T:System.Web.UI.HtmlTextWriter"/> that represents the output stream to render HTML content on the client.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1GridView.C1GridView.CreateControlStyle">
            <summary>
            Creates the default style for the control.
            </summary>
            <returns>A <see cref="T:System.Web.UI.WebControls.Style"/> that represents the style for the control.</returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1GridView.C1GridView.CreateRow(System.Int32,System.Int32,C1.Web.UI.Controls.C1GridView.C1GridViewRowType,C1.Web.UI.Controls.C1GridView.C1GridViewRowState)">
            <summary>
            Creates a <see cref="T:C1.Web.UI.Controls.C1GridView.C1GridViewRow"/> object using the specified parameters.
            </summary>
            <param name="rowIndex">The index of the row to create.</param>
            <param name="dataSourceIndex">The index of the data source item to bind to the row.</param>
            <param name="rowType">One of the <see cref="T:C1.Web.UI.Controls.C1GridView.C1GridViewRowType"/> values.</param>
            <param name="rowState">One of the <see cref="T:C1.Web.UI.Controls.C1GridView.C1GridViewRowState"/> values. </param>
            <returns>A <see cref="T:System.Web.UI.WebControls.GridViewRow"/> created using the specified parameters.</returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1GridView.C1GridView.CreateChildControls(System.Collections.IEnumerable,System.Boolean)">
            <summary>
            Creates the control hierarchy used to render the <see cref="T:System.Web.UI.WebControls.GridView"/> control.
            </summary>
            <param name="_dataSource">An <see cref="T:System.Collections.IEnumerable"/> that contains the data source for the <see cref="T:C1.Web.UI.Controls.C1GridView.C1GridView"/> control.</param>
            <param name="useDataSource">True to indicate that the child controls are bound to data; otherwise, false.</param>
            <returns></returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1GridView.C1GridView.CreateDataSourceSelectArguments">
            <summary>
            Creates the <see cref="T:System.Web.UI.DataSourceSelectArguments"/> object that contains the arguments that get passed to the data source for processing.
            </summary>
            <returns>A <see cref="T:System.Web.UI.DataSourceSelectArguments"/> that contains the arguments that get passed to the data source.</returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1GridView.C1GridView.GetScriptDescriptors">
            <summary>
            Gets the <see cref="T:System.Web.UI.ScriptDescriptor"/> objects for the control.
            </summary>
            <returns>An collection of <see cref="T:System.Web.UI.ScriptDescriptor"/> objects.</returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1GridView.C1GridView.GetScriptReferences">
            <summary>
            Gets the <see cref="T:System.Web.UI.ScriptReference"/> objects for the control.
            </summary>
            <returns>An collection that contains ECMAScript (JavaScript) files that have been registered as embedded resources.</returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1GridView.C1GridView.InitializeRow(C1.Web.UI.Controls.C1GridView.C1GridViewRow,System.Collections.Generic.List{C1.Web.UI.Controls.C1GridView.C1BaseField})">
            <summary>
            Initializes a row in the <see cref="T:C1.Web.UI.Controls.C1GridView.C1GridView"/> control.
            </summary>
            <param name="row">A <see cref="T:System.Web.UI.WebControls.GridViewRow"/> that represents the row to initialize.</param>
            <param name="columns">An collection of <see cref="T:C1.Web.UI.Controls.C1GridView.C1BaseField"/> objects that represent the column fields in the <see cref="T:C1.Web.UI.Controls.C1GridView.C1GridView"/> control.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1GridView.C1GridView.InitializeEmptyDataRow(C1.Web.UI.Controls.C1GridView.C1GridViewRow,System.Int32)">
            <summary>
            Initializes the empty data row displayed when the grid contains no data.
            </summary>
            <param name="row">A <see cref="T:C1.Web.UI.Controls.C1GridView.C1GridViewRow"/> that represents the empty data row to initialize.</param>
            <param name="columnSpan">The number of columns the empty data row should span.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1GridView.C1GridView.InitializePager(C1.Web.UI.Controls.C1GridView.C1GridViewRow,System.Int32,System.Web.UI.WebControls.PagedDataSource)">
            <summary>
            Initializes the pager row displayed when the paging feature is enabled.
            </summary>
            <param name="row">A <see cref="T:C1.Web.UI.Controls.C1GridView.C1GridViewRow"/> that represents the pager row to initialize.</param>
            <param name="columnSpan">The number of columns the pager row should span.</param>
            <param name="pagedDataSource">A <see cref="T:System.Web.UI.WebControls.PagedDataSource"/> that represents the data source.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1GridView.C1GridView.OnBubbleEvent(System.Object,System.EventArgs)">
            <summary>
            Passes the event raised by a control within the container up the page's UI server control hierarchy.
            </summary>
            <param name="source">The source of the event.</param>
            <param name="e">An <see cref="T:System.EventArgs"/> that contains event data.</param>
            <returns>True to indicate that this method is passing an event raised by a control within the container up the page's UI server control hierarchy; otherwise, false.</returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1GridView.C1GridView.OnDataSourceViewChanged(System.Object,System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Web.UI.DataSourceView.DataSourceViewChanged"/> event.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">An <see cref="T:System.EventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1GridView.C1GridView.OnInit(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Web.UI.Control.Init"/> event.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1GridView.C1GridView.OnPagePreLoad(System.Object,System.EventArgs)">
            <summary>
            Sets the initialized state of the data-bound control before the control is loaded.
            </summary>
            <param name="sender">The <see cref="T:System.Web.UI.Page"/> that raised the event.</param>
            <param name="e">An <see cref="T:System.EventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1GridView.C1GridView.OnPreRender(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Web.UI.Control.PreRender"/> event.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1GridView.C1GridView.PerformDataBinding(System.Collections.IEnumerable)">
            <summary>
            Binds data from the data source to the control. 
            </summary>
            <param name="data">An <see cref="T:System.Collections.IEnumerable"/> that contains the data source.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1GridView.C1GridView.PrepareControlHierarchy(System.Web.UI.HtmlTextWriter)">
            <summary>
            Sets up the control hierarchy for the <see cref="T:C1.Web.UI.Controls.C1GridView.C1GridView"/> control.
            </summary>
            <param name="writer">The <see cref="T:System.Web.UI.HtmlTextWriter"/> used to render the server control content on the client's browser.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1GridView.C1GridView.Render(System.Web.UI.HtmlTextWriter)">
            <summary>
            Renders the Web server control content to the client's browser using the specified <see cref="T:System.Web.UI.HtmlTextWriter"/> object.
            </summary>
            <param name="writer">The <see cref="T:System.Web.UI.HtmlTextWriter"/> used to render the server control content on the client's browser.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1GridView.C1GridView.OnBeginRowUpdate(C1.Web.UI.Controls.C1GridView.C1GridViewBeginRowUpdateEventArgs)">
            <summary>
            Raises the <see cref="E:C1.Web.UI.Controls.C1GridView.C1GridView.BeginRowUpdate"/> event.
            </summary>
            <param name="e">A <see cref="T:C1.Web.UI.Controls.C1GridView.C1GridViewBeginRowUpdateEventArgs"/> that contains event data.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1GridView.C1GridView.OnColumnMoved(C1.Web.UI.Controls.C1GridView.C1GridViewColumnMovedEventArgs)">
            <summary>
            Raises the <see cref="E:C1.Web.UI.Controls.C1GridView.C1GridView.ColumnMoved"/> event.
            </summary>
            <param name="e">A <see cref="T:C1.Web.UI.Controls.C1GridView.C1GridViewColumnMovedEventArgs"/> that contains event data.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1GridView.C1GridView.OnColumnMoving(C1.Web.UI.Controls.C1GridView.C1GridViewColumnMoveEventArgs)">
            <summary>
            Raises the <see cref="E:C1.Web.UI.Controls.C1GridView.C1GridView.ColumnMoving"/> event.
            </summary>
            <param name="e">A <see cref="T:C1.Web.UI.Controls.C1GridView.C1GridViewColumnMoveEventArgs"/> that contains event data.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1GridView.C1GridView.OnDataChanged(System.EventArgs)">
            <summary>
            Raises the <see cref="E:C1.Web.UI.Controls.C1GridView.C1GridView.DataChanged"/> event.
            </summary>
            <param name="e">A <see cref="T:System.EventArgs"/> that contains event data.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1GridView.C1GridView.OnEndRowUpdated(C1.Web.UI.Controls.C1GridView.C1GridViewEndRowUpdatedEventArgs)">
            <summary>
            Raises the <see cref="E:C1.Web.UI.Controls.C1GridView.C1GridView.EndRowUpdated"/> event.
            </summary>
            <param name="e">A <see cref="T:C1.Web.UI.Controls.C1GridView.C1GridViewEndRowUpdatedEventArgs"/> that contains event data.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1GridView.C1GridView.OnFiltered(System.EventArgs)">
            <summary>
            Raises the <see cref="E:C1.Web.UI.Controls.C1GridView.C1GridView.Filtered"/> event.
            </summary>
            <param name="e">A <see cref="T:System.EventArgs"/> that contains event data.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1GridView.C1GridView.OnFiltering(C1.Web.UI.Controls.C1GridView.C1GridViewFilterEventArgs)">
            <summary>
            Raises the <see cref="E:C1.Web.UI.Controls.C1GridView.C1GridView.Filtering"/> event.
            </summary>
            <param name="e">A <see cref="T:C1.Web.UI.Controls.C1GridView.C1GridViewFilterEventArgs"/> that contains event data.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1GridView.C1GridView.OnGroupAggregate(C1.Web.UI.Controls.C1GridView.C1GroupTextEventArgs)">
            <summary>
            Raises the <see cref="E:C1.Web.UI.Controls.C1GridView.C1GridView.GroupAggregate"/> event.
            </summary>
            <param name="e">A <see cref="T:C1.Web.UI.Controls.C1GridView.C1GroupTextEventArgs"/> that contains event data.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1GridView.C1GridView.OnGroupColumnMoved(C1.Web.UI.Controls.C1GridView.C1GridViewGroupColumnMovedEventArgs)">
            <summary>
            Raises the <see cref="E:C1.Web.UI.Controls.C1GridView.C1GridView.GroupColumnMoved"/> event.
            </summary>
            <param name="e">A <see cref="T:C1.Web.UI.Controls.C1GridView.C1GridViewGroupColumnMovedEventArgs"/> that contains event data.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1GridView.C1GridView.OnGroupColumnMoving(C1.Web.UI.Controls.C1GridView.C1GridViewGroupColumnMoveEventArgs)">
            <summary>
            Raises the <see cref="E:C1.Web.UI.Controls.C1GridView.C1GridView.GroupColumnMoving"/> event.
            </summary>
            <param name="e">A <see cref="T:C1.Web.UI.Controls.C1GridView.C1GridViewGroupColumnMoveEventArgs"/> that contains event data.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1GridView.C1GridView.OnGroupText(C1.Web.UI.Controls.C1GridView.C1GroupTextEventArgs)">
            <summary>
            Raises the <see cref="E:C1.Web.UI.Controls.C1GridView.C1GridView.GroupText"/> event.
            </summary>
            <param name="e">A <see cref="T:C1.Web.UI.Controls.C1GridView.C1GroupTextEventArgs"/> that contains event data.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1GridView.C1GridView.OnPageIndexChanged(System.EventArgs)">
            <summary>
            Raises the <see cref="E:C1.Web.UI.Controls.C1GridView.C1GridView.PageIndexChanged"/> event.
            </summary>
            <param name="e">A <see cref="T:System.EventArgs"/> that contains event data.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1GridView.C1GridView.OnPageIndexChanging(C1.Web.UI.Controls.C1GridView.C1GridViewPageEventArgs)">
            <summary>
            Raises the <see cref="E:C1.Web.UI.Controls.C1GridView.C1GridView.PageIndexChanging"/> event.
            </summary>
            <param name="e">A <see cref="T:C1.Web.UI.Controls.C1GridView.C1GridViewPageEventArgs"/> that contains event data.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1GridView.C1GridView.OnRowCancelingEdit(C1.Web.UI.Controls.C1GridView.C1GridViewCancelEditEventArgs)">
            <summary>
            Raises the <see cref="E:C1.Web.UI.Controls.C1GridView.C1GridView.RowCancelingEdit"/> event.
            </summary>
            <param name="e">A <see cref="T:C1.Web.UI.Controls.C1GridView.C1GridViewCancelEditEventArgs"/> that contains event data.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1GridView.C1GridView.OnRowCommand(C1.Web.UI.Controls.C1GridView.C1GridViewCommandEventArgs)">
            <summary>
            Raises the <see cref="E:C1.Web.UI.Controls.C1GridView.C1GridView.RowCommand"/> event.
            </summary>
            <param name="e">A <see cref="T:C1.Web.UI.Controls.C1GridView.C1GridViewCommandEventArgs"/> that contains event data.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1GridView.C1GridView.OnRowCreated(C1.Web.UI.Controls.C1GridView.C1GridViewRowEventArgs)">
            <summary>
            Raises the <see cref="E:C1.Web.UI.Controls.C1GridView.C1GridView.RowCreated"/> event.
            </summary>
            <param name="e">A <see cref="T:C1.Web.UI.Controls.C1GridView.C1GridViewRowEventArgs"/> that contains event data.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1GridView.C1GridView.OnRowDataBound(C1.Web.UI.Controls.C1GridView.C1GridViewRowEventArgs)">
            <summary>
            Raises the <see cref="E:C1.Web.UI.Controls.C1GridView.C1GridView.RowDataBound"/> event.
            </summary>
            <param name="e">A <see cref="T:C1.Web.UI.Controls.C1GridView.C1GridViewRowEventArgs"/> that contains event data.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1GridView.C1GridView.OnRowDeleted(C1.Web.UI.Controls.C1GridView.C1GridViewDeletedEventArgs)">
            <summary>
            Raises the <see cref="E:C1.Web.UI.Controls.C1GridView.C1GridView.RowDeleted"/> event.
            </summary>
            <param name="e">A <see cref="T:C1.Web.UI.Controls.C1GridView.C1GridViewDeletedEventArgs"/> that contains event data.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1GridView.C1GridView.OnRowDeleting(C1.Web.UI.Controls.C1GridView.C1GridViewDeleteEventArgs)">
            <summary>
            Raises the <see cref="E:C1.Web.UI.Controls.C1GridView.C1GridView.RowDeleting"/> event.
            </summary>
            <param name="e">A <see cref="T:C1.Web.UI.Controls.C1GridView.C1GridViewDeleteEventArgs"/> that contains event data.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1GridView.C1GridView.OnRowEditing(C1.Web.UI.Controls.C1GridView.C1GridViewEditEventArgs)">
            <summary>
            Raises the <see cref="E:C1.Web.UI.Controls.C1GridView.C1GridView.RowEditing"/> event.
            </summary>
            <param name="e">A <see cref="T:C1.Web.UI.Controls.C1GridView.C1GridViewEditEventArgs"/> that contains event data.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1GridView.C1GridView.OnRowUpdating(C1.Web.UI.Controls.C1GridView.C1GridViewUpdateEventArgs)">
            <summary>
            Raises the <see cref="E:C1.Web.UI.Controls.C1GridView.C1GridView.RowUpdating"/> event.
            </summary>
            <param name="e">A <see cref="T:C1.Web.UI.Controls.C1GridView.C1GridViewUpdateEventArgs"/> that contains event data.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1GridView.C1GridView.OnRowUpdated(C1.Web.UI.Controls.C1GridView.C1GridViewUpdatedEventArgs)">
            <summary>
            Raises the <see cref="E:C1.Web.UI.Controls.C1GridView.C1GridView.RowUpdated"/> event.
            </summary>
            <param name="e">A <see cref="T:C1.Web.UI.Controls.C1GridView.C1GridViewUpdatedEventArgs"/> that contains event data.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1GridView.C1GridView.OnSelectedIndexChanged(System.EventArgs)">
            <summary>
            Raises the <see cref="E:C1.Web.UI.Controls.C1GridView.C1GridView.SelectedIndexChanged"/> event.
            </summary>
            <param name="e">A <see cref="T:System.EventArgs"/> that contains event data.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1GridView.C1GridView.OnSelectedIndexChanging(C1.Web.UI.Controls.C1GridView.C1GridViewSelectEventArgs)">
            <summary>
            Raises the <see cref="E:C1.Web.UI.Controls.C1GridView.C1GridView.SelectedIndexChanging"/> event.
            </summary>
            <param name="e">A <see cref="T:C1.Web.UI.Controls.C1GridView.C1GridViewSelectEventArgs"/> that contains event data.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1GridView.C1GridView.OnSorted(System.EventArgs)">
            <summary>
            Raises the <see cref="E:C1.Web.UI.Controls.C1GridView.C1GridView.Sorted"/> event.
            </summary>
            <param name="e">A <see cref="T:System.EventArgs"/> that contains event data.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1GridView.C1GridView.OnSorting(C1.Web.UI.Controls.C1GridView.C1GridViewSortEventArgs)">
            <summary>
            Raises the <see cref="E:C1.Web.UI.Controls.C1GridView.C1GridView.Sorting"/> event.
            </summary>
            <param name="e">A <see cref="T:C1.Web.UI.Controls.C1GridView.C1GridViewSortEventArgs"/> that contains event data.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1GridView.C1GridView.LoadViewState(System.Object)">
            <summary>
            Restores the previously saved view state of the <see cref="T:C1.Web.UI.Controls.C1GridView.C1GridView"/> control.
            </summary>
            <param name="savedState">An object that represents the <see cref="T:C1.Web.UI.Controls.C1GridView.C1GridView"/> view state to restore.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1GridView.C1GridView.SaveViewState">
            <summary>
            Saves the changes to the <see cref="T:C1.Web.UI.Controls.C1GridView.C1GridView"/> object since the time the page was posted back to the server.
            </summary>
            <returns>The object that contains the changes to the view state of the <see cref="T:C1.Web.UI.Controls.C1GridView.C1GridView"/>.</returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1GridView.C1GridView.TrackViewState">
            <summary>
            Causes the <see cref="T:C1.Web.UI.Controls.C1GridView.C1GridView"/> object to track changes to its state so that it can be persisted across requests.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1GridView.C1GridView.Update">
            <summary>
            Saves end user changes in the data source.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1GridView.C1GridView.RaiseCallbackEvent(System.Int32,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="requestID">Request ID.</param>
            <param name="command">Command name.</param>
            <param name="argument">Command argument.</param>
            <returns>RequiresDataBindingOnPostBack.</returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1GridView.C1GridView.GetCallbackResult(System.Int32,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="requestID">Request ID.</param>
            <param name="command">Command name.</param>
            <param name="argument">Command argument.</param>
            <returns>The result of the callback.</returns>
        </member>
        <member name="P:C1.Web.UI.Controls.C1GridView.C1GridView.AllowAutoSize">
            <summary>
            Gets or sets a value that determines whether column widths and row heights are automatically sized when scrolling or rows and columns have been fixed.
            </summary>
            <value>
            The default value is false.
            </value>
        </member>
        <member name="P:C1.Web.UI.Controls.C1GridView.C1GridView.AllowAutoSort">
            <summary>
            Gets or sets a value that determines whether automatic sorting is enabled.
            </summary>
            <value>
            The default value is True.
            </value>
            <remarks>
            Set this property to True to enable automatic sorting. To enable sorting you must also
            set the <see cref="P:C1.Web.UI.Controls.C1GridView.C1GridView.AllowSorting"/> to true.
            </remarks>
        </member>
        <member name="P:C1.Web.UI.Controls.C1GridView.C1GridView.AllowClientEditing">
            <summary>
            Gets or sets a value that determines whether client editing is enabled.
            </summary>
            <value>
            The default value is False.
            </value>
            <remarks>
            In client editing mode grid does not update underlying dataset automatically.
            Developer should implement dataset update using
            <see cref="E:C1.Web.UI.Controls.C1GridView.C1GridView.BeginRowUpdate"/>, <see cref="E:C1.Web.UI.Controls.C1GridView.C1GridView.RowUpdating"/> and
            <see cref="E:C1.Web.UI.Controls.C1GridView.C1GridView.EndRowUpdated"/> event handlers.
            </remarks>
        </member>
        <member name="P:C1.Web.UI.Controls.C1GridView.C1GridView.AllowColMoving">
            <summary>
            Gets or sets a value that determines whether columns can be moved on the client.
            </summary>
            <value>The default value is False.</value>
            <remarks>
            This property allows your end users to rearrange the order of the columns on the client.
            This property only works if you set <see cref="P:C1.Web.UI.Controls.C1GridView.C1GridView.AutoGenerateColumns"/> to False.
            You should provide code in the <see cref="E:C1.Web.UI.Controls.C1GridView.C1GridView.ColumnMoved"/> event.
            </remarks>
        </member>
        <member name="P:C1.Web.UI.Controls.C1GridView.C1GridView.AllowColSizing">
            <summary>
            Gets or sets a value that determines whether columns can be sized on the client.
            </summary>
            <value>The default value is False.</value> 
            <remarks>
            This property allows column sizing on the client. For this property to work correctly you need
            to set the width of the component to 0px and optionally set the width of each column using the
            Property builder.
            </remarks>
        </member>
        <member name="P:C1.Web.UI.Controls.C1GridView.C1GridView.AllowKeyboardNavigation">
            <summary>
            Gets or sets a value that determines whether keyboard navigation is enabled.
            </summary>
            <value>
            The default value is False.
            </value>
            <remarks>
            When this property is turned on you can use keys such as arrows, PgDown, PgUp, Home, End or Tab for changing position of the current cell.
            </remarks>
        </member>
        <member name="P:C1.Web.UI.Controls.C1GridView.C1GridView.AllowCustomPaging">
            <summary>
            Gets or sets a value that determines whether custom paging is enabled.
            </summary>
            <value>
            The default value is False.
            </value>
            <remarks>
            <para>
            Set this property to True to enable custom paging. 
            </para>
            <para>
            Paging allows you to display the contents of the <see cref="T:C1.Web.UI.Controls.C1GridView.C1GridView"/> component in page segments.
            To enable custom paging, set both the <see cref="P:C1.Web.UI.Controls.C1GridView.C1GridView.AllowPaging"/> and AllowCustomPaging properties to True.
            Next, provide code to handle the <see cref="E:C1.Web.UI.Controls.C1GridView.C1GridView.PageIndexChanged"/> event. Create a data source that contains
            the data to display on a single page and then use the <see cref="M:C1.Web.UI.Controls.C1GridView.C1GridView.DataBind"/> method to bind the data to
            the <see cref="T:C1.Web.UI.Controls.C1GridView.C1GridView"/> component.
            </para>
            <para>
            Because only a segment of the data is loaded, you must set the property to the total number of items
            in the <see cref="T:C1.Web.UI.Controls.C1GridView.C1GridView"/> component. This allows the control to determine the total number of pages
            needed to display every item in the <see cref="T:C1.Web.UI.Controls.C1GridView.C1GridView"/> component. This property is normally
            programmatically set once the total number of items in the <see cref="T:C1.Web.UI.Controls.C1GridView.C1GridView"/> component is determined.
            </para>
            <para>
            When paging is enabled with the AllowCustomPaging property set to False, the <see cref="T:C1.Web.UI.Controls.C1GridView.C1GridView"/>
            component assumes that the data source contains all the items to be displayed. The <see cref="T:C1.Web.UI.Controls.C1GridView.C1GridView"/>
            component calculates the indexes of the items on the displayed page based on the page index, specified
            by the <see cref="P:C1.Web.UI.Controls.C1GridView.C1GridView.PageIndex"/> property, and the number of items on a page, specified by the
            <see cref="P:C1.Web.UI.Controls.C1GridView.C1GridView.PageSize"/> property.
            </para>
            <para>
            When the AllowCustomPaging property is set to True, the <see cref="T:C1.Web.UI.Controls.C1GridView.C1GridView"/> component assumes that
            the data source only contains the items as determined by the <see cref="P:C1.Web.UI.Controls.C1GridView.C1GridView.VirtualItemCount"/> property.
            All items up to the number of items specified by the <see cref="P:C1.Web.UI.Controls.C1GridView.C1GridView.PageSize"/> property are displayed.
            </para>
            </remarks>
        </member>
        <!-- Badly formed XML comment ignored for member "P:C1.Web.UI.Controls.C1GridView.C1GridView.AllowRowHover" -->
        <member name="P:C1.Web.UI.Controls.C1GridView.C1GridView.AllowGrouping">
            <summary>
            Gets or sets a value that determines whether grouping is enabled.
            </summary>
            <value>The default value is False.</value>
            <remarks>
            This property allows your end users to drag column headers into the grouping area of the grid.
            This property only works if <see cref="P:C1.Web.UI.Controls.C1GridView.C1GridView.AutoGenerateColumns"/> is set to False and
            <see cref="P:C1.Web.UI.Controls.C1GridView.C1GridView.AllowColMoving"/> is True. You should provide code in the <see cref="E:C1.Web.UI.Controls.C1GridView.C1GridView.GroupColumnMoved"/>
            event.
            </remarks> 
        </member>
        <member name="P:C1.Web.UI.Controls.C1GridView.C1GridView.AllowPaging">
            <summary>
            Gets or sets a value that determines whether paging is enabled.
            </summary>
            <value>
            The default value is False.
            </value>
            <remarks>
            Set this property to True to display the contents of the <see cref="T:C1.Web.UI.Controls.C1GridView.C1GridView"/> component in page segments.
            You should provide code to handle the <see cref="E:C1.Web.UI.Controls.C1GridView.C1GridView.PageIndexChanged"/> event.
            </remarks>
        </member>
        <member name="P:C1.Web.UI.Controls.C1GridView.C1GridView.AllowSorting">
            <summary>
            Gets or sets a value that determines whether sorting is enabled.
            </summary>
            <value>
            The default value is False.
            </value>
            <remarks>
            Set this property to True to enable sorting.
            </remarks>
        </member>
        <member name="P:C1.Web.UI.Controls.C1GridView.C1GridView.AutoGenerateColumns">
            <summary>
            Gets or sets a value that determines whether <see cref="T:C1.Web.UI.Controls.C1GridView.C1BoundField"/> objects are generated and displayed automatically.
            </summary>
            <value>
            Set this property to True to automatically display and create <see cref="T:C1.Web.UI.Controls.C1GridView.C1BoundField"/> objects.
            The default value is True.
            </value>
        </member>
        <member name="P:C1.Web.UI.Controls.C1GridView.C1GridView.AutoGenerateDeleteButton">
            <summary>
            Gets or sets a value indicating whether a <see cref="T:C1.Web.UI.Controls.C1GridView.C1CommandField"/> field column with a Delete button for each data row is automatically added to a <see cref="T:C1.Web.UI.Controls.C1GridView.C1GridView"/> control.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1GridView.C1GridView.AutoGenerateEditButton">
            <summary>
            Gets or sets a value indicating whether a <see cref="T:C1.Web.UI.Controls.C1GridView.C1CommandField"/> field column with an Edit button for each data row is automatically added to a <see cref="T:C1.Web.UI.Controls.C1GridView.C1GridView"/> control.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1GridView.C1GridView.AutoGenerateFilterButton">
            <summary>
            Gets or sets a value indicating whether a <see cref="T:C1.Web.UI.Controls.C1GridView.C1CommandField"/> field column with an Filter button for the filter row is automatically added to a <see cref="T:C1.Web.UI.Controls.C1GridView.C1GridView"/> control.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1GridView.C1GridView.AutoGenerateSelectButton">
            <summary>
            Gets or sets a value indicating whether a <see cref="T:C1.Web.UI.Controls.C1GridView.C1CommandField"/> field column with an Select button for each data row is automatically added to a <see cref="T:C1.Web.UI.Controls.C1GridView.C1GridView"/> control.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1GridView.C1GridView.BottomPagerRow">
            <summary>
            Gets a <see cref="T:C1.Web.UI.Controls.C1GridView.C1GridViewRow"/> object that represents the bottom pager row in a <see cref="T:C1.Web.UI.Controls.C1GridView.C1GridView"/> control.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1GridView.C1GridView.BackImageUrl">
            <summary>
            Gets or sets the URL for the background image of the <see cref="T:C1.Web.UI.Controls.C1GridView.C1GridView"/> component.
            </summary>
            <remarks>
            <para>
            Use this property to specify the background image of the <see cref="T:C1.Web.UI.Controls.C1GridView.C1GridView"/> component. 
            </para>
            <para>
            If the image is smaller than the control, the image will tile to fill in the background.
            </para>
            </remarks>
        </member>
        <member name="P:C1.Web.UI.Controls.C1GridView.C1GridView.CellPadding">
            <summary>
            Gets or sets the cell padding of the rendered table.
            </summary>
            <value>
            The default value is -1, which indicates that this property is not set.
            </value>
            <remarks>
            This property controls the distance (in pixels) between the contents of a cell
            and the cell's border.
            </remarks>
        </member>
        <member name="P:C1.Web.UI.Controls.C1GridView.C1GridView.CellSpacing">
            <summary>
            Gets or sets the cell padding of the rendered table.
            </summary>
            <value>
            The default value is -1, which indicates that this property is not set.
            </value>
            <remarks>
            This property controls the distance (in pixels) between the contents of a cell
            and the cell's border.
            </remarks>
        </member>
        <member name="P:C1.Web.UI.Controls.C1GridView.C1GridView.CallbackOptions">
            <summary>
            Determines the actions that can be performed by the <see cref="N:C1.Web.UI.Controls.C1GridView"/> using callbacks mechanism.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1GridView.C1GridView.Caption">
            <summary>
            Gets or sets the text to render in an HTML caption element in a <see cref="T:C1.Web.UI.Controls.C1GridView.C1GridView"/> control. 
            This property is provided to make the control more accessible to users of assistive technology devices.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1GridView.C1GridView.CaptionAlign">
            <summary>
            Gets or sets the horizontal or vertical position of the HTML caption element in a <see cref="T:C1.Web.UI.Controls.C1GridView.C1GridView"/> control. 
            This property is provided to make the control more accessible to users of assistive technology devices.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1GridView.C1GridView.CellAutosizingMode">
            <summary>
            Gets or sets value determining the mode of cell sizes calculation when scrolling is enabled.
            </summary>
            <value>
            Default value is <see cref="!:CellAutosizingMode.ColumnWidthPriority"/>.
            </value>
        </member>
        <member name="P:C1.Web.UI.Controls.C1GridView.C1GridView.Columns">
            <summary>
            Gets a collection of objects representing the columns of the <see cref="T:C1.Web.UI.Controls.C1GridView.C1GridView"/> control.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1GridView.C1GridView.DataKeyNames">
            <summary>
            Gets or sets an array that contains the names of the primary key fields for the items displayed in a <see cref="T:C1.Web.UI.Controls.C1GridView.C1GridView"/> control.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1GridView.C1GridView.DataKeys">
            <summary>
            Gets a collection of <see cref="T:System.Web.UI.WebControls.DataKey"/> objects that represent the data key value of each row in a <see cref="T:C1.Web.UI.Controls.C1GridView.C1GridView"/> control.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1GridView.C1GridView.DefaultColumnWidth">
            <summary>
            Gets or sets the width for columns in scrollable grid where no width has been specified.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1GridView.C1GridView.DefaultRowHeight">
            <summary>
            Gets or sets the height for rows in scrollable grid.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1GridView.C1GridView.EditIndex">
            <summary>
            Gets or sets the index of the item to be edited.
            </summary>
            <value>
            The default value is -1, which indicates that no item in the <see cref="T:C1.Web.UI.Controls.C1GridView.C1GridView"/> component is being edited.
            </value>
        </member>
        <member name="P:C1.Web.UI.Controls.C1GridView.C1GridView.EmptyDataTemplate">
            <summary>
            Gets or sets the user-defined content for the empty data row rendered when a <see cref="T:C1.Web.UI.Controls.C1GridView.C1GridView"/> control is bound to a data source that does not contain any records.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1GridView.C1GridView.EmptyDataText">
            <summary>
            Gets or sets the text to display in the empty data row rendered when a <see cref="T:C1.Web.UI.Controls.C1GridView.C1GridView"/> control is bound to a data source that does not contain any records.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1GridView.C1GridView.ErrorText">
            <summary>
             Gets or sets the text to display if an error occurs during a callback to the server.
            </summary>
            <remarks>
             Value can contains two placeholders: request id that thrown an error and error message.
            </remarks>
            <value>
             The default value is "Request:{0} error. Message: {1}".
            </value>
        </member>
        <member name="P:C1.Web.UI.Controls.C1GridView.C1GridView.Enabled">
            <summary>
            Gets or sets a value indicating whether the Web server control is enabled.
            </summary>
            <value>
            True if control is enabled; otherwise, false. The default is true.
            </value>
        </member>
        <member name="P:C1.Web.UI.Controls.C1GridView.C1GridView.FilterMode">
            <summary>
            Gets or sets value indicating whether filtering will be performed automatically or not.
            </summary>
            <value>
            One of the <see cref="T:C1.Web.UI.Controls.C1GridView.FilterMode"/> values.
            The default value is <see cref="F:C1.Web.UI.Controls.C1GridView.FilterMode.Auto"/>.
            </value>
        </member>
        <member name="P:C1.Web.UI.Controls.C1GridView.C1GridView.FilterRow">
            <summary>
            Gets a <see cref="T:C1.Web.UI.Controls.C1GridView.C1GridViewRow"/> object that represents the filter row in a <see cref="T:C1.Web.UI.Controls.C1GridView.C1GridView"/> control.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1GridView.C1GridView.FilterSettings">
            <summary>
            Gets the <see cref="P:C1.Web.UI.Controls.C1GridView.C1GridView.FilterSettings"/> object that defines the filter behaviors of the column at client-side.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1GridView.C1GridView.FooterRow">
            <summary>
            Gets a <see cref="T:C1.Web.UI.Controls.C1GridView.C1GridViewRow"/> object that represents the footer row in a <see cref="T:C1.Web.UI.Controls.C1GridView.C1GridView"/> control.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1GridView.C1GridView.GridLines">
            <summary>
            Gets or sets the grid lines to be shown in the rendered table.
            </summary>
            <remarks>
            This property is used to specify the style of the grid lines.
            </remarks>
        </member>
        <member name="P:C1.Web.UI.Controls.C1GridView.C1GridView.GroupByCaption">
            <summary>
            Caption of the grouping area.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1GridView.C1GridView.GroupedColumns">
            <summary>
            Returns the columns contained in a group.
            </summary>
            <value>
            A <see cref="T:C1.Web.UI.Controls.C1GridView.GroupColumnCollection"/> that contains a collection of <see cref="T:C1.Web.UI.Controls.C1GridView.C1Field"/> objects representing
            the grouped columns in the <see cref="T:C1.Web.UI.Controls.C1GridView.C1GridView"/> control.
            </value>
        </member>
        <member name="P:C1.Web.UI.Controls.C1GridView.C1GridView.GroupIndent">
            <summary>
            Gets or sets the indentation of your group.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1GridView.C1GridView.HeaderRow">
            <summary>
            Gets a <see cref="T:C1.Web.UI.Controls.C1GridView.C1GridViewRow"/> object that represents the header row in a <see cref="T:C1.Web.UI.Controls.C1GridView.C1GridView"/> control.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1GridView.C1GridView.HeaderRows">
            <summary>
            Gets an array of <see cref="T:C1.Web.UI.Controls.C1GridView.C1GridViewRow"/> objects that represents the header rows in a <see cref="T:C1.Web.UI.Controls.C1GridView.C1GridView"/> control.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1GridView.C1GridView.HorizontalAlign">
            <summary>
            Determines the horizontal alignment of the <see cref="T:C1.Web.UI.Controls.C1GridView.C1GridView"/> control.
            </summary>
            <remarks>
            The default value is <see cref="F:System.Web.UI.WebControls.HorizontalAlign.NotSet"/>.
            </remarks>
        </member>
        <member name="P:C1.Web.UI.Controls.C1GridView.C1GridView.TopPagerRow">
            <summary>
            Gets a <see cref="T:C1.Web.UI.Controls.C1GridView.C1GridViewRow"/> object that represents the top pager row in a <see cref="T:C1.Web.UI.Controls.C1GridView.C1GridView"/> control.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1GridView.C1GridView.OptimizePartialRendering">
            <summary>
            Determines if partial or full update of grid's HTML content will take place during callback.
            </summary>
            <value>
            The default value is true.
            </value>
            <remarks>
            Partial rendering is used with callbacks. When enabled, server sends only necessary HTML code
            portions to a client as a result of callback thus performing smart update. Partial rendering is
            used for edit, update, cancel, select actions, group expanding and virtual scrolling. If for any reason you need full
            update of <see cref="T:C1.Web.UI.Controls.C1GridView.C1GridView"/> HTML code, set this property to false.
            </remarks>
        </member>
        <member name="P:C1.Web.UI.Controls.C1GridView.C1GridView.PageCount">
            <summary>
            Gets the total number of pages needed to display the items in the <see cref="T:C1.Web.UI.Controls.C1GridView.C1GridView"/> component.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1GridView.C1GridView.PageIndex">
            <summary>
            Gets or sets the index of the current page.
            </summary>
            <remarks>
            This property determines the page being displayed when paging is enabled.
            </remarks>
        </member>
        <member name="P:C1.Web.UI.Controls.C1GridView.C1GridView.PagerSettings">
            <summary>
            Gets a reference to the <see cref="T:C1.Web.UI.Controls.C1GridView.C1GridViewPagerSettings"/> object that enables you to set the properties of the pager buttons in a <see cref="T:C1.Web.UI.Controls.C1GridView.C1GridView"/> control.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1GridView.C1GridView.PagerTemplate">
            <summary>
            Gets or sets the custom content for the pager row in a <see cref="T:C1.Web.UI.Controls.C1GridView.C1GridView"/> control.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1GridView.C1GridView.PageSize">
            <summary>
            Gets or sets the number of items to place on a single page.
            </summary>
            <value>
            The default value is 10.
            </value>
            <remarks>
            The <see cref="P:C1.Web.UI.Controls.C1GridView.C1GridView.AllowPaging"/> property must be set to True for this property have any effect.
            </remarks>
        </member>
        <member name="P:C1.Web.UI.Controls.C1GridView.C1GridView.ResizeSettings">
            <summary>
            Gets the <see cref="P:C1.Web.UI.Controls.C1GridView.C1GridView.ResizeSettings"/> object that defines the resizing behavior of the columns on client-side.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1GridView.C1GridView.RowHeader">
            <summary>
            Gets a <see cref="T:C1.Web.UI.Controls.C1GridView.C1RowHeaderField"/> object that represents the row header in a <see cref="T:C1.Web.UI.Controls.C1GridView.C1GridView"/> control.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1GridView.C1GridView.RowHeaderColumn">
            <summary>
            Gets or sets the name of the column to use as the column header for the <see cref="T:C1.Web.UI.Controls.C1GridView.C1GridView"/> control.
            This property is provided to make the control more accessible to users of assistive technology devices.
            </summary>
            <value>
            The name of the column to use as the column header.
            The default value is an empty string (""), which indicates that this property is not set.
            </value>
        </member>
        <member name="P:C1.Web.UI.Controls.C1GridView.C1GridView.Rows">
            <summary>
            Gets a collection of objects representing the items in <see cref="T:C1.Web.UI.Controls.C1GridView.C1GridView"/>.
            </summary>
            <value>
            A <see cref="T:C1.Web.UI.Controls.C1GridView.C1GridViewRowCollection"/> that contains a collection of <see cref="T:C1.Web.UI.Controls.C1GridView.C1GridViewRow"/> objects representing
            the individual rows in the <see cref="T:C1.Web.UI.Controls.C1GridView.C1GridView"/> control.
            </value>
        </member>
        <member name="P:C1.Web.UI.Controls.C1GridView.C1GridView.ScrollSettings">
            <summary>        
            Gets the scroll setting for the <see cref="T:C1.Web.UI.Controls.C1GridView.C1GridView"/> control.
            </summary>
            <remarks>
            The Height and Width properties of <see cref="T:C1.Web.UI.Controls.C1GridView.C1GridView"/> must be specified in order for the scrollbars to appear and scroll properly.
            </remarks>
        </member>
        <member name="P:C1.Web.UI.Controls.C1GridView.C1GridView.SelectedDataKey">
            <summary>
            Gets the <see cref="T:System.Web.UI.WebControls.DataKey"/> object that contains the data key value for the selected row in a <see cref="T:C1.Web.UI.Controls.C1GridView.C1GridView"/> control.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1GridView.C1GridView.SelectedIndex">
            <summary>
            Gets or sets the index of the selected row.
            </summary>
            <value>
            The default value is -1. Set this property to -1 to deselect an item in the <see cref="T:C1.Web.UI.Controls.C1GridView.C1GridView"/> component.
            </value>
        </member>
        <member name="P:C1.Web.UI.Controls.C1GridView.C1GridView.SelectionMode">
            <summary>
            Gets or sets a <see cref="T:C1.Web.UI.Controls.C1GridView.C1GridViewSelectionMode"/> enumeration member that represents grid's client-side selection behaviour.
            </summary>
            <value>
            The default value is <see cref="F:C1.Web.UI.Controls.C1GridView.C1GridViewSelectionMode.SingleRow"/>.
            </value>
        </member>
        <member name="P:C1.Web.UI.Controls.C1GridView.C1GridView.SelectedRow">
            <summary>
            Gets a <see cref="T:C1.Web.UI.Controls.C1GridView.C1GridViewRow"/> object that represents the selected item in a <see cref="T:C1.Web.UI.Controls.C1GridView.C1GridView"/> control.
            </summary>
            <remarks>
            This <see cref="T:C1.Web.UI.Controls.C1GridView.C1GridViewRow"/> object can be used to access the properties of the selected item.
            </remarks>
        </member>
        <member name="P:C1.Web.UI.Controls.C1GridView.C1GridView.SelectedValue">
            <summary>
            Gets the data key value of the selected row in a <see cref="T:C1.Web.UI.Controls.C1GridView.C1GridView"/> control.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1GridView.C1GridView.ShowCurrentCell">
            <summary>
            Gets or sets a value indicating whether position of the current cell is visualized or not.
            </summary>
            <value>
            The default value is True.
            </value>
            <remarks>
            Turning off this property speeds up control initialization and its responsiveness
            under the Internet Explorer browser when displaying a large dataset.
            </remarks>
        </member>
        <member name="P:C1.Web.UI.Controls.C1GridView.C1GridView.ShowCurrency">
            <summary>
            Gets or sets a value indicating whether position of the current cell is visualized or not.
            </summary>
            <remarks>
            Deprecated. Please use <see cref="P:C1.Web.UI.Controls.C1GridView.C1GridView.ShowCurrentCell"/> property instead.
            </remarks>
        </member>
        <member name="P:C1.Web.UI.Controls.C1GridView.C1GridView.ShowHeader">
            <summary>
            Determines whether the header is displayed.
            </summary>
            <value>
            The default value is true.
            </value>
            <remarks>
            Set this property to true to display the header.
            </remarks>
        </member>
        <member name="P:C1.Web.UI.Controls.C1GridView.C1GridView.ShowFilter">
            <summary>
            Gets or sets value indicating whether filter row is visible or not.
            </summary>
            <value>
            Default value is false.
            </value>
        </member>
        <member name="P:C1.Web.UI.Controls.C1GridView.C1GridView.ShowFooter">
            <summary>
            Determines whether the footer is displayed.
            </summary>
            <value>
            The default value is False.
            </value>
            <remarks>
            Set this property to True to display the footer.
            </remarks>
        </member>
        <member name="P:C1.Web.UI.Controls.C1GridView.C1GridView.TabNavigation">
            <summary>
            Gets or sets a value indicating how control handles the tab key in order to change position of the current cell.
            </summary>
            <value>
            The default value is <see cref="F:C1.Web.UI.Controls.C1GridView.TabNavigation.ControlNavigation"/>.
            </value>
        </member>
        <member name="P:C1.Web.UI.Controls.C1GridView.C1GridView.UpdateMode">
            <summary>
            Infrastructure.
            Gets or sets a value indicating how control handles change of current row in client editing mode.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1GridView.C1GridView.UseAccessibleHeader">
            <summary>
            Gets or sets a value indicating whether a <see cref="T:C1.Web.UI.Controls.C1GridView.C1GridView"/> control renders its header in an accessible format.
            This property is provided to make the control more accessible to users of assistive technology devices.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1GridView.C1GridView.VirtualItemCount">
            <summary>
            Gets or sets the virtual number of items when custom paging is used.
            </summary>
            <remarks>
            This property is only used when the <see cref="P:C1.Web.UI.Controls.C1GridView.C1GridView.AllowCustomPaging"/> property is set to True.
            </remarks>
        </member>
        <member name="P:C1.Web.UI.Controls.C1GridView.C1GridView.VirtualScrollSize">
            <summary>
            Determines the number of rows to load from server when using virtual scrolling.
            </summary>
            <value>
            Should be greater than 0. The default value is 30.
            </value>
        </member>
        <member name="P:C1.Web.UI.Controls.C1GridView.C1GridView.VisualStyle">
            <summary>
            Gets or sets the visual style name used by the control.
            </summary>
            <remarks>
            If this value is empty then visual style will be not rendered.
            Default value is "ArcticFox".
            </remarks>
        </member>
        <member name="P:C1.Web.UI.Controls.C1GridView.C1GridView.WaitImagePosition">
            <summary>
            Gets or sets the position of the wait image.
            </summary>
            <value>
            Default value is <see cref="F:C1.Web.UI.Controls.C1GridView.ElementPosition.Center"/>.
            </value>
        </member>
        <member name="P:C1.Web.UI.Controls.C1GridView.C1GridView.AlternatingRowStyle">
            <summary>
            Gets a reference to the <see cref="T:System.Web.UI.WebControls.TableItemStyle"/> object that enables you to set the appearance of alternating data rows in a <see cref="T:C1.Web.UI.Controls.C1GridView.C1GridView"/> control.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1GridView.C1GridView.EditRowStyle">
            <summary>
            Gets a reference to the <see cref="T:System.Web.UI.WebControls.TableItemStyle"/> object that enables you to set the appearance of the row selected for editing in a <see cref="T:C1.Web.UI.Controls.C1GridView.C1GridView"/> control.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1GridView.C1GridView.EmbeddedVisualStyles">
            <summary>
            Returns string array with embedded Visual Styles names.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1GridView.C1GridView.EmptyDataRowStyle">
            <summary>
            Gets a reference to the <see cref="T:System.Web.UI.WebControls.TableItemStyle"/> object that enables you to set the appearance of the empty data row rendered when a <see cref="T:C1.Web.UI.Controls.C1GridView.C1GridView"/> control is bound to a data source that does not contain any records.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1GridView.C1GridView.FilterStyle">
            <summary>
            Gets a reference to the <see cref="T:System.Web.UI.WebControls.TableItemStyle"/> object that enables you to set the appearance of the filter row in a <see cref="T:C1.Web.UI.Controls.C1GridView.C1GridView"/> control.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1GridView.C1GridView.FooterStyle">
            <summary>
            Gets a reference to the <see cref="T:System.Web.UI.WebControls.TableItemStyle"/> object that enables you to set the appearance of the footer row in a <see cref="T:C1.Web.UI.Controls.C1GridView.C1GridView"/> control.
            </summary>
            <remarks>
            This property is used to provide a custom style for the footer section of the column.
            </remarks>
        </member>
        <member name="P:C1.Web.UI.Controls.C1GridView.C1GridView.GroupingStyle">
            <summary>
            Gets a reference to the <see cref="T:System.Web.UI.WebControls.TableItemStyle"/> object that enables you to set the appearance of the grouping area in a <see cref="T:C1.Web.UI.Controls.C1GridView.C1GridView"/> control.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1GridView.C1GridView.HeaderStyle">
            <summary>
            Gets a reference to the <see cref="T:System.Web.UI.WebControls.TableItemStyle"/> object that enables you to set the appearance of the header row in a <see cref="T:C1.Web.UI.Controls.C1GridView.C1GridView"/> control.
            </summary>
            <remarks>
            This property is used to provide a custom style for the header section of the column.
            </remarks>
        </member>
        <member name="P:C1.Web.UI.Controls.C1GridView.C1GridView.RowStyle">
            <summary>
            Gets a reference to the <see cref="T:System.Web.UI.WebControls.TableItemStyle"/> object that enables you to set the appearance of the data rows in a <see cref="T:C1.Web.UI.Controls.C1GridView.C1GridView"/> control.
            </summary>
            <remarks>
            This property is used to provide a custom style for the items of the <see cref="T:C1.Web.UI.Controls.C1GridView.C1GridView"/> control.
            </remarks>
        </member>
        <member name="P:C1.Web.UI.Controls.C1GridView.C1GridView.PagerStyle">
            <summary>
            Gets a reference to the <see cref="T:System.Web.UI.WebControls.TableItemStyle"/> object that enables you to set the appearance of the pager row in a <see cref="T:C1.Web.UI.Controls.C1GridView.C1GridView"/> control.
            </summary>
            <value>
            The <see cref="P:C1.Web.UI.Controls.C1GridView.C1GridView.PagerStyle"/> represents the style properties for the paging section
            of the <see cref="T:C1.Web.UI.Controls.C1GridView.C1GridView"/>.
            </value>
            <remarks>
            This property is used to provide a custom style for the paging section of the <see cref="T:C1.Web.UI.Controls.C1GridView.C1GridView"/> control.
            </remarks> 
        </member>
        <member name="P:C1.Web.UI.Controls.C1GridView.C1GridView.SelectedRowStyle">
            <summary>
            Gets a reference to the <see cref="T:System.Web.UI.WebControls.TableItemStyle"/> object that enables you to set the appearance of the selected row in a <see cref="T:C1.Web.UI.Controls.C1GridView.C1GridView"/> control.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1GridView.C1GridView.VisualStylePath">
            <summary>
            Gets or sets the path to the visual style folder.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1GridView.C1GridView.UseEmbeddedVisualStyles">
            <summary>
            If true then control will use the VisualStyle embedded into control's assembly;
            otherwise control will load the VisualStyle from disk.
            </summary> 
        </member>
        <member name="P:C1.Web.UI.Controls.C1GridView.C1GridView.TagKey">
            <summary>
            Gets the HTML tag that is used to render the <see cref="T:C1.Web.UI.Controls.C1GridView.C1GridView"/> control.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1GridView.C1GridView.OptimizeDataOnlyRendering">
            <summary>
            Determines if data-only or full update of grid's HTML content will take place during callback.
            </summary>
            <value>
            The default value is false.
            </value>
            <remarks>
            Data-only rendering is used with callbacks. When enabled, server sends only necessary data or HTML code
            portions to a client as a result of callback thus performing smart update. Data-only rendering is
            used for page, sort, delete, filter. If for any reason you need full or partial
            update of <see cref="T:C1.Web.UI.Controls.C1GridView.C1GridView"/> HTML code, set this property to false.
            </remarks>
        </member>
        <member name="E:C1.Web.UI.Controls.C1GridView.C1GridView.BeginRowUpdate">
            <summary>
            Occurs in client editing mode when edits done by user should be persisted to underlying dataset.
            </summary>
            <remarks>
            Fires at the very beginning of the update procedure.
            You can perform any actions preceding update here, for example, establish database connectivity.
            </remarks>
        </member>
        <member name="E:C1.Web.UI.Controls.C1GridView.C1GridView.ColumnMoved">
            <summary>
            Occurs when a column has been moved.
            </summary>
            <remarks>
            You must implement this event if the grid is not bound to a DataSource control.
            </remarks>
        </member>
        <member name="E:C1.Web.UI.Controls.C1GridView.C1GridView.ColumnMoving">
            <summary>
            Occurs when a column is moved, but before the <see cref="T:C1.Web.UI.Controls.C1GridView.C1GridView"/> handles the operation.
            </summary>
            <remarks>
            To cancel the action set the Cancel property of the <see cref="T:C1.Web.UI.Controls.C1GridView.C1GridViewColumnMoveEventArgs"/> object to true.
            </remarks>
        </member>
        <member name="E:C1.Web.UI.Controls.C1GridView.C1GridView.DataChanged">
            <summary>
            Occurs when the data is changed.
            </summary>
        </member>
        <member name="E:C1.Web.UI.Controls.C1GridView.C1GridView.EndRowUpdated">
            <summary>
            Occurs in client editing mode when edits done by user should be persisted to underlying dataset.
            </summary>
            <remarks>
            Fires at the very end of the update procedure.
            You can perform finalization steps of update procedure here, for example, close database connection.
            </remarks>
        </member>
        <member name="E:C1.Web.UI.Controls.C1GridView.C1GridView.Filtered">
            <summary>
            Occurs after filter expression is applied to the underlying <see cref="T:System.Data.DataView"/>'s
            <see cref="P:System.Data.DataView.RowFilter"/> property.
            </summary>
        </member>
        <member name="E:C1.Web.UI.Controls.C1GridView.C1GridView.Filtering">
            <summary>
            Occurs when the preparation for filtering is started but before the <see cref="T:C1.Web.UI.Controls.C1GridView.C1GridView"/>
            instance handles the filter operation.
            </summary>
            <remarks>
            To stop the operation set the Cancel property of the <see cref="T:C1.Web.UI.Controls.C1GridView.C1GridViewFilterEventArgs"/> object to true.
            </remarks>
        </member>
        <member name="E:C1.Web.UI.Controls.C1GridView.C1GridView.GroupAggregate">
            <summary>
            Occurs when <see cref="P:C1.Web.UI.Controls.C1GridView.C1Field.Aggregate"/> property of the <see cref="T:C1.Web.UI.Controls.C1GridView.C1Field"/> class has been set to "Custom".
            This allows the customization of aggregate cell contents for text displayed in the group header or footer.
            </summary>
        </member>
        <member name="E:C1.Web.UI.Controls.C1GridView.C1GridView.GroupColumnMoved">
            <summary>
            Occurs when a column in the grouping area has been moved.
            </summary>
            <remarks>
            You must implement this event if the grid is not bound to a DataSource control.
            </remarks>
        </member>
        <member name="E:C1.Web.UI.Controls.C1GridView.C1GridView.GroupColumnMoving">
            <summary>
            Occurs when a column in the grouping area is moved, but before the <see cref="T:C1.Web.UI.Controls.C1GridView.C1GridView"/> handles the operation. 
            </summary>
            <remarks>
            To cancel the operation set the Cancel property of the <see cref="T:C1.Web.UI.Controls.C1GridView.C1GridViewGroupColumnMoveEventArgs"/> object to true.
            </remarks>
        </member>
        <member name="E:C1.Web.UI.Controls.C1GridView.C1GridView.GroupText">
            <summary>
            Occurs when the <see cref="P:C1.Web.UI.Controls.C1GridView.GroupInfo.HeaderText"/> or <see cref="P:C1.Web.UI.Controls.C1GridView.GroupInfo.FooterText"/> property of the <see cref="T:C1.Web.UI.Controls.C1GridView.GroupInfo"/>
            class has been set to "Custom". This allows one to customize the text displayed for the group header or footer.
            </summary>
        </member>
        <member name="E:C1.Web.UI.Controls.C1GridView.C1GridView.PageIndexChanged">
            <summary>
            Occurs when one of the pager buttons is clicked, but after the <see cref="T:C1.Web.UI.Controls.C1GridView.C1GridView"/> control handles the paging operation.
            </summary>
        </member>
        <member name="E:C1.Web.UI.Controls.C1GridView.C1GridView.PageIndexChanging">
            <summary>
            Occurs when one of the pager buttons is clicked, but before the <see cref="T:C1.Web.UI.Controls.C1GridView.C1GridView"/> control handles the paging operation.
            </summary>
            <remarks>
            To cancel the operation set the Cancel property of the <see cref="T:C1.Web.UI.Controls.C1GridView.C1GridViewPageEventArgs"/> object to true.
            </remarks>
            <remarks>
            You must implement this event if the grid is not bound to a DataSource control.
            </remarks>
        </member>
        <member name="E:C1.Web.UI.Controls.C1GridView.C1GridView.RowCancelingEdit">
            <summary>
            Occurs when the Cancel button of a item in edit mode is clicked, but before the item exits edit mode.
            </summary>
            <remarks>
            To stop the operation set the Cancel property of the <see cref="T:C1.Web.UI.Controls.C1GridView.C1GridViewCancelEditEventArgs"/> object to true.
            </remarks>
        </member>
        <member name="E:C1.Web.UI.Controls.C1GridView.C1GridView.RowCommand">
            <summary>
            Occurs when a button is clicked in a <see cref="T:C1.Web.UI.Controls.C1GridView.C1GridView"/> control.
            </summary>
        </member>
        <member name="E:C1.Web.UI.Controls.C1GridView.C1GridView.RowCreated">
            <summary>
            Occurs when a row is created in a <see cref="T:C1.Web.UI.Controls.C1GridView.C1GridView"/> control.
            </summary>
        </member>
        <member name="E:C1.Web.UI.Controls.C1GridView.C1GridView.RowDataBound">
            <summary>
            Occurs when a row is bound to data in a <see cref="T:C1.Web.UI.Controls.C1GridView.C1GridView"/> control.
            </summary>
        </member>
        <member name="E:C1.Web.UI.Controls.C1GridView.C1GridView.RowDeleted">
            <summary>
            Occurs when the Delete button is clicked.
            </summary>
            <remarks>
            The event occurs only if the grid is bound to a DataSource control.
            </remarks>
        </member>
        <member name="E:C1.Web.UI.Controls.C1GridView.C1GridView.RowDeleting">
            <summary>
            Occurs when the Delete button is clicked, but before the <see cref="T:C1.Web.UI.Controls.C1GridView.C1GridView"/> instance  handles the delete operation.
            </summary>
            <remarks>
            To cancel the operation set the Cancel property of the <see cref="T:C1.Web.UI.Controls.C1GridView.C1GridViewDeleteEventArgs"/> object to true.
            </remarks>
            <remarks>
            You must implement this event if the grid is not bound to a DataSource control.
            </remarks>
        </member>
        <member name="E:C1.Web.UI.Controls.C1GridView.C1GridView.RowEditing">
            <summary>
            Occurs when the Edit button is clicked, but before the <see cref="T:C1.Web.UI.Controls.C1GridView.C1GridView"/> instance handles the operation.
            </summary>
            <remarks>
            To cancel the operation set the Cancel property of the <see cref="T:C1.Web.UI.Controls.C1GridView.C1GridViewEditEventArgs"/> object to true.
            </remarks>
            <remarks>
            You must implement this event if the grid is not bound to a DataSource control.
            </remarks>
        </member>
        <member name="E:C1.Web.UI.Controls.C1GridView.C1GridView.SelectedIndexChanged">
            <summary>
            Occurs when a row's Select button is clicked, but after the <see cref="T:C1.Web.UI.Controls.C1GridView.C1GridView"/> control handles the select operation.
            </summary>
        </member>
        <member name="E:C1.Web.UI.Controls.C1GridView.C1GridView.SelectedIndexChanging">
            <summary>
            Occurs when a row's Select button is clicked, but before the <see cref="T:C1.Web.UI.Controls.C1GridView.C1GridView"/> control handles the select operation.
            </summary>
            <remarks>
            To cancel the operation set the Cancel property of the <see cref="T:C1.Web.UI.Controls.C1GridView.C1GridViewSelectEventArgs"/> object to true.
            </remarks>
            <remarks>
            You must implement this event if the grid is not bound to a DataSource control.
            </remarks>
        </member>
        <member name="E:C1.Web.UI.Controls.C1GridView.C1GridView.Sorted">
            <summary>
            Occurs when a row's Select button is clicked, but after the <see cref="T:C1.Web.UI.Controls.C1GridView.C1GridView"/> control handles the sorting operation.
            </summary>
        </member>
        <member name="E:C1.Web.UI.Controls.C1GridView.C1GridView.Sorting">
            <summary>
            Occurs when a row's Select button is clicked, but before the <see cref="T:C1.Web.UI.Controls.C1GridView.C1GridView"/> control handles the sorting operation.
            </summary>
            <remarks>
            To cancel the operation set the Cancel property of the <see cref="T:C1.Web.UI.Controls.C1GridView.C1GridViewSortEventArgs"/> object to true.
            </remarks>
            <remarks>
            You must implement this event if the grid is not bound to a DataSource control.
            </remarks>
        </member>
        <member name="E:C1.Web.UI.Controls.C1GridView.C1GridView.RowUpdated">
            <summary>
            Occurs when a row's Update button is clicked, but after the <see cref="T:C1.Web.UI.Controls.C1GridView.C1GridView"/> control handles the update operation.
            </summary>
            <remarks>
            The event occurs only if the grid is bound to a DataSource control.
            </remarks>
        </member>
        <member name="E:C1.Web.UI.Controls.C1GridView.C1GridView.RowUpdating">
            <summary>
            Occurs when a row's Update button is clicked, but before the <see cref="T:C1.Web.UI.Controls.C1GridView.C1GridView"/> control handles the update operation.
            </summary>
            <remarks>
            To cancel the update operation set the Cancel property of the <see cref="T:C1.Web.UI.Controls.C1GridView.C1GridViewUpdateEventArgs"/> object to true.
            </remarks>
            <remarks>
            You must implement this event if the grid is not bound to a DataSource control.
            </remarks>
        </member>
        <member name="P:C1.Web.UI.Controls.C1GridView.C1GridView.ClientOnAfterCellEdit">
            <summary>
            Get or sets the method to be called after cell editing is completed.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1GridView.C1GridView.ClientOnAfterCellUpdate">
            <summary>
            Get or sets the method to be called after cell is updated.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1GridView.C1GridView.ClientOnBeforeCellEdit">
            <summary>
            Get or sets the method to be called before a cell enters edit mode.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1GridView.C1GridView.ClientOnBeforeCellUpdate">
            <summary>
            Get or sets the method to be called before cell is updated.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1GridView.C1GridView.ClientOnCurrentCellChanging">
            <summary>
            Get or sets the method to be called before position of the current cell is change.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1GridView.C1GridView.ClientOnCurrencyChanging">
            <summary>
            Get or sets the method to be called before position of the current cell is change.
            </summary>
            <remarks>
            Deprecated. Please use <see cref="P:C1.Web.UI.Controls.C1GridView.C1GridView.ClientOnCurrentCellChanging"/> property instead.
            </remarks>
        </member>
        <member name="P:C1.Web.UI.Controls.C1GridView.C1GridView.ClientOnCurrentCellChanged">
            <summary>
            Get or sets the method to be called after position of the current cell is changed.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1GridView.C1GridView.ClientOnCurrencyChanged">
            <summary>
            Get or sets the method to be called after position of the current cell is changed.
            </summary>
            <remarks>
            Deprecated. Please use <see cref="P:C1.Web.UI.Controls.C1GridView.C1GridView.ClientOnCurrentCellChanged"/> property instead.
            </remarks>
        </member>
        <member name="P:C1.Web.UI.Controls.C1GridView.C1GridView.ClientOnColumnWidthChanged">
            <summary>
            Gets or sets the method to be called after column width is changed.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1GridView.C1GridView.ClientOnSelectionChanged">
            <summary>
            Gets or sets the method to be called after selection is changed.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1GridView.C1GridView.InnerState">
            <summary>
            Storage used for persisting elements of object state which can't be
            serialized to JSON using <see cref="T:C1.Web.UI.JsonAttribute"/>.
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1GridView.C1GridViewPagerSettings">
            <summary>
            Represents the properties of the paging controls in the <see cref="T:C1.Web.UI.Controls.C1GridView.C1GridView"/> control.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1GridView.C1GridViewPagerSettings.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:C1.Web.UI.Controls.C1GridView.C1GridViewPagerSettings"/> class. 
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1GridView.C1GridViewPagerSettings.FirstPageImageUrl">
            <summary>
            Gets or sets the URL to an image to display for the First page button.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1GridView.C1GridViewPagerSettings.FirstPageText">
            <summary>
            Gets or sets the text to display for the First page button.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1GridView.C1GridViewPagerSettings.LastPageImageUrl">
            <summary>
            Gets or sets the URL to an image to display for the Last page button.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1GridView.C1GridViewPagerSettings.LastPageText">
            <summary>
            Gets or sets the text to display for the Last page button.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1GridView.C1GridViewPagerSettings.Mode">
            <summary>
            Gets or sets the mode in which to display the pager controls in a control that supports pagination.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1GridView.C1GridViewPagerSettings.NextPageImageUrl">
            <summary>
            Gets or sets the URL to an image to display for the Next page button.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1GridView.C1GridViewPagerSettings.NextPageText">
            <summary>
            Gets or sets the text to display for the Next page button.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1GridView.C1GridViewPagerSettings.PageButtonCount">
            <summary>
            Gets or sets the number of Page buttons to display in the pager when the <see cref="P:C1.Web.UI.Controls.C1GridView.C1GridViewPagerSettings.Mode"/>
            property is set to the <see cref="F:System.Web.UI.WebControls.PagerButtons.Numeric"/> or <see cref="F:System.Web.UI.WebControls.PagerButtons.NumericFirstLast"/> value.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1GridView.C1GridViewPagerSettings.Position">
            <summary>
            Gets or sets a value that specifies the location where the pager is displayed.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1GridView.C1GridViewPagerSettings.PreviousPageImageUrl">
            <summary>
            Gets or sets the URL to an image to display for the Previous page button.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1GridView.C1GridViewPagerSettings.PreviousPageText">
            <summary>
            Gets or sets the text to display for the Previous page button.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1GridView.C1GridViewPagerSettings.Visible">
            <summary>
            Gets or sets a value indicating whether the paging controls are displayed in a <see cref="T:C1.Web.UI.Controls.C1GridView.C1GridView"/> control.
            </summary>
        </member>
        <member name="E:C1.Web.UI.Controls.C1GridView.C1GridViewPagerSettings.PropertyChanged">
            <summary>
            Occurs when a property of a <see cref="T:C1.Web.UI.Controls.C1GridView.C1GridViewPagerSettings"/> object changes values.
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1GridView.C1GridViewRow">
            <summary>
            Represents an individual row in a <see cref="T:C1.Web.UI.Controls.C1GridView.C1GridView"/> control.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1GridView.C1GridViewRow.#ctor(System.Int32,System.Int32,C1.Web.UI.Controls.C1GridView.C1GridViewRowType,C1.Web.UI.Controls.C1GridView.C1GridViewRowState)">
            <summary>
            Constructor. Initializes a new instance of the <see cref="T:C1.Web.UI.Controls.C1GridView.C1GridViewRow"/> class.
            </summary>
            <param name="rowIndex">The index of the <see cref="T:C1.Web.UI.Controls.C1GridView.C1GridViewRow"/> object in the <see cref="P:C1.Web.UI.Controls.C1GridView.C1GridView.Rows"/> collection.</param>
            <param name="dataItemIndex">The index of the DataItem in the underlying DataSet.</param>
            <param name="rowType">The row type of the <see cref="T:C1.Web.UI.Controls.C1GridView.C1GridViewRow"/>.</param>
            <param name="rowState">The state of the <see cref="T:C1.Web.UI.Controls.C1GridView.C1GridViewRow"/> object.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1GridView.C1GridViewRow.#ctor(System.Int32,System.Int32,C1.Web.UI.Controls.C1GridView.C1GridViewRowType,C1.Web.UI.Controls.C1GridView.C1GridViewRowState,System.Web.UI.WebControls.TableItemStyle)">
            <summary>
            Constructor. Initializes a new instance of the <see cref="T:C1.Web.UI.Controls.C1GridView.C1GridViewRow"/> class.
            </summary>
            <param name="rowIndex">The index of the <see cref="T:C1.Web.UI.Controls.C1GridView.C1GridViewRow"/> object in the <see cref="P:C1.Web.UI.Controls.C1GridView.C1GridView.Rows"/> collection.</param>
            <param name="dataItemIndex">The index of the DataItem in the underlying DataSet.</param>
            <param name="rowType">The row type of the <see cref="T:C1.Web.UI.Controls.C1GridView.C1GridViewRow"/>.</param>
            <param name="rowState">The state of the <see cref="T:C1.Web.UI.Controls.C1GridView.C1GridViewRow"/> object.</param>
            <param name="customStyle">The custom style.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1GridView.C1GridViewRow.AddAttributesToRender(System.Web.UI.HtmlTextWriter)">
            <summary>
            
            </summary>
            <param name="writer"></param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1GridView.C1GridViewRow.CreateControlStyle">
            <summary>
            Creates the default style for the control.
            </summary>
            <returns>A <see cref="T:System.Web.UI.WebControls.Style"/> that represents the style for the control.</returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1GridView.C1GridViewRow.OnBubbleEvent(System.Object,System.EventArgs)">
            <summary>
            Passes the event raised by a control within the container up the page's UI server control hierarchy.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">An <see cref="T:System.EventArgs"/> that contains event data.</param>
            <returns>True to indicate that this method is passing an event raised by a control within the container up the page's UI server control hierarchy; otherwise, false.</returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1GridView.C1GridViewRow.Render(System.Web.UI.HtmlTextWriter)">
            <summary>
            Renders the Web server control content to the client's browser using the specified <see cref="T:System.Web.UI.HtmlTextWriter"/> object.
            </summary>
            <param name="writer">The <see cref="T:System.Web.UI.HtmlTextWriter"/> used to render the server control content on the client's browser.</param>
        </member>
        <member name="P:C1.Web.UI.Controls.C1GridView.C1GridViewRow.AllowAutoSize">
            <summary>
            Gets or sets a value indicating whether the <see cref="T:C1.Web.UI.Controls.C1GridView.C1GridViewRow"/> auto sizes.
            </summary>
            <value>Default value is true.</value>
        </member>
        <member name="P:C1.Web.UI.Controls.C1GridView.C1GridViewRow.DataItem">
            <summary>
            Gets or sets the underlying data object to which the <see cref="T:C1.Web.UI.Controls.C1GridView.C1GridViewRow"/> object is bound.
            </summary>
            <remarks>
            Use the DataItem property to access the properties of the underlying data object to which the 
            <see cref="T:C1.Web.UI.Controls.C1GridView.C1GridViewRow"/> object is bound. The DataItem property is only available during and after the <see cref="E:C1.Web.UI.Controls.C1GridView.C1GridView.RowDataBound"/> event of a <see cref="T:System.Web.UI.WebControls.GridView"/> control.
            </remarks>
        </member>
        <member name="P:C1.Web.UI.Controls.C1GridView.C1GridViewRow.DataItemIndex">
            <summary>
            Gets the index of the <see cref="P:C1.Web.UI.Controls.C1GridView.C1GridViewRow.DataItem"/> in the underlying DataSet.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1GridView.C1GridViewRow.RowIndex">
            <summary>
            Gets the index of the <see cref="T:C1.Web.UI.Controls.C1GridView.C1GridViewRow"/> object in the <see cref="P:C1.Web.UI.Controls.C1GridView.C1GridView.Rows"/> collection of a <see cref="T:C1.Web.UI.Controls.C1GridView.C1GridView"/> control.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1GridView.C1GridViewRow.RowType">
            <summary>
            Gets the row type of the <see cref="T:C1.Web.UI.Controls.C1GridView.C1GridViewRow"/> object.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1GridView.C1GridViewRow.RowState">
            <summary>
            Gets the state of the <see cref="T:C1.Web.UI.Controls.C1GridView.C1GridViewRow"/> object.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1GridView.C1GridViewRow.Fixed">
            <summary>
            Gets or sets a value indicating whether a row is fixed to the top of the grid when it is scrolled vertically.
            </summary>
            <value>
            The default value of this property is False.
            </value>
            <remarks>
            <para>
            For a scrollable grid, the <see cref="T:C1.Web.UI.Controls.C1GridView.C1GridViewRowType"/> enumeration's Header constant will have a default
            value of True. This property can be set in either the<see cref="E:C1.Web.UI.Controls.C1GridView.C1GridView.RowCreated"/> or
            <see cref="E:C1.Web.UI.Controls.C1GridView.C1GridView.RowDataBound"/> event. 
            </para>
            <para>
            When the grid is in grouping mode, the entire group that contains a fixed row will be moved
            to the top of the grid.
            </para>
            </remarks>
        </member>
        <member name="T:C1.Web.UI.Controls.C1GridView.C1GridViewRowCollection">
            <summary>
            Represents a collection of <see cref="T:C1.Web.UI.Controls.C1GridView.C1GridViewRow"/> objects in a <see cref="T:C1.Web.UI.Controls.C1GridView.C1GridView"/> control.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1GridView.C1GridViewRowCollection.CopyTo(System.Array,System.Int32)">
            <summary>
            Copies all the items from this <see cref="T:C1.Web.UI.Controls.C1GridView.C1GridViewRowCollection"/> to the specified System.Array object,
            starting at the specified index in the System.Array object
            </summary>
            <param name="array">The one-dimensional Array.</param>
            <param name="index">The zero-based index in the <paramref name="array"/> at which copying begins.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1GridView.C1GridViewRowCollection.GetEnumerator">
            <summary>
            Returns a System.Collections.IEnumerator implemented object that contains all objects in the <see cref="T:C1.Web.UI.Controls.C1GridView.C1GridViewRowCollection"/>.
            </summary>
            <returns>An IEnumerator for the collection.</returns>
        </member>
        <member name="P:C1.Web.UI.Controls.C1GridView.C1GridViewRowCollection.Item(System.Int32)">
            <summary>
            Gets or sets the <see cref="T:C1.Web.UI.Controls.C1GridView.C1GridViewRow"/> at the specified index within the <see cref="T:C1.Web.UI.Controls.C1GridView.C1GridViewRowCollection"/>.
            In C#, this property is the indexer for the <see cref="T:C1.Web.UI.Controls.C1GridView.C1GridViewRowCollection"/> class.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1GridView.C1GridViewRowCollection.Count">
            <summary>
            Gets the number of items in the <see cref="T:C1.Web.UI.Controls.C1GridView.C1GridViewRowCollection"/>.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1GridView.C1GridViewRowCollection.IsSynchronized">
            <summary>
            Gets a value indicating whether access to the <see cref="T:C1.Web.UI.Controls.C1GridView.C1GridViewRowCollection"/> is synchronized (thread-safe).
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1GridView.C1GridViewRowCollection.SyncRoot">
            <summary>
            Gets the object that can be used to synchronize access to the <see cref="T:C1.Web.UI.Controls.C1GridView.C1GridViewRowCollection"/>.
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1GridView.C1GridViewScrollSettings">
            <summary>
            Represents the scrolling properties of the <see cref="T:C1.Web.UI.Controls.C1GridView.C1GridView"/> control.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1GridView.C1GridViewScrollSettings.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:C1.Web.UI.Controls.C1GridView.C1GridViewScrollSettings"/> class. 
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1GridView.C1GridViewScrollSettings.ScrollMode">
            <summary>
            Gets or sets if scroll bars should be displayed.
            </summary>
            <value>
            The default value is <see cref="F:C1.Web.UI.Controls.C1GridView.C1GridViewScrollMode.None"/>.
            </value>
        </member>
        <member name="P:C1.Web.UI.Controls.C1GridView.C1GridViewScrollSettings.ScrollOrientation">
            <summary>
            Gets or sets if horizontal, vertical, or both scroll bars should be displayed
            </summary>
            <value>
            The default value is <see cref="F:C1.Web.UI.DOMScrollOrientation.Both"/>.
            </value>
            <remarks>
            The <see cref="P:C1.Web.UI.Controls.C1GridView.C1GridViewScrollSettings.ScrollMode"/> property of the <see cref="P:C1.Web.UI.Controls.C1GridView.C1GridView.ScrollSettings"/> object must be set to
            <see cref="F:C1.Web.UI.Controls.C1GridView.C1GridViewScrollMode.ScrollBar"/> for scroll bars to be visible.
            </remarks>
        </member>
        <member name="T:C1.Web.UI.Controls.C1GridView.C1GridViewUpdateBinding">
            <summary>
            
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1GridView.C1GridViewUpdateBinding.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1GridView.C1GridViewUpdateBindingCollection">
            <summary>
            GridUpdateBindingCollection contains <see cref="T:C1.Web.UI.Controls.C1GridView.C1GridViewUpdateBinding"/> objects specifying bindings used in <see cref="M:C1.Web.UI.Controls.C1GridView.C1GridView.Update"/> method.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1GridView.C1GridViewUpdateBindingCollection.#ctor">
            <summary>
            Constructor. Initializes a new instance of the <see cref="T:C1.Web.UI.Controls.C1GridView.C1GridViewUpdateBindingCollection"/> class.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1GridView.C1GridViewUpdateBindingCollection.Add(C1.Web.UI.Controls.C1GridView.C1GridViewUpdateBinding)">
            <summary>
            Adds the specified <see cref="T:C1.Web.UI.Controls.C1GridView.C1GridViewUpdateBinding"/> element to the end of the collection.
            </summary>
            <param name="binding">The <see cref="T:C1.Web.UI.Controls.C1GridView.C1GridViewUpdateBinding"/> object to add.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1GridView.C1GridViewUpdateBindingCollection.CopyFrom(C1.Web.UI.Controls.C1GridView.Data.UpdateBindingCollection)">
            <summary>
            Copies content from the specified <see cref="T:C1.Web.UI.Controls.C1GridView.Data.UpdateBindingCollection"/> object.
            </summary>
            <param name="other">The <see cref="T:C1.Web.UI.Controls.C1GridView.Data.UpdateBindingCollection"/> to copy content from.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1GridView.C1GridViewUpdateBindingCollection.NewBinding">
            <summary>
            Creates an empty <see cref="T:C1.Web.UI.Controls.C1GridView.C1GridViewUpdateBinding"/> object.
            </summary>
            <returns>An empty <see cref="T:C1.Web.UI.Controls.C1GridView.C1GridViewUpdateBinding"/> object.</returns>
        </member>
        <member name="P:C1.Web.UI.Controls.C1GridView.C1GridViewUpdateBindingCollection.Item(System.Int32)">
            <summary>
            Gets an <see cref="T:C1.Web.UI.Controls.C1GridView.C1GridViewUpdateBinding"/> object from the collection at the specified index.
            In C#, this property is the indexer for the <see cref="T:C1.Web.UI.Controls.C1GridView.C1GridViewUpdateBindingCollection"/> class.
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1GridView.C1TableCell">
            <summary>
            Represents a cell in the rendered table of a C1GridView.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1GridView.C1TableCell.#ctor(C1.Web.UI.Controls.C1GridView.C1BaseField)">
            <summary>
             Initializes a new instance of the <see cref="T:C1.Web.UI.Controls.C1GridView.C1TableCell"/> class, setting the specified <see cref="T:C1.Web.UI.Controls.C1GridView.C1BaseField"/> object as the cell's container.
            </summary>
            <param name="containingField">
            The <see cref="T:C1.Web.UI.Controls.C1GridView.C1BaseField"/> object that contains the current cell.
            </param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1GridView.C1TableCell.AddAttributesToRender(System.Web.UI.HtmlTextWriter)">
            <summary>
            
            </summary>
            <param name="writer"></param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1GridView.C1TableCell.RenderBeginTag(System.Web.UI.HtmlTextWriter)">
            <summary>
            
            </summary>
            <param name="writer"></param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1GridView.C1TableCell.RenderEndTag(System.Web.UI.HtmlTextWriter)">
            <summary>
            
            </summary>
            <param name="writer"></param>
        </member>
        <member name="P:C1.Web.UI.Controls.C1GridView.C1TableCell.ContainingField">
            <summary>
            Gets the <see cref="T:C1.Web.UI.Controls.C1GridView.C1BaseField"/> object that contains the current cell.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1GridView.C1TableCell.Scope">
            <summary>
            Gets or sets the cell's scope within an HTML table.
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1GridView.C1TableHeaderCell">
            <summary>
            Represents a header cell in the rendered table of a C1GridView.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1GridView.C1TableHeaderCell.#ctor(C1.Web.UI.Controls.C1GridView.C1BaseField)">
            <summary>
             Initializes a new instance of the <see cref="T:C1.Web.UI.Controls.C1GridView.C1TableCell"/> class, setting the specified <see cref="T:C1.Web.UI.Controls.C1GridView.C1BaseField"/> object as the cell's container.
            </summary>
            <param name="containingField">
            The <see cref="T:C1.Web.UI.Controls.C1GridView.C1BaseField"/> object that contains the current cell.
            </param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1GridView.C1TableHeaderCell.AddAttributesToRender(System.Web.UI.HtmlTextWriter)">
            <summary>
            
            </summary>
            <param name="writer"></param>
        </member>
        <member name="P:C1.Web.UI.Controls.C1GridView.C1TableHeaderCell.AbbreviatedText">
            <summary>
             Gets or sets abbreviated text, which is rendered in an HTML abbr attribute and is used by screen readers.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1GridView.C1TableHeaderCell.TagKey">
            <summary>
            
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1GridView.C1Band">
            <summary>
            Contain that allows organizing <see cref="T:C1.Web.UI.Controls.C1GridView.C1BaseField"/> instances into
            hierarchical structure. Used to create multilevel column headers.
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1GridView.C1BaseField">
            <summary>
            This is the base class for bands and all columns.
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1GridView.ViewStateClass">
            <summary>
            Base class to support view state management.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1GridView.ViewStateClass.#ctor(System.Boolean)">
            <summary>
            Constructor.
            </summary>
            <param name="track"></param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1GridView.ViewStateClass.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1GridView.ViewStateClass.SetDirty">
            <summary>
            Sets the state of the <see cref="T:System.Web.UI.StateBag"/> object as well as the <see cref="P:System.Web.SessionState.ISessionStateItemCollection.Dirty"/>
            property of each of the <see cref="T:System.Web.UI.StateItem"/> objects contained by it.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1GridView.ViewStateClass.LoadViewState(System.Object)">
            <summary>
            Restores the previously saved view state of the <see cref="T:C1.Web.UI.Controls.C1GridView.ViewStateClass"/> object.
            </summary>
            <param name="savedState">An object that represents the <see cref="T:C1.Web.UI.Controls.C1GridView.ViewStateClass"/> state to restore.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1GridView.ViewStateClass.SaveViewState">
            <summary>
            Saves the changes to the <see cref="T:C1.Web.UI.Controls.C1GridView.ViewStateClass"/> object since the time the page was posted back to the server.
            </summary>
            <returns>The object that contains the changes to the view state of the <see cref="T:C1.Web.UI.Controls.C1GridView.ViewStateClass"/>.</returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1GridView.ViewStateClass.TrackViewState">
            <summary>
            Causes the <see cref="T:C1.Web.UI.Controls.C1GridView.ViewStateClass"/> object to track changes to its state so that it can be persisted across requests.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1GridView.ViewStateClass.IsTrackingViewState">
            <summary>
            Gets a value indicating whether state changes are being tracked.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1GridView.ViewStateClass.ViewState">
            <summary>
            Manages the view state.
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1GridView.IC1GridViewOwnerable">
            <summary>
            Infrastructure.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1GridView.IC1GridViewOwnerable.Owner">
            <summary>
            
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1GridView.C1BaseField.#ctor">
            <summary>
            Constructor. Creates a new instance of the <see cref="T:C1.Web.UI.Controls.C1GridView.C1BaseField"/> class.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1GridView.C1BaseField.ExtractValuesFromCell(System.Web.UI.WebControls.TableCell,System.Collections.Specialized.IOrderedDictionary,C1.Web.UI.Controls.C1GridView.C1GridViewRowType,C1.Web.UI.Controls.C1GridView.C1GridViewRowState,System.Boolean)">
            <summary>
            Fills the specified <see cref="T:System.Collections.Specialized.IOrderedDictionary"/> object with values from the specified <see cref="T:System.Web.UI.WebControls.TableCell"/> object.
            </summary>
            <param name="cell">The <see cref="T:System.Web.UI.WebControls.TableCell"/> object that contains the values to retrieve.</param>
            <param name="values">A <see cref="T:System.Collections.Specialized.IOrderedDictionary"/> used to store the values of the specified cell.</param>
            <param name="rowType">One of the <see cref="T:C1.Web.UI.Controls.C1GridView.C1GridViewRowType"/> values.</param>
            <param name="rowState">One of the <see cref="T:C1.Web.UI.Controls.C1GridView.C1GridViewRowState"/> values.</param>
            <param name="includeReadonly">True to include the values of read-only fields; otherwise, false.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1GridView.C1BaseField.ToString">
            <summary>
            Returns a string that represents the current object.
            </summary>
            <returns>A string that represents the current object.</returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1GridView.C1BaseField.InitializeCell(System.Web.UI.WebControls.TableCell,System.Int32,C1.Web.UI.Controls.C1GridView.C1GridViewRowType,C1.Web.UI.Controls.C1GridView.C1GridViewRowState)">
            <summary>
            Initializes the specified <see cref="T:System.Web.UI.WebControls.TableCell"/> object to the specified row type and row state.
            </summary>
            <param name="cell">The <see cref="T:System.Web.UI.WebControls.TableCell"/> to initialize.</param>
            <param name="columnIndex">The zero-based index of the column.</param>
            <param name="rowType">One of the <see cref="T:C1.Web.UI.Controls.C1GridView.C1GridViewRowType"/> values.</param>
            <param name="rowState">One of the <see cref="T:C1.Web.UI.Controls.C1GridView.C1GridViewRowState"/> values.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1GridView.C1BaseField.PrepareCell(System.Web.UI.WebControls.TableCell,System.Int32,C1.Web.UI.Controls.C1GridView.C1GridViewRow,C1.Web.UI.Controls.C1GridView.C1GridViewRowType,C1.Web.UI.Controls.C1GridView.C1GridViewRowState)">
            <summary>
            Helper method called by <see cref="T:C1.Web.UI.Controls.C1GridView.C1GridView"/> control to set up the specified <see cref="T:System.Web.UI.WebControls.TableCell"/> object.
            </summary>
            <param name="cell">The <see cref="T:System.Web.UI.WebControls.TableCell"/> to set up.</param>
            <param name="columnIndex">The zero-based index of the column.</param>
            <param name="row">Row.</param>
            <param name="rowType">One of the <see cref="T:C1.Web.UI.Controls.C1GridView.C1GridViewRowType"/> values.</param>
            <param name="rowState">One of the <see cref="T:C1.Web.UI.Controls.C1GridView.C1GridViewRowState"/> values.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1GridView.C1BaseField.PrepareHeaderCell(System.Web.UI.WebControls.TableCell,System.Int32)">
            <summary>
            Helper method called by <see cref="T:C1.Web.UI.Controls.C1GridView.C1GridView"/> control to set up the specified <see cref="T:System.Web.UI.WebControls.TableCell"/> object.
            </summary>
            <param name="cell">The <see cref="T:System.Web.UI.WebControls.TableCell"/> to set up.</param>
            <param name="columnIndex">The zero-based index of the column.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1GridView.C1BaseField.CreateColumn">
            <summary>
            Creates an empty <see cref="T:C1.Web.UI.Controls.C1GridView.C1BaseField"/>-derived object.
            </summary>
            <returns>An empty <see cref="T:C1.Web.UI.Controls.C1GridView.C1BaseField"/>-derived object.</returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1GridView.C1BaseField.CopyPropertiesFrom(C1.Web.UI.Controls.C1GridView.C1BaseField)">
            <summary>
            Copies properties from the specified <see cref="T:C1.Web.UI.Controls.C1GridView.C1BaseField"/> object.
            </summary>
            <param name="other">The <see cref="T:C1.Web.UI.Controls.C1GridView.C1BaseField"/> to copy the properties from.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1GridView.C1BaseField.Initialize">
            <summary>
            Performs basic initialization.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1GridView.C1BaseField.InitializeHeader(System.Web.UI.WebControls.TableCell)">
            <summary>
            Initializes the specified <see cref="T:System.Web.UI.WebControls.TableCell"/> object.
            </summary>
            <param name="cell">Cell.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1GridView.C1BaseField.OnColumnChanged">
            <summary>
            Raises the <see cref="E:C1.Web.UI.Controls.C1GridView.C1BaseField.ColumnChanged"/> event.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1GridView.C1BaseField.SetDirty">
            <summary>
            Marks the state of the <see cref="T:C1.Web.UI.Controls.C1GridView.C1BaseField"/> object as having been changed.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1GridView.C1BaseField.GetDefaultScrollWidth">
            <summary>
            Gets a value that is used as a default width for a column if scrolling is enabled and
            column's width is not explicitly set.
            </summary>
            <returns>Default column width in scrolling mode.</returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1GridView.C1BaseField.LoadViewState(System.Object)">
            <summary>
            Restores the previously saved view state of the <see cref="T:C1.Web.UI.Controls.C1GridView.C1BaseField"/> object.
            </summary>
            <param name="savedState">An object that represents the <see cref="T:C1.Web.UI.Controls.C1GridView.C1BaseField"/> state to restore.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1GridView.C1BaseField.SaveViewState">
            <summary>
            Saves the changes to the <see cref="T:C1.Web.UI.Controls.C1GridView.C1BaseField"/> object since the time the page was posted back to the server.
            </summary>
            <returns>The object that contains the changes to the view state of the <see cref="T:C1.Web.UI.Controls.C1GridView.C1BaseField"/>.</returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1GridView.C1BaseField.TrackViewState">
            <summary>
            Causes the <see cref="T:C1.Web.UI.Controls.C1GridView.C1BaseField"/> object to track changes to its state so that it can be persisted across requests.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1GridView.C1BaseField.LoadUnviewstatedData(System.Object)">
            <summary>
            
            </summary>
            <param name="data"></param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1GridView.C1BaseField.SaveUnviewstatedData">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1GridView.C1BaseField.RestoreStateFromJson(System.Object)">
            <summary>
            Restores the previously saved state of the <see cref="T:C1.Web.UI.Controls.C1GridView.C1BaseField"/> object from JSON.
            </summary>
            <param name="state">An object that represents the <see cref="T:C1.Web.UI.Controls.C1GridView.C1BaseField"/> object state to restore.</param>
        </member>
        <member name="P:C1.Web.UI.Controls.C1GridView.C1BaseField.AccessibleHeaderText">
            <summary>
            Gets or sets text that is rendered as the <b>abbr</b> attribute of the column's header cell.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1GridView.C1BaseField.AllowAutoSize">
            <summary>
            Enables or disables autosize functionality for particular column.
            </summary>
            <value>
            Default value is true.
            </value>
        </member>
        <member name="P:C1.Web.UI.Controls.C1GridView.C1BaseField.AllowMove">
            <summary>
            Determines whether column can be moved on the client.
            </summary>
            <value>
            The default value is True.
            </value>
        </member>
        <member name="P:C1.Web.UI.Controls.C1GridView.C1BaseField.AllowSizing">
            <summary>
            Determines whether columns can be sized on the client.
            </summary>
            <value>
            The default value is True.
            </value>
        </member>
        <member name="P:C1.Web.UI.Controls.C1GridView.C1BaseField.ClientType">
            <summary>
            Gets a string identifying CSOM type of an object.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1GridView.C1BaseField.ControlStyle">
            <summary>
            Gets the style of any Web server controls contained by the <see cref="T:C1.Web.UI.Controls.C1GridView.C1BaseField"/> object.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1GridView.C1BaseField.Fixed">
            <summary>
            Determines whether a column is fixed to the left of the grid when it is scrolled horizontally.
            </summary>
            <remarks>
            <para>
            The default value of this property is false. When this property is set to true for a column,
            all columns to the left are also fixed. This property is usually used with the 
            <see cref="P:C1.Web.UI.Controls.C1GridView.C1GridView.ScrollSettings"/> property.
            </para>
            <para>
            This property is ignored under group mode.
            </para>
            <para>
            If child column of some <see cref="T:C1.Web.UI.Controls.C1GridView.C1Band"/> is fixed then the top
            and right-most column of the root <see cref="T:C1.Web.UI.Controls.C1GridView.C1Band"/> contained current column will be fixed.
            </para>
            </remarks>
        </member>
        <member name="P:C1.Web.UI.Controls.C1GridView.C1BaseField.FooterStyle">
            <summary>
            Gets the style properties of the column footer.
            </summary>
            <remarks>
            This property is used to provide a custom style for the footer section of the column.
            </remarks>		
        </member>
        <member name="P:C1.Web.UI.Controls.C1GridView.C1BaseField.FooterText">
            <summary>
            Gets or sets the text of the footer.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1GridView.C1BaseField.HeaderImageUrl">
            <summary>
            Gets or sets the location of the header image.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1GridView.C1BaseField.HeaderStyle">
            <summary>
            Gets the style properties of the column header.
            </summary>
            <remarks>
            This property is used to provide a custom style for the header section of the column.
            </remarks>
        </member>
        <member name="P:C1.Web.UI.Controls.C1GridView.C1BaseField.HeaderText">
            <summary>
            Gets or sets the header text.
            </summary>	
        </member>
        <member name="P:C1.Web.UI.Controls.C1GridView.C1BaseField.HeaderTextJson">
            <summary>
            Infrastructure.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1GridView.C1BaseField.ItemStyle">
            <summary>
            Gets the style properties of the item.
            </summary>
            <remarks>
            This property is used to provide a custom style for items of the <see cref="T:C1.Web.UI.Controls.C1GridView.C1GridView"/> component.
            </remarks>		
        </member>
        <member name="P:C1.Web.UI.Controls.C1GridView.C1BaseField.ParentVisibility">
            <summary>
            
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1GridView.C1BaseField.Visible">
            <summary>
            Gets or sets a value indicating whether the column is visible within the displayed area of the <see cref="T:C1.Web.UI.Controls.C1GridView.C1GridView"/> control.
            </summary>
            <value>
            True if the column is visible in the <see cref="T:C1.Web.UI.Controls.C1GridView.C1GridView"/> component; otherwise, False.
            The default value is True.
            </value>
        </member>
        <member name="P:C1.Web.UI.Controls.C1GridView.C1BaseField.DesignMode">
            <summary>
            Gets a value indicating whether a control is being used on a design surface.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1GridView.C1BaseField.GridOwner">
            <summary>
            Gets column's owner.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1GridView.C1BaseField.TravIdx">
            <summary>
            
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1GridView.C1BaseField.ColTagIdx">
            <summary>
            
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1GridView.C1BaseField.HasUnviewstatedData">
            <summary>
            
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1GridView.C1BaseField.InnerState">
            <summary>
            Storage used for persisting elements of object state which can't be
            serialized to JSON using <see cref="T:C1.Web.UI.JsonAttribute"/>.
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1GridView.C1BaseField.OTIComparer">
            <summary>
            Compares columns by their OriginalTraverseIndex value.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1GridView.C1Band.#ctor">
            <summary>
            Constructor. Creates a new instance of the <see cref="T:C1.Web.UI.Controls.C1GridView.C1Band"/> class.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1GridView.C1Band.ToString">
            <summary>
            Returns a string that represents the current object.
            </summary>
            <returns>A string that represents the current object.</returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1GridView.C1Band.CreateColumn">
            <summary>
            Creates an empty <see cref="T:C1.Web.UI.Controls.C1GridView.C1Band"/> object.
            </summary>
            <returns>An empty <see cref="T:C1.Web.UI.Controls.C1GridView.C1Band"/> object.</returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1GridView.C1Band.CopyPropertiesFrom(C1.Web.UI.Controls.C1GridView.C1BaseField)">
            <summary>
            Copies properties from the specified <see cref="T:C1.Web.UI.Controls.C1GridView.C1BaseField"/> object.
            </summary>
            <param name="other">The <see cref="T:C1.Web.UI.Controls.C1GridView.C1BaseField"/> to copy the properties from.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1GridView.C1Band.SetDirty">
            <summary>
            Marks the state of the <see cref="T:C1.Web.UI.Controls.C1GridView.C1Band"/> object as having been changed.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1GridView.C1Band.LoadViewState(System.Object)">
            <summary>
            Restores the previously saved view state of the <see cref="T:C1.Web.UI.Controls.C1GridView.C1Band"/> object.
            </summary>
            <param name="savedState">An object that represents the <see cref="T:C1.Web.UI.Controls.C1GridView.C1Band"/> state to restore.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1GridView.C1Band.SaveViewState">
            <summary>
            Saves the changes to the <see cref="T:C1.Web.UI.Controls.C1GridView.C1Band"/> object since the time the page was posted back to the server.
            </summary>
            <returns>
            The object that contains the changes to the view state of the <see cref="T:C1.Web.UI.Controls.C1GridView.C1Band"/>.
            </returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1GridView.C1Band.TrackViewState">
            <summary>
            Causes the <see cref="T:C1.Web.UI.Controls.C1GridView.C1Band"/> object to track changes to its state so that it can be persisted across requests.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1GridView.C1Band.RestoreStateFromJson(System.Object)">
            <summary>
            Restores the previously saved state of the <see cref="T:C1.Web.UI.Controls.C1GridView.C1Band"/> object from JSON.
            </summary>
            <param name="state">An object that represents the <see cref="T:C1.Web.UI.Controls.C1GridView.C1Band"/> object state to restore.</param>
        </member>
        <member name="P:C1.Web.UI.Controls.C1GridView.C1Band.ChildControlStyle">
            <summary>
            Gets the style properties to be merged with <see cref="P:C1.Web.UI.Controls.C1GridView.C1BaseField.ControlStyle"/> of the child columns.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1GridView.C1Band.ChildFilterStyle">
            <summary>
            Gets the style properties to be merged with <see cref="P:C1.Web.UI.Controls.C1GridView.C1BoundField.FilterStyle"/> of the child columns.
            </summary>
            <remarks>
            This property is used to provide a custom style for the filter section of the child columns.
            </remarks>
        </member>
        <member name="P:C1.Web.UI.Controls.C1GridView.C1Band.ChildFooterStyle">
            <summary>
            Gets the style properties to be merged with <see cref="P:C1.Web.UI.Controls.C1GridView.C1BaseField.FooterStyle"/> of the child columns.
            </summary>
            <remarks>
            This property is used to provide a custom style for the footer section of the child columns.
            </remarks>
        </member>
        <member name="P:C1.Web.UI.Controls.C1GridView.C1Band.ChildHeaderStyle">
            <summary>
            Gets the style properties to be merged with <see cref="P:C1.Web.UI.Controls.C1GridView.C1BaseField.HeaderStyle"/> of the child columns.
            </summary>
            <remarks>
            This property is used to provide a custom style for the header section of the child columns.
            </remarks>
        </member>
        <member name="P:C1.Web.UI.Controls.C1GridView.C1Band.ChildItemStyle">
            <summary>
            Gets the style properties to be merged with <see cref="P:C1.Web.UI.Controls.C1GridView.C1BaseField.ItemStyle"/> of the child columns.
            </summary>
            <remarks>
            This property is used to provide a custom style for the items of the child columns.
            </remarks>
        </member>
        <member name="P:C1.Web.UI.Controls.C1GridView.C1Band.Columns">
            <summary>
            Gets a collection of objects representing the columns of the <see cref="T:C1.Web.UI.Controls.C1GridView.C1Band"/> class.
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1GridView.C1BaseButtonField">
            <summary>
            Base class for all Button based columns.
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1GridView.C1Field">
            <summary>
            This is the base class for all columns.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1GridView.C1Field.#ctor">
            <summary>
            Constructor. Creates a new instance of the <see cref="T:C1.Web.UI.Controls.C1GridView.C1Field"/> class.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1GridView.C1Field.CopyPropertiesFrom(C1.Web.UI.Controls.C1GridView.C1BaseField)">
            <summary>
            Copies properties from the specified <see cref="T:C1.Web.UI.Controls.C1GridView.C1BaseField"/> object.
            </summary>
            <param name="other">The <see cref="T:C1.Web.UI.Controls.C1GridView.C1BaseField"/> to copy the properties from.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1GridView.C1Field.SetDirty">
            <summary>
            Marks the state of the <see cref="T:C1.Web.UI.Controls.C1GridView.C1Field"/> object as having been changed.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1GridView.C1Field.InitializeHeader(System.Web.UI.WebControls.TableCell)">
            <summary>
            Initializes the specified <see cref="T:System.Web.UI.WebControls.TableCell"/> object.
            </summary>
            <param name="cell">Cell.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1GridView.C1Field.PrepareHeaderCell(System.Web.UI.WebControls.TableCell,System.Int32)">
            <summary>
            Helper method called by <see cref="T:C1.Web.UI.Controls.C1GridView.C1GridView"/> control to set up the specified <see cref="T:System.Web.UI.WebControls.TableCell"/> object.
            </summary>
            <param name="cell">The <see cref="T:System.Web.UI.WebControls.TableCell"/> to set up.</param>
            <param name="columnIndex">The zero-based index of the column.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1GridView.C1Field.LoadViewState(System.Object)">
            <summary>
            Restores the previously saved view state of the <see cref="T:C1.Web.UI.Controls.C1GridView.C1Field"/> object.
            </summary>
            <param name="savedState">An object that represents the <see cref="T:C1.Web.UI.Controls.C1GridView.C1Field"/> state to restore.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1GridView.C1Field.SaveViewState">
            <summary>
            Saves the changes to the <see cref="T:C1.Web.UI.Controls.C1GridView.C1Field"/> object since the time the page was posted back to the server.
            </summary>
            <returns>The object that contains the changes to the view state of the <see cref="T:C1.Web.UI.Controls.C1GridView.C1Field"/>.</returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1GridView.C1Field.TrackViewState">
            <summary>
            Causes the <see cref="T:C1.Web.UI.Controls.C1GridView.C1Field"/> object to track changes to its state so that it can be persisted across requests.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1GridView.C1Field.RestoreStateFromJson(System.Object)">
            <summary>
            Restores the previously saved state of the <see cref="T:C1.Web.UI.Controls.C1GridView.C1Field"/> object from JSON.
            </summary>
            <param name="state">An object that represents the <see cref="T:C1.Web.UI.Controls.C1GridView.C1Field"/> object state to restore.</param>
        </member>
        <member name="P:C1.Web.UI.Controls.C1GridView.C1Field.AllowGroup">
            <summary>
            Used to prevent client-side grouping of a column in a grouped grid.
            </summary>
            <value>
            When this property is set to True (default), you can drag columns to the grouping area.
            </value>
        </member>
        <member name="P:C1.Web.UI.Controls.C1GridView.C1Field.GroupInfo">
            <summary>
            Gets a <see cref="P:C1.Web.UI.Controls.C1GridView.C1Field.GroupInfo"/> object that determines whether a column should be grouped on
            and how the group header and footer rows should be formatted and displayed.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1GridView.C1Field.Aggregate">
            <summary>
            Causes the grid to calculate aggregate values on the column and place them in the group header and footer rows. If the grid does not contain any groups, setting the Aggregate property has no effect.
            </summary>
            <value>
            One of the <see cref="T:C1.Web.UI.Controls.C1GridView.AggregateEnum"/> values. The default value is <see cref="F:C1.Web.UI.Controls.C1GridView.AggregateEnum.None"/>.
            </value>
            <remarks>
            The aggregate value displayed in the group header/footer rows is formatted using the column's
            <see cref="P:C1.Web.UI.Controls.C1GridView.C1BoundField.DataFormatString"/> property, except for Counts which are
            displayed as integers without decimals.
            </remarks>
        </member>
        <member name="P:C1.Web.UI.Controls.C1GridView.C1Field.RowMerge">
            <summary>
            Determines whether rows are merged.
            </summary>
            <value>
            One of the <see cref="P:C1.Web.UI.Controls.C1GridView.C1Field.RowMerge"/> values.
            The default value is <see cref="F:C1.Web.UI.Controls.C1GridView.RowMerge.None"/>.
            </value>
        </member>
        <member name="P:C1.Web.UI.Controls.C1GridView.C1Field.SortDirection">
            <summary>
            Gets the direction of the sort.
            </summary>
            <value>
            One of the <see cref="T:C1.Web.UI.Controls.C1GridView.C1SortDirection"/> values. The default value is <see cref="F:C1.Web.UI.Controls.C1GridView.C1SortDirection.NotSet"/>.
            </value> 
            <remarks>
            This property provides a convenient method of tracking the column sort state when the grid is sorted.
            </remarks>
        </member>
        <member name="P:C1.Web.UI.Controls.C1GridView.C1Field.SortExpression">
            <summary>
            Gets or sets the name of the field or expression to pass to the OnSortCommand method when a column is
            selected for sorting.
            </summary>
            <remarks>
            This property does not bind the column to a field in data source. To bind a column to a field,
            see the documentation for the specific column type.
            </remarks>
        </member>
        <member name="P:C1.Web.UI.Controls.C1GridView.C1Field.GroupPos">
            <summary>
            Infrastructure. Do not use.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1GridView.C1Field.InnerState">
            <summary>
            Storage used for persisting elements of object state which can't be
            serialized to JSON using <see cref="T:C1.Web.UI.JsonAttribute"/>.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1GridView.C1BaseButtonField.#ctor">
            <summary>
            Constructor. Initializes a new instance of the <see cref="T:C1.Web.UI.Controls.C1GridView.C1BaseButtonField"/> class. 
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1GridView.C1BaseButtonField.CopyPropertiesFrom(C1.Web.UI.Controls.C1GridView.C1BaseField)">
            <summary>
            Copies properties from the specified <see cref="T:C1.Web.UI.Controls.C1GridView.C1BaseField"/> object.
            </summary>
            <param name="other">The <see cref="T:C1.Web.UI.Controls.C1GridView.C1BaseField"/> to copy the properties from.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1GridView.C1BaseButtonField.GetContentControl(System.Int32,System.String,System.String,System.Boolean,System.String,System.String,System.Boolean)">
            <summary>
            Creates and returns the control that will be contained in the cells of column, based on
            parameters and <see cref="P:C1.Web.UI.Controls.C1GridView.C1BaseButtonField.ButtonType"/> value.
            </summary>
            <param name="rowIndex">Row index.</param>
            <param name="command">Command name.</param>
            <param name="text">Text.</param>
            <param name="validate">Indicates if validation is needed.</param>
            <param name="validationGroup">Validation group.</param>
            <param name="imageUrl">Image URL.</param>
            <param name="useCallback">Indicates if callback should be performed.</param>
            <returns>Control that will be placed to the cells of a column.</returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1GridView.C1BaseButtonField.RestoreStateFromJson(System.Object)">
            <summary>
            Restores the previously saved state of the <see cref="T:C1.Web.UI.Controls.C1GridView.C1BaseButtonField"/> object from JSON.
            </summary>
            <param name="state">An object that represents the <see cref="T:C1.Web.UI.Controls.C1GridView.C1BaseButtonField"/> object state to restore.</param>
        </member>
        <member name="P:C1.Web.UI.Controls.C1GridView.C1BaseButtonField.CausesValidation">
            <summary>
            Gets or sets a value indicating whether validation is performed when a button in a column is clicked.
            </summary>
            <returns>
            True to perform validation when a button in a column is clicked, otherwise false.
            </returns>
            <value>
            The default value is false.
            </value>
        </member>
        <member name="P:C1.Web.UI.Controls.C1GridView.C1BaseButtonField.ButtonType">
            <summary>
            Gets or sets the type of the button in the column.
            </summary>
            <value>
            One of the <see cref="P:C1.Web.UI.Controls.C1GridView.C1BaseButtonField.ButtonType"/> values. The default value is <see cref="F:System.Web.UI.WebControls.ButtonType.Link"/>.
            </value>
            <remarks>
            This property is used to specify whether buttons in the column display as push buttons or hyperlinks.
            </remarks>	
        </member>
        <member name="P:C1.Web.UI.Controls.C1GridView.C1BaseButtonField.ValidationGroup">
            <summary>Gets or sets the name of the group of validation controls to validate when a button in a column is clicked.</summary>
            <returns>
            The name of the validation group to validate when a button in a column is clicked.
            </returns>
            <value>
            The default value is an empty string.
            </value>
        </member>
        <member name="T:C1.Web.UI.Controls.C1GridView.C1BoundField">
            <summary>
            A C1BoundField is bound to a field in a data source.
            Inherits from <see cref="T:C1.Web.UI.Controls.C1GridView.C1Field"/>.
            </summary>	
        </member>
        <member name="M:C1.Web.UI.Controls.C1GridView.C1BoundField.#ctor">
            <summary>
            Constructor. Initializes a new instance of the <see cref="T:C1.Web.UI.Controls.C1GridView.C1BoundField"/> class.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1GridView.C1BoundField.ToString">
            <summary>
            Returns a string that represents the current object.
            </summary>
            <returns>A string that represents the current object.</returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1GridView.C1BoundField.ExtractValuesFromCell(System.Web.UI.WebControls.TableCell,System.Collections.Specialized.IOrderedDictionary,C1.Web.UI.Controls.C1GridView.C1GridViewRowType,C1.Web.UI.Controls.C1GridView.C1GridViewRowState,System.Boolean)">
            <summary>
            Fills the specified <see cref="T:System.Collections.Specialized.IOrderedDictionary"/> object with values from the specified <see cref="T:System.Web.UI.WebControls.TableCell"/> object.
            </summary>
            <param name="cell">The <see cref="T:System.Web.UI.WebControls.TableCell"/> object that contains the values to retrieve.</param>
            <param name="values">A <see cref="T:System.Collections.Specialized.IOrderedDictionary"/> used to store the values of the specified cell.</param>
            <param name="rowType">One of the <see cref="T:C1.Web.UI.Controls.C1GridView.C1GridViewRowType"/> values.</param>
            <param name="rowState">One of the <see cref="T:C1.Web.UI.Controls.C1GridView.C1GridViewRowState"/> values.</param>
            <param name="includeReadonly">True to include the values of read-only fields; otherwise, false.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1GridView.C1BoundField.CreateColumn">
            <summary>
            Creates an empty <see cref="T:C1.Web.UI.Controls.C1GridView.C1BoundField"/> object.
            </summary>
            <returns>An empty <see cref="T:C1.Web.UI.Controls.C1GridView.C1BoundField"/> object.</returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1GridView.C1BoundField.CopyPropertiesFrom(C1.Web.UI.Controls.C1GridView.C1BaseField)">
            <summary>
            Copies properties from the specified <see cref="T:C1.Web.UI.Controls.C1GridView.C1BaseField"/> object.
            </summary>
            <param name="other">The <see cref="T:C1.Web.UI.Controls.C1GridView.C1BaseField"/> to copy the properties from.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1GridView.C1BoundField.GetDesignTimeValue(C1.Web.UI.Controls.C1GridView.C1GridViewRowState)">
            <summary>
            Retrieves the value used for a field's value when rendering the <see cref="T:C1.Web.UI.Controls.C1GridView.C1BoundField"/> object in a designer.
            </summary>
            <param name="rowState">One of the <see cref="T:C1.Web.UI.Controls.C1GridView.C1GridViewRowState"/> values.</param>
            <returns>The value to display in the designer as the field's value.</returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1GridView.C1BoundField.Initialize">
            <summary>
            Initializes the <see cref="T:C1.Web.UI.Controls.C1GridView.C1BoundField"/> object.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1GridView.C1BoundField.InitializeCell(System.Web.UI.WebControls.TableCell,System.Int32,C1.Web.UI.Controls.C1GridView.C1GridViewRowType,C1.Web.UI.Controls.C1GridView.C1GridViewRowState)">
            <summary>
            Initializes the specified <see cref="T:System.Web.UI.WebControls.TableCell"/> object to the specified row type and row state.
            </summary>
            <param name="cell">The <see cref="T:System.Web.UI.WebControls.TableCell"/> to initialize.</param>
            <param name="columnIndex">The zero-based index of the column.</param>
            <param name="rowType">One of the <see cref="T:C1.Web.UI.Controls.C1GridView.C1GridViewRowType"/> values.</param>
            <param name="rowState">One of the <see cref="T:C1.Web.UI.Controls.C1GridView.C1GridViewRowState"/> values.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1GridView.C1BoundField.InitializeDataCell(System.Web.UI.WebControls.TableCell,System.Int32,C1.Web.UI.Controls.C1GridView.C1GridViewRowType,C1.Web.UI.Controls.C1GridView.C1GridViewRowState)">
            <summary>
            Initializes the specified <see cref="T:System.Web.UI.WebControls.TableCell"/> object to the specified row type and row state.
            </summary>
            <param name="cell">The <see cref="T:System.Web.UI.WebControls.TableCell"/> to initialize.</param>
            <param name="columnIndex">The zero-based index of the column.</param>
            <param name="rowType">One of the <see cref="T:C1.Web.UI.Controls.C1GridView.C1GridViewRowType"/> values.</param>
            <param name="rowState">One of the <see cref="T:C1.Web.UI.Controls.C1GridView.C1GridViewRowState"/> values.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1GridView.C1BoundField.InitializeFilterCell(System.Web.UI.WebControls.TableCell,System.Int32)">
            <summary>
            Initializes the specified <see cref="T:System.Web.UI.WebControls.TableCell"/> object.
            </summary>
            <param name="cell">The <see cref="T:System.Web.UI.WebControls.TableCell"/> to initialize.</param>
            <param name="columnIndex">The zero-based index of the column.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1GridView.C1BoundField.FormatDataValue(System.Object,System.Boolean)">
            <summary>
            Formats the specified field value for a cell in the <see cref="T:C1.Web.UI.Controls.C1GridView.C1BoundField"/> object. 
            </summary>
            <param name="dataValue">The field value to format.</param>
            <param name="encode">True to encode the value; otherwise, false.</param>
            <returns>The field value converted to the format specified by<see cref="P:C1.Web.UI.Controls.C1GridView.C1BoundField.DataFormatString"/>.</returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1GridView.C1BoundField.GetFilterValue">
            <summary>
            Gets value of the filter formatted according <see cref="P:C1.Web.UI.Controls.C1GridView.C1BoundField.FilterOperator"/>.
            </summary>
            <returns>Value of the filter formatted according <see cref="P:C1.Web.UI.Controls.C1GridView.C1BoundField.FilterOperator"/>.</returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1GridView.C1BoundField.GetValue(C1.Web.UI.Controls.C1GridView.C1GridViewRow)">
            <summary>
            Retrieves the value of the field bound to the <see cref="T:C1.Web.UI.Controls.C1GridView.C1BoundField"/> object.
            </summary>
            <param name="row">The container for the field value.</param>
            <returns>The value of the field bound to the <see cref="T:C1.Web.UI.Controls.C1GridView.C1BoundField"/>.</returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1GridView.C1BoundField.SetDirty">
            <summary>
            Marks the state of the <see cref="T:C1.Web.UI.Controls.C1GridView.C1BoundField"/> object as having been changed.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1GridView.C1BoundField.LoadViewState(System.Object)">
            <summary>
            Restores the previously saved view state of the <see cref="T:C1.Web.UI.Controls.C1GridView.C1BoundField"/> object.
            </summary>
            <param name="savedState">An object that represents the <see cref="T:C1.Web.UI.Controls.C1GridView.C1BoundField"/> state to restore.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1GridView.C1BoundField.SaveViewState">
            <summary>
            Saves the changes to the <see cref="T:C1.Web.UI.Controls.C1GridView.C1BoundField"/> object since the time the page was posted back to the server.
            </summary>
            <returns>The object that contains the changes to the view state of the <see cref="T:C1.Web.UI.Controls.C1GridView.C1BoundField"/>.</returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1GridView.C1BoundField.TrackViewState">
            <summary>
            Causes the <see cref="T:C1.Web.UI.Controls.C1GridView.C1BoundField"/> object to track changes to its state so that it can be persisted across requests.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1GridView.C1BoundField.RestoreStateFromJson(System.Object)">
            <summary>
            Restores the previously saved state of the <see cref="T:C1.Web.UI.Controls.C1GridView.C1BoundField"/> object from JSON.
            </summary>
            <param name="state">An object that represents the <see cref="T:C1.Web.UI.Controls.C1GridView.C1BoundField"/> object state to restore.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1GridView.C1BoundField.OnDataBindField(System.Object,System.EventArgs)">
            <summary>
            Binds the value of a field to the <see cref="T:C1.Web.UI.Controls.C1GridView.C1BoundField"/> object.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">An <see cref="T:System.EventArgs"/> that contains the event data.</param>
        </member>
        <member name="P:C1.Web.UI.Controls.C1GridView.C1BoundField.ApplyFormatInEditMode">
            <summary>
            Gets or sets a value indicating whether the formatting string specified by the <see cref="P:C1.Web.UI.Controls.C1GridView.C1BoundField.DataFormatString"/>
            property is applied to field values when the data-bound control that contains the <see cref="T:C1.Web.UI.Controls.C1GridView.C1BoundField"/> object is in edit mode.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1GridView.C1BoundField.ConvertEmptyStringToNull">
            <summary>
            Gets or sets a value indicating whether empty string ("") values are converted to null when the field values are retrieved from the data source.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1GridView.C1BoundField.DataField">
            <summary>
            Gets or sets the name of the field in the database table to which a grid column is bound.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1GridView.C1BoundField.DataFormatString">
            <summary>
            Gets or sets the string that specifies the display format for items in the column.
            </summary>
            <value>
            This property is used to provide a custom format for the items in the column.
            </value> 
            <remarks>
            <para>
            The data format string consists of two parts, separated by a colon, in the form {A:Bxx}.
            For example, the formatting string, {0:D2}, would format the cell to display a number with
            two decimal places.
            </para>
            <para>
            Note: The entire string must be enclosed in curly braces to denote that it is a format string and
            not a literal string. Any text outside the curly braces is displayed as literal text.
            </para>
            <para>
            The value before the colon (A in the general example) specifies the parameter index in a zero-based
            list of parameters.
            </para>
            <para>
            Note: This value can only be set to 0 because there is only one value in each cell.
            </para>
            <para>
            The character after the colon (B in the general example) specifies the format to display the value in.
            The following table lists the common formats.
            </para>
            <para>
            <ul>
            <li>C - Displays numeric values in currency format.</li>
            <li>D - Displays numeric values in decimal format.</li>
            <li>E - Displays numeric values in scientific (exponential) format.</li>
            <li>F - Displays numeric values in fixed format.</li>
            <li>G - Displays numeric values in general format.</li>
            <li>N - Displays numeric values in number format.</li>
            <li>X - Displays numeric values in hexadecimal format.</li>
            </ul>
            </para>
            <para>
            Note: The format character is not case-sensitive, except for X, which displays the hexadecimal
            characters in the case specified.
            </para>
            <para>
            The value after the format character (xx in the general example) specifies the number of
            significant digits or decimal places to display the value in.
            </para>
            </remarks>
        </member>
        <member name="P:C1.Web.UI.Controls.C1GridView.C1BoundField.FilterCustomOperator">
            <summary>
            Gets or sets value that will be used as filter operator when the <see cref="P:C1.Web.UI.Controls.C1GridView.C1BoundField.FilterOperator"/> property
            is equal to the <see cref="F:C1.Web.UI.Controls.C1GridView.FilterOperator.Custom"/> value.
            </summary>
            <value>
            The default value is an empty string (""), which indicates that this property is not set.
            </value>
            <remarks>
            The string can be any literal string and can contain two placeholders:
            <see cref="P:C1.Web.UI.Controls.C1GridView.C1BoundField.DataField"/> name and current <see cref="P:C1.Web.UI.Controls.C1GridView.C1BoundField.FilterValue"/> value.
            </remarks>
            <example>
            "[{0}] LIKE '{1}*'"
            </example>
        </member>
        <member name="P:C1.Web.UI.Controls.C1GridView.C1BoundField.FilterOperator">
            <summary>
            Gets or sets filter operator used for filtering.
            </summary>
            <value>
            One of the <see cref="T:C1.Web.UI.Controls.C1GridView.FilterOperator"/> values.
            The default value is <see cref="F:C1.Web.UI.Controls.C1GridView.FilterOperator.Contains"/>.
            </value>
        </member>
        <member name="P:C1.Web.UI.Controls.C1GridView.C1BoundField.FilterStyle">
            <summary>
            Gets the style properties of the filter item.
            </summary>
            <remarks>
            This property is used to provide a custom style for the filter item of the <see cref="T:C1.Web.UI.Controls.C1GridView.C1GridView"/> control.
            </remarks>		
        </member>
        <member name="P:C1.Web.UI.Controls.C1GridView.C1BoundField.FilterValue">
            <summary>
            Gets or sets a value of the currently applied filter.   
            </summary>
            <value>
            The default value is an empty string (""), which indicates that this property is not set.
            When filtering is done this property is automatically updated with the value inputted by user
            to edit box of current column in filter row.
            </value>
        </member>
        <member name="P:C1.Web.UI.Controls.C1GridView.C1BoundField.HtmlEncode">
            <summary>
            Gets or sets a value indicating whether field values are HTML-encoded before they are displayed in a <see cref="T:C1.Web.UI.Controls.C1GridView.C1BoundField"/> object.
            </summary>
            <value>
            True if field values are HTML-encoded before they are displayed in a <see cref="T:C1.Web.UI.Controls.C1GridView.C1BoundField"/>  object; otherwise, false.
            The default value is true.
            </value>
        </member>
        <member name="P:C1.Web.UI.Controls.C1GridView.C1BoundField.HtmlEncodeFormatString">
            <summary>
            Gets or sets a value that indicates whether formatted text should be HTML encoded when it is displayed.
            </summary>
            <value>
            True if the text should be HTML-encoded; otherwise, false. The default value is true.
            </value>
        </member>
        <member name="P:C1.Web.UI.Controls.C1GridView.C1BoundField.NullDisplayText">
            <summary>
            Gets or sets the caption displayed for a field when the field's value is null.
            </summary>
            <value>
            The caption displayed for a field when the field's value is null.
            The default value is an empty string (""), which indicates that this property is not set.
            </value>
        </member>
        <member name="P:C1.Web.UI.Controls.C1GridView.C1BoundField.ValueList">
            <summary>
            Gets or sets the object that implements the IDictionary interface used for textual substitution.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1GridView.C1BoundField.ReadOnly">
            <summary>
            Determines whether the items in the bound column can be edited.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1GridView.C1BoundField.ShowFilter">
            <summary>
            Gets or sets value indicating whether filter text box will be shown in the filter row of the
            <see cref="T:C1.Web.UI.Controls.C1GridView.C1GridView"/> control or not.
            </summary>
            <value>
            The default value is true.
            </value>
        </member>
        <member name="P:C1.Web.UI.Controls.C1GridView.C1BoundField.FilterControl">
            <summary>
            Gets the filter control object.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1GridView.C1BoundField.FCClientID">
            <summary>
            Gets the filter control's client ID which will be generated by ASP.NET automatically.
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1GridView.C1ButtonField">
            <summary>
            A C1ButtonField displays a command button for each item.
            Inherits from <see cref="T:C1.Web.UI.Controls.C1GridView.C1BaseButtonField"/>.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1GridView.C1ButtonField.#ctor">
            <summary>
            Constructor. Initializes a new instance of the <see cref="T:C1.Web.UI.Controls.C1GridView.C1ButtonField"/> class.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1GridView.C1ButtonField.CreateColumn">
            <summary>
            Creates an empty <see cref="T:C1.Web.UI.Controls.C1GridView.C1ButtonField"/> object.
            </summary>
            <returns>An empty <see cref="T:C1.Web.UI.Controls.C1GridView.C1ButtonField"/> object.</returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1GridView.C1ButtonField.CopyPropertiesFrom(C1.Web.UI.Controls.C1GridView.C1BaseField)">
            <summary>
            Copies properties from the specified <see cref="T:C1.Web.UI.Controls.C1GridView.C1BaseField"/> object.
            </summary>
            <param name="other">The <see cref="T:C1.Web.UI.Controls.C1GridView.C1BaseField"/> to copy the properties from.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1GridView.C1ButtonField.ToString">
            <summary>
            Returns a string that represents the current object.
            </summary>
            <returns>A string that represents the current object.</returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1GridView.C1ButtonField.FormatDataTextValue(System.Object)">
            <summary>
            Formats the specified field value for a cell in the <see cref="T:C1.Web.UI.Controls.C1GridView.C1ButtonField"/> object.
            </summary>
            <param name="dataTextValue">The field value to format.</param>
            <returns>The field value converted to the format specified by the <see cref="P:C1.Web.UI.Controls.C1GridView.C1ButtonField.DataTextFormatString"/> property.</returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1GridView.C1ButtonField.Initialize">
            <summary>
            Initializes the <see cref="T:C1.Web.UI.Controls.C1GridView.C1ButtonField"/> object.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1GridView.C1ButtonField.InitializeCell(System.Web.UI.WebControls.TableCell,System.Int32,C1.Web.UI.Controls.C1GridView.C1GridViewRowType,C1.Web.UI.Controls.C1GridView.C1GridViewRowState)">
            <summary>
            Initializes the specified <see cref="T:System.Web.UI.WebControls.TableCell"/> object to the specified row type and row state.
            </summary>
            <param name="cell">The <see cref="T:System.Web.UI.WebControls.TableCell"/> to initialize.</param>
            <param name="columnIndex">The zero-based index of the column.</param>
            <param name="rowType">One of the <see cref="T:C1.Web.UI.Controls.C1GridView.C1GridViewRowType"/> values.</param>
            <param name="rowState">One of the <see cref="T:C1.Web.UI.Controls.C1GridView.C1GridViewRowState"/> values.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1GridView.C1ButtonField.RestoreStateFromJson(System.Object)">
            <summary>
            Restores the previously saved state of the <see cref="T:C1.Web.UI.Controls.C1GridView.C1ButtonField"/> object from JSON.
            </summary>
            <param name="state">An object that represents the <see cref="T:C1.Web.UI.Controls.C1GridView.C1ButtonField"/> object state to restore.</param>
        </member>
        <member name="P:C1.Web.UI.Controls.C1GridView.C1ButtonField.CommandName">
            <summary>
            Gets or sets the command associated with the button.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1GridView.C1ButtonField.DataTextField">
            <summary>
            Gets or sets the field name from a data source to bind to the <see cref="T:C1.Web.UI.Controls.C1GridView.C1ButtonField"/>.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1GridView.C1ButtonField.DataTextFormatString">
            <summary>
            Gets or sets the field name from a data source to bind to the <see cref="T:C1.Web.UI.Controls.C1GridView.C1ButtonField"/>.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1GridView.C1ButtonField.ImageUrl">
            <summary>
            Gets or sets the image to display for each button in the <see cref="T:C1.Web.UI.Controls.C1GridView.C1ButtonField"/> object.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1GridView.C1ButtonField.Text">
            <summary>
            Gets or sets the static caption that is displayed for each button in the <see cref="T:C1.Web.UI.Controls.C1GridView.C1ButtonField"/> object.
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1GridView.C1CheckBoxField">
            <summary>
            Represents a Boolean column that is displayed as a check box in a <see cref="T:C1.Web.UI.Controls.C1GridView.C1GridView"/> control.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1GridView.C1CheckBoxField.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:C1.Web.UI.Controls.C1GridView.C1CheckBoxField"/> class.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1GridView.C1CheckBoxField.ExtractValuesFromCell(System.Web.UI.WebControls.TableCell,System.Collections.Specialized.IOrderedDictionary,C1.Web.UI.Controls.C1GridView.C1GridViewRowType,C1.Web.UI.Controls.C1GridView.C1GridViewRowState,System.Boolean)">
            <summary>
            Fills the specified <see cref="T:System.Collections.Specialized.IOrderedDictionary"/> object with values from the specified <see cref="T:System.Web.UI.WebControls.TableCell"/> object.
            </summary>
            <param name="cell">The <see cref="T:System.Web.UI.WebControls.TableCell"/> object that contains the values to retrieve.</param>
            <param name="values">A <see cref="T:System.Collections.Specialized.IOrderedDictionary"/> used to store the values of the specified cell.</param>
            <param name="rowType">One of the <see cref="T:C1.Web.UI.Controls.C1GridView.C1GridViewRowType"/> values.</param>
            <param name="rowState">One of the <see cref="T:C1.Web.UI.Controls.C1GridView.C1GridViewRowState"/> values.</param>
            <param name="includeReadonly">True to include the values of read-only fields; otherwise, false.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1GridView.C1CheckBoxField.ToString">
            <summary>
            Returns a string that represents the current <see cref="T:C1.Web.UI.Controls.C1GridView.C1CheckBoxField"/> object.
            </summary>
            <returns>A string that represents the current <see cref="T:C1.Web.UI.Controls.C1GridView.C1CheckBoxField"/> object.</returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1GridView.C1CheckBoxField.CreateColumn">
            <summary>
            Creates an empty <see cref="T:C1.Web.UI.Controls.C1GridView.C1CheckBoxField"/> object.
            </summary>
            <returns>An empty <see cref="T:C1.Web.UI.Controls.C1GridView.C1CheckBoxField"/> object.</returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1GridView.C1CheckBoxField.CopyPropertiesFrom(C1.Web.UI.Controls.C1GridView.C1BaseField)">
            <summary>
            Copies properties from the specified <see cref="T:C1.Web.UI.Controls.C1GridView.C1BaseField"/> object.
            </summary>
            <param name="other">The <see cref="T:C1.Web.UI.Controls.C1GridView.C1BaseField"/> to copy the properties from.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1GridView.C1CheckBoxField.GetDesignTimeValue(C1.Web.UI.Controls.C1GridView.C1GridViewRowState)">
            <summary>
            Retrieves the value used for a field's value when rendering the <see cref="T:C1.Web.UI.Controls.C1GridView.C1CheckBoxField"/> object in a designer.
            </summary>
            <param name="rowState">One of the <see cref="T:C1.Web.UI.Controls.C1GridView.C1GridViewRowState"/> values.</param>
            <returns>The value to display in the designer as the field's value.</returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1GridView.C1CheckBoxField.InitializeDataCell(System.Web.UI.WebControls.TableCell,System.Int32,C1.Web.UI.Controls.C1GridView.C1GridViewRowType,C1.Web.UI.Controls.C1GridView.C1GridViewRowState)">
            <summary>
            Initializes the specified <see cref="T:System.Web.UI.WebControls.TableCell"/> object to the specified row type and row state.
            </summary>
            <param name="cell">The <see cref="T:System.Web.UI.WebControls.TableCell"/> to initialize.</param>
            <param name="columnIndex">The zero-based index of the column.</param>
            <param name="rowType">One of the <see cref="T:C1.Web.UI.Controls.C1GridView.C1GridViewRowType"/> values.</param>
            <param name="rowState">One of the <see cref="T:C1.Web.UI.Controls.C1GridView.C1GridViewRowState"/> values.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1GridView.C1CheckBoxField.OnDataBindField(System.Object,System.EventArgs)">
            <summary>
            Binds the value of a field to the <see cref="T:C1.Web.UI.Controls.C1GridView.C1CheckBoxField"/> object.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">An <see cref="T:System.EventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1GridView.C1CheckBoxField.RestoreStateFromJson(System.Object)">
            <summary>
            Restores the previously saved state of the <see cref="T:C1.Web.UI.Controls.C1GridView.C1CheckBoxField"/> object from JSON.
            </summary>
            <param name="state">An object that represents the <see cref="T:C1.Web.UI.Controls.C1GridView.C1CheckBoxField"/> object state to restore.</param>
        </member>
        <member name="P:C1.Web.UI.Controls.C1GridView.C1CheckBoxField.ApplyFormatInEditMode">
            <summary>
            Overrides the <see cref="P:C1.Web.UI.Controls.C1GridView.C1BoundField.ApplyFormatInEditMode"/> property.
            This property is not supported by the <see cref="T:C1.Web.UI.Controls.C1GridView.C1CheckBoxField"/> class.
            </summary>
            <value>
            False in all cases.
            </value>
        </member>
        <member name="P:C1.Web.UI.Controls.C1GridView.C1CheckBoxField.ConvertEmptyStringToNull">
            <summary>
            Overrides the <see cref="P:C1.Web.UI.Controls.C1GridView.C1CheckBoxField.ConvertEmptyStringToNull"/> property.
            This property is not supported by the <see cref="T:C1.Web.UI.Controls.C1GridView.C1CheckBoxField"/> class.
            </summary>
            <value>
            False in all cases.
            </value>
        </member>
        <member name="P:C1.Web.UI.Controls.C1GridView.C1CheckBoxField.DataField">
            <summary>
            Gets or sets the name of the field in the database table to which a grid column is bound.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1GridView.C1CheckBoxField.DataFormatString">
            <summary>
            Overrides the <see cref="P:C1.Web.UI.Controls.C1GridView.C1BoundField.DataFormatString"/> property.
            This property is not supported by the <see cref="T:C1.Web.UI.Controls.C1GridView.C1CheckBoxField"/> class.
            </summary>
            <value>
            An empty string in all cases.
            </value>
        </member>
        <member name="P:C1.Web.UI.Controls.C1GridView.C1CheckBoxField.HtmlEncode">
            <summary>
            Overrides the <see cref="P:C1.Web.UI.Controls.C1GridView.C1BoundField.HtmlEncode"/> property.
            This property is not supported by the <see cref="T:C1.Web.UI.Controls.C1GridView.C1CheckBoxField"/> class.
            </summary>
            <value>
            False in all cases.
            </value>
        </member>
        <member name="P:C1.Web.UI.Controls.C1GridView.C1CheckBoxField.HtmlEncodeFormatString">
            <summary>
            Overrides the <see cref="P:C1.Web.UI.Controls.C1GridView.C1BoundField.HtmlEncodeFormatString"/> property.
            This property is not supported by the <see cref="T:C1.Web.UI.Controls.C1GridView.C1CheckBoxField"/> class.
            </summary>
            <value>
            False in all cases.
            </value>
        </member>
        <member name="P:C1.Web.UI.Controls.C1GridView.C1CheckBoxField.NullDisplayText">
            <summary>
            Overrides the <see cref="P:C1.Web.UI.Controls.C1GridView.C1BoundField.NullDisplayText"/> property.
            This property is not supported by the <see cref="T:C1.Web.UI.Controls.C1GridView.C1CheckBoxField"/> class.
            </summary>
            <value>
            An empty string in all cases.
            </value>
        </member>
        <member name="P:C1.Web.UI.Controls.C1GridView.C1CheckBoxField.Text">
            <summary>
            Gets or sets the caption to display next to each check box in a <see cref="T:C1.Web.UI.Controls.C1GridView.C1CheckBoxField"/>.
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1GridView.C1CommandField">
            <summary>
            A special column used to display command buttons that perform delete, edit, select or filter operations.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1GridView.C1CommandField.#ctor">
            <summary>
            Constructor. Creates a new instance of the <see cref="T:C1.Web.UI.Controls.C1GridView.C1CommandField"/> class.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1GridView.C1CommandField.CopyPropertiesFrom(C1.Web.UI.Controls.C1GridView.C1BaseField)">
            <summary>
            Copies properties from the specified <see cref="T:C1.Web.UI.Controls.C1GridView.C1BaseField"/> object.
            </summary>
            <param name="other">The <see cref="T:C1.Web.UI.Controls.C1GridView.C1BaseField"/> to copy the properties from.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1GridView.C1CommandField.CreateColumn">
            <summary>
            Creates an empty <see cref="T:C1.Web.UI.Controls.C1GridView.C1CommandField"/> object.
            </summary>
            <returns>An empty <see cref="T:C1.Web.UI.Controls.C1GridView.C1CommandField"/> object.</returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1GridView.C1CommandField.InitializeCell(System.Web.UI.WebControls.TableCell,System.Int32,C1.Web.UI.Controls.C1GridView.C1GridViewRowType,C1.Web.UI.Controls.C1GridView.C1GridViewRowState)">
            <summary>
            Initializes the specified <see cref="T:System.Web.UI.WebControls.TableCell"/> object to the specified row type and row state.
            </summary>
            <param name="cell">The <see cref="T:System.Web.UI.WebControls.TableCell"/> to initialize.</param>
            <param name="columnIndex">The zero-based index of the column.</param>
            <param name="rowType">One of the <see cref="T:C1.Web.UI.Controls.C1GridView.C1GridViewRowType"/> values.</param>
            <param name="rowState">One of the <see cref="T:C1.Web.UI.Controls.C1GridView.C1GridViewRowState"/> values.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1GridView.C1CommandField.ToString">
            <summary>
            Returns a string that represents the current <see cref="T:C1.Web.UI.Controls.C1GridView.C1CommandField"/> object.
            </summary>
            <returns>A string that represents the current <see cref="T:C1.Web.UI.Controls.C1GridView.C1CommandField"/> object.</returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1GridView.C1CommandField.RestoreStateFromJson(System.Object)">
            <summary>
            Restores the previously saved state of the <see cref="T:C1.Web.UI.Controls.C1GridView.C1CommandField"/> object from JSON.
            </summary>
            <param name="state">An object that represents the <see cref="T:C1.Web.UI.Controls.C1GridView.C1CommandField"/> object state to restore.</param>
        </member>
        <member name="P:C1.Web.UI.Controls.C1GridView.C1CommandField.CausesValidation">
            <summary>
            Gets or sets a value indicating whether validation is performed when a button in a column is clicked.
            </summary>
            <returns>
            True to perform validation when a button in a column is clicked, otherwise false.
            </returns>
            <value>
            The default value is true.
            </value>
        </member>
        <member name="P:C1.Web.UI.Controls.C1GridView.C1CommandField.CancelImageUrl">
            <summary>
            Gets or sets the URL to the Cancel button image displayed in a <see cref="T:C1.Web.UI.Controls.C1GridView.C1CommandField"/> field.
            </summary>
            <value>
            The URL to an image to display for the Cancel button in a <see cref="T:C1.Web.UI.Controls.C1GridView.C1CommandField"/>.
            The default value is an empty string (""), which indicates that this property is not set.
            </value>
        </member>
        <member name="P:C1.Web.UI.Controls.C1GridView.C1CommandField.CancelText">
            <summary>
            Gets or sets the Cancel button caption displayed in a <see cref="T:C1.Web.UI.Controls.C1GridView.C1CommandField"/> field.
            </summary>
            <value>
            The caption for the Cancel button in a <see cref="T:C1.Web.UI.Controls.C1GridView.C1CommandField"/>.
            The default value is "Cancel".
            </value>
        </member>
        <member name="P:C1.Web.UI.Controls.C1GridView.C1CommandField.DeleteImageUrl">
            <summary>
            Gets or sets the URL to the Delete button image displayed in a <see cref="T:C1.Web.UI.Controls.C1GridView.C1CommandField"/> field.
            </summary>
            <value>
            The URL to an image to display for the Delete button in a <see cref="T:C1.Web.UI.Controls.C1GridView.C1CommandField"/>.
            The default value is an empty string (""), which indicates that this property is not set.
            </value>
        </member>
        <member name="P:C1.Web.UI.Controls.C1GridView.C1CommandField.DeleteText">
            <summary>
            Gets or sets the Delete button caption displayed in a <see cref="T:C1.Web.UI.Controls.C1GridView.C1CommandField"/> field.
            </summary>
            <value>
            The caption for the Delete button in a <see cref="T:C1.Web.UI.Controls.C1GridView.C1CommandField"/> field.
            The default value is "Delete".
            </value>
        </member>
        <member name="P:C1.Web.UI.Controls.C1GridView.C1CommandField.EditImageUrl">
            <summary>
            Gets or sets the URL to the Edit button image displayed in a <see cref="T:C1.Web.UI.Controls.C1GridView.C1CommandField"/> field.
            </summary>
            <value>
            The URL to an image to display for the Edit button in a <see cref="T:C1.Web.UI.Controls.C1GridView.C1CommandField"/>.
            The default value is an empty string (""), which indicates that this property is not set.
            </value>
        </member>
        <member name="P:C1.Web.UI.Controls.C1GridView.C1CommandField.EditText">
            <summary>
            Gets or sets the Edit button caption displayed in a <see cref="T:C1.Web.UI.Controls.C1GridView.C1CommandField"/> field.
            </summary>
            <value>
            The caption for the Edit button in a <see cref="T:C1.Web.UI.Controls.C1GridView.C1CommandField"/>.
            The default value is "Edit".
            </value>
        </member>
        <member name="P:C1.Web.UI.Controls.C1GridView.C1CommandField.FilterText">
            <summary>
            Gets or sets the Filter button caption displayed in a <see cref="T:C1.Web.UI.Controls.C1GridView.C1CommandField"/> field.
            </summary>
            <value>
            The caption for the Filter button in a <see cref="T:C1.Web.UI.Controls.C1GridView.C1CommandField"/>.
            The default value is "Filter".
            </value>
        </member>
        <member name="P:C1.Web.UI.Controls.C1GridView.C1CommandField.FilterImageUrl">
            <summary>
            Gets or sets the URL to the Filter button image displayed in a <see cref="T:C1.Web.UI.Controls.C1GridView.C1CommandField"/> field.
            </summary>
            <value>
            The URL to an image to display for the Filter button in a <see cref="T:C1.Web.UI.Controls.C1GridView.C1CommandField"/>.
            The default value is an empty string (""), which indicates that this property is not set.
            </value>
        </member>
        <member name="P:C1.Web.UI.Controls.C1GridView.C1CommandField.SelectImageUrl">
            <summary>
            Gets or sets the URL to the Select button image displayed in a <see cref="T:C1.Web.UI.Controls.C1GridView.C1CommandField"/> field.
            </summary>
            <value>
            The URL to an image to display for the Select button in a <see cref="T:C1.Web.UI.Controls.C1GridView.C1CommandField"/>.
            The default value is an empty string (""), which indicates that this property is not set.
            </value>
        </member>
        <member name="P:C1.Web.UI.Controls.C1GridView.C1CommandField.SelectText">
            <summary>
            Gets or sets the Select button caption displayed in a <see cref="T:C1.Web.UI.Controls.C1GridView.C1CommandField"/> field.
            </summary>
            <value>
            The caption for the Select button in a <see cref="T:C1.Web.UI.Controls.C1GridView.C1CommandField"/>.
            The default value is "Select".
            </value>
        </member>
        <member name="P:C1.Web.UI.Controls.C1GridView.C1CommandField.UpdateImageUrl">
            <summary>
            Gets or sets the URL to the Update button image displayed in a <see cref="T:C1.Web.UI.Controls.C1GridView.C1CommandField"/> field.
            </summary>
            <value>
            The URL to an image to display for the Update button in a <see cref="T:C1.Web.UI.Controls.C1GridView.C1CommandField"/>.
            The default value is an empty string (""), which indicates that this property is not set.
            </value>
        </member>
        <member name="P:C1.Web.UI.Controls.C1GridView.C1CommandField.UpdateText">
            <summary>
            Gets or sets the Update button caption displayed in a <see cref="T:C1.Web.UI.Controls.C1GridView.C1CommandField"/> field.
            </summary>
            <value>
            The caption for the Update button in a <see cref="T:C1.Web.UI.Controls.C1GridView.C1CommandField"/>.
            The default value is "Update".
            </value>
        </member>
        <member name="P:C1.Web.UI.Controls.C1GridView.C1CommandField.ShowCancelButton">
            <summary>
            Gets or sets a value indicating whether a Cancel button is displayed in a <see cref="T:C1.Web.UI.Controls.C1GridView.C1CommandField"/> column.
            </summary>
            <value>
            True to display a Cancel button in a <see cref="T:C1.Web.UI.Controls.C1GridView.C1CommandField"/>; otherwise, false. The default is true.
            </value>
        </member>
        <member name="P:C1.Web.UI.Controls.C1GridView.C1CommandField.ShowDeleteButton">
            <summary>
            Gets or sets a value indicating whether a Delete button is displayed in a <see cref="T:C1.Web.UI.Controls.C1GridView.C1CommandField"/> column.
            </summary>
            <value>
            True to display a Delete button in a <see cref="T:C1.Web.UI.Controls.C1GridView.C1CommandField"/>; otherwise, false. The default is false.
            </value>
        </member>
        <member name="P:C1.Web.UI.Controls.C1GridView.C1CommandField.ShowEditButton">
            <summary>
            Gets or sets a value indicating whether a Edit button is displayed in a <see cref="T:C1.Web.UI.Controls.C1GridView.C1CommandField"/> column.
            </summary>
            <value>
            True to display a Edit button in a <see cref="T:C1.Web.UI.Controls.C1GridView.C1CommandField"/>; otherwise, false. The default value is false.
            </value>
        </member>
        <member name="P:C1.Web.UI.Controls.C1GridView.C1CommandField.ShowFilterButton">
            <summary>
            Gets or sets a value indicating whether a Filter button is displayed in a <see cref="T:C1.Web.UI.Controls.C1GridView.C1CommandField"/> column.
            </summary>
            <value>
            True to display a Filter button in a <see cref="T:C1.Web.UI.Controls.C1GridView.C1CommandField"/>; otherwise, false. The default value is false.
            </value>
        </member>
        <member name="P:C1.Web.UI.Controls.C1GridView.C1CommandField.ShowSelectButton">
            <summary>
            Gets or sets a value indicating whether a Select button is displayed in a <see cref="T:C1.Web.UI.Controls.C1GridView.C1CommandField"/> column.
            </summary>
            <value>
            True to display a Select button in a <see cref="T:C1.Web.UI.Controls.C1GridView.C1CommandField"/>; otherwise, false. The default value is false.
            </value>
        </member>
        <member name="T:C1.Web.UI.Controls.C1GridView.C1HyperLinkField">
            <summary>
            A C1HyperLinkField displays each item as a hyperlink.
            Inherits from <see cref="T:C1.Web.UI.Controls.C1GridView.C1Field"/>.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1GridView.C1HyperLinkField.#ctor">
            <summary>
            Constructor. Initializes a new instance of the <see cref="T:C1.Web.UI.Controls.C1GridView.C1HyperLinkField"/> class.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1GridView.C1HyperLinkField.ToString">
            <summary>
            Returns a string that represents the current object.
            </summary>
            <returns>A string that represents the current object.</returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1GridView.C1HyperLinkField.CreateColumn">
            <summary>
            Creates an empty <see cref="T:C1.Web.UI.Controls.C1GridView.C1HyperLinkField"/> object.
            </summary>
            <returns>An empty <see cref="T:C1.Web.UI.Controls.C1GridView.C1HyperLinkField"/> object.</returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1GridView.C1HyperLinkField.CopyPropertiesFrom(C1.Web.UI.Controls.C1GridView.C1BaseField)">
            <summary>
            Copies properties from the specified <see cref="T:C1.Web.UI.Controls.C1GridView.C1BaseField"/> object.
            </summary>
            <param name="other">The <see cref="T:C1.Web.UI.Controls.C1GridView.C1BaseField"/> to copy the properties from.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1GridView.C1HyperLinkField.FormatDataNavigateUrlValue(System.Object[])">
            <summary>
            Formats the navigation URL using the format string specified by the <see cref="P:C1.Web.UI.Controls.C1GridView.C1HyperLinkField.DataNavigateUrlFormatString"/> property.
            </summary>
            <param name="dataUrlValues">An array of values to combine with the format string.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1GridView.C1HyperLinkField.FormatDataTextValue(System.Object)">
            <summary>
            Formats the caption text using the format string specified by the <see cref="P:C1.Web.UI.Controls.C1GridView.C1HyperLinkField.DataTextFormatString"/> property.
            </summary>
            <param name="dataTextValue">The text value to format. </param>
            <returns>The formatted text value.</returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1GridView.C1HyperLinkField.Initialize">
            <summary>
            Initializes the <see cref="T:C1.Web.UI.Controls.C1GridView.C1HyperLinkField"/> object.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1GridView.C1HyperLinkField.InitializeCell(System.Web.UI.WebControls.TableCell,System.Int32,C1.Web.UI.Controls.C1GridView.C1GridViewRowType,C1.Web.UI.Controls.C1GridView.C1GridViewRowState)">
            <summary>
            Initializes the specified <see cref="T:System.Web.UI.WebControls.TableCell"/> object to the specified row type and row state.
            </summary>
            <param name="cell">The <see cref="T:System.Web.UI.WebControls.TableCell"/> to initialize.</param>
            <param name="columnIndex">The zero-based index of the column.</param>
            <param name="rowType">One of the <see cref="T:C1.Web.UI.Controls.C1GridView.C1GridViewRowType"/> values.</param>
            <param name="rowState">One of the <see cref="T:C1.Web.UI.Controls.C1GridView.C1GridViewRowState"/> values.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1GridView.C1HyperLinkField.RestoreStateFromJson(System.Object)">
            <summary>
            Restores the previously saved state of the <see cref="T:C1.Web.UI.Controls.C1GridView.C1HyperLinkField"/> object from JSON.
            </summary>
            <param name="state">An object that represents the <see cref="T:C1.Web.UI.Controls.C1GridView.C1HyperLinkField"/> object state to restore.</param>
        </member>
        <member name="P:C1.Web.UI.Controls.C1GridView.C1HyperLinkField.DataNavigateUrlField">
            <summary>
            Gets or sets the field from a data source to bind to the URL of the hyperlinks in the
            <see cref="T:C1.Web.UI.Controls.C1GridView.C1HyperLinkField"/>.
            </summary>
            <remarks>
            The DataNavigateUrlField and <see cref="P:C1.Web.UI.Controls.C1GridView.C1HyperLinkField.NavigateUrl"/> properties cannot both be set at the same time.
            If both properties are set, the DataNavigateUrlField property takes precedence
            </remarks>
            <remarks>
            This property is obsoleted. Please use DataNavigateUrlFields property instead.
            </remarks>
        </member>
        <member name="P:C1.Web.UI.Controls.C1GridView.C1HyperLinkField.DataNavigateUrlFields">
            <summary>
            Gets or sets the names of the fields from the data source used to construct the URLs for the
            hyperlinks in the <see cref="T:C1.Web.UI.Controls.C1GridView.C1HyperLinkField"/>.
            </summary>
            <remarks>
            If the DataNavigateUrlFields and the <see cref="P:C1.Web.UI.Controls.C1GridView.C1HyperLinkField.NavigateUrl"/> properties are both set, the DataNavigateUrlFields property takes precedence.
            </remarks>
            <value>
            An array containing the names of the fields from the data source used to construct the URLs for the
            hyperlinks in the <see cref="T:C1.Web.UI.Controls.C1GridView.C1HyperLinkField"/>.
            The default is an empty array, indicating that DataNavigateUrlFields is not set.
            </value>
        </member>
        <member name="P:C1.Web.UI.Controls.C1GridView.C1HyperLinkField.DataNavigateUrlFormatString">
            <summary>
            Gets or sets the display format for the URL of the hyperlinks in the <see cref="T:C1.Web.UI.Controls.C1GridView.C1HyperLinkField"/>
            when the URL is data-bound to a field in a data source.
            </summary>
            <remarks>
            The specified format is only applied to the URL when the URL is data-bound to a field in a data source.
            Specify the fields to bind to the URL of the hyperlinks in the column by setting the
            <see cref="P:C1.Web.UI.Controls.C1GridView.C1HyperLinkField.DataNavigateUrlFields"/> property.
            </remarks>
        </member>
        <member name="P:C1.Web.UI.Controls.C1GridView.C1HyperLinkField.DataTextField">
            <summary>
            Gets or sets the field to bind to the text of the hyperlink.
            </summary>
            <remarks>
            The DataTextField and <see cref="P:C1.Web.UI.Controls.C1GridView.C1HyperLinkField.Text"/> properties cannot both be set at the same time.
            If both properties are set, the DataTextField property takes precedence.
            </remarks>
        </member>
        <member name="P:C1.Web.UI.Controls.C1GridView.C1HyperLinkField.DataTextFormatString">
            <summary>
            Gets or sets the display format for the text caption of the hyperlinks in the C1HyperLinkField column.
            </summary>
            <remarks>
            The specified format is applied to the text caption only when the text caption is data bound to a field in
            a data source. Specify the field to bind to the text caption of the hyperlinks in the column by setting
            the <see cref="P:C1.Web.UI.Controls.C1GridView.C1HyperLinkField.DataTextField"/> property.
            </remarks>
        </member>
        <member name="P:C1.Web.UI.Controls.C1GridView.C1HyperLinkField.NavigateUrl">
            <summary>
            Gets or sets the URL when a hyperlink is clicked.
            </summary>
            <remarks>
            The <see cref="P:C1.Web.UI.Controls.C1GridView.C1HyperLinkField.DataNavigateUrlFields"/> and NavigateUrl properties cannot both be set at the same time.
            If both properties are set, the <see cref="P:C1.Web.UI.Controls.C1GridView.C1HyperLinkField.DataNavigateUrlFields"/> property takes precedence.
            </remarks>
        </member>
        <member name="P:C1.Web.UI.Controls.C1GridView.C1HyperLinkField.Target">
            <summary>
            Gets or sets the window or frame where content appears when a hyperlink is clicked.
            </summary>
            <remarks>
            If this property is not set, the browser or window with focus refreshes when a hyperlink in the column is clicked.
            </remarks>
        </member>
        <member name="P:C1.Web.UI.Controls.C1GridView.C1HyperLinkField.Text">
            <summary>
            Gets or sets the text for the hyperlink.
            </summary>
            <remarks>
            The <see cref="P:C1.Web.UI.Controls.C1GridView.C1HyperLinkField.DataTextField"/> and Text properties cannot both be set at the same time.
            If both properties are set, the<see cref="P:C1.Web.UI.Controls.C1GridView.C1HyperLinkField.DataTextField"/> property takes precedence.
            </remarks>
        </member>
        <member name="T:C1.Web.UI.Controls.C1GridView.C1ImageField">
            <summary>
            Represents a column that is displayed as an image in a <see cref="T:C1.Web.UI.Controls.C1GridView.C1GridView"/> control.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1GridView.C1ImageField.ToString">
            <summary>
            Returns a string that represents the current <see cref="T:C1.Web.UI.Controls.C1GridView.C1ImageField"/> object.
            </summary>
            <returns>A string that represents the current <see cref="T:C1.Web.UI.Controls.C1GridView.C1ImageField"/> object.</returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1GridView.C1ImageField.CreateColumn">
            <summary>
            Creates an empty <see cref="T:C1.Web.UI.Controls.C1GridView.C1ImageField"/> object.
            </summary>
            <returns>An empty <see cref="T:C1.Web.UI.Controls.C1GridView.C1ImageField"/> object.</returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1GridView.C1ImageField.CopyPropertiesFrom(C1.Web.UI.Controls.C1GridView.C1BaseField)">
            <summary>
            Copies properties from the specified <see cref="T:C1.Web.UI.Controls.C1GridView.C1BaseField"/> object.
            </summary>
            <param name="other">The <see cref="T:C1.Web.UI.Controls.C1GridView.C1BaseField"/> to copy the properties from.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1GridView.C1ImageField.Initialize">
            <summary>
            Initializes the <see cref="T:C1.Web.UI.Controls.C1GridView.C1ImageField"/> object.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1GridView.C1ImageField.InitializeCell(System.Web.UI.WebControls.TableCell,System.Int32,C1.Web.UI.Controls.C1GridView.C1GridViewRowType,C1.Web.UI.Controls.C1GridView.C1GridViewRowState)">
            <summary>
            Initializes the specified <see cref="T:System.Web.UI.WebControls.TableCell"/> object to the specified row type and row state.
            </summary>
            <param name="cell">The <see cref="T:System.Web.UI.WebControls.TableCell"/> to initialize.</param>
            <param name="columnIndex">The zero-based index of the column.</param>
            <param name="rowType">One of the <see cref="T:C1.Web.UI.Controls.C1GridView.C1GridViewRowType"/> values.</param>
            <param name="rowState">One of the <see cref="T:C1.Web.UI.Controls.C1GridView.C1GridViewRowState"/> values.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1GridView.C1ImageField.InitializeDataCell(System.Web.UI.WebControls.TableCell,System.Int32,C1.Web.UI.Controls.C1GridView.C1GridViewRowType,C1.Web.UI.Controls.C1GridView.C1GridViewRowState)">
            <summary>
            Initializes the specified <see cref="T:System.Web.UI.WebControls.TableCell"/> object to the specified row type and row state.
            </summary>
            <param name="cell">The <see cref="T:System.Web.UI.WebControls.TableCell"/> to initialize.</param>
            <param name="columnIndex">The zero-based index of the column.</param>
            <param name="rowType">One of the <see cref="T:C1.Web.UI.Controls.C1GridView.C1GridViewRowType"/> values.</param>
            <param name="rowState">One of the <see cref="T:C1.Web.UI.Controls.C1GridView.C1GridViewRowState"/> values.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1GridView.C1ImageField.ExtractValuesFromCell(System.Web.UI.WebControls.TableCell,System.Collections.Specialized.IOrderedDictionary,C1.Web.UI.Controls.C1GridView.C1GridViewRowType,C1.Web.UI.Controls.C1GridView.C1GridViewRowState,System.Boolean)">
            <summary>
            Fills the specified <see cref="T:System.Collections.Specialized.IOrderedDictionary"/> object with values from the specified <see cref="T:System.Web.UI.WebControls.TableCell"/> object.
            </summary>
            <param name="cell">The <see cref="T:System.Web.UI.WebControls.TableCell"/> object that contains the values to retrieve.</param>
            <param name="values">A <see cref="T:System.Collections.Specialized.IOrderedDictionary"/> used to store the values of the specified cell.</param>
            <param name="rowType">One of the <see cref="T:C1.Web.UI.Controls.C1GridView.C1GridViewRowType"/> values.</param>
            <param name="rowState">One of the <see cref="T:C1.Web.UI.Controls.C1GridView.C1GridViewRowState"/> values.</param>
            <param name="includeReadonly">True to include the values of read-only fields; otherwise, false.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1GridView.C1ImageField.FormatImageUrlValue(System.Object)">
            <summary>
            Applies the format specified by the <see cref="P:C1.Web.UI.Controls.C1GridView.C1ImageField.DataImageUrlFormatString"/> property to a field value.
            </summary>
            <param name="dataValue">The field value to format.</param>
            <returns>The formatted value.</returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1GridView.C1ImageField.FormatAlternateText(C1.Web.UI.Controls.C1GridView.C1GridViewRow)">
            <summary>
            Applies the format specified by the <see cref="P:C1.Web.UI.Controls.C1GridView.C1ImageField.DataAlternateTextFormatString"/> property to the
            alternate text value contained in the specified <see cref="T:C1.Web.UI.Controls.C1GridView.C1GridViewRow"/> object.
            </summary>
            <param name="row">The <see cref="T:C1.Web.UI.Controls.C1GridView.C1GridViewRow"/> object that contains the alternate text value to format.</param>
            <returns>The formatted value.</returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1GridView.C1ImageField.GetValue(C1.Web.UI.Controls.C1GridView.C1GridViewRow,System.String,System.ComponentModel.PropertyDescriptor@)">
            <summary>
            Retrieves the value of the field bound to the <see cref="T:C1.Web.UI.Controls.C1GridView.C1ImageField"/> object.
            </summary>
            <param name="row">The <see cref="T:C1.Web.UI.Controls.C1GridView.C1GridViewRow"/> object that contains the field value.</param>
            <param name="fieldName">The name of the field for which to retrieve the value.</param>
            <param name="pd">A <see cref="T:System.ComponentModel.PropertyDescriptor"/>, passed by reference, that
            represents the properties of the field.</param>
            <returns>The value of the specified field.</returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1GridView.C1ImageField.GetDesignTimeValue(C1.Web.UI.Controls.C1GridView.C1GridViewRowState)">
            <summary>
            Retrieves the value used for a field's value when rendering the <see cref="T:C1.Web.UI.Controls.C1GridView.C1ImageField"/> object in a designer.
            </summary>
            <param name="rowState">One of the <see cref="T:C1.Web.UI.Controls.C1GridView.C1GridViewRowState"/> values.</param>
            <returns>The value to display in the designer as the field's value.</returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1GridView.C1ImageField.OnDataBindField(System.Object,System.EventArgs)">
            <summary>
            Binds the value of a field to the <see cref="T:C1.Web.UI.Controls.C1GridView.C1ImageField"/> object.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">An <see cref="T:System.EventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1GridView.C1ImageField.RestoreStateFromJson(System.Object)">
            <summary>
            Restores the previously saved state of the <see cref="T:C1.Web.UI.Controls.C1GridView.C1ImageField"/> object from JSON.
            </summary>
            <param name="state">An object that represents the <see cref="T:C1.Web.UI.Controls.C1GridView.C1ImageField"/> object state to restore.</param>
        </member>
        <member name="P:C1.Web.UI.Controls.C1GridView.C1ImageField.AlternateText">
            <summary>
            Gets or sets the alternate text displayed for an image in the <see cref="T:C1.Web.UI.Controls.C1GridView.C1ImageField"/> object.
            </summary>
            <value>
            The alternate text for an image displayed in the <see cref="T:C1.Web.UI.Controls.C1GridView.C1ImageField"/> object.
            The default value is an empty string (""), which indicates that this property is not set.
            </value>
        </member>
        <member name="P:C1.Web.UI.Controls.C1GridView.C1ImageField.ConvertEmptyStringToNull">
            <summary>
            Gets or sets a value indicating whether empty string ("") values are converted to null when the field
            values are returned from the data source.
            </summary>
            <value>
            True if empty values should be converted to null; otherwise, false.
            The default value is true.
            </value>
        </member>
        <member name="P:C1.Web.UI.Controls.C1GridView.C1ImageField.DataAlternateTextColumn">
            <summary>
            Gets or sets the name of the column from the data source that contains the values to bind to the
            <see cref="P:C1.Web.UI.Controls.C1GridView.C1ImageField.AlternateText"/> property of each image in an <see cref="T:C1.Web.UI.Controls.C1GridView.C1ImageField"/> object.
            </summary>
            <value>
            The name of the field to bind the <see cref="P:C1.Web.UI.Controls.C1GridView.C1ImageField.AlternateText"/> property of each image in an
            <see cref="T:System.Web.UI.WebControls.ImageField"/> object.
            </value>
            <remarks>
            This property is obsoleted. Please use <see cref="P:C1.Web.UI.Controls.C1GridView.C1ImageField.DataAlternateTextField"/> property instead.
            </remarks>
        </member>
        <member name="P:C1.Web.UI.Controls.C1GridView.C1ImageField.DataAlternateTextField">
            <summary>
            Gets or sets the name of the column from the data source that contains the values to bind to the
            <see cref="P:C1.Web.UI.Controls.C1GridView.C1ImageField.AlternateText"/> property of each image in an <see cref="T:C1.Web.UI.Controls.C1GridView.C1ImageField"/> object.
            </summary>
            <value>
            The name of the field to bind the <see cref="P:C1.Web.UI.Controls.C1GridView.C1ImageField.AlternateText"/> property of each image in an
            <see cref="T:System.Web.UI.WebControls.ImageField"/> object.
            </value>
        </member>
        <member name="P:C1.Web.UI.Controls.C1GridView.C1ImageField.DataAlternateTextFormatString">
            <summary>
            Gets or sets the string that specifies the format in which the alternate text for each image in an
            <see cref="T:C1.Web.UI.Controls.C1GridView.C1ImageField"/> object is rendered.
            </summary>
            <value>
            A string that specifies the format in which the alternate text for each image in an
            <see cref="T:C1.Web.UI.Controls.C1GridView.C1ImageField"/> object is rendered.
            The default value is an empty string (""), which indicates that now special formatting is applied to the
            alternate text.
            </value>
        </member>
        <member name="P:C1.Web.UI.Controls.C1GridView.C1ImageField.DataImageUrlColumn">
            <summary>
            Gets or sets the name of the column from the data source that contains the values to bind to the
            <see cref="P:System.Web.UI.WebControls.Image.ImageUrl"/> property of each image in an
            <see cref="T:C1.Web.UI.Controls.C1GridView.C1ImageField"/> object.
            </summary>
            <value>
            The name of the column to bind to the <see cref="P:System.Web.UI.WebControls.Image.ImageUrl"/> property
            of each image in an <see cref="T:C1.Web.UI.Controls.C1GridView.C1ImageField"/> object.
            </value>
            <remarks>
            This property is obsoleted. Please use <see cref="P:C1.Web.UI.Controls.C1GridView.C1ImageField.DataImageUrlField"/> property instead.
            </remarks>
        </member>
        <member name="P:C1.Web.UI.Controls.C1GridView.C1ImageField.DataImageUrlField">
            <summary>
            Gets or sets the name of the column from the data source that contains the values to bind to the
            <see cref="P:System.Web.UI.WebControls.Image.ImageUrl"/> property of each image in an
            <see cref="T:C1.Web.UI.Controls.C1GridView.C1ImageField"/> object.
            </summary>
            <value>
            The name of the column to bind to the <see cref="P:System.Web.UI.WebControls.Image.ImageUrl"/> property
            of each image in an <see cref="T:C1.Web.UI.Controls.C1GridView.C1ImageField"/> object.
            </value>
        </member>
        <member name="P:C1.Web.UI.Controls.C1GridView.C1ImageField.DataImageUrlFormatString">
            <summary>
            Gets or sets the string that specifies the format in which the URL for each image in an
            <see cref="T:C1.Web.UI.Controls.C1GridView.C1ImageField"/> object is rendered.
            </summary>
            <value>
            A string that specifies the format in which the URL for each image in an <see cref="T:C1.Web.UI.Controls.C1GridView.C1ImageField"/>
            object is rendered. The default value is the empty string ("") , which indicates that no special
            formatting is applied to the URLs.
            </value>
        </member>
        <member name="P:C1.Web.UI.Controls.C1GridView.C1ImageField.NullDisplayText">
            <summary>
            Gets or sets the text to display in an <see cref="T:C1.Web.UI.Controls.C1GridView.C1ImageField"/> object when the value
            of the field specified by the <see cref="P:C1.Web.UI.Controls.C1GridView.C1ImageField.DataImageUrlColumn"/> property is null.
            </summary>
            <value>
            The text to display when the value of a column is null.
            The default value is an empty string (""), which indicates that this property is not set.
            </value>
        </member>
        <member name="P:C1.Web.UI.Controls.C1GridView.C1ImageField.NullImageUrl">
            <summary>
            Gets or sets the URL to an alternate image displayed in an <see cref="T:C1.Web.UI.Controls.C1GridView.C1ImageField"/> object when the
            value of the field specified by the <see cref="P:C1.Web.UI.Controls.C1GridView.C1ImageField.DataImageUrlColumn"/> property is null.
            </summary>
            <value>
            The URL to an alternate image displayed when the value of a column is null.
            The default value is an empty string (""), which indicates that this property is not set.
            </value>
        </member>
        <member name="P:C1.Web.UI.Controls.C1GridView.C1ImageField.ReadOnly">
            <summary>
            Gets or sets a value indicating whether the values of the column specified by the
            <see cref="P:C1.Web.UI.Controls.C1GridView.C1ImageField.DataImageUrlColumn"/> property can be modified in edit mode.
            </summary>
            <value>
            True to indicate that the column values cannot be modified in edit mode; otherwise, false.
            The default value is false.
            </value>
        </member>
        <member name="T:C1.Web.UI.Controls.C1GridView.C1RowHeaderField">
            <summary>
            Class that represents the row header column in a <see cref="T:C1.Web.UI.Controls.C1GridView.C1GridView"/> control.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1GridView.C1RowHeaderField.#ctor">
            <summary>
            Constructor. Creates a new instance of the <see cref="T:C1.Web.UI.Controls.C1GridView.C1RowHeaderField"/> class.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1GridView.C1RowHeaderField.CreateColumn">
            <summary>
            Creates an empty <see cref="T:C1.Web.UI.Controls.C1GridView.C1RowHeaderField"/> object.
            </summary>
            <returns>An empty <see cref="T:C1.Web.UI.Controls.C1GridView.C1RowHeaderField"/> object.</returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1GridView.C1RowHeaderField.GetDefaultScrollWidth">
            <summary>
            Gets a value that is used as a default width for a column if scrolling is enabled and
            column's width is not explicitly set.
            </summary>
            <returns>Default column width in scrolling mode.</returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1GridView.C1RowHeaderField.InitializeCell(System.Web.UI.WebControls.TableCell,System.Int32,C1.Web.UI.Controls.C1GridView.C1GridViewRowType,C1.Web.UI.Controls.C1GridView.C1GridViewRowState)">
            <summary>
            Initializes the specified <see cref="T:System.Web.UI.WebControls.TableCell"/> object to the specified row type and row state.
            </summary>
            <param name="cell">The <see cref="T:System.Web.UI.WebControls.TableCell"/> to initialize.</param>
            <param name="columnIndex">The zero-based index of the column.</param>
            <param name="rowType">One of the <see cref="T:C1.Web.UI.Controls.C1GridView.C1GridViewRowType"/> values.</param>
            <param name="rowState">One of the <see cref="T:C1.Web.UI.Controls.C1GridView.C1GridViewRowState"/> values.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1GridView.C1RowHeaderField.PrepareCell(System.Web.UI.WebControls.TableCell,System.Int32,C1.Web.UI.Controls.C1GridView.C1GridViewRow,C1.Web.UI.Controls.C1GridView.C1GridViewRowType,C1.Web.UI.Controls.C1GridView.C1GridViewRowState)">
            <summary>
            Helper method called by <see cref="T:C1.Web.UI.Controls.C1GridView.C1GridView"/> control to set up the specified <see cref="T:System.Web.UI.WebControls.TableCell"/> object.
            </summary>
            <param name="cell">The <see cref="T:System.Web.UI.WebControls.TableCell"/> to set up.</param>
            <param name="columnIndex">The zero-based index of the column.</param>
            <param name="row">Row.</param>
            <param name="rowType">One of the <see cref="T:C1.Web.UI.Controls.C1GridView.C1GridViewRowType"/> values.</param>
            <param name="rowState">One of the <see cref="T:C1.Web.UI.Controls.C1GridView.C1GridViewRowState"/> values.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1GridView.C1RowHeaderField.RestoreStateFromJson(System.Object)">
            <summary>
            Restores the previously saved state of the <see cref="T:C1.Web.UI.Controls.C1GridView.C1RowHeaderField"/> object from JSON.
            </summary>
            <param name="state">An object that represents the <see cref="T:C1.Web.UI.Controls.C1GridView.C1RowHeaderField"/> object state to restore.</param>
        </member>
        <member name="P:C1.Web.UI.Controls.C1GridView.C1RowHeaderField.AllowMove">
            <summary>
            Overrides the <see cref="P:C1.Web.UI.Controls.C1GridView.C1BaseField.AllowMove"/> property.
            This property is not supported by the <see cref="T:C1.Web.UI.Controls.C1GridView.C1RowHeaderField"/> class.
            </summary>
            <value>
            False in all cases.
            </value>
        </member>
        <member name="P:C1.Web.UI.Controls.C1GridView.C1RowHeaderField.AllowSizing">
            <summary>
            Overrides the <see cref="P:C1.Web.UI.Controls.C1GridView.C1BaseField.AllowSizing"/> property.
            This property is not supported by the <see cref="T:C1.Web.UI.Controls.C1GridView.C1RowHeaderField"/> class.
            </summary>
            <value>
            False in all cases.
            </value>
        </member>
        <member name="P:C1.Web.UI.Controls.C1GridView.C1RowHeaderField.FooterStyle">
            <summary>
            Gets the style properties of the column footer.
            </summary>
            <remarks>
            This property is used to provide a custom style for the footer section of the column.
            </remarks>		
        </member>
        <member name="P:C1.Web.UI.Controls.C1GridView.C1RowHeaderField.HeaderStyle">
            <summary>
            Gets the style properties of the column header.
            </summary>
            <remarks>
            This property is used to provide a custom style for the header section of the column.
            </remarks>
        </member>
        <member name="P:C1.Web.UI.Controls.C1GridView.C1RowHeaderField.ItemStyle">
            <summary>
            Gets the style properties of the item.
            </summary>
            <remarks>
            This property is used to provide a custom style for the items of the <see cref="T:C1.Web.UI.Controls.C1GridView.C1GridView"/> component.
            </remarks>		
        </member>
        <member name="P:C1.Web.UI.Controls.C1GridView.C1RowHeaderField.Visible">
            <summary>
            Gets or sets a value indicating whether the column is visible within the displayed area of the <see cref="T:C1.Web.UI.Controls.C1GridView.C1GridView"/> control.
            </summary>
            <value>
            True if the column is visible in the <see cref="T:C1.Web.UI.Controls.C1GridView.C1GridView"/> control; otherwise, False.
            The default value is false.
            </value>
        </member>
        <member name="T:C1.Web.UI.Controls.C1GridView.C1TemplateField">
            <summary>
            A C1TemplateField displays each item in the column following a specified template.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1GridView.C1TemplateField.#ctor">
            <summary>
            Constructor. Creates a new instance of the <see cref="T:C1.Web.UI.Controls.C1GridView.C1TemplateField"/> class.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1GridView.C1TemplateField.ExtractValuesFromCell(System.Web.UI.WebControls.TableCell,System.Collections.Specialized.IOrderedDictionary,C1.Web.UI.Controls.C1GridView.C1GridViewRowType,C1.Web.UI.Controls.C1GridView.C1GridViewRowState,System.Boolean)">
            <summary>
            Fills the specified <see cref="T:System.Collections.Specialized.IOrderedDictionary"/> object with values from the specified <see cref="T:System.Web.UI.WebControls.TableCell"/> object.
            </summary>
            <param name="cell">The <see cref="T:System.Web.UI.WebControls.TableCell"/> object that contains the values to retrieve.</param>
            <param name="values">A <see cref="T:System.Collections.Specialized.IOrderedDictionary"/> used to store the values of the specified cell.</param>
            <param name="rowType">One of the <see cref="T:C1.Web.UI.Controls.C1GridView.C1GridViewRowType"/> values.</param>
            <param name="rowState">One of the <see cref="T:C1.Web.UI.Controls.C1GridView.C1GridViewRowState"/> values.</param>
            <param name="includeReadonly">True to include the values of read-only fields; otherwise, false.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1GridView.C1TemplateField.LoadUnviewstatedData(System.Object)">
            <summary>
            
            </summary>
            <param name="data"></param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1GridView.C1TemplateField.SaveUnviewstatedData">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1GridView.C1TemplateField.CreateColumn">
            <summary>
            Creates an empty <see cref="T:C1.Web.UI.Controls.C1GridView.C1TemplateField"/> object.
            </summary>
            <returns>An empty <see cref="T:C1.Web.UI.Controls.C1GridView.C1TemplateField"/> object.</returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1GridView.C1TemplateField.CopyPropertiesFrom(C1.Web.UI.Controls.C1GridView.C1BaseField)">
            <summary>
            Copies properties from the specified <see cref="T:C1.Web.UI.Controls.C1GridView.C1BaseField"/> object.
            </summary>
            <param name="other">The <see cref="T:C1.Web.UI.Controls.C1GridView.C1BaseField"/> to copy the properties from.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1GridView.C1TemplateField.InitializeCell(System.Web.UI.WebControls.TableCell,System.Int32,C1.Web.UI.Controls.C1GridView.C1GridViewRowType,C1.Web.UI.Controls.C1GridView.C1GridViewRowState)">
            <summary>
            Initializes the specified <see cref="T:System.Web.UI.WebControls.TableCell"/> object to the specified row type and row state.
            </summary>
            <param name="cell">The <see cref="T:System.Web.UI.WebControls.TableCell"/> to initialize.</param>
            <param name="columnIndex">The zero-based index of the column.</param>
            <param name="rowType">One of the <see cref="T:C1.Web.UI.Controls.C1GridView.C1GridViewRowType"/> values.</param>
            <param name="rowState">One of the <see cref="T:C1.Web.UI.Controls.C1GridView.C1GridViewRowState"/> values.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1GridView.C1TemplateField.TrackViewState">
            <summary>
            Causes the <see cref="T:C1.Web.UI.Controls.C1GridView.C1TemplateField"/> object to track changes to its state so that it can be persisted across requests.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1GridView.C1TemplateField.SaveViewState">
            <summary>
            Saves the changes to the <see cref="T:C1.Web.UI.Controls.C1GridView.C1TemplateField"/> object since the time the page was posted back to the server.
            </summary>
            <returns>The object that contains the changes to the view state of the <see cref="T:C1.Web.UI.Controls.C1GridView.C1TemplateField"/>.</returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1GridView.C1TemplateField.LoadViewState(System.Object)">
            <summary>
            Restores the previously saved view state of the <see cref="T:C1.Web.UI.Controls.C1GridView.C1TemplateField"/> object.
            </summary>
            <param name="savedState">An object that represents the <see cref="T:C1.Web.UI.Controls.C1GridView.C1TemplateField"/> state to restore.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1GridView.C1TemplateField.ToString">
            <summary>
            Returns a string that represents the current object.
            </summary>
            <returns>A string that represents the current object.</returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1GridView.C1TemplateField.RestoreStateFromJson(System.Object)">
            <summary>
            Restores the previously saved state of the <see cref="T:C1.Web.UI.Controls.C1GridView.C1TemplateField"/> object from JSON.
            </summary>
            <param name="state">An object that represents the <see cref="T:C1.Web.UI.Controls.C1GridView.C1TemplateField"/> object state to restore.</param>
        </member>
        <member name="P:C1.Web.UI.Controls.C1GridView.C1TemplateField.ConvertEmptyStringToNull">
            <summary>
            Gets or sets a value indicating whether the value that the <see cref="T:C1.Web.UI.Controls.C1GridView.C1TemplateField"/> object is bound
            to should be converted to null if it is Empty.
            </summary>
            <value>
            True if the value that the <see cref="T:C1.Web.UI.Controls.C1GridView.C1TemplateField"/> is bound to should be converted to null
            when it is empty; otherwise, false. The default value is true.
            </value>
        </member>
        <member name="P:C1.Web.UI.Controls.C1GridView.C1TemplateField.AlternatingItemTemplate">
            <summary>
            Gets or sets the template for displaying the alternating items in a <see cref="T:C1.Web.UI.Controls.C1GridView.C1TemplateField"/> object.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1GridView.C1TemplateField.EditItemTemplate">
            <summary>
            Gets or sets the template to be used when editing an item.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1GridView.C1TemplateField.FooterTemplate">
            <summary>
            Gets or sets the template used to show the footer of a <see cref="T:C1.Web.UI.Controls.C1GridView.C1TemplateField"/>.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1GridView.C1TemplateField.HeaderTemplate">
            <summary>
            Gets or sets the template used to show the header of a <see cref="T:C1.Web.UI.Controls.C1GridView.C1TemplateField"/>.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1GridView.C1TemplateField.ItemTemplate">
            <summary>
            Gets or sets the template used to show an item in a <see cref="T:C1.Web.UI.Controls.C1GridView.C1TemplateField"/>.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1GridView.C1TemplateField.UpdateBindings">
            <summary>
            Returns the collection of <see cref="T:C1.Web.UI.Controls.C1GridView.C1GridViewUpdateBinding"/> objects specifying bindings used
            in the <see cref="M:C1.Web.UI.Controls.C1GridView.C1GridView.Update"/> method.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1GridView.C1TemplateField.HasUnviewstatedData">
            <summary>
            
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1GridView.Controls.C1FilterControl.FilterValue">
            <summary>
            Gets or sets the FilterValue property in order to execute filtering for the specified column.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1GridView.Controls.C1FilterControl.FilterOperator">
            <summary>
            Gets or sets the FilterOperator property in order to execute filtering for the specified column.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1GridView.Data.C1DataSource.GetResolvedDataSource">
            <summary>
            This method analyzes the data source and gets the appropriate enumerator for it.
            </summary>
            <returns>IEnumerable interface for iterating through data.</returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1GridView.Data.C1DataSource.GetColumnsInfo">
            <summary>
            Gets metadata information for columns in the data source.
            </summary>
            <returns>ColumnInfoCollection, containing metainformation about data source.</returns>
        </member>
        <member name="T:C1.Web.UI.Controls.C1GridView.Data.ColumnInfo">
            <summary>
            Provides information about columns.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1GridView.Data.ColumnInfo.#ctor(System.ComponentModel.PropertyDescriptor)">
            <summary>
            Creates ColumnInfo from PropertyDescriptor
            </summary>
            <param name="columnDescriptor">PropertyDescriptor</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1GridView.Data.ColumnInfo.#ctor(System.Reflection.PropertyInfo)">
            <summary>
            Creates ColumnInfo from PropertyInfo
            </summary>
            <param name="propertyInfo">PropertyInfo</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1GridView.Data.ColumnInfo.#ctor(System.Reflection.FieldInfo)">
            <summary>
            Creates ColumnInfo from PropertyInfo
            </summary>
            <param name="fieldInfo">PropertyInfo</param>
        </member>
        <member name="P:C1.Web.UI.Controls.C1GridView.Data.ColumnInfo.ColumnType">
            <summary>
            Type of the column
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1GridView.Data.ColumnInfo.ColumnName">
            <summary>
            Name of the column.
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1GridView.Data.ColumnInfoCollection">
            <summary>
            Collection of ColumnInfo objects
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1GridView.Data.ColumnInfoCollection.Add(C1.Web.UI.Controls.C1GridView.Data.ColumnInfo)">
            <summary>
            Adds ColumnInfo to collection
            </summary>
            <param name="columnInfo">A <see cref="T:C1.Web.UI.Controls.C1GridView.Data.ColumnInfo"/> object to add.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1GridView.Data.ColumnInfoCollection.Remove(System.Int32)">
            <summary>
            Removes ColumnInfo from collection
            </summary>
            <param name="index">Index of the <see cref="T:C1.Web.UI.Controls.C1GridView.Data.ColumnInfo"/> object to remove.</param>
        </member>
        <member name="P:C1.Web.UI.Controls.C1GridView.Data.ColumnInfoCollection.Item(System.Int32)">
            <summary>
            Indexer on ColumnInfo
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1GridView.Data.EmptyDataSource">
            <summary>
            This is an empty data source, which can be used in the PrepareControlHierarchy method in 
            ASP.NET server controls
            This data source helps initialize child controls in two cases:
            when they retrieve data from data source and when they do not have data.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1GridView.Data.EmptyDataSource.#ctor(System.Int32)">
            <summary>
            Constructor.
            </summary>
            <param name="itemsCount">The number of objects in the collection.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1GridView.Data.EmptyDataSource.GetEnumerator">
            <summary>
            Returns a System.Collections.IEnumerator implemented object that contains all objects in the <see cref="T:C1.Web.UI.Controls.C1GridView.Data.EmptyDataSource"/>.
            </summary>
            <returns>An IEnumerator for the collection.</returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1GridView.Data.EmptyDataSource.CopyTo(System.Array,System.Int32)">
            <summary>
            Copies all the items from this <see cref="T:C1.Web.UI.Controls.C1GridView.Data.EmptyDataSource"/> to the specified System.Array object,
            starting at the specified index in the System.Array object
            </summary>
            <param name="array">The one-dimensional Array.</param>
            <param name="index">The zero-based index in <paramref name="array"/> at which copying begins.</param>
        </member>
        <member name="P:C1.Web.UI.Controls.C1GridView.Data.EmptyDataSource.Count">
            <summary>
            Gets the number of objects in the collection.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1GridView.Data.EmptyDataSource.IsReadOnly">
            <summary>
            Returns whether or not a collection is read-only. 
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1GridView.Data.EmptyDataSource.IsSynchronized">
            <summary>
            Gets a value indicating whether access to the <see cref="T:C1.Web.UI.Controls.C1GridView.Data.EmptyDataSource"/> is synchronized (thread-safe).
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1GridView.Data.EmptyDataSource.SyncRoot">
            <summary>
            Gets the object that can be used to synchronize access to the <see cref="T:C1.Web.UI.Controls.C1GridView.Data.EmptyDataSource"/>.
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1GridView.AggregateEnum">
            <summary>
            Use the members of this enumeration to set the value of the <see cref="P:C1.Web.UI.Controls.C1GridView.C1Field.Aggregate"/> property
            in the <see cref="T:C1.Web.UI.Controls.C1GridView.C1Field"/> class.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1GridView.AggregateEnum.None">
            <summary>
            No aggregate is calculated or displayed.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1GridView.AggregateEnum.Count">
            <summary>
            Count of non-empty values.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1GridView.AggregateEnum.Sum">
            <summary>
            Sum of numerical values.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1GridView.AggregateEnum.Average">
            <summary>
            Average of the numerical values.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1GridView.AggregateEnum.Min">
            <summary>
            Minimum value (numerical, string, or date).
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1GridView.AggregateEnum.Max">
            <summary>
            Maximum value (numerical, string, or date).
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1GridView.AggregateEnum.Std">
            <summary>
            Standard deviation (using formula for Sample, n-1).
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1GridView.AggregateEnum.StdPop">
            <summary>
            Standard deviation (using formula for Population, n).
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1GridView.AggregateEnum.Var">
            <summary>
            Variance (using formula for Sample, n-1).
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1GridView.AggregateEnum.VarPop">
            <summary>
            Variance (using formula for Population, n).
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1GridView.AggregateEnum.Custom">
            <summary>
            Custom value.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1GridView.AggregateEnum.Percent">
            <summary>
            Percent value.
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1GridView.CallbackOptions">
            <summary>
            Use the members of this enumeration to determine the actions that can
            be performed by the <see cref="T:C1.Web.UI.Controls.C1GridView.C1GridView"/> control using callbacks.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1GridView.CallbackOptions.None">
            <summary>
            All actions are performed via postback.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1GridView.CallbackOptions.ColMove">
            <summary>
            Column moving is performed via callbacks.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1GridView.CallbackOptions.Editing">
            <summary>
            Editing is performed via callbacks.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1GridView.CallbackOptions.Expanding">
            <summary>
            Group expanding\collapsing is performed via callbacks.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1GridView.CallbackOptions.Paging">
            <summary>
            Paging is performed via callbacks.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1GridView.CallbackOptions.Selection">
            <summary>
            Row selection is performed via callbacks.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1GridView.CallbackOptions.Sorting">
            <summary>
            Sorting is performed via callbacks.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1GridView.CallbackOptions.Filtering">
            <summary>
            Filtering is performed via callbacks.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1GridView.CallbackOptions.ClientEditing">
            <summary>
            Client editing is performed via callbacks.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1GridView.CallbackOptions.All">
            <summary>
            All actions are performed via callbacks.
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1GridView.FilterMode">
            <summary>
            Use the members of this enumeration to set the value of the <see cref="P:C1.Web.UI.Controls.C1GridView.C1GridView.FilterMode"/> property
            of a <see cref="T:C1.Web.UI.Controls.C1GridView.C1GridView"/> control.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1GridView.FilterMode.Auto">
            <summary>
            Filtering is performed automatically.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1GridView.FilterMode.Custom">
            <summary>
            Filtering is performed manually.
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1GridView.FilterOperator">
            <summary>
            The FilterOperator enumerator.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1GridView.FilterOperator.NoFilter">
            <summary>
            NoFilter item.
            </summary>       
        </member>
        <member name="F:C1.Web.UI.Controls.C1GridView.FilterOperator.Contains">
            <summary>
            Contains item.
            </summary>       
        </member>
        <member name="F:C1.Web.UI.Controls.C1GridView.FilterOperator.NotContain">
            <summary>
            NotContain item.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1GridView.FilterOperator.BeginsWith">
            <summary>
            BeginsWith item.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1GridView.FilterOperator.EndsWith">
            <summary>
            EndsWith item.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1GridView.FilterOperator.Equals">
            <summary>
            Equals item.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1GridView.FilterOperator.NotEqual">
            <summary>
            NotEqual item.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1GridView.FilterOperator.Greater">
            <summary>
            Greater item.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1GridView.FilterOperator.Less">
            <summary>
            Less item.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1GridView.FilterOperator.GreaterOrEqual">
            <summary>
            GreaterOrEqual item.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1GridView.FilterOperator.LessOrEqual">
            <summary>
            LessOrEqual item.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1GridView.FilterOperator.IsEmpty">
            <summary>
            IsEmpty item.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1GridView.FilterOperator.NotIsEmpty">
            <summary>
            NotIsEmpty item.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1GridView.FilterOperator.IsNull">
            <summary>
            IsNull item.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1GridView.FilterOperator.NotIsNull">
            <summary>
            NotIsNull item.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1GridView.FilterOperator.Custom">
            <summary>
            Custom item.
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1GridView.GroupMove">
            <summary>
            Use the members of this enumeration to determine the action that raised the <see cref="E:C1.Web.UI.Controls.C1GridView.C1GridView.GroupColumnMoving"/>
            and the <see cref="E:C1.Web.UI.Controls.C1GridView.C1GridView.GroupColumnMoved"/> events.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1GridView.GroupMove.InGroup">
            <summary>
            Columns were rearranged within the grouping area.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1GridView.GroupMove.ToGroup">
            <summary>
            Columns were moved from the grid to the grouping area.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1GridView.GroupMove.FromGroup">
            <summary>
            Columns were moved from the grouping area to the grid.
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1GridView.GroupPosition">
            <summary>
            Use the members of this enumeration to set the value of the <see cref="P:C1.Web.UI.Controls.C1GridView.GroupInfo.Position"/> property in
            the <see cref="T:C1.Web.UI.Controls.C1GridView.GroupInfo"/> class.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1GridView.GroupPosition.None">
            <summary>
            Disables grouping for the column.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1GridView.GroupPosition.Header">
            <summary>
            Inserts header rows.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1GridView.GroupPosition.Footer">
            <summary>
            Inserts footer rows.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1GridView.GroupPosition.HeaderAndFooter">
            <summary>
            Inserts header and footer rows.
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1GridView.C1GridViewRowState">
            <summary>
            Specifies the state of a row in the <see cref="T:C1.Web.UI.Controls.C1GridView.C1GridView"/> control.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1GridView.C1GridViewRowState.Normal">
            <summary>
            Indicates that the data control row is in a normal state. The Normal state is mutually exclusive with other states except the Alternate state.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1GridView.C1GridViewRowState.Alternate">
            <summary>
            Indicates that the data control row is an alternate row. 
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1GridView.C1GridViewRowState.Selected">
            <summary>
            Indicates that the row has been selected by the user.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1GridView.C1GridViewRowState.Edit">
            <summary>
            Indicates that the row is in an edit state, often the result of clicking an edit button for the row. Typically, the Edit and Insert states are mutually exclusive.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1GridView.C1GridViewRowState.Insert">
            <summary>
            Indicates that the row is a new row, often the result of clicking an insert button to add a new row. Typically, the Insert and Edit states are mutually exclusive.
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1GridView.C1GridViewRowType">
            <summary>
            Specifies the function of a row in the <see cref="T:C1.Web.UI.Controls.C1GridView.C1GridView"/> control.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1GridView.C1GridViewRowType.Header">
            <summary>
            A header row of a data control. Header rows cannot be data-bound.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1GridView.C1GridViewRowType.Footer">
            <summary>
            A footer row of a data control. Footer rows cannot be data-bound.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1GridView.C1GridViewRowType.DataRow">
            <summary>
            A data row of a data control. Only DataRow rows can be data-bound.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1GridView.C1GridViewRowType.Separator">
            <summary>
            A row separator. Row separators cannot be data-bound.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1GridView.C1GridViewRowType.Pager">
            <summary>
            A row that displays page buttons or a pager control. Pager rows cannot be data-bound.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1GridView.C1GridViewRowType.EmptyDataRow">
            <summary>
            A row that displays page buttons or a pager control. Pager rows cannot be data-bound.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1GridView.C1GridViewRowType.GroupHeader">
            <summary>
            A row that displays the grouped header.  Group header rows cannot be data-bound.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1GridView.C1GridViewRowType.GroupFooter">
            <summary>
            A row that displays the grouped footer.  Group footer rows cannot be data-bound.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1GridView.C1GridViewRowType.GroupColumn">
            <summary>
            A row that displays the grouped column.  Group column rows cannot be data-bound.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1GridView.C1GridViewRowType.GroupArea">
            <summary>
            A row that displays the grouping area.  Group area rows cannot be data-bound.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1GridView.C1GridViewRowType.Filter">
            <summary>
            A row that displays the filter bar.  Filter rows cannot be data-bound.
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1GridView.C1GridViewScrollMode">
            <summary>
            Specifies the scroll mode.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1GridView.C1GridViewScrollMode.None">
            <summary>
            Scroll bars are turned off.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1GridView.C1GridViewScrollMode.ScrollBar">
            <summary>
            Scroll bars are turned on.
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1GridView.C1SortDirection">
            <summary>
            Use the members of this enumeration to set the value of the <see cref="P:C1.Web.UI.Controls.C1GridView.C1Field.SortDirection"/> property in
            the <see cref="T:C1.Web.UI.Controls.C1GridView.C1Field"/> class.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1GridView.C1SortDirection.NotSet">
            <summary>
            No sorting.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1GridView.C1SortDirection.Ascending">
            <summary>
            Sort from smallest to largest. For example, A to Z or 1 to 9.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1GridView.C1SortDirection.Descending">
            <summary>
            Sort from largest to smallest. For example, Z to A or 9 to 1.
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1GridView.OutlineMode">
            <summary>
            Use the members of this enumeration to set the value of the <see cref="P:C1.Web.UI.Controls.C1GridView.GroupInfo.OutlineMode"/> property
            in the <see cref="T:C1.Web.UI.Controls.C1GridView.GroupInfo"/> class.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1GridView.OutlineMode.None">
            <summary>
            Disables collapsing and expanding.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1GridView.OutlineMode.StartCollapsed">
            <summary>
            Groups are initially collapsed.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1GridView.OutlineMode.StartExpanded">
            <summary>
            Groups are initially expanded.
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1GridView.RowMerge">
            <summary>
            Use the members of this enumeration to set the value of the <see cref="P:C1.Web.UI.Controls.C1GridView.C1Field.RowMerge"/> property in the
            <see cref="T:C1.Web.UI.Controls.C1GridView.C1Field"/> derived column object.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1GridView.RowMerge.None">
            <summary>
            No row merging.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1GridView.RowMerge.Free">
            <summary>
            Allows row with identical text to merge.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1GridView.RowMerge.Restricted">
            <summary>
            Keeps rows with identical text from merging if rows in the previous column are merged.
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1GridView.ElementPosition">
            <summary>
            Specifies the position of the element.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1GridView.ElementPosition.Auto">
            <summary>
            Auto.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1GridView.ElementPosition.TopLeft">
            <summary>
            TopLeft.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1GridView.ElementPosition.TopCenter">
            <summary>
            TopCenter.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1GridView.ElementPosition.TopRight">
            <summary>
            TopRight.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1GridView.ElementPosition.MiddleLeft">
            <summary>
            MiddleLeft.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1GridView.ElementPosition.Center">
            <summary>
            Center.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1GridView.ElementPosition.MiddleRight">
            <summary>
            MiddleRight.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1GridView.ElementPosition.BottomLeft">
            <summary>
            BottomLeft.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1GridView.ElementPosition.BottomCenter">
            <summary>
            BottomCenter.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1GridView.ElementPosition.BottomRight">
            <summary>
            BottomRight.
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1GridView.TabNavigation">
            <summary>
            Specifies the tab navigation behaviour (client-side).
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1GridView.TabNavigation.ControlNavigation">
            <summary>
            Current cell is moving between focusable controls only.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1GridView.TabNavigation.GridNavigation">
            <summary>
            Current cell is moving between grid cells.
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1GridView.CallbackMode">
            <summary>
            Specifies the behaviour of callback action.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1GridView.CallbackMode.Full">
            <summary>
            Transfer all html to client side when call back.(including ColMove/GroupColMove)
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1GridView.CallbackMode.Partial">
            <summary>
            Only transfer partial html to client side when call back.(including Cancel/Edit/Grp/Select/Update)
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1GridView.CallbackMode.DataOnly">
            <summary>
            Only transfer data to client side when call back.(including Page/Sort/Delete/Filter)
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1GridView.C1GridViewSelectionMode">
            <summary>
            Specifies client-side selection behaviour of the <see cref="T:C1.Web.UI.Controls.C1GridView.C1GridView"/>.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1GridView.C1GridViewSelectionMode.None">
            <summary>
            Selection is turned off.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1GridView.C1GridViewSelectionMode.SingleCell">
            <summary>
            Only a single cell can be selected at the same time.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1GridView.C1GridViewSelectionMode.SingleColumn">
            <summary>
            Only a single column can be selected at the same time.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1GridView.C1GridViewSelectionMode.SingleRow">
            <summary>
            Only a single row can be selected at the same time.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1GridView.C1GridViewSelectionMode.SingleRange">
            <summary>
            Only a single range of cells can be selected at the same time.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1GridView.C1GridViewSelectionMode.MultiColumn">
            <summary>
            It is possible to select more than one row at the same time using mouse, ctrl and shift keys.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1GridView.C1GridViewSelectionMode.MultiRow">
            <summary>
            It is possible to select more than one row at the same time using mouse, ctrl and shift keys.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1GridView.C1GridViewSelectionMode.MultiRange">
            <summary>
            It is possible to select more than one cells range at the same time using mouse, ctrl and shift keys.
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1GridView.UpdateMode">
            <summary>
            Infrastructure.
            Specifies client-side editing behaviour of the <see cref="T:C1.Web.UI.Controls.C1GridView.C1GridView"/> when current row is changed in client editing mode.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1GridView.UpdateMode.SingleRow">
            <summary>
            Edits done in a row are sent to server automatically when current row is changed.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1GridView.UpdateMode.MultiRow">
            <summary>
            Edits done in a row are not automatically sent. Developer should explicitly call CSOM Update() method to force
            sending the changes.
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1GridView.CellAutosizingMode">
            <summary>
            Specifies the mode of cell sizes calculation when scrolling is enabled.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1GridView.CellAutosizingMode.ColumnWidthPriority">
            <summary>
            Cell width is strictly limited by column width, either explicitly specified or determined by <see cref="P:C1.Web.UI.Controls.C1GridView.C1GridView.DefaultColumnWidth"/>.
            Content exceeding cell bounds will be truncated.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1GridView.CellAutosizingMode.CellContentPriority">
            <summary>
            When cell sizes are calculated cell content size has priority over column width. If needed column width can be increased to prevent 
            content truncating.
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1GridView.C1GridViewEndRowUpdatedEventHandler">
            <summary>
            Represents the method that handles the <see cref="E:C1.Web.UI.Controls.C1GridView.C1GridView.EndRowUpdated"/> event of a <see cref="T:C1.Web.UI.Controls.C1GridView.C1GridView"/> control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">A <see cref="T:C1.Web.UI.Controls.C1GridView.C1GridViewEndRowUpdatedEventArgs"/> object that contains the event data.</param>
        </member>
        <member name="T:C1.Web.UI.Controls.C1GridView.C1GridViewEndRowUpdatedEventArgs">
            <summary>
            Provides data for the <see cref="E:C1.Web.UI.Controls.C1GridView.C1GridView.EndRowUpdated"/> event of the <see cref="T:C1.Web.UI.Controls.C1GridView.C1GridView"/> control.
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1GridView.C1GridViewBeginRowUpdateEventHandler">
            <summary>
            Represents the method that handles the <see cref="E:C1.Web.UI.Controls.C1GridView.C1GridView.BeginRowUpdate"/> event of a <see cref="T:C1.Web.UI.Controls.C1GridView.C1GridView"/> control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">A <see cref="T:C1.Web.UI.Controls.C1GridView.C1GridViewBeginRowUpdateEventArgs"/> object that contains the event data.</param>
        </member>
        <member name="T:C1.Web.UI.Controls.C1GridView.C1GridViewBeginRowUpdateEventArgs">
            <summary>
            Provides data for the <see cref="E:C1.Web.UI.Controls.C1GridView.C1GridView.BeginRowUpdate"/> event of the <see cref="T:C1.Web.UI.Controls.C1GridView.C1GridView"/> control.
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1GridView.C1GridViewCancelEditEventHandler">
            <summary>
            Represents the method that will handle the <see cref="E:C1.Web.UI.Controls.C1GridView.C1GridView.RowCancelingEdit"/> event of a
            <see cref="T:C1.Web.UI.Controls.C1GridView.C1GridView"/> control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">A <see cref="T:C1.Web.UI.Controls.C1GridView.C1GridViewCancelEditEventArgs"/> object that contains the event data.</param>
        </member>
        <member name="T:C1.Web.UI.Controls.C1GridView.C1GridViewCancelEditEventArgs">
            <summary>
            Provides data for the <see cref="E:C1.Web.UI.Controls.C1GridView.C1GridView.RowCancelingEdit"/> event.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1GridView.C1GridViewCancelEditEventArgs.#ctor(System.Int32)">
            <summary>
            Constructor. Initializes a new instance of the <see cref="T:C1.Web.UI.Controls.C1GridView.C1GridViewCancelEditEventArgs"/> class.
            </summary>
            <param name="rowIndex">The index of the row containing the cancel button.</param>
        </member>
        <member name="P:C1.Web.UI.Controls.C1GridView.C1GridViewCancelEditEventArgs.RowIndex">
            <summary>
            Gets the index of the row containing the Cancel button that raised the event.
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1GridView.C1GridViewColumnMoveEventHandler">
            <summary>
            Represents the method that will handle the <see cref="E:C1.Web.UI.Controls.C1GridView.C1GridView.ColumnMoving"/> 
            event of the <see cref="T:C1.Web.UI.Controls.C1GridView.C1GridView"/>.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">A <see cref="T:C1.Web.UI.Controls.C1GridView.C1GridViewColumnMoveEventArgs"/> object that contains the event data.</param>
        </member>
        <member name="T:C1.Web.UI.Controls.C1GridView.C1GridViewColumnMoveEventArgs">
            <summary>
            Provides data for the <see cref="E:C1.Web.UI.Controls.C1GridView.C1GridView.ColumnMoving"/> event of the <see cref="T:C1.Web.UI.Controls.C1GridView.C1GridView"/> control.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1GridView.C1GridViewColumnMoveEventArgs.#ctor(C1.Web.UI.Controls.C1GridView.C1BaseField,System.Int32)">
            <summary>
            Constructor. Initializes a new instance of the <see cref="T:C1.Web.UI.Controls.C1GridView.C1GridViewColumnMoveEventArgs"/> class. 
            </summary>
            <param name="column">The <see cref="T:C1.Web.UI.Controls.C1GridView.C1BaseField"/> object being repositioned.</param>
            <param name="destIndex">Index of the new position within the <see cref="P:C1.Web.UI.Controls.C1GridView.C1GridView.Columns"/> collection.</param>
        </member>
        <member name="P:C1.Web.UI.Controls.C1GridView.C1GridViewColumnMoveEventArgs.Column">
            <summary>
            The <see cref="T:C1.Web.UI.Controls.C1GridView.C1BaseField"/> object being repositioned.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1GridView.C1GridViewColumnMoveEventArgs.DestIndex">
            <summary>
            Index of the new position within the <see cref="P:C1.Web.UI.Controls.C1GridView.C1GridView.Columns"/> collection.
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1GridView.C1GridViewColumnMovedEventHandler">
            <summary>
            Represents the method that will handle the <see cref="E:C1.Web.UI.Controls.C1GridView.C1GridView.ColumnMoved"/> 
            event of the <see cref="T:C1.Web.UI.Controls.C1GridView.C1GridView"/>.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">A <see cref="T:C1.Web.UI.Controls.C1GridView.C1GridViewColumnMovedEventArgs"/> object that contains the event data.</param>
        </member>
        <member name="T:C1.Web.UI.Controls.C1GridView.C1GridViewColumnMovedEventArgs">
            <summary>
            Provides data for the <see cref="E:C1.Web.UI.Controls.C1GridView.C1GridView.ColumnMoved"/> event of the <see cref="T:C1.Web.UI.Controls.C1GridView.C1GridView"/> control.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1GridView.C1GridViewColumnMovedEventArgs.#ctor(C1.Web.UI.Controls.C1GridView.C1BaseField,System.Int32)">
            <summary>
            Constructor. Initializes a new instance of the <see cref="T:C1.Web.UI.Controls.C1GridView.C1GridViewColumnMovedEventArgs"/> class. 
            </summary>
            <param name="column">The <see cref="T:C1.Web.UI.Controls.C1GridView.C1BaseField"/> object being repositioned.</param>
            <param name="destIndex">Index of the new position within the <see cref="P:C1.Web.UI.Controls.C1GridView.C1GridView.Columns"/> collection.</param>
        </member>
        <member name="P:C1.Web.UI.Controls.C1GridView.C1GridViewColumnMovedEventArgs.Column">
            <summary>
            The <see cref="T:C1.Web.UI.Controls.C1GridView.C1BaseField"/> object being repositioned.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1GridView.C1GridViewColumnMovedEventArgs.DestIndex">
            <summary>
            Index of the new position within the <see cref="P:C1.Web.UI.Controls.C1GridView.C1GridView.Columns"/> collection.
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1GridView.C1GridViewCommandEventHandler">
            <summary>
            Represents the method that will handle the <see cref="E:C1.Web.UI.Controls.C1GridView.C1GridView.RowCommand"/> event of the
            <see cref="T:C1.Web.UI.Controls.C1GridView.C1GridView"/>.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">A <see cref="T:C1.Web.UI.Controls.C1GridView.C1GridViewCommandEventArgs"/> object that contains the event data.</param>
        </member>
        <member name="T:C1.Web.UI.Controls.C1GridView.C1GridViewCommandEventArgs">
            <summary>
            Provides data for the <see cref="E:C1.Web.UI.Controls.C1GridView.C1GridView.RowCommand"/> event.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1GridView.C1GridViewCommandEventArgs.#ctor(System.Object,System.Web.UI.WebControls.CommandEventArgs)">
            <summary>
            Constructor. Initializes a new instance of the <see cref="T:C1.Web.UI.Controls.C1GridView.C1GridViewCommandEventArgs"/> class.
            </summary>
            <param name="commandSource">The source of the command.</param>
            <param name="originalArgs">A <see cref="T:System.Web.UI.WebControls.CommandEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1GridView.C1GridViewCommandEventArgs.#ctor(C1.Web.UI.Controls.C1GridView.C1GridViewRow,System.Object,System.Web.UI.WebControls.CommandEventArgs)">
            <summary>
            Constructor. Initializes a new instance of the <see cref="T:C1.Web.UI.Controls.C1GridView.C1GridViewCommandEventArgs"/> class.
            </summary>
            <param name="row">A <see cref="T:C1.Web.UI.Controls.C1GridView.C1GridViewRow"/> that contains the command source.</param>
            <param name="commandSource">The source of the command.</param>
            <param name="originalArgs">A <see cref="T:System.Web.UI.WebControls.CommandEventArgs"/> that contains the event data.</param>
        </member>
        <member name="P:C1.Web.UI.Controls.C1GridView.C1GridViewCommandEventArgs.Row">
            <summary>
            Gets the <see cref="T:C1.Web.UI.Controls.C1GridView.C1GridViewRow"/> that contains the command source.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1GridView.C1GridViewCommandEventArgs.CommandSource">
            <summary>
            Gets the source of the command.
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1GridView.C1GridViewDeleteEventHandler">
            <summary>
            Represents the method that will handle the <see cref="E:C1.Web.UI.Controls.C1GridView.C1GridView.RowDeleting"/> event of the
            <see cref="T:C1.Web.UI.Controls.C1GridView.C1GridView"/> control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">A <see cref="T:C1.Web.UI.Controls.C1GridView.C1GridViewDeleteEventArgs"/> object that contains the event data.</param>
        </member>
        <member name="T:C1.Web.UI.Controls.C1GridView.C1GridViewDeleteEventArgs">
            <summary>
            Provides data for the <see cref="E:C1.Web.UI.Controls.C1GridView.C1GridView.RowDeleting"/> event.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1GridView.C1GridViewDeleteEventArgs.#ctor(System.Int32)">
            <summary>
            Constructor. Initializes a new instance of the <see cref="T:C1.Web.UI.Controls.C1GridView.C1GridViewDeleteEventArgs"/> class.
            </summary>
            <param name="rowIndex">The index of the row being deleted.</param>
        </member>
        <member name="P:C1.Web.UI.Controls.C1GridView.C1GridViewDeleteEventArgs.Keys">
            <summary>
            Gets a dictionary of field name/value pairs that represent the primary key of the item to delete.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1GridView.C1GridViewDeleteEventArgs.RowIndex">
            <summary>
            Gets the index of the row being deleted.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1GridView.C1GridViewDeleteEventArgs.Values">
            <summary>
            Gets a dictionary of the non-key field name/value pairs in the item to delete.
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1GridView.C1GridViewDeletedEventHandler">
            <summary>
            Represents the method that will handle the <see cref="E:C1.Web.UI.Controls.C1GridView.C1GridView.RowDeleted"/> event of the
            <see cref="T:C1.Web.UI.Controls.C1GridView.C1GridView"/>.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">A <see cref="T:C1.Web.UI.Controls.C1GridView.C1GridViewDeletedEventArgs"/> object that contains the event data.</param>
        </member>
        <member name="T:C1.Web.UI.Controls.C1GridView.C1GridViewDeletedEventArgs">
            <summary>
            Provides data for the <see cref="E:C1.Web.UI.Controls.C1GridView.C1GridView.RowDeleted"/> event.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1GridView.C1GridViewDeletedEventArgs.#ctor(System.Int32,System.Exception)">
            <summary>
            Constructor. Initializes a new instance of the <see cref="T:C1.Web.UI.Controls.C1GridView.C1GridViewDeletedEventArgs"/> class.
            </summary>
            <param name="affectedRows">Number of rows affected by the delete operation.</param>
            <param name="e">Exception that was raised during the delete operation.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1GridView.C1GridViewDeletedEventArgs.#ctor(System.Int32,System.Exception,System.Collections.Specialized.IOrderedDictionary,System.Collections.Specialized.IOrderedDictionary)">
            <summary>
            Constructor. Initializes a new instance of the <see cref="T:C1.Web.UI.Controls.C1GridView.C1GridViewDeletedEventArgs"/> class.
            </summary>
            <param name="affectedRows">Number of rows affected by the delete operation.</param>
            <param name="e">Exception that was raised during the delete operation.</param>
            <param name="keys">An ordered dictionary of key field name/value pairs for the deleted record.</param>
            <param name="values">A dictionary of the non-key field name/value pairs for the deleted record.</param>
        </member>
        <member name="P:C1.Web.UI.Controls.C1GridView.C1GridViewDeletedEventArgs.AffectedRows">
            <summary>
            Gets the number of rows affected by the delete operation.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1GridView.C1GridViewDeletedEventArgs.Exception">
            <summary>
            Gets the exception that was raised during the delete operation.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1GridView.C1GridViewDeletedEventArgs.ExceptionHandled">
            <summary>
            Gets or sets a value indicating whether an exception that was raised during the delete operation was handled
            in the event handler.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1GridView.C1GridViewDeletedEventArgs.Keys">
            <summary>
            Gets an ordered dictionary of key field name/value pairs for the deleted record.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1GridView.C1GridViewDeletedEventArgs.Values">
            <summary>
            Gets a dictionary of the non-key field name/value pairs for the deleted record.
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1GridView.C1GridViewEditEventHandler">
            <summary>
            Represents the method that handles the <see cref="E:C1.Web.UI.Controls.C1GridView.C1GridView.RowEditing"/> event of a <see cref="T:C1.Web.UI.Controls.C1GridView.C1GridView"/> control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">A <see cref="T:C1.Web.UI.Controls.C1GridView.C1GridViewEditEventArgs"/> object that contains the event data.</param>
        </member>
        <member name="T:C1.Web.UI.Controls.C1GridView.C1GridViewEditEventArgs">
            <summary>
            Provides data for the <see cref="E:C1.Web.UI.Controls.C1GridView.C1GridView.RowEditing"/> event of the <see cref="T:C1.Web.UI.Controls.C1GridView.C1GridView"/> control.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1GridView.C1GridViewEditEventArgs.#ctor(System.Int32)">
            <summary>
            Constructor. Initializes a new instance of the <see cref="T:C1.Web.UI.Controls.C1GridView.C1GridViewEditEventArgs"/> class. 
            </summary>
            <param name="newEditIndex">The index of the row being edited.</param>
        </member>
        <member name="P:C1.Web.UI.Controls.C1GridView.C1GridViewEditEventArgs.NewEditIndex">
            <summary>
            Gets or sets the index of the row being edited.
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1GridView.C1GridViewFilterEventHandler">
            <summary>
            Represents the method that handles the <see cref="E:C1.Web.UI.Controls.C1GridView.C1GridView.Filtering"/> event of a <see cref="T:C1.Web.UI.Controls.C1GridView.C1GridView"/> control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">A <see cref="T:C1.Web.UI.Controls.C1GridView.C1GridViewFilterEventArgs"/> object that contains the event data.</param>
        </member>
        <member name="T:C1.Web.UI.Controls.C1GridView.C1GridViewFilterEventArgs">
            <summary>
            Provides data for the <see cref="E:C1.Web.UI.Controls.C1GridView.C1GridView.Filtering"/> event of the <see cref="T:C1.Web.UI.Controls.C1GridView.C1GridView"/> control.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1GridView.C1GridViewFilterEventArgs.Values">
            <summary>
            Gets a dictionary containing field name / filter value pairs in the filter row.
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1GridView.C1GridViewGroupColumnMoveEventHandler">
            <summary>
            Represents the method that will handle the <see cref="E:C1.Web.UI.Controls.C1GridView.C1GridView.GroupColumnMoving"/> event of the <see cref="T:C1.Web.UI.Controls.C1GridView.C1GridView"/>.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">A <see cref="T:C1.Web.UI.Controls.C1GridView.C1GridViewGroupColumnMoveEventArgs"/> object that contains the event data.</param>
        </member>
        <member name="T:C1.Web.UI.Controls.C1GridView.C1GridViewGroupColumnMoveEventArgs">
            <summary>
            Provides data for the <see cref="E:C1.Web.UI.Controls.C1GridView.C1GridView.GroupColumnMoving"/> event of the <see cref="T:C1.Web.UI.Controls.C1GridView.C1GridView"/>.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1GridView.C1GridViewGroupColumnMoveEventArgs.#ctor(C1.Web.UI.Controls.C1GridView.C1Field,System.Int32,C1.Web.UI.Controls.C1GridView.GroupMove)">
            <summary>
            Constructor. Initializes a new instance of the <see cref="T:C1.Web.UI.Controls.C1GridView.C1GridViewGroupColumnMoveEventArgs"/> class. 
            </summary>
            <param name="column">The <see cref="T:C1.Web.UI.Controls.C1GridView.C1Field"/> object being repositioned.</param>
            <param name="destIndex">
            Index of the new position within the <see cref="P:C1.Web.UI.Controls.C1GridView.C1GridView.Columns"/> or <see cref="P:C1.Web.UI.Controls.C1GridView.C1GridView.GroupedColumns"/>
            collection. Which collection is specified by the <paramref name="pos"/>. 
            </param>
            <param name="pos">
            One of the <see cref="P:C1.Web.UI.Controls.C1GridView.C1GridViewGroupColumnMoveEventArgs.GroupMove"/> values that specified the action that generated the event.
            </param>		
        </member>
        <member name="P:C1.Web.UI.Controls.C1GridView.C1GridViewGroupColumnMoveEventArgs.GroupMove">
            <summary>
            One of the <see cref="P:C1.Web.UI.Controls.C1GridView.C1GridViewGroupColumnMoveEventArgs.GroupMove"/> values that specified the action that generated the event.
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1GridView.C1GridViewGroupColumnMovedEventHandler">
            <summary>
            Represents the method that will handle the <see cref="E:C1.Web.UI.Controls.C1GridView.C1GridView.GroupColumnMoved"/> event of the <see cref="T:C1.Web.UI.Controls.C1GridView.C1GridView"/>.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">A <see cref="T:C1.Web.UI.Controls.C1GridView.C1GridViewGroupColumnMovedEventArgs"/> object that contains the event data.</param>
        </member>
        <member name="T:C1.Web.UI.Controls.C1GridView.C1GridViewGroupColumnMovedEventArgs">
            <summary>
            Provides data for the <see cref="E:C1.Web.UI.Controls.C1GridView.C1GridView.GroupColumnMoved"/> event of the <see cref="T:C1.Web.UI.Controls.C1GridView.C1GridView"/>.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1GridView.C1GridViewGroupColumnMovedEventArgs.#ctor(C1.Web.UI.Controls.C1GridView.C1Field,System.Int32,C1.Web.UI.Controls.C1GridView.GroupMove)">
            <summary>
            Constructor. Initializes a new instance of the <see cref="T:C1.Web.UI.Controls.C1GridView.C1GridViewGroupColumnMovedEventArgs"/> class. 
            </summary>
            <param name="column">The <see cref="T:C1.Web.UI.Controls.C1GridView.C1Field"/> object being repositioned.</param>
            <param name="destIndex">
            Index of the new position within the <see cref="P:C1.Web.UI.Controls.C1GridView.C1GridView.Columns"/> or <see cref="P:C1.Web.UI.Controls.C1GridView.C1GridView.GroupedColumns"/>
            collection. Which collection is specified by the <paramref name="pos"/>.
            </param>
            <param name="pos">
            One of the <see cref="P:C1.Web.UI.Controls.C1GridView.C1GridViewGroupColumnMovedEventArgs.GroupMove"/> values that specified the action that generated the event.
            </param>		
        </member>
        <member name="P:C1.Web.UI.Controls.C1GridView.C1GridViewGroupColumnMovedEventArgs.GroupMove">
            <summary>
            One of the <see cref="P:C1.Web.UI.Controls.C1GridView.C1GridViewGroupColumnMovedEventArgs.GroupMove"/> values that specified the action that generated the event.
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1GridView.C1GridViewRowEventHandler">
            <summary>
            Represents the method that will handle the <see cref="E:C1.Web.UI.Controls.C1GridView.C1GridView.RowCreated"/> and <see cref="E:C1.Web.UI.Controls.C1GridView.C1GridView.RowDataBound"/> 
            events of the <see cref="T:C1.Web.UI.Controls.C1GridView.C1GridView"/>
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">A <see cref="T:C1.Web.UI.Controls.C1GridView.C1GridViewRowEventArgs"/> object that contains the event data.</param>
        </member>
        <member name="T:C1.Web.UI.Controls.C1GridView.C1GridViewRowEventArgs">
            <summary>
            Provides data for the <see cref="E:C1.Web.UI.Controls.C1GridView.C1GridView.RowCreated"/> and <see cref="E:C1.Web.UI.Controls.C1GridView.C1GridView.RowDataBound"/> events.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1GridView.C1GridViewRowEventArgs.#ctor(C1.Web.UI.Controls.C1GridView.C1GridViewRow)">
            <summary>
            Constructor. Initializes a new instance of the <see cref="T:C1.Web.UI.Controls.C1GridView.C1GridViewRowEventArgs"/> class.
            </summary>
            <param name="row">The row being created or data-bound.</param>
        </member>
        <member name="P:C1.Web.UI.Controls.C1GridView.C1GridViewRowEventArgs.Row">
            <summary>
            Gets the row being created or data-bound.
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1GridView.C1GridViewPageEventHandler">
            <summary>
            Represents the method that handles the <see cref="E:C1.Web.UI.Controls.C1GridView.C1GridView.PageIndexChanging"/> event of a <see cref="T:C1.Web.UI.Controls.C1GridView.C1GridView"/> control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">A <see cref="T:C1.Web.UI.Controls.C1GridView.C1GridViewPageEventArgs"/> object that contains the event data.</param>
        </member>
        <member name="T:C1.Web.UI.Controls.C1GridView.C1GridViewPageEventArgs">
            <summary>
            Provides data for the <see cref="E:C1.Web.UI.Controls.C1GridView.C1GridView.PageIndexChanging"/> event of the <see cref="T:C1.Web.UI.Controls.C1GridView.C1GridView"/> control.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1GridView.C1GridViewPageEventArgs.#ctor(System.Int32)">
            <summary>
            Constructor. Initializes a new instance of the <see cref="T:C1.Web.UI.Controls.C1GridView.C1GridViewPageEventArgs"/> class. 
            </summary>
            <param name="newPageIndex">The index of the new page.</param>
        </member>
        <member name="P:C1.Web.UI.Controls.C1GridView.C1GridViewPageEventArgs.NewPageIndex">
            <summary>
            Gets or sets the index of the new page.
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1GridView.C1GridViewSelectEventHandler">
            <summary>
            Represents the method that will handle the <see cref="E:C1.Web.UI.Controls.C1GridView.C1GridView.SelectedIndexChanging"/> 
            event of the <see cref="T:C1.Web.UI.Controls.C1GridView.C1GridView"/>.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">A <see cref="T:C1.Web.UI.Controls.C1GridView.C1GridViewSelectEventArgs"/> object that contains the event data.</param>
        </member>
        <member name="T:C1.Web.UI.Controls.C1GridView.C1GridViewSelectEventArgs">
            <summary>
            Provides data for the <see cref="E:C1.Web.UI.Controls.C1GridView.C1GridView.SelectedIndexChanging"/> event of the <see cref="T:C1.Web.UI.Controls.C1GridView.C1GridView"/> control.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1GridView.C1GridViewSelectEventArgs.#ctor(System.Int32)">
            <summary>
            Constructor. Initializes a new instance of the <see cref="T:C1.Web.UI.Controls.C1GridView.C1GridViewSelectEventArgs"/> class.
            </summary>
            <param name="newSelectedIndex">The index of the new row to select in the <see cref="T:C1.Web.UI.Controls.C1GridView.C1GridView"/> control.</param>
        </member>
        <member name="P:C1.Web.UI.Controls.C1GridView.C1GridViewSelectEventArgs.NewSelectedIndex">
            <summary>
            Gets or sets the index of the new row to select in the <see cref="T:C1.Web.UI.Controls.C1GridView.C1GridView"/> control.
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1GridView.C1GridViewSortEventHandler">
            <summary>
            Represents the method that will handle the <see cref="E:C1.Web.UI.Controls.C1GridView.C1GridView.Sorting"/> event of the
            <see cref="T:C1.Web.UI.Controls.C1GridView.C1GridView"/> control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">A <see cref="T:C1.Web.UI.Controls.C1GridView.C1GridViewSortEventArgs"/> object that contains the event data.</param>
        </member>
        <member name="T:C1.Web.UI.Controls.C1GridView.C1GridViewSortEventArgs">
            <summary>
            Provides data for the <see cref="E:C1.Web.UI.Controls.C1GridView.C1GridView.Sorting"/> event of the <see cref="T:C1.Web.UI.Controls.C1GridView.C1GridView"/> control.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1GridView.C1GridViewSortEventArgs.#ctor(System.String,C1.Web.UI.Controls.C1GridView.C1SortDirection)">
            <summary>
            Constructor. Initializes a new instance of the <see cref="T:C1.Web.UI.Controls.C1GridView.C1GridViewSortEventArgs"/> class. 
            </summary>
            <param name="sortExpression">The sort expression used to sort the items in the <see cref="T:C1.Web.UI.Controls.C1GridView.C1GridView"/> control.</param>
            <param name="sortDirection">A <see cref="T:C1.Web.UI.Controls.C1GridView.C1SortDirection"/>that indicates the direction in which to sort the items in the <see cref="T:C1.Web.UI.Controls.C1GridView.C1GridView"/> control.</param>
        </member>
        <member name="P:C1.Web.UI.Controls.C1GridView.C1GridViewSortEventArgs.SortDirection">
            <summary>
            Gets or sets the direction in which to sort the <see cref="T:C1.Web.UI.Controls.C1GridView.C1GridView"/> control.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1GridView.C1GridViewSortEventArgs.SortExpression">
            <summary>
            Gets or sets the expression used to sort the items in the <see cref="T:C1.Web.UI.Controls.C1GridView.C1GridView"/> control.
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1GridView.C1GridViewUpdateEventHandler">
            <summary>
            Represents the method that will handle the <see cref="E:C1.Web.UI.Controls.C1GridView.C1GridView.RowUpdating"/> event of the
            <see cref="T:C1.Web.UI.Controls.C1GridView.C1GridView"/> control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">A <see cref="T:C1.Web.UI.Controls.C1GridView.C1GridViewUpdateEventArgs"/> object that contains the event data.</param>
        </member>
        <member name="T:C1.Web.UI.Controls.C1GridView.C1GridViewUpdateEventArgs">
            <summary>
            Provides data for the <see cref="E:C1.Web.UI.Controls.C1GridView.C1GridView.RowUpdating"/> event.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1GridView.C1GridViewUpdateEventArgs.#ctor(System.Int32)">
            <summary>
            Constructor. Initializes a new instance of the <see cref="T:C1.Web.UI.Controls.C1GridView.C1GridViewUpdateEventArgs"/> class.
            </summary>
            <param name="rowIndex">The index of the row being updated.</param>
        </member>
        <member name="P:C1.Web.UI.Controls.C1GridView.C1GridViewUpdateEventArgs.Keys">
            <summary>
            Gets a dictionary of field name/value pairs that represent the primary key of the row to update.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1GridView.C1GridViewUpdateEventArgs.NewValues">
            <summary>
            Gets a dictionary containing the revised values of the non-key field name/value pairs in the row to update.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1GridView.C1GridViewUpdateEventArgs.OldValues">
            <summary>
            Gets a dictionary containing the original field name/value pairs in the row to update.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1GridView.C1GridViewUpdateEventArgs.RowIndex">
            <summary>
            Gets the index of the row being updated.
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1GridView.C1GridViewUpdatedEventHandler">
            <summary>
            Represents the method that will handle the <see cref="E:C1.Web.UI.Controls.C1GridView.C1GridView.RowUpdated"/> event of the
            <see cref="T:C1.Web.UI.Controls.C1GridView.C1GridView"/> control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">A <see cref="T:C1.Web.UI.Controls.C1GridView.C1GridViewUpdatedEventArgs"/> object that contains the event data.</param>
        </member>
        <member name="T:C1.Web.UI.Controls.C1GridView.C1GridViewUpdatedEventArgs">
            <summary>
            Provides data for the <see cref="E:C1.Web.UI.Controls.C1GridView.C1GridView.RowUpdated"/> event.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1GridView.C1GridViewUpdatedEventArgs.#ctor(System.Int32,System.Exception)">
            <summary>
            Constructor. Initializes a new instance of the <see cref="T:C1.Web.UI.Controls.C1GridView.C1GridViewUpdatedEventArgs"/> class.
            </summary>
            <param name="affectedRows">Number of rows affected by the update operation.</param>
            <param name="e">The exception (if any) that was raised during the update operation.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1GridView.C1GridViewUpdatedEventArgs.#ctor(System.Int32,System.Exception,System.Collections.Specialized.IOrderedDictionary,System.Collections.Specialized.IOrderedDictionary,System.Collections.Specialized.IOrderedDictionary)">
            <summary>
            Constructor. Initializes a new instance of the <see cref="T:C1.Web.UI.Controls.C1GridView.C1GridViewUpdatedEventArgs"/> class.
            </summary>
            <param name="affectedRows">Number of rows affected by the update operation.</param>
            <param name="e">The exception (if any) that was raised during the update operation.</param>
            <param name="keys">A dictionary that contains the key field name/value pairs for the updated record.</param>
            <param name="newValues">A dictionary that contains the new field name/value pairs for the updated record.</param>
            <param name="oldValues">A dictionary that contains the original field name/value pairs for the updated record.</param>
        </member>
        <member name="P:C1.Web.UI.Controls.C1GridView.C1GridViewUpdatedEventArgs.AffectedRows">
            <summary>
            Gets the number of rows affected by the update operation.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1GridView.C1GridViewUpdatedEventArgs.Exception">
            <summary>
            Gets the exception (if any) that was raised during the update operation.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1GridView.C1GridViewUpdatedEventArgs.ExceptionHandled">
            <summary>
            Gets or sets a value indicating whether an exception that was raised during the update operation was
            handled in the event handler.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1GridView.C1GridViewUpdatedEventArgs.KeepInEditMode">
            <summary>
            Gets or sets a value that indicates whether the <see cref="T:C1.Web.UI.Controls.C1GridView.C1GridView"/> control should remain in edit mode after an update operation.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1GridView.C1GridViewUpdatedEventArgs.Keys">
            <summary>
            Gets a dictionary that contains the key field name/value pairs for the updated record.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1GridView.C1GridViewUpdatedEventArgs.NewValues">
            <summary>
            Gets a dictionary that contains the new field name/value pairs for the updated record.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1GridView.C1GridViewUpdatedEventArgs.OldValues">
            <summary>
            Gets a dictionary that contains the original field name/value pairs for the updated record.
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1GridView.FilterSettings">
            <summary>
            Class used for setting filtering behavior in the <see cref="T:C1.Web.UI.Controls.C1GridView.C1GridView"/> control.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1GridView.FilterSettings.#ctor(C1.Web.UI.Controls.C1GridView.C1GridView)">
            <summary>
            Constructor. Creates a new instance of the <see cref="T:C1.Web.UI.Controls.C1GridView.FilterSettings"/> class.
            </summary>
            <param name="owner">Owner.</param>
        </member>
        <member name="P:C1.Web.UI.Controls.C1GridView.FilterSettings.ExpandAnimation">
            <summary>
            Gets or sets the expand animation effect.
            </summary>
            <value>
            The default value is <see cref="F:C1.Web.UI.AnimationEffect.None"/>
            </value>
        </member>
        <member name="P:C1.Web.UI.Controls.C1GridView.FilterSettings.ExpandDelay">
            <summary>
            Gets or sets the expand delay in milliseconds before drop-down operators list opens.
            </summary>
            <value>
            The default value is 100.
            </value>
        </member>
        <member name="P:C1.Web.UI.Controls.C1GridView.FilterSettings.ExpandDuration">
            <summary>
            Gets or sets the animation duration in milliseconds.
            </summary>
            <value>
            The default value is 500.
            </value>
        </member>
        <member name="P:C1.Web.UI.Controls.C1GridView.FilterSettings.ExpandEasing">
            <summary>
            Specifies the transition for the expand animation.
            </summary>
            <value>
            The default value is <see cref="F:C1.Web.UI.Easing.EaseLinear"/>.
            </value>
        </member>
        <member name="P:C1.Web.UI.Controls.C1GridView.FilterSettings.CollapseAnimation">
            <summary>
            Gets or sets the collapse animation effect.
            </summary>        
            <value>
            The default value is <see cref="F:C1.Web.UI.AnimationEffect.None"/>.
            </value>
        </member>
        <member name="P:C1.Web.UI.Controls.C1GridView.FilterSettings.CollapseDelay">
            <summary>
            Gets or sets the collapse delay in milliseconds before the drop-down operators list starts hiding.
            </summary>
            <value>
            The default value is 100.
            </value>
        </member>
        <member name="P:C1.Web.UI.Controls.C1GridView.FilterSettings.CollapseDuration">
            <summary>
            Gets or sets the collapse animation duration in milliseconds.
            </summary>
            <value>
            The default value is 500.
            </value>
        </member>
        <member name="P:C1.Web.UI.Controls.C1GridView.FilterSettings.CollapseEasing">
            <summary>
            Specifies the transition for the collapse animation.
            </summary>
            <value>
            The default value is <see cref="F:C1.Web.UI.Easing.EaseLinear"/>.
            </value>
        </member>
        <member name="P:C1.Web.UI.Controls.C1GridView.FilterSettings.FilterOnSelect">
            <summary>
            Gets or sets a value indicating whether the filtering will be performed immediately once a filter operator is selected.
            </summary>
            <value>
            The default value is true.
            </value>
        </member>
        <member name="P:C1.Web.UI.Controls.C1GridView.FilterSettings.WindowCollisionDetection">
            <summary>
            Determines whether or not the drop-down operators list's position will be adjusted to fit in window bounds.
            </summary>
            <remarks>
            The default value is false.
            </remarks>
        </member>
        <member name="T:C1.Web.UI.Controls.C1GridView.C1GroupTextEventArgs">
            <summary>
            Provides data for the <see cref="E:C1.Web.UI.Controls.C1GridView.C1GridView.GroupText"/> and <see cref="E:C1.Web.UI.Controls.C1GridView.C1GridView.GroupAggregate"/>
            events of the <see cref="T:C1.Web.UI.Controls.C1GridView.C1GridView"/> control.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1GridView.C1GroupTextEventArgs.Text">
            <summary>
            This is the text that will be displayed in the grouped Header or Footer.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1GridView.C1GroupTextEventArgs.GroupText">
            <summary>
            This is the text that is being grouped.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1GridView.C1GroupTextEventArgs.Col">
            <summary>
            Column that is being grouped.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1GridView.C1GroupTextEventArgs.GroupCol">
            <summary>
            Column initiated grouping.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1GridView.C1GroupTextEventArgs.RowType">
            <summary>
            Type of item that is being grouped, either <see cref="F:C1.Web.UI.Controls.C1GridView.C1GridViewRowType.GroupHeader"/> or
            <see cref="F:C1.Web.UI.Controls.C1GridView.C1GridViewRowType.GroupFooter"/>.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1GridView.C1GroupTextEventArgs.StartItemIndex">
            <summary>
            First index in the Items collection for the data being grouped.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1GridView.C1GroupTextEventArgs.EndItemIndex">
            <summary>
            Last index in the Items collection for the data being grouped.
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1GridView.C1GroupTextEventHandler">
            <summary>
            Represents the method that will handle the <see cref="E:C1.Web.UI.Controls.C1GridView.C1GridView.GroupText"/> event
            of the <see cref="T:C1.Web.UI.Controls.C1GridView.C1GridView"/> control..
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">A <see cref="T:C1.Web.UI.Controls.C1GridView.C1GroupTextEventArgs"/> object that contains the event data.</param>
        </member>
        <member name="T:C1.Web.UI.Controls.C1GridView.C1GroupAggregateEventHandler">
            <summary>
            Represents the method that will handle the <see cref="E:C1.Web.UI.Controls.C1GridView.C1GridView.GroupAggregate"/> event.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">A <see cref="T:C1.Web.UI.Controls.C1GridView.C1GroupTextEventArgs"/> object that contains the event data.</param>
            <remarks>
            Occurs when the <see cref="P:C1.Web.UI.Controls.C1GridView.C1Field.Aggregate"/> property has been set to <see cref="F:C1.Web.UI.Controls.C1GridView.AggregateEnum.Custom"/>.
            This allows the customization of aggregate cell contents for text displayed in the group header or footer.
            </remarks>
        </member>
        <member name="T:C1.Web.UI.Controls.C1GridView.GroupInfo">
            <summary>
            GroupInfo is used to customize the appearance and position of groups.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1GridView.GroupInfo.#ctor">
            <summary>
            Constructor. Creates a new instance of the <see cref="T:C1.Web.UI.Controls.C1GridView.GroupInfo"/> class.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1GridView.GroupInfo.ToString">
            <summary>
            Returns a string that represents the current object.
            </summary>
            <returns>A string that represents the current object.</returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1GridView.GroupInfo.LoadViewState(System.Object)">
            <summary>
            Restores the previously saved view state of the <see cref="T:C1.Web.UI.Controls.C1GridView.GroupInfo"/> object.
            </summary>
            <param name="savedState">An object that represents the <see cref="T:C1.Web.UI.Controls.C1GridView.GroupInfo"/> state to restore.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1GridView.GroupInfo.SaveViewState">
            <summary>
            Saves the changes to the <see cref="T:C1.Web.UI.Controls.C1GridView.GroupInfo"/> object since the time the page was posted back to the server.
            </summary>
            <returns>The object that contains the changes to the view state of the <see cref="T:C1.Web.UI.Controls.C1GridView.GroupInfo"/>.</returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1GridView.GroupInfo.TrackViewState">
            <summary>
            Causes the <see cref="T:C1.Web.UI.Controls.C1GridView.GroupInfo"/> object to track changes to its state so that it can be persisted across requests.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1GridView.GroupInfo.Position">
            <summary>
            Determines whether the <see cref="T:C1.Web.UI.Controls.C1GridView.C1GridView"/> control should insert group header and/or group
            footer rows for this column.
            </summary>
            <value>
            One of the <see cref="T:C1.Web.UI.Controls.C1GridView.GroupPosition"/> values.
            The default value is <see cref="F:C1.Web.UI.Controls.C1GridView.GroupPosition.None"/>.
            </value>
            <remarks>
            <para>
            Set value to <see cref="F:C1.Web.UI.Controls.C1GridView.GroupPosition.None"/> to disable grouping for
            the column.
            Set to <see cref="F:C1.Web.UI.Controls.C1GridView.GroupPosition.Header"/>,
            <see cref="F:C1.Web.UI.Controls.C1GridView.GroupPosition.Footer"/> or
            <see cref="F:C1.Web.UI.Controls.C1GridView.GroupPosition.HeaderAndFooter"/>
            to create groups and define the position of the group rows.
            </para>
            <para>
            To group by a column, remember to sort the data on the column. The grid inserts group header and
            footer rows whenever the value being grouped on changes. If you don't sort the data, there will be
            a lot of group header and footer rows.
            </para>
            </remarks>
        </member>
        <member name="P:C1.Web.UI.Controls.C1GridView.GroupInfo.OutlineMode">
            <summary>
            Determines whether the user will be able to collapse and expand the groups by clicking on the group
            headers, and also determines whether groups will be initially collapsed or expanded.
            </summary>
            <value>
            One of the <see cref="P:C1.Web.UI.Controls.C1GridView.GroupInfo.OutlineMode"/> values.
            The default value is <see cref="F:C1.Web.UI.Controls.C1GridView.OutlineMode.StartExpanded"/>.
            </value>
        </member>
        <member name="P:C1.Web.UI.Controls.C1GridView.GroupInfo.CollapsedImageUrl">
            <summary>
            Determines the images used to show collapsed nodes on the grid.
            </summary>
            <remarks>
            By default, these properties are set to images that look like the '+' and '-' icons used in TreeView
            controls. You can select your own images, and even use different images for different groups.
            </remarks>
        </member>
        <member name="P:C1.Web.UI.Controls.C1GridView.GroupInfo.ExpandedImageUrl">
            <summary>
            Determines the images used to show expanded nodes on the grid.
            </summary>
            <remarks>
            By default, these properties are set to images that look like the '+' and '-' icons used in TreeView
            controls. You can select your own images, and even use different images for different groups.
            </remarks>
        </member>
        <member name="P:C1.Web.UI.Controls.C1GridView.GroupInfo.GroupSingleRow">
            <summary>
            Determines whether groupings containing a single row are grouped.
            </summary>
            <value>
            If False, groupings which contain a single row will not be grouped. The default value is True.
            </value>
        </member>
        <member name="P:C1.Web.UI.Controls.C1GridView.GroupInfo.HeaderText">
            <summary>
            Determines the text that is displayed in the group header rows.
            </summary>
            <remarks>
            <para>
            The text may include up to two placeholders:
            "{0}" is replaced with the value being grouped on and
            "{1}" is replaced with the group's column header
            </para>
            <para>
            The text may also include HTML tags which you can use to add formatting commands.
            </para>
            <para>
            The text may be set to "Custom". Doing so causes the <see cref="E:C1.Web.UI.Controls.C1GridView.C1GridView.GroupText"/> event to be raised when
            processing a grouped header.
            </para>
            </remarks>
            <example> This sample shows how to use HTML tags and placeholders.
            <code lang="VisualBasic">
            col.GroupInfo.HeaderText = "Totals for <b><i>{0}</i></b>
            </code>
            <code lang="C#">
            col.GroupInfo.HeaderText = "Totals for <b><i>{0}</i></b>;
            </code>
            </example>
        </member>
        <member name="P:C1.Web.UI.Controls.C1GridView.GroupInfo.FooterText">
            <summary>
            Determines the text that is displayed in the group footer rows.
            </summary>
            <remarks>
            <para>
            The text may include up to two placeholders:
            "{0}" is replaced with the value being grouped on and
            "{1}" is replaced with the group's column header
            </para>
            <para>
            The text may also include HTML tags which you can use to add formatting commands.
            </para>
            <para>
            The text may be set to "Custom". Doing so causes the <see cref="E:C1.Web.UI.Controls.C1GridView.C1GridView.GroupText"/> event to be raised when
            processing a grouped footer.
            </para>
            </remarks>
            <example> This sample shows how to use HTML tags and placeholders.
            <code lang="VisualBasic">
            col.GroupInfo.FooterText = "Totals for <b><i>{0}</i></b>
            </code>
            <code lang="C#">
            col.GroupInfo.FooterText = "Totals for <b><i>{0}</i></b>;
            </code>
            </example>
        </member>
        <member name="P:C1.Web.UI.Controls.C1GridView.GroupInfo.FooterStyle">
            <summary>
            Determines the style used to render group header and footer rows.
            </summary>
            <remarks>
            This style is based on the grid's <see cref="P:C1.Web.UI.Controls.C1GridView.C1GridView.FooterStyle"/> property.
            If you are grouping on a single column, you probably won't have to change this style.
            If you are creating several levels of grouping, however, you will usually set the BackColor
            and ForeColor of each group header/footer to a different value to emphasize the structure of the data.
            </remarks>		
        </member>
        <member name="P:C1.Web.UI.Controls.C1GridView.GroupInfo.HeaderStyle">
            <summary>
            Determines the style used to render group header rows.
            </summary>
            <remarks>
            This style is based on the grid's <see cref="P:C1.Web.UI.Controls.C1GridView.C1GridView.HeaderStyle"/> property.
            If you are grouping on a single column, you probably won't have to change this style.
            If you are creating several levels of grouping, however, you will usually set the BackColor and
            ForeColor of each group header/footer to a different value to emphasize the structure of the data.
            </remarks>
        </member>
        <member name="P:C1.Web.UI.Controls.C1GridView.GroupInfo.InnerState">
            <summary>
            Storage used for persisting elements of object state which can't be
            serialized to JSON using <see cref="T:C1.Web.UI.JsonAttribute"/>.
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1GridView.GroupRows">
            <summary>
            GroupRows
            helper class responsible for generating group headers, footers, and aggregates.
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1GridView.Tally">
            <summary>
            Summary description for Tally.
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1GridView.MergeRows">
            <summary>
            Class that handles merging of rows.
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1GridView.CellRange">
            <summary>
            CellRange helper structure.
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1GridView.ResizeSettings">
            <summary>
            Class used for setting resizing behavior in the <see cref="T:C1.Web.UI.Controls.C1GridView.C1GridView"/> control.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1GridView.ResizeSettings.#ctor(C1.Web.UI.Controls.C1GridView.C1GridView)">
            <summary>
            Constructor. Creates a new instance of the <see cref="T:C1.Web.UI.Controls.C1GridView.ResizeSettings"/> class.
            </summary>
            <param name="owner">Owner.</param>
        </member>
        <member name="P:C1.Web.UI.Controls.C1GridView.ResizeSettings.Step">
            <summary>
            Gets or sets the movement span of incremental resizing. 
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1Input.C1DateInput">
            <summary>
            Web control specialized for editing the date and time. 
            C1DateInput control renders a date editor.
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1Input.C1MaskedInput">
            <summary>
            The main Web control used for entering and editing information 
            of any data type in a text form. Supports data formatting, 
            edit mask, data validation and other features. 
            Supports formatted and masked editing of all data types, 
            including additional functionality. 
            Apart from being the main data editor control, 
            C1MaskedInput also serves as the base class for specialized 
            controls such as C1DateInput and C1NumericInput.
            </summary>    
        </member>
        <member name="T:C1.Web.UI.Controls.C1Input.C1InputBase">
            <summary>
            Base abstract class for all C1WebInput controls.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Input.C1InputBase.#ctor">
            <summary>
            Creates an instance of C1InputBase class.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Input.C1InputBase.OnPreRender(System.EventArgs)">
            <summary>
             Raises the PreRender event.
            </summary>
            <param name="e">An EventArgs object that contains the event data.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Input.C1InputBase.GetClientResourceFullName(System.String)">
            <summary>
            GetClientResourceFullName
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Input.C1InputBase.ResolveClientUrlOrResource(System.String)">
            <summary>
            Gets a resource URL that can be used by the browser.
            </summary>
            <param name="url"></param>
            <returns></returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Input.C1InputBase.ResolveResourceClientUrl(System.String)">
            <summary>
            Gets a URL that can be used by the browser.
            </summary>
            <param name="url">Name of the server-side resource or URL.</param>
            <returns>String, Url for using in browser.</returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Input.C1InputBase.GetScriptReferences">
            <summary>
            Gets a collection of ScriptReference objects that define script resources that the control requires.
            </summary>
            <returns>A collection of ScriptReference objects.</returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Input.C1InputBase.OnPropertyChanging(System.String,System.Object)">
            <summary>
            Occurs when property begin changing. 
            Property changing can be aborted by returning false
            </summary>
            <param name="propName"></param>
            <param name="oldValue"></param>
            <returns>if true changing of property will be aborted without any prompts</returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Input.C1InputBase.OnPropertyChanged(System.String,System.Object)">
            <summary>
            Occurs when the property has changed.
            </summary>
            <param name="propName"></param>
            <param name="newValue"></param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Input.C1InputBase.System#Web#UI#IPostBackEventHandler#RaisePostBackEvent(System.String)">
            <summary>
            Enables a server control to process an event raised when a form is posted to the server.
            </summary>
            <param name="eventArgument"></param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Input.C1InputBase.LoadClientData(System.Collections.Hashtable)">
            <summary>
            Loads data from the client.
            </summary>
            <param name="data">A hashtable that stores the data name and value.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Input.C1InputBase.LoadTextOrValue(System.String,System.Object)">
            <summary>
            
            </summary>
            <param name="key"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Input.C1InputBase.System#Web#UI#IPostBackDataHandler#LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)">
            <summary>
            Processes the postback data.
            </summary>
            <param name="postDataKey"></param>
            <param name="postCollection"></param>
            <returns></returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Input.C1InputBase.System#Web#UI#IPostBackDataHandler#RaisePostDataChangedEvent">
            <summary>
            Signals the server control to notify the ASP.NET application that the state of the control has changed.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Input.C1InputBase.GetCultureInfoScriptBlockText">
            <summary>
            Returns client script text for client Culture initialization.
            </summary>
            <returns></returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Input.C1InputBase.GetTextProviderScript">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Input.C1InputBase.EmbeddedVisualStyles">
            <summary>
            Returns string array with embedded visual style names.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Input.C1InputBase.ID">
            <summary>
            Gets or sets the programmatic identifier assigned to the server control.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Input.C1InputBase.ClientID">
            <summary>
            Server control identifier generated by ASP.NET.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Input.C1InputBase.Text">
            <summary>
            Text displayed in the input box.
            </summary>
            <remarks><b>Note:</b> For C1MaskedInput controls, this property returns 
            a text value without any prompts and literals.</remarks>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Input.C1InputBase.TextAlign">
            <summary>
            Alignment of the text in the input box.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Input.C1InputBase.UsedCulture">
            <summary>
            CultureInfo object that is currently used by the control.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Input.C1InputBase.Culture">
            <summary>
            CultureInfo object. Each culture has different conventions 
            for displaying dates, time, numbers, currency, and other 
            information. Neutral cultures are not supported.
            </summary>
            <remarks>Returning value can be null if Culture is not defined.<br/>
            The <b>CultureInfo</b> class specifies a unique name for each culture, 
            based on the RFC 3066 standard for Windows Vista and later, 
            and the RFC 1766 standard for pre-Windows Vista operating systems. 
            The name is a combination of an ISO 639 two-letter lowercase 
            culture code associated with a language and an ISO 3166 two-letter 
            uppercase subculture code associated with a country or region.
            </remarks>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Input.C1InputBase.SmartInputMode">
            <summary>
            Allows smart input behavior.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Input.C1InputBase.HideEnter">
            <summary>
            If True, then browser response is disabled when the ENTER key is pressed.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Input.C1InputBase.CustomButtonAlign">
            <summary>
            Visibility and display position of the custom button.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Input.C1InputBase.UpDownAlign">
            <summary>
            Visibility and display position of the Up/Down buttons.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Input.C1InputBase.ReadOnly">
            <summary>
            Gets or sets a value indicating whether the contents of the Input control can be changed.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Input.C1InputBase.Enabled">
            <summary>
            Gets or sets the enabled property used by the control.
            </summary>        
        </member>
        <member name="P:C1.Web.UI.Controls.C1Input.C1InputBase.OnClientBlur">
            <summary>
            Fires when the control loses the input focus.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Input.C1InputBase.OnClientFocus">
            <summary>
            Fires when the control receives focus.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Input.C1InputBase.OnClientInit">
            <summary>
            Fires when the control is initialized.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Input.C1InputBase.OnClientInvalidInput">
            <summary>
            Fires when the user enters invalid input in the control.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Input.C1InputBase.OnClientTextChanged">
            <summary>
            Fires when the user changes text in the control.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Input.C1InputBase.OnClientKeyDown">
            <summary>
            Fires when the user presses a key.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Input.C1InputBase.OnClientKeyPress">
            <summary>
            Fires when the user presses an alphanumeric key.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Input.C1InputBase.OnClientKeyUp">
            <summary>
            Fires when the user releases a key.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Input.C1InputBase.OnClientMouseDown">
            <summary>
            Fires when the user clicks the control with either mouse button. 
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Input.C1InputBase.OnClientMouseUp">
            <summary>
            Fires when the user releases a mouse button while the mouse is over the control.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Input.C1InputBase.OnClientMouseOver">
            <summary>
            Fires when the user moves the mouse pointer into the control.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Input.C1InputBase.OnClientMouseOut">
            <summary>
            Fires when the user moves the mouse pointer outside the boundaries of the control. 
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Input.C1InputBase.OnClientCustomButtonClick">
            <summary>
            Fires when the user clicks the custom button.
            </summary>
        </member>
        <member name="E:C1.Web.UI.Controls.C1Input.C1InputBase.TextChanged">
            <summary>
            Fires when the text is changed.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Input.C1InputBase.ControlName">
            <summary>
            Gets the control name.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Input.C1InputBase.CultureInfoID">
            <summary>
            
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Input.C1InputBase.TextProviderID">
            <summary>
            
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Input.C1MaskedInput.#ctor">
            <summary>
            Initializes a new instance of the C1MaskedInput class.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Input.C1MaskedInput.OnPreRender(System.EventArgs)">
            <summary>
             Raises the PreRender event.
            </summary>
            <param name="e">An EventArgs object that contains the event data.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Input.C1MaskedInput.GetControlCssClass">
            <summary>
            Gets the CSS class name for the control.
            </summary>
            <returns></returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Input.C1MaskedInput.GetTextAlign">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Input.C1MaskedInput.CreateChildControls">
            <summary>
            Notifies server controls that use composition-based implementation to create 
            any child controls they contain in preparation for posting back or rendering.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Input.C1MaskedInput.Render(System.Web.UI.HtmlTextWriter)">
            <summary>
            Renders the control to the specified HTML writer.
            </summary>
            <param name="writer">The HtmlTextWriter object that receives the control content.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Input.C1MaskedInput.RenderContents(System.Web.UI.HtmlTextWriter)">
            <summary>
            RenderContents override
            </summary>
            <param name="writer">HtmlTextWriter</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Input.C1MaskedInput.IsCss1Compat">
            <summary>
            Returns true if Css1Compat, otherwise BackCompat
            </summary>
            <returns></returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Input.C1MaskedInput.updateMaskedTextProvider">
            <summary>
            Update Masked Text provider with current control's properties
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Input.C1MaskedInput.GetScriptDescriptors">
            <summary>
            Gets a collection of script descriptors that represent ECMAScript (JavaScript) client components.
            </summary>
            <returns>An IEnumerable collection of ScriptDescriptor objects.</returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Input.C1MaskedInput.LoadTextOrValue(System.String,System.Object)">
            <summary>
            
            </summary>
            <param name="key"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Input.C1MaskedInput.AllowPromptAsInput">
             <summary>
              Gets or sets a value indicating whether PromptChar
              can be entered as valid data by the user.
             </summary>
            <remarks>
             Even when <b>AllowPromptAsInput</b> is true, the prompt character 
             must be valid for the current location in the mask in order 
             to be accepted. For example, if PromptChar is "*", and the 
             current location in the mask demands the user enter a digit, 
             entering an asterisk (*) will fail. 
            </remarks>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Input.C1MaskedInput.Mask">
            <summary>
            Gets or sets the input mask to use at run time. Mask must be a 
            string composed of one or more of the masking elements, 
            enumeration parts, or numeric ranges.
            </summary>
            <remarks>For a list of masking elements, 
            see the <span style="LinkTopic">Defining C1MaskedInput</span> topic.</remarks>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Input.C1MaskedInput.HidePromptOnLeave">
            <summary>
            Gets or sets a value indicating whether the prompt characters 
            in the input mask are hidden when the C1MaskedInput 
            loses focus. 
            </summary>
            <remarks>Returns true if PromptChar is hidden when the C1MaskedInput 
            does not have focus; otherwise, false. The default is false.</remarks>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Input.C1MaskedInput.PasswordChar">
            <summary>
            Gets or sets the character to be substituted for the actual input characters.
            </summary>
            <remarks>Mask property must be non-empty for the PasswordChar property 
            to take effect. Another option is to set UseSystemPasswordChar, 
            which will show all displayable characters as password chars.</remarks>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Input.C1MaskedInput.UseSystemPasswordChar">
            <summary>
            Indicates if the displayable text in the control should appear as the 
            default password character.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Input.C1MaskedInput.PromptChar">
            <summary>
            Gets or sets the character used to represent the absence of 
            user input in the control.
            </summary>
            <remarks>A prompt character is placed in editable positions that have not yet been assigned an input value. The default is an underscore (_).</remarks>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Input.C1MaskedInput.ResetOnPrompt">
            <summary>
            Gets or sets a value that determines how an input character that matches the prompt character should be handled.
            </summary>
            <remarks>
            Returns true if the prompt character entered as input causes the current editable
            position in the mask to be reset; otherwise, false to indicate that the prompt
            character is to be processed as a normal input character. The default is
            true.
            </remarks>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Input.C1MaskedInput.ResetOnSpace">
            <summary>
            Gets or sets a value that determines how a space input 
            character should be handled.
            </summary>
            <remarks> 
            Returns true if the space input character causes the current editable position in
                the mask to be reset; otherwise, false to indicate that it is to be processed
                as a normal input character. The default is true.
            <b>ResetOnSpace</b> is useful when assigning text that was saved 
            excluding the prompt, where the prompt is replaced with a space. 
            Before restoring such a string, setting <b>ResetOnSpace</b> to <b>True</b> will 
            reset the prompt characters at the positions occupied by spaces 
            in the input string.
            </remarks>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Input.C1MaskedInput.ShowHintForEnumParts">
            <summary>
            Specifies whether to show a hint with a list of available enumeration values 
            for enumeration parts in the mask.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Input.C1MaskedInput.SkipLiterals">
            <summary>
            Gets or sets a value indicating whether the user is allowed to re-enter literal
            values.
            </summary>
            <remarks>
            Returns true to allow literals to be reentered; otherwise, 
            false to prevent the user from overwriting literal characters. 
            The default is true.
            Masks can contain literal and editable characters. 
            If an attempt is made to add an input character to the position 
            in a mask occupied by a literal, the value of the SkipLiterals 
            property determines the result.
            </remarks>        
        </member>
        <member name="P:C1.Web.UI.Controls.C1Input.C1MaskedInput.Text">
            <summary>
            Gets or sets the text as it is currently displayed to the user.
            </summary>
            <remarks>Returns text without any prompts and literals.</remarks>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Input.C1MaskedInput.InternalText">
            <summary>
            
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Input.C1MaskedInput.TextWithPrompts">
            <summary>
            Gets the text input by the user as well as any instances of 
            the prompt character.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Input.C1MaskedInput.TextWithPromptAndLiterals">
            <summary>
            Gets the text input by the user as well as any literal 
            characters defined in the mask and any instances of the 
            prompt character.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Input.C1MaskedInput.TextWithLiterals">
            <summary>
            Gets the text input by the user as well as any literal 
            characters defined in the mask.
            </summary>        
        </member>
        <member name="P:C1.Web.UI.Controls.C1Input.C1MaskedInput.InvalidInputColor">
            <summary>
            Gets or sets the color used to identify invalid input. 
            </summary>
            <remarks>Property omitted if Color is Empty. 
            Default value is Empty.</remarks>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Input.C1DateInput.#ctor">
            <summary>
            Initializes a new instance of the C1DateInput class.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Input.C1DateInput.SetCalendarAtDesignTime(System.String)">
            <summary>
            
            </summary>
            <param name="calendarID"></param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Input.C1DateInput.parseDateFormatIntoDatePattern(System.String)">
            <summary>
            
            </summary>
            <param name="sDateFormat"></param>
            <returns></returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Input.C1DateInput.GetTextProviderScript">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Input.C1DateInput.DateFormat">
            <summary>
            Gets or sets the format pattern to display the date value.
            </summary>
            <remarks>The default value is d.</remarks>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Input.C1DateInput.DateFormatResultPattern">
            <summary>
            Gets the resulting format pattern used for Date values.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Input.C1DateInput.Date">
            <summary>
            Gets or sets the DateTime value.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Input.C1DateInput.StartYear">
            <summary>
            This is the value of the starting year to be used for the smart input year calculation.
            If a single digit greater than '5' is entered, then the starting year is considered to be
            the year of the previous century. 
            </summary>
            <remarks>
            Suppose the SmartInputMode property is set to True, 
            and you set the StartYear property to '1900'. 
            If the user enters a '5' in the C1DateInput control at run time, 
            then the year will become '1/1/1951'. Suppose the StartYear is '2000' and a '5' is entered; 
            then the year will become '2051'. The range for the StartYear is 100 years, 
            so if the starting year is '1951', then the ending year will be '2050'. 
            So if a '5' is entered and followed by '1', then it refers to the previous century; 
            if it is followed by '0', then it refers to the current century.
            </remarks>        
        </member>
        <member name="P:C1.Web.UI.Controls.C1Input.C1DateInput.NullText">
            <summary>
            Text that will be displayed for null date.
            </summary>
            <remarks>The default value is "Enter value here".</remarks>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Input.C1DateInput.ShowNullText">
            <summary>
            Shows Null Text if the Date value is empty and the control loses its focus.
            </summary>
            <remarks>
            Minimal date "01.01.0001 00:00:00" used as null date.
            The default value is false.
            </remarks>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Input.C1DateInput.Text">
            <summary>
            Text representation of the date value.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Input.C1DateInput.WebCalendar">
            <summary>
            Gets or sets the C1Calendar control to interact with.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Input.C1DateInput.CalendarClientObjID">
            <summary>
            
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Input.C1DateInput.CalendarPopupPosition">
            <summary>
            Gets or sets popup position of the C1Calendar control.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Input.C1DateInput.UpDownAlign">
            <summary>
            Gets or sets the alignment of the Up/Down buttons.
            </summary>
            <remarks>Default alignment for date editors is Right.</remarks>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Input.C1DateInput.Mask">
            <summary>
            Overridden. This property is hidden in date editors.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Input.C1DateInput.AllowPromptAsInput">
            <summary>
            Overridden. This property is hidden in date editors. 
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Input.C1DateInput.HidePromptOnLeave">
            <summary>
            Overridden. This property is hidden in date editors.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Input.C1DateInput.PasswordChar">
            <summary>
            Overridden. This property is hidden in date editors.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Input.C1DateInput.PromptChar">
            <summary>
            Overridden. This property is hidden in date editors.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Input.C1DateInput.ResetOnPrompt">
            <summary>
            Overridden. This property is hidden in date editors.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Input.C1DateInput.ResetOnSpace">
            <summary>
            Overridden. This property is hidden in date editors.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Input.C1DateInput.ShowHintForEnumParts">
            <summary>
            Overridden. This property is hidden in date editors.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Input.C1DateInput.SkipLiterals">
            <summary>
            Overridden. This property is hidden in date editors.
            </summary>
        </member>
        <member name="E:C1.Web.UI.Controls.C1Input.C1DateInput.DateChanged">
            <summary>
            Fired when the Date is changed. 
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Input.C1DateInput.OnClientDateChanged">
            <summary>
            Fires when the Date value is changed.
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1Input.EnumPartType">
            <summary>
            Type of enum part
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Input.EnumPartType.Symbol">
            <summary>
            
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Input.EnumPartType.Degit">
            <summary>
            
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1Input.C1MaskedTextProvider">
            <summary>
            C1MaskedTextProvider. Custom wraper for MaskedTextProvider.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Input.C1MaskedTextProvider.#ctor(System.String,System.Globalization.CultureInfo)">
            <summary>
            Constructor
            </summary>
            <param name="mask">Mask string.</param>
            <param name="aCultureInfo">Culture.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Input.C1MaskedTextProvider.ApplyFormatToEnumValue(System.String,System.Int32,C1.Web.UI.Controls.C1Input.EnumPartType)">
            <summary>
            ApplyFormatToEnumValue
            </summary>
            <param name="sEnumValue"></param>
            <param name="aMaxLen"></param>
            <param name="aEnumType"></param>
            <returns></returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Input.C1MaskedTextProvider.GetDefaultValueForEnumArray(System.String[],C1.Web.UI.Controls.C1Input.EnumPartType)">
            <summary>
            Get and returns formated default value for enumeration part
            </summary>
            <param name="arr"></param>
            <param name="aEnumType"></param>
            <returns></returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Input.C1MaskedTextProvider.ParseEnumerationParts(System.String)">
            <summary>
            Preparse mask for enumeration parts:
            </summary>
            <param name="mask"></param>
            <returns></returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Input.C1MaskedTextProvider.Set(System.String)">
            <summary>
            
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Input.C1MaskedTextProvider.ToString(System.Boolean)">
            <summary>
            
            </summary>
            <param name="ignorePasswordChar"></param>
            <returns></returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Input.C1MaskedTextProvider.ToString(System.Boolean,System.Boolean)">
            <summary>
            
            </summary>
            <param name="includePrompt"></param>
            <param name="includeLiterals"></param>
            <returns></returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Input.C1MaskedTextProvider.ToString(System.Boolean,System.Boolean,System.Boolean,System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="ignorePassword"></param>
            <param name="includePrompt"></param>
            <param name="includeLiterals"></param>
            <param name="startPos"></param>
            <param name="len"></param>
            <returns></returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Input.C1MaskedTextProvider.GetResultingMaskForStandardMaskedTextBox(System.String,System.Globalization.CultureInfo)">
            <summary>
            Returns mask without custom parts(such as enumeration parts)
            </summary>
            <param name="aMask"></param>
            <param name="aCultureInfo"></param>
            <returns></returns>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Input.C1MaskedTextProvider.IncludeLiterals">
            <summary>
            
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Input.C1MaskedTextProvider.IncludePrompt">
            <summary>
            
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Input.C1MaskedTextProvider.PromptChar">
            <summary>
            
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Input.C1MaskedTextProvider.PasswordChar">
            <summary>
            
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Input.C1MaskedTextProvider.Mask">
            <summary>
            
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1Input.C1CurrencyInput">
            <summary>
            Web control specialized for editing currency values. 
            Using the numeric editor, you can specify input without 
            writing any custom validation logic in your application.
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1Input.C1NumericInput">
            <summary>
            Web control specialized for editing numeric values. 
            Using the numeric editor, you can specify input without 
            writing any custom validation logic in your application.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Input.C1NumericInput.#ctor">
            <summary>
            Initializes a new instance of the C1NumericInput class.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Input.C1NumericInput.GetTextAlign">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Input.C1NumericInput.GetTextProviderScript">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Input.C1NumericInput.LoadTextOrValue(System.String,System.Object)">
            <summary>
            
            </summary>
            <param name="key"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Input.C1NumericInput.MinValue">
            <summary>
            Minimum value that can be entered.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Input.C1NumericInput.MaxValue">
            <summary>
            Maximum value that can be entered.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Input.C1NumericInput.Text">
            <summary>
            Not used by numeric controls.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Input.C1NumericInput.Value">
            <summary>
            Gets or sets a numeric value.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Input.C1NumericInput.InternalValue">
            <summary>
            
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Input.C1NumericInput.DecimalPlaces">
            <summary>
            Indicates the number of decimal places to display.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Input.C1NumericInput.ThousandsSeparator">
            <summary>
            Indicates whether the thousands group separator will be 
            inserted between every three decimal digits 
            (number of digits in thousands group depends on the 
            selected Culture).
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Input.C1NumericInput.NullText">
            <summary>
            Text that will be displayed for null value(value that equals to MinValue).
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Input.C1NumericInput.Increment">
            <summary>
             Gets or sets how much to increase/decrease value with up/down buttons.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Input.C1NumericInput.ShowNullText">
            <summary>
            Show Null Text if Numeric value is empty(equals MinValue) and control looses its focus.
            </summary>
            <remarks>
            MinValue is used as null value.
            </remarks>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Input.C1NumericInput.TextAlign">
            <summary>
            Alignment of the text.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Input.C1NumericInput.UpDownAlign">
            <summary>
            Alignment of the Up/Down buttons.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Input.C1NumericInput.Mask">
            <summary>
            Not used by numeric controls.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Input.C1NumericInput.AllowPromptAsInput">
            <summary>
            Not used by numeric controls.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Input.C1NumericInput.HidePromptOnLeave">
            <summary>
            Not used by numeric controls.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Input.C1NumericInput.PasswordChar">
            <summary>
            Not used by numeric controls.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Input.C1NumericInput.PromptChar">
            <summary>
            Not used by numeric controls.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Input.C1NumericInput.ResetOnPrompt">
            <summary>
            Not used by numeric controls.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Input.C1NumericInput.ResetOnSpace">
            <summary>
            Not used by numeric controls.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Input.C1NumericInput.ShowHintForEnumParts">
            <summary>
            Not used by numeric controls.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Input.C1NumericInput.SkipLiterals">
            <summary>
            Not used by numeric controls.
            </summary>
        </member>
        <member name="E:C1.Web.UI.Controls.C1Input.C1NumericInput.ValueChanged">
            <summary>
            Fires when the value is changed.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Input.C1NumericInput.OnClientValueBoundsExceeded">
            <summary>
            Fires immediately after the value typed in the input box is out of Min or Max bounds.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Input.C1CurrencyInput.#ctor">
            <summary>
            Initializes a new instance of the C1CurrencyInput class.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Input.C1NumericToStringFormat.formatDegits(System.Double,System.String,System.String,System.Int32,System.Int32[])">
            <summary>
            Format degits, add groups separators, decimal separator, decimals
            </summary>
            <param name="value"></param>
            <param name="aGroupSeparator"></param>
            <param name="aDecimalSeparator"></param>
            <param name="aDecimalDegitsCount">-1 means autosize</param>
            <param name="aGroupSizes"></param>
            <returns></returns>
        </member>
        <member name="T:C1.Web.UI.Controls.C1Input.C1PercentInput">
            <summary>
            Web control derived from C1NumericInput specialized for 
            editing percent values. 
            Using the numeric editor, you can specify input without 
            writing any custom validation logic in your application.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Input.C1PercentInput.#ctor">
            <summary>
            Initializes a new instance of the C1PercentInput class.
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1Editor.C1EditorHyperLinkDialog">
            <summary>
            
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Editor.C1EditorHyperLinkDialog.#ctor(System.String)">
            <summary>
            
            </summary>
            <param name="rootFolder"></param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Editor.C1EditorHyperLinkDialog.GetAppPath">
            <summary>
            Gets App path.
            </summary>
            <returns>Return a string.</returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Editor.C1EditorHyperLinkDialog.GetAppUrl">
            <summary>
            Gets App url.
            </summary>
            <returns>Return a string.</returns>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Editor.C1EditorHyperLinkDialog.Page">
            <summary>
            Page
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1ProgressBar.ProgressBarFillDirection">
            <summary>
            Gets or sets the direction that the progress bar will fill.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1ProgressBar.ProgressBarFillDirection.FromLeftOrTop">
            <summary>
            The setting for a progress bar that will fill from left to right (for a horizontal bar), or from top to bottom (for a vertical bar).
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1ProgressBar.ProgressBarFillDirection.FromRightOrBottom">
            <summary>
            The setting for a progress bar that will fill from right to left (for a horizontal bar), or from bottom to top (for a vertical bar).
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1ProgressBar.ProgressBarLabelAlign">
            <summary>
            Positioning of the label within the progress bar.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1ProgressBar.ProgressBarLabelAlign.None">
            <summary>
            No label is displayed.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1ProgressBar.ProgressBarLabelAlign.LeftOrTop">
            <summary>
            Label is displayed on the left or top of the control.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1ProgressBar.ProgressBarLabelAlign.Center">
            <summary>
            Label is displayed on the control.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1ProgressBar.ProgressBarLabelAlign.RightOrBottom">
            <summary>
            Label is displayed on the right or bottom of the control.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1ProgressBar.ProgressBarLabelAlign.Running">
            <summary>
            Label is displayed along the edge of the progress
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1ProgressBar.C1ProgressBar">
            <summary>
            Represents a ProgressBar in an ASP.NET Web page.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1ProgressBar.C1ProgressBar.OnRunTask(C1.Web.UI.Controls.C1ProgressBar.C1ProgressBarTaskEventArgs)">
            <summary>
            Rises RunTask event.
            </summary>
            <param name="e">A C1ProgressBarTaskEventArgs object that contains the event data.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1ProgressBar.C1ProgressBar.#ctor">
            <summary>
            Creates a new instance of the C1ProgressBar class.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1ProgressBar.C1ProgressBar.CreateChildControls">
            <summary>
            Called by the ASP.NET page framework to notify server controls that use composition-based
            implementation to create any child controls they contain in preparation for
            posting back or rendering.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1ProgressBar.C1ProgressBar.CreateBackcloth">
            <summary>
            Create Backcloth for C1ProgressBar.
            </summary>
            <returns>Return a control.</returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1ProgressBar.C1ProgressBar.CreateBacklabelArea">
            <summary>
            Create BacklabelArea for C1ProgressBar.
            </summary>
            <returns>Return a control.</returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1ProgressBar.C1ProgressBar.CreateFrontlabelArea">
            <summary>
            Create FrontlabelArea for C1ProgressBar.
            </summary>
            <returns>Return a control.</returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1ProgressBar.C1ProgressBar.CreateProgress">
            <summary>
            Create progress for C1ProgressBar.
            </summary>
            <returns>Return a control.</returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1ProgressBar.C1ProgressBar.GetVisualStyleCssClassName">
            <summary>
            Gets the class name of visual style.
            </summary>
            <returns></returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1ProgressBar.C1ProgressBar.DetermineCompoundCssClass">
            <summary>
            Determine compound css class.
            </summary>
            <returns></returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1ProgressBar.C1ProgressBar.NotifyToCreateChildControls">
            <summary>
            Notify to create child controls.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1ProgressBar.C1ProgressBar.AddAttributesToRender(System.Web.UI.HtmlTextWriter)">
            <summary>
            Adds HTML attributes and styles that need to be rendered to the specified HtmlTextWriterTag.
            </summary>
            <param name="writer">A HtmlTextWriter that represents the output stream to render HTML content on the client.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1ProgressBar.C1ProgressBar.OnInit(System.EventArgs)">
            <summary>
            Raises the System.Web.UI.Control.Init event.
            </summary>
            <param name="e">An System.EventArgs object that contains the event data.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1ProgressBar.C1ProgressBar.OnPreRender(System.EventArgs)">
            <summary>
            Raises the PreRender event.
            </summary>
            <param name="e">An EventArgs object that contains the event data.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1ProgressBar.C1ProgressBar.Render(System.Web.UI.HtmlTextWriter)">
            <summary>
            Renders the control to the specified HTML writer.
            </summary>
            <param name="writer">The HtmlTextWriter object that receives the control content.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1ProgressBar.C1ProgressBar.RenderContents(System.Web.UI.HtmlTextWriter)">
            <summary>
            Renders the contents of the control to the specified writer. This method is used primarily by control developers.
            </summary>
            <param name="writer">A System.Web.UI.HtmlTextWriter that represents the output stream to render HTML content on the client.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1ProgressBar.C1ProgressBar.GetScriptDescriptors">
            <summary>
            When overridden in a derived class, registers the ScriptDescriptor objects for the control.
            </summary>
            <returns>An enumeration of ScriptDescriptor objects.</returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1ProgressBar.C1ProgressBar.GetScriptReferences">
            <summary>
            When overridden in a derived class, registers the script libraries for the control.
            </summary>
            <returns>
            An object that implements the IEnumerable interface and that contains
            ECMAScript (JavaScript) files that have been registered as embedded resources.
            </returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1ProgressBar.C1ProgressBar.GetTotalValue">
            <summary>
            Get total value of the C1ProgressBar.
            </summary>
            <returns>Return a int value.</returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1ProgressBar.C1ProgressBar.GetCurrentValue">
            <summary>
            Get the current value of the C1ProgressBar.
            </summary>
            <returns>Return a int value.</returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1ProgressBar.C1ProgressBar.GetAPixelValue">
            <summary>
            Get the value according to one pixel.
            </summary>
            <returns>Return a double value.</returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1ProgressBar.C1ProgressBar.GetCurValuePixel">
            <summary>
            Get the pixel according to current value.
            </summary>
            <returns>Return a double value.</returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1ProgressBar.C1ProgressBar.GetScrollableLength">
            <summary>
            Get the progress scrollable length.
            </summary>
            <returns>Return a int value.</returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1ProgressBar.C1ProgressBar.SaveLayout(System.String)">
            <summary>
            Saves the control layout properties to the file.
            </summary>
            <param name="filename">The file where the values of the layout properties will be saved.</param> 
        </member>
        <member name="M:C1.Web.UI.Controls.C1ProgressBar.C1ProgressBar.SaveLayout(System.IO.Stream)">
            <summary>
            Saves control layout properties to the stream.
            </summary>
            <param name="stream">The stream where the values of layout properties will be saved.</param> 
        </member>
        <member name="M:C1.Web.UI.Controls.C1ProgressBar.C1ProgressBar.LoadLayout(System.String)">
            <summary>
            Loads control layout properties from the file.
            </summary>
            <param name="filename">The file where the values of layout properties will be loaded.</param> 
        </member>
        <member name="M:C1.Web.UI.Controls.C1ProgressBar.C1ProgressBar.LoadLayout(System.IO.Stream)">
            <summary>
            Load control layout properties from the stream.
            </summary>
            <param name="stream">The stream where the values of layout properties will be loaded.</param> 
        </member>
        <member name="M:C1.Web.UI.Controls.C1ProgressBar.C1ProgressBar.LoadLayout(System.String,C1.Web.UI.LayoutType)">
            <summary>
            Loads control layout properties with specified types from the file.
            </summary>
            <param name="filename">The file where the values of layout properties will be loaded.</param> 
            <param name="layoutTypes">The layout types to load.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1ProgressBar.C1ProgressBar.LoadLayout(System.IO.Stream,C1.Web.UI.LayoutType)">
            <summary>
            Loads the control layout properties with specified types from the stream.
            </summary>
            <param name="stream">The stream where the values of the layout properties will be loaded.</param> 
            <param name="layoutTypes">The layout types to load.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1ProgressBar.C1ProgressBar.System#Web#UI#IPostBackDataHandler#LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)">
            <summary>
            Processes postback data for an ASP.NET server control.
            </summary>
            <param name="postDataKey">The key identifier for the control.</param>
            <param name="postCollection">The collection of all incoming name values.</param>
            <returns>true if the server control's state changes as a result of the postback; otherwise, false.</returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1ProgressBar.C1ProgressBar.System#Web#UI#IPostBackDataHandler#RaisePostDataChangedEvent">
            <summary>
            Notify the ASP.NET application that the state of the control has changed.
            </summary>
        </member>
        <member name="E:C1.Web.UI.Controls.C1ProgressBar.C1ProgressBar.RunTask">
            <summary>
            Fires when a server side task is running.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ProgressBar.C1ProgressBar.StartTaskButton">
            <summary>
            Gets or Sets ID of the Button which starts a server side task.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ProgressBar.C1ProgressBar.StopTaskButton">
            <summary>
            Gets or Sets ID of the Button which stops a server side task.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ProgressBar.C1ProgressBar.Height">
            <summary>
             Gets or sets the height of the slider.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ProgressBar.C1ProgressBar.Width">
            <summary>
            Gets or sets the width of the slider.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ProgressBar.C1ProgressBar.ToolTip">
            <summary>
            The tooltip displayed when the mouse is over the control. 
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ProgressBar.C1ProgressBar.IndicatorImage">
            <summary>
            Gets or sets the URL of the image for the progress indicator.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ProgressBar.C1ProgressBar.IndicatorIncrement">
            <summary>
            Gets or sets the minimum incrementing width (in pixel) of the indicator image when the indicator is advancing to a new position.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ProgressBar.C1ProgressBar.LabelFormatString">
            <summary>
            String that will be used as a format for the progress bar labels. 
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ProgressBar.C1ProgressBar.LabelAlign">
            <summary>
            Positioning of the label within the progress bar.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ProgressBar.C1ProgressBar.FillDirection">
            <summary>
            Gets or sets the direction that the progress bar will fill.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ProgressBar.C1ProgressBar.Orientation">
            <summary>
            The direction in which control is laid out.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ProgressBar.C1ProgressBar.MaximumValue">
            <summary>
            Gets or sets the maximum value of C1ProgressBar.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ProgressBar.C1ProgressBar.MinimumValue">
            <summary>
            Gets or sets the minimum value of C1ProgressBar.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ProgressBar.C1ProgressBar.Value">
            <summary>
            Gets or sets the value of C1ProgressBar.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ProgressBar.C1ProgressBar.AnimationDelay">
            <summary>
            Delay in milliseconds before the value of the progress bar is changing.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ProgressBar.C1ProgressBar.AnimationDuration">
            <summary>
            Define how long (in milliseconds) the animation of the progress will run.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ProgressBar.C1ProgressBar.Easing">
            <summary>
            The easing that is applied to the animation.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ProgressBar.C1ProgressBar.VisualStylePath">
            <summary>
            Path to visual styles.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ProgressBar.C1ProgressBar.VisualStyle">
            <summary>
            VisualStyle name.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ProgressBar.C1ProgressBar.UseEmbeddedVisualStyles">
            <summary>
            If true then control will use VisualStyle embedded into control's assembly.
            otherwise control will load VisualStyle from disk.
            </summary>     
        </member>
        <member name="P:C1.Web.UI.Controls.C1ProgressBar.C1ProgressBar.EmbeddedVisualStyles">
            <summary>
            Returns string array with embedded visual style names.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ProgressBar.C1ProgressBar.TagKey">
            <summary>
            Changed the type of  control's  tag.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ProgressBar.C1ProgressBar.Enabled">
            <summary>
            Gets or sets if C1ProgressBar is Enabled.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ProgressBar.C1ProgressBar.OnClientBeforeProgressChanging">
            <summary>
            Fires on client side  before the value of the progress bar is changing.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ProgressBar.C1ProgressBar.OnClientProgressChanging">
            <summary>
            Fires on client side when the value is changing.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ProgressBar.C1ProgressBar.OnClientProgressChanged">
            <summary>
            Fires on client side when the value has been changed.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ProgressBar.C1ProgressBar.OnClientClick">
            <summary>
            Fires on client side when the progress bar is clicked.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ProgressBar.C1ProgressBar.OnClientMouseDown">
            <summary>
            Fires on client side when the mouse is down on the progress bar.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ProgressBar.C1ProgressBar.OnClientMouseOut">
            <summary>
            Fires on client side when the user moves the mouse pointer outside the progress bar.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ProgressBar.C1ProgressBar.OnClientMouseOver">
            <summary>
            Fires on client side when the mouse is over the progress bar.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ProgressBar.C1ProgressBar.OnClientMouseUp">
            <summary>
            Fires on client side when the mouse is released from the progress bar.
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1ProgressBar.C1ProgressBarTaskEventHandler">
            <summary>
            Delegate type for handling events that are related to the ValueChanged event.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:C1.Web.UI.Controls.C1ProgressBar.C1ProgressBarTaskEventArgs">
            <summary>
            C1ProgressBarTaskEventArgs
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1ProgressBar.C1ProgressBarTaskEventArgs.#ctor(System.Web.HttpResponse)">
            <summary>
            constructor
            </summary>
            <param name="response">The specified HttpResponse object.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1ProgressBar.C1ProgressBarTaskEventArgs.UpdateProgress(System.Int32)">
            <summary>
            Update Progress for C1ProgressBar
            </summary>
            <param name="newValue">The new value.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1ProgressBar.C1ProgressBarTaskEventArgs.UpdateProgress(System.Int32,System.String)">
            <summary>
            Update Progress for C1ProgressBar
            </summary>
            <param name="newValue">The new value.</param>
            <param name="extraData">The extra data.</param>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ProgressBar.C1ProgressBarTaskEventArgs.ExtraData">
            <summary>
            ExtraData
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ProgressBar.C1ProgressBarTaskEventArgs.Value">
            <summary>
            Value
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1ProgressBar.C1ProgressBarSerializer">
            <summary>
            Serializes C1ProgressBar Control.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1ProgressBar.C1ProgressBarSerializer.#ctor(System.Object)">
            <summary>
            Constructor
            </summary>
            <param name="obj"></param>
        </member>
        <member name="T:C1.Web.UI.Controls.C1Slider.ThumbsInteractionMode">
            <summary>
            ThumbsInteractionMode
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Slider.ThumbsInteractionMode.Free">
            <summary>
            Thumbs are free to slide past each other.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Slider.ThumbsInteractionMode.Locked">
            <summary>
            Thumbs cannot slide past or push each other.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Slider.ThumbsInteractionMode.Push">
            <summary>
            Thumbs will push each other when they slide next to one another.
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1Slider.TrackFillMode">
            <summary>
            TrackFillMode
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Slider.TrackFillMode.All">
            <summary>
            Show extra styles in track bar for both Value and SecondaryValue.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Slider.TrackFillMode.None">
            <summary>
            Values on track bar are not displayed.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Slider.TrackFillMode.MainValue">
            <summary>
            Show extra style with ValueFill in track bar for area between edge and main Value only.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Slider.TrackFillMode.Range">
            <summary>
            Show extra style with ValueFill in track bar for area between Value and SecondaryValue.
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1SpellChecker.C1SpellCheckerCanvas">
            <summary>
            
            </summary>    
        </member>
        <member name="M:C1.Web.UI.Controls.C1SpellChecker.C1SpellCheckerCanvas.#ctor(C1.Web.UI.Controls.C1SpellChecker.C1SpellChecker)">
            <summary>
            
            </summary>
            <param name="owner"></param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1SpellChecker.C1SpellCheckerCanvas.InstantiateIn(System.Web.UI.Control)">
            <summary>
            
            </summary>
            <param name="container"></param>
        </member>
        <member name="T:C1.Web.UI.Controls.C1SpellChecker.C1SpellChecker">
            <summary>
            
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1SpellChecker.C1SpellChecker.#ctor">
            <summary>
            C1SpellChecker
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1SpellChecker.C1SpellChecker.#ctor(System.Boolean)">
            <summary>
            C1SpellChecker
            </summary>
            <param name="dialogUseEmbeddedVisualStyles"></param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1SpellChecker.C1SpellChecker.CreateChildControls">
            <summary>
            Called by the ASP.NET page framework to notify server controls that use composition-based
            implementation to create any child controls they contain in preparation for posting back or rendering.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1SpellChecker.C1SpellChecker.OnPreRender(System.EventArgs)">
            <summary>
            Raises the PreRender event.
            </summary>
            <param name="e">An EventArgs object that contains the event data.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1SpellChecker.C1SpellChecker.OnInit(System.EventArgs)">
            <summary>
            Raises the Init event.
            </summary>
            <param name="e">An EventArgs object that contains the event data.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1SpellChecker.C1SpellChecker.Render(System.Web.UI.HtmlTextWriter)">
            <summary>
            Renders the control to the specified HTML writer.
            </summary>
            <param name="writer">The HtmlTextWriter object that receives the control content.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1SpellChecker.C1SpellChecker.RenderContents(System.Web.UI.HtmlTextWriter)">
            <summary>
            Renders the contents of the control to the specified writer. This method is used primarily by control developers.
            </summary>
            <param name="writer">A System.Web.UI.HtmlTextWriter that represents the output stream to render HTML content on the client.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1SpellChecker.C1SpellChecker.GetScriptDescriptors">
            <summary>
            When overridden in a derived class, registers the ScriptDescriptor objects for the control.
            </summary>
            <returns>An enumeration of ScriptDescriptor objects.</returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1SpellChecker.C1SpellChecker.GetScriptReferences">
            <summary>
            When overridden in a derived class, registers the script libraries for the control.
            </summary>
            <returns>
            An object that implements the IEnumerable interface and that contains
            ECMAScript (JavaScript) files that have been registered as embedded resources.
            </returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1SpellChecker.C1SpellChecker.GetCallbackResult">
            <summary>
            Get result through Callback.
            </summary>
            <returns>Return a string.</returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1SpellChecker.C1SpellChecker.RaiseCallbackEvent(System.String)">
            <summary>
            Raise Callback event
            </summary>
            <param name="eventArgument">The specified event argument.</param>
        </member>
        <member name="P:C1.Web.UI.Controls.C1SpellChecker.C1SpellChecker.Width">
            <summary>
            Gets or sets the width of the Web server control.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1SpellChecker.C1SpellChecker.Height">
            <summary>
            Gets or sets the height of the Web server control.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1SpellChecker.C1SpellChecker.DictionaryPath">
            <summary>
            SpellChecker dictionary path.
            </summary>
            <example>
            Example of the relative path: "~/Dictionaries/C1Spell_de-DE.dct"
            </example>
        </member>
        <member name="P:C1.Web.UI.Controls.C1SpellChecker.C1SpellChecker.TextControlClientId">
            <summary>
            Id of the Text control for spell check.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1SpellChecker.C1SpellChecker.Theme">
            <summary>
            C1WebSpellChecker Theme.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1SpellChecker.C1SpellChecker.VisualStyle">
            <summary>
            VisualStyle name.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1SpellChecker.C1SpellChecker.EmbeddedVisualStyles">
            <summary>
            Returns string array with embedded visual style names.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1SpellChecker.C1SpellChecker.TagKey">
            <summary>
            Changed the type of  control's  tag.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1SpellChecker.C1SpellChecker.FindScriptObject">
            <summary>
            Returns javascript string with reference to javascript object
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1SpellChecker.CursorStyleEnum">
            <summary>
            Represents style of the mouse pointer.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1SpellChecker.CursorStyleEnum.NotSet">
            <summary>
            Not set.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1SpellChecker.CursorStyleEnum.Default">
            <summary>
            Default.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1SpellChecker.CursorStyleEnum.crosshair">
            <summary>
            crosshair.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1SpellChecker.CursorStyleEnum.help">
            <summary>
            Help.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1SpellChecker.CursorStyleEnum.move">
            <summary>
            Move.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1SpellChecker.CursorStyleEnum.pointer">
            <summary>
            Pointer.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1SpellChecker.CursorStyleEnum.progress">
            <summary>
            Progress.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1SpellChecker.CursorStyleEnum.text">
            <summary>
            Text.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1SpellChecker.CursorStyleEnum.wait">
            <summary>
            Wait.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1SpellChecker.CursorStyleEnum.n_resize">
            <summary>
            North resize.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1SpellChecker.CursorStyleEnum.ne_resize">
            <summary>
            North-East resize.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1SpellChecker.CursorStyleEnum.e_resize">
            <summary>
            East resize.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1SpellChecker.CursorStyleEnum.se_resize">
            <summary>
            South-East resize.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1SpellChecker.CursorStyleEnum.s_resize">
            <summary>
            South resize.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1SpellChecker.CursorStyleEnum.sw_resize">
            <summary>
            South-West resize.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1SpellChecker.CursorStyleEnum.w_resize">
            <summary>
            West resize.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1SpellChecker.CursorStyleEnum.nw_resize">
            <summary>
            North-West resize.
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1SpellChecker.C1SpellCheckerTheme">
            <summary>
            C1WebSpellChecker Theme.
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1SpellChecker.IC1Style">
            <summary>
            
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1SpellChecker.IC1Style.CopyFrom(System.Object)">
            <summary>
            Duplicates the style properties of the specified Style into the instance of the Style class that this method is called from.
            </summary>
            <param name="aStyle"></param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1SpellChecker.IC1Style.MergeWith(System.Object)">
            <summary>
            Combines the style properties of the specified Style with the instance of the Style class that this method is called from.
            </summary>
            <param name="aStyle"></param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1SpellChecker.IC1Style.Reset">
            <summary>
            Removes any defined style elements from the state bag.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1SpellChecker.C1SpellCheckerTheme.System#Web#UI#IStateManager#LoadViewState(System.Object)">
            <summary>
            Loads the server control's previously saved
             view state to the control.
            </summary>
            <param name="state"></param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1SpellChecker.C1SpellCheckerTheme.System#Web#UI#IStateManager#SaveViewState">
            <summary>
            This member overrides Control.SaveViewState.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1SpellChecker.C1SpellCheckerTheme.System#Web#UI#IStateManager#TrackViewState">
            <summary>
            This member overrides Control.TrackViewState.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1SpellChecker.C1SpellCheckerTheme.Reset">
            <summary>
            Reset
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1SpellChecker.C1SpellCheckerTheme.CopyFrom(System.Object)">
            <summary>
            Copy from a StyleTheme.
            </summary>
            <param name="aStyleTheme">The specified object.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1SpellChecker.C1SpellCheckerTheme.MergeWith(System.Object)">
            <summary>
            Merge With.
            </summary>
            <param name="aStyleTheme">The specified object.</param>
        </member>
        <member name="P:C1.Web.UI.Controls.C1SpellChecker.C1SpellCheckerTheme.TextElementsStyle">
            <summary>
            TextElements Style.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1SpellChecker.C1SpellCheckerTheme.TextInputElementsStyle">
            <summary>
            TextInputElements Style.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1SpellChecker.C1SpellCheckerTheme.TextInputElementsDisabledStyle">
            <summary>
            TextInputElementsDisabled Style.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1SpellChecker.C1SpellCheckerTheme.ButtonsStyle">
            <summary>
            Gets or sets the Style for buttons.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1SpellChecker.C1SpellCheckerTheme.ButtonsHotStyle">
            <summary>
            Gets or sets the HotStyle for buttons.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1SpellChecker.C1SpellCheckerTheme.ButtonsPressedStyle">
            <summary>
            Gets or sets the PressedStyle for buttons.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1SpellChecker.C1SpellCheckerTheme.ButtonsDisabledStyle">
            <summary>
            Gets or sets the DisabledStyle for buttons.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1SpellChecker.C1SpellCheckerTheme.ViewState">
            <summary>
            ViewState
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1SpellChecker.ExtendedItemStyle">
            <summary>
            Extended Style.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1SpellChecker.ExtendedItemStyle.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1SpellChecker.ExtendedItemStyle.c1UrlResolver">
            <summary>
            UrlResolver
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1SpellChecker.ExtendedItemStyle.AddAttributesToRender(System.Web.UI.HtmlTextWriter,System.Web.UI.WebControls.WebControl)">
            <summary>
               Adds information about all not empty style properties
               to the list of attributes to render.
            </summary>
            <param name="writer"></param>
            <param name="owner"></param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1SpellChecker.ExtendedItemStyle.FillStyleAttributes(System.Web.UI.CssStyleCollection,System.Web.UI.IUrlResolutionService)">
            <summary>
            Fill style with attributes.
            </summary>
            <param name="attributes">The specified CssStyleCollection object.</param>
            <param name="urlResolver">The specified IUrlResolutionService object.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1SpellChecker.ExtendedItemStyle.CopyFrom(System.Web.UI.WebControls.Style)">
            <summary>
               Duplicates the non-empty style properties of the specified Style
               into the instance of the Style class that
               this method is called from.
            </summary>
            <param name="s"></param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1SpellChecker.ExtendedItemStyle.MergeWith(System.Web.UI.WebControls.Style)">
            <summary>
               Combines the style properties of the specified Style
               into the instance of the Style class that
               this method is called from.
            </summary>
            <param name="s"></param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1SpellChecker.ExtendedItemStyle.Reset">
            <summary>
            Removes any defined style elements from the style.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1SpellChecker.ExtendedItemStyle.ToString">
            <summary>
            Returns a string representation of the C1TableItemStyle object.
            </summary>
            <returns></returns>
        </member>
        <member name="P:C1.Web.UI.Controls.C1SpellChecker.ExtendedItemStyle.Width">
            <summary>
            This property is hidden.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1SpellChecker.ExtendedItemStyle.Height">
            <summary>
            This property is hidden.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1SpellChecker.ExtendedItemStyle.ForeColor">
            <summary>
            Gets or sets the foreground color.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1SpellChecker.ExtendedItemStyle.BackColor">
            <summary>
            Gets or sets the background color.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1SpellChecker.ExtendedItemStyle.BorderColor">
            <summary>
            Gets or sets the border color.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1SpellChecker.ExtendedItemStyle.BorderStyle">
            <summary>
            Gets or sets the border style.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1SpellChecker.ExtendedItemStyle.BorderWidth">
            <summary>
            Gets or sets the border width.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1SpellChecker.ExtendedItemStyle.CssClass">
            <summary>
            Gets or sets the cascading style sheet (CSS) class rendered on the client.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1SpellChecker.ExtendedItemStyle.HorizontalAlign">
            <summary>
            Gets or sets the horizontal alignment of the contents in a cell.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1SpellChecker.ExtendedItemStyle.VerticalAlign">
            <summary>
            Gets or sets the vertical alignment of the contents in a cell.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1SpellChecker.ExtendedItemStyle.Wrap">
            <summary>
            Gets or sets a value indicating whether the contents of a cell wrap in the cell.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1SpellChecker.ExtendedItemStyle.Transparent">
            <summary>
            Transparent value. Accepts value in range 0 - 100.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1SpellChecker.ExtendedItemStyle.Cursor">
            <summary>
            Cursor style.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1SpellChecker.ExtendedItemStyle.BackgroundImage">
            <summary>
            URL to background image.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1SpellChecker.ExtendedItemStyle.BorderDetailed">
            <summary>
            Style for each border side.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1SpellChecker.ExtendedItemStyle.StyleString">
            <summary>
            Represent resulting string that will apply to style HTML attribute.
            </summary>        
        </member>
        <member name="P:C1.Web.UI.Controls.C1SpellChecker.ExtendedItemStyle.IsEmpty">
            <summary>
            Gets a value indicating whether any style elements have been defined in the state bag
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1SpellChecker.BorderDetailedStyle">
            <summary>
            Style for each border side.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1SpellChecker.BorderDetailedStyle.#ctor(System.Web.UI.StateBag)">
            <summary>
            Constructor.
            </summary>
            <param name="ownerViewState"></param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1SpellChecker.BorderDetailedStyle.StyleStringUsingConditionParams(System.Collections.Hashtable)">
            <summary>
            Represent resulting string what will apply to style html attribute. 
            </summary>
            <param name="aConditionParams"></param>
            <returns></returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1SpellChecker.BorderDetailedStyle.AddAttributesToRender(System.Web.UI.HtmlTextWriter,System.Web.UI.WebControls.WebControl,System.Collections.Hashtable)">
            <summary>
            Adds information about all not empty style properties to the list of attributes to render.
            </summary>
            <param name="w">HtmlTextWriter object.</param>
            <param name="owner">Owner WebControl.</param>
            <param name="aConditionParams">Conditional parameters.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1SpellChecker.BorderDetailedStyle.AddAttributesToRender(System.Web.UI.HtmlTextWriter,System.Web.UI.WebControls.WebControl)">
            <summary>
            Adds information about all not empty style properties to the list of attributes to render.
            </summary>
            <param name="w"></param>
            <param name="owner"></param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1SpellChecker.BorderDetailedStyle.CopyFrom(C1.Web.UI.Controls.C1SpellChecker.BorderDetailedStyle)">
            <summary>
               Duplicates the non-empty style properties of the specified Style
               into the instance of the Style class that
               this method is called from.
            </summary>
            <param name="s"></param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1SpellChecker.BorderDetailedStyle.MergeWith(C1.Web.UI.Controls.C1SpellChecker.BorderDetailedStyle)">
            <summary>
               Combines the style properties of the specified Style
               into the instance of the Style class that
               this method is called from.
            </summary>
            <param name="s"></param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1SpellChecker.BorderDetailedStyle.Reset">
            <summary>
            Removes any defined style elements from the style.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1SpellChecker.BorderDetailedStyle.ToString">
            <summary>
            Returns a string representation of the BorderDetailedStyle object.
            </summary>
            <returns></returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1SpellChecker.BorderDetailedStyle.LoadViewState(System.Object)">
            <summary>
            Loads the previously saved view state of the BorderDetailedStyle object.
            </summary>
            <param name="state"></param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1SpellChecker.BorderDetailedStyle.SaveViewState">
            <summary>
            Saves the current view state of the BorderDetailedStyle object.
            </summary>
            <returns></returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1SpellChecker.BorderDetailedStyle.TrackViewState">
            <summary>
            Marks the starting point to begin tracking and saving view-state changes to the BorderDetailedStyle object.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1SpellChecker.BorderDetailedStyle.BorderLeftColor">
            <summary>
            Left border color.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1SpellChecker.BorderDetailedStyle.BorderRightColor">
            <summary>
            Right border color.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1SpellChecker.BorderDetailedStyle.BorderTopColor">
            <summary>
            Top border color.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1SpellChecker.BorderDetailedStyle.BorderBottomColor">
            <summary>
            Bottom border color.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1SpellChecker.BorderDetailedStyle.BorderLeftStyle">
            <summary>
            Left border style.
            </summary>        
        </member>
        <member name="P:C1.Web.UI.Controls.C1SpellChecker.BorderDetailedStyle.BorderRightStyle">
            <summary>
            Right border style.
            </summary>        
        </member>
        <member name="P:C1.Web.UI.Controls.C1SpellChecker.BorderDetailedStyle.BorderTopStyle">
            <summary>
            Top border style.
            </summary>        
        </member>
        <member name="P:C1.Web.UI.Controls.C1SpellChecker.BorderDetailedStyle.BorderBottomStyle">
            <summary>
            Bottom border style.
            </summary>        
        </member>
        <member name="P:C1.Web.UI.Controls.C1SpellChecker.BorderDetailedStyle.BorderLeftWidth">
            <summary>
            Left border width.
            </summary>        
        </member>
        <member name="P:C1.Web.UI.Controls.C1SpellChecker.BorderDetailedStyle.BorderRightWidth">
            <summary>
            Right border width.
            </summary>        
        </member>
        <member name="P:C1.Web.UI.Controls.C1SpellChecker.BorderDetailedStyle.BorderTopWidth">
            <summary>
            Top border width.
            </summary>        
        </member>
        <member name="P:C1.Web.UI.Controls.C1SpellChecker.BorderDetailedStyle.BorderBottomWidth">
            <summary>
            Bottom border width.
            </summary>        
        </member>
        <member name="P:C1.Web.UI.Controls.C1SpellChecker.BorderDetailedStyle.StyleString">
            <summary>
            Represent resulting string that will apply to style HTML attribute.
            </summary>        
        </member>
        <member name="P:C1.Web.UI.Controls.C1SpellChecker.BorderDetailedStyle.IsTrackingViewState">
            <summary>
            Gets a value that indicates whether the BorderDetailedStyle object is saving changes to its view state.
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1SpellChecker.CursorStyleConverter">
            <summary>
             Converts a predefined color name or an RGB color value to and 
             from a System.Drawing.Color object.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1SpellChecker.CursorStyleConverter.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1SpellChecker.CursorStyleConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            ConvertFrom override.
            </summary>
            <param name="context"></param>
            <param name="culture"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1SpellChecker.CursorStyleConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            ConvertTo override
            </summary>
            <param name="context"></param>
            <param name="culture"></param>
            <param name="value"></param>
            <param name="destinationType"></param>
            <returns></returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1SpellChecker.CursorStyleConverter.ToString(C1.Web.UI.Controls.C1SpellChecker.CursorStyleEnum)">
            <summary>
            Converts Color type to string representation.
            </summary>
            <param name="c">Color to convert.</param>
            <returns></returns>
        </member>
        <member name="T:C1.Web.UI.Controls.C1SpellChecker.ISpellParser">
            <summary>
            Interface that must be implemented by custom spell-check parsers.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1SpellChecker.ISpellParser.GetNextWord(System.String,System.Int32,C1.Web.UI.Controls.C1SpellChecker.IgnoreOptions,System.String)">
            <summary>
            Method that retrieves the next word to spell-check in a string.
            </summary>
            <param name="text">String that contains the text being spell-checked.</param>
            <param name="start">Position being checked within the <paramref name="text"/> string.</param>
            <param name="ignore"><see cref="T:C1.Web.UI.Controls.C1SpellChecker.IgnoreOptions"/> that specifies types of words that should be ignored.</param>
            <param name="previousWord">Last word retrieved by the parser (used to detect duplicates).</param>
            <returns>A <see cref="T:C1.Web.UI.Controls.C1SpellChecker.CharRange"/> object that represents the next word to be spell-checked, or 
            null if all the text has been spell-checked.</returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1SpellChecker.ISpellParser.FilterWord(System.String)">
            <summary>
            Method that filters any unwanted characters out of a string to be checked.
            </summary>
            <param name="word">Raw text to be checked.</param>
            <returns>A modified word to be checked, null to skip checking this string, 
            or the same word if no filtering is required.</returns>
            <remarks>
            <para>This method is useful in custom parsers that should ignore specific characters
            or words.</para>
            <para>For example, a parser that parses strings with accelerator characters should
            filter out the ampersands before the word is checked.</para>
            </remarks>
        </member>
        <member name="T:C1.Web.UI.Controls.C1SpellChecker.CharRange">
            <summary>
            Class that represents a character range within a string.
            This is used by the <see cref="T:C1.Web.UI.Controls.C1SpellChecker.C1SpellChecker"/> control to represent the
            spelling mistakes found in text.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1SpellChecker.CharRange.#ctor(System.String,System.Int32,System.Boolean)">
            <summary>
            Initializes a new instance of a <see cref="T:C1.Web.UI.Controls.C1SpellChecker.CharRange"/>.
            </summary>
            <param name="text">Text contained in the range.</param>
            <param name="start">Starting index of the range within the text.</param>
            <param name="duplicate">Whether the range is misspelled or just a duplicate.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1SpellChecker.CharRange.Equals(System.Object)">
            <summary>
            Determines whether this <see cref="T:C1.Web.UI.Controls.C1SpellChecker.CharRange"/> is equal to another.
            </summary>
            <param name="obj"><see cref="T:C1.Web.UI.Controls.C1SpellChecker.CharRange"/> to compare to this one.</param>
            <returns>True if both objects contain the same word at the same position.</returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1SpellChecker.CharRange.GetHashCode">
            <summary>
            Serves as a hash function for the <see cref="T:C1.Web.UI.Controls.C1SpellChecker.CharRange"/> type.
            </summary>
            <returns>A hash code for this <see cref="T:C1.Web.UI.Controls.C1SpellChecker.CharRange"/>.</returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1SpellChecker.CharRange.ExpandOverWhitespace(System.String,C1.Web.UI.Controls.C1SpellChecker.CharRange)">
            <summary>
            Extends a <see cref="T:C1.Web.UI.Controls.C1SpellChecker.CharRange"/> over whitespace.
            </summary>
            <param name="text">String that contains the <see cref="T:C1.Web.UI.Controls.C1SpellChecker.CharRange"/>.</param>
            <param name="error"><see cref="T:C1.Web.UI.Controls.C1SpellChecker.CharRange"/> that will be expanded.</param>
            <returns>Expanded <see cref="T:C1.Web.UI.Controls.C1SpellChecker.CharRange"/>.</returns>
            <remarks>
            <para>The method returns a new <see cref="T:C1.Web.UI.Controls.C1SpellChecker.CharRange"/> object that includes the original <paramref name="error"/>
            plus any whitespace that immediately follows it. If there is no whitespace after the original <paramref name="error"/>,
            then the returned value is extended to include any whitespace that precedes the original <paramref name="error"/>.</para>
            <para>This method is used to extend editor selections before deleting duplicate words.</para>
            </remarks>
        </member>
        <member name="M:C1.Web.UI.Controls.C1SpellChecker.CharRange.IsWordCharacter(System.Char)">
            <summary>
            Determines whether a character is spell-checkable.
            </summary>
            <param name="c">Character to test.</param>
            <returns>True if the character is spell-checkable, false otherwise.</returns>
            <remarks>This method returns true for all letter and digit characters, underscores, and single quotes.</remarks>
        </member>
        <member name="M:C1.Web.UI.Controls.C1SpellChecker.CharRange.GetNextWord(System.String,System.Int32,C1.Web.UI.Controls.C1SpellChecker.IgnoreOptions,System.String)">
            <summary>
            Gets the next word in a string, starting from a given position.
            </summary>
            <param name="text">String that contains the text.</param>
            <param name="start">Starting position where to look for a word.</param>
            <param name="ignore"><see cref="T:C1.Web.UI.Controls.C1SpellChecker.IgnoreOptions"/> that determines words to ignore.</param>
            <param name="previousWord">Previous word (used to detect duplicates).</param>
            <returns>A <see cref="T:C1.Web.UI.Controls.C1SpellChecker.CharRange"/> object that contains the next word in the string,
            or null if there are no more words in the string.</returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1SpellChecker.CharRange.GetWordAt(System.String,System.Int32,C1.Web.UI.Controls.C1SpellChecker.IgnoreOptions)">
            <summary>
            Gets the word at a given position in the string.
            </summary>
            <param name="text">String that contains the text.</param>
            <param name="pos">Position where to look for a word.</param>
            <param name="ignore"><see cref="T:C1.Web.UI.Controls.C1SpellChecker.IgnoreOptions"/> that determines words to ignore.</param>
            <returns>A <see cref="T:C1.Web.UI.Controls.C1SpellChecker.CharRange"/> object that contains the word at the specified
            position in the string, or null if there are no more words at the specified position.</returns>
        </member>
        <member name="P:C1.Web.UI.Controls.C1SpellChecker.CharRange.Text">
            <summary>
            Gets the string represented by this <see cref="T:C1.Web.UI.Controls.C1SpellChecker.CharRange"/>.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1SpellChecker.CharRange.Start">
            <summary>
            Gets the starting index of the string represented by this <see cref="T:C1.Web.UI.Controls.C1SpellChecker.CharRange"/> within the text.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1SpellChecker.CharRange.Length">
            <summary>
            Gets the length of the string represented by this <see cref="T:C1.Web.UI.Controls.C1SpellChecker.CharRange"/>.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1SpellChecker.CharRange.End">
            <summary>
            Gets the end index of the string represented by this <see cref="T:C1.Web.UI.Controls.C1SpellChecker.CharRange"/>.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1SpellChecker.CharRange.Duplicate">
            <summary>
            Gets whether this <see cref="T:C1.Web.UI.Controls.C1SpellChecker.CharRange"/> contains the same string as the previous one.
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1SpellChecker.CharRangeList">
            <summary>
            List of <see cref="T:C1.Web.UI.Controls.C1SpellChecker.CharRange"/> objects.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1SpellChecker.CharRangeList.Add(System.String,System.Int32,System.Boolean)">
            <summary>
            Adds a new <see cref="T:C1.Web.UI.Controls.C1SpellChecker.CharRange"/> to the list.
            </summary>
            <param name="word">Word to add to the list.</param>
            <param name="start">Starting index of the character range within the text.</param>
            <param name="duplicate">Whether the range is a duplicate of the previous range in the text.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1SpellChecker.CharRangeList.GetRangeFromPosition(System.Int32)">
            <summary>
            Gets the <see cref="T:C1.Web.UI.Controls.C1SpellChecker.CharRange"/> that contains a specified position within the text.
            </summary>
            <param name="charPosition">Position within the text.</param>
            <returns>A <see cref="T:C1.Web.UI.Controls.C1SpellChecker.CharRange"/> that contains the specified position,
            or null if there is no error at the specified position.</returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1SpellChecker.CharRangeList.GetRangeIndexFromPosition(System.Int32)">
            <summary>
            Gets the index of the <see cref="T:C1.Web.UI.Controls.C1SpellChecker.CharRange"/> that contains the specified position within the text.
            </summary>
            <param name="charPosition">Position within the text.</param>
            <returns>Index of the <see cref="T:C1.Web.UI.Controls.C1SpellChecker.CharRange"/> in the list that contains the specified position,
            or -1 if there is no error at the specified position.</returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1SpellChecker.CharRangeList.Equals(System.Object)">
            <summary>
            Determines whether the given <see cref="T:C1.Web.UI.Controls.C1SpellChecker.CharRangeList"/> is equal to this one.
            </summary>
            <param name="obj"><see cref="T:C1.Web.UI.Controls.C1SpellChecker.CharRangeList"/> to compare to this one.</param>
            <returns>True if both objects contain the same members.</returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1SpellChecker.CharRangeList.GetHashCode">
            <summary>
            Serves as a hash function for the <see cref="T:C1.Web.UI.Controls.C1SpellChecker.CharRangeList"/> type.
            </summary>
            <returns>A hash code for this <see cref="T:C1.Web.UI.Controls.C1SpellChecker.CharRangeList"/>.</returns>
        </member>
        <member name="T:C1.Web.UI.Controls.C1SpellChecker.BadWordEventHandler">
            <summary>
            Represents the method that sell me will handle the C1SpellChecker.BadWordFound event.
            </summary>
            <param name="sender">C1SpellChecker that fired the event.</param>
            <param name="e">BadWordEventArgs that contains the event data.</param>
        </member>
        <member name="T:C1.Web.UI.Controls.C1SpellChecker.BadWordEventArgs">
            <summary>
            Provides data for the C1SpellChecker.BadWordFound event.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1SpellChecker.BadWordEventArgs.#ctor(System.Windows.Forms.Form,System.Windows.Forms.Control,C1.Web.UI.Controls.C1SpellChecker.CharRange,C1.Web.UI.Controls.C1SpellChecker.CharRangeList)">
            <summary>
            Initializes a new instance of a <see cref="T:C1.Web.UI.Controls.C1SpellChecker.BadWordEventArgs"/>.
            </summary>
            <param name="dialog">Dialog that raised the event, or null if the event was not raised by a dialog.</param>
            <param name="control"><see cref="P:C1.Web.UI.Controls.C1SpellChecker.BadWordEventArgs.Control"/> being spell-checked.</param>
            <param name="error"><see cref="T:C1.Web.UI.Controls.C1SpellChecker.CharRange"/> that contains the bad word and its position within the text.</param>
            <param name="errors"><see cref="T:C1.Web.UI.Controls.C1SpellChecker.CharRangeList"/> that contains all the bad words found in the text.</param>
        </member>
        <member name="P:C1.Web.UI.Controls.C1SpellChecker.BadWordEventArgs.Dialog">
            <summary>
            Gets a reference to the ISpellDialog that is being used to spell-check a control.
            </summary>
            <remarks>
            If this parameter is null, then no spell dialog is active and the bad word was found in 
            as-you-type mode.
            </remarks>
        </member>
        <member name="P:C1.Web.UI.Controls.C1SpellChecker.BadWordEventArgs.Control">
            <summary>
            Gets a reference to the control that is being spell-checked.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1SpellChecker.BadWordEventArgs.BadWord">
            <summary>
            Gets a <see cref="T:C1.Web.UI.Controls.C1SpellChecker.CharRange"/> object that contains the bad word and its location within 
            the text being spell-checked.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1SpellChecker.BadWordEventArgs.BadWordList">
            <summary>
            Gets a <see cref="T:C1.Web.UI.Controls.C1SpellChecker.CharRangeList"/> that contains all errors detected in the text.
            </summary>
            <remarks>
            The <see cref="P:C1.Web.UI.Controls.C1SpellChecker.BadWordEventArgs.BadWord"/> property contains the specific error being handled. You can
            use the collection to determine the total number of errors and the index of this error
            within the collection.
            </remarks>
        </member>
        <member name="P:C1.Web.UI.Controls.C1SpellChecker.BadWordEventArgs.Cancel">
            <summary>
            Gets or sets whether this bad word should be ignored by the <see cref="T:C1.Web.UI.Controls.C1SpellChecker.C1SpellChecker"/>.
            </summary>
            <remarks>
            <para>If the <see cref="P:C1.Web.UI.Controls.C1SpellChecker.BadWordEventArgs.Dialog"/> property is not null, then the error is about to be displayed
            in a spell dialog. Setting the <b>Cancel</b> parameter to true in this case causes the dialog
            to skip to the next error.</para>
            <para>If the <see cref="P:C1.Web.UI.Controls.C1SpellChecker.BadWordEventArgs.Dialog"/> property is null, then the error was detected in as-you-type
            mode and the word is about to be underlined. Setting the <b>Cancel</b> parameter to true in
            this case prevents the word from being underlined.</para>
            </remarks>
        </member>
        <member name="T:C1.Web.UI.Controls.C1SpellChecker.AutoReplaceEventHandler">
            <summary>
            Represents the method that will handle the C1SpellChecker.AutoReplace event.
            </summary>
            <param name="sender">C1SpellChecker that fired the event.</param>
            <param name="e">AutoReplaceEventArgs that contains the event data.</param>
        </member>
        <member name="T:C1.Web.UI.Controls.C1SpellChecker.AutoReplaceEventArgs">
            <summary>
            Provides data for the C1SpellChecker.AutoReplace event.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1SpellChecker.AutoReplaceEventArgs.#ctor(System.Windows.Forms.Control,System.String,System.String,System.Int32)">
            <summary>
            Initializes a new instance of an <see cref="T:C1.Web.UI.Controls.C1SpellChecker.AutoReplaceEventArgs"/>.
            </summary>
            <param name="control"><see cref="P:C1.Web.UI.Controls.C1SpellChecker.AutoReplaceEventArgs.Control"/> where the text is being replaced.</param>
            <param name="found">String that contains the text about to be replaced.</param>
            <param name="replace">String that contains the replacement text.</param>
            <param name="index">Position of the <paramref name="found"/> string in the control's text.</param>
        </member>
        <member name="P:C1.Web.UI.Controls.C1SpellChecker.AutoReplaceEventArgs.Control">
            <summary>
            Gets a reference to the control where the replacement will take place.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1SpellChecker.AutoReplaceEventArgs.Found">
            <summary>
            Gets the string that is about to be replaced.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1SpellChecker.AutoReplaceEventArgs.Replace">
            <summary>
            Gets or sets the string that contains the replacement text.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1SpellChecker.AutoReplaceEventArgs.Cancel">
            <summary>
            Gets or sets whether to skip this replacement.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1SpellChecker.SpecialCharacters.commonChars">
            <summary>
              Looks up a localized string similar to abcdefghijklmnopqrstuvwxyz.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1SpellChecker.SpecialCharacters.specialChars">
            <summary>
              Looks up a localized string similar to &apos;åàáâäçèéêëíîïñóôöõùúûüœæлидерыкпфгаютвянйзоьсмбучхцжшщёэ.
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1SpellChecker.C1SpellCheckerComponent">
            <summary>
            Component that provides spell-checking services to controls and applications.
            </summary>
            <remarks>
            The C1SpelChecker component supports three spell-checking modes:
            
            Batch mode
            Use the CheckText(string), CheckWord, and GetSuggestions(string, int)
            methods to check strings and get lists of errors and spelling suggestions.
            
            Dialog mode
            Use the CheckControl(ISpellCheckableEditor method to check the content of any 
            TextBoxBase-derived controls using a modal dialog. The C1SpellChecker will
            check the text and display a dialog where the user can choose to correct or ignore each error.
            You can also check editors that do not derive from TextBoxBase. To do that, you
            have to create a wrapper class that implements the ISpellCheckableEditor interface.
            
            As-you-type mode
            Set the extender property SpellCheck on any TextBoxBase-derived control to true,
            and the C1SpellChecker will monitor changes to the control. Any spelling mistakes will be indicated 
            on the control by a red, wavy underline; right-clicking the errors will show a context menu with spelling 
            suggestions.
            You can also provide as-you-type spelling support for editors that do not derive from TextBoxBase.
            To do that, you have to create a wrapper class that implements the ISpellCheckableRichEditor 
            interface.
            
            Dictionary Deployment
            
            The C1SpellChecker component uses spelling dictionaries stored in files with a 'dct' extension.
            
            To select which dictionary to use, use the MainDictionary property and set
            SpellDictionaryBase.FileName to the name of the file you want to use.
            
            The easiest way to ensure the dictionary is deployed correctly is to add to your projects a reference 
            to the dictionary file(s) you want to use, then set the Build Action property to None and 
            the Copy to Output Directory property to Copy if newer. This way, the dictionaries will 
            be copied to the output directory along with the application executable and the C1SpellChecker 
            assembly.
            
            When using this deployment method, make sure the main dictionary's SpellDictionaryBase.FileName
            value specifies a file name without a path. This way, the component will search for the dictionary in the
            directory where the C1SpellChecker assembly is located.
            
            </remarks>
        </member>
        <member name="M:C1.Web.UI.Controls.C1SpellChecker.C1SpellCheckerComponent.#ctor">
            <summary>
            Initializes a new instance of a <see cref="T:C1.Web.UI.Controls.C1SpellChecker.C1SpellChecker"/>.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1SpellChecker.C1SpellCheckerComponent.CheckText(System.String,System.Int32,System.Int32)">
            <summary>
            Checks a string containing text and returns a list of spelling errors.
            </summary>
            <param name="text">Text to be spell-checked.</param>
            <param name="start">Index of the character where to start checking.</param>
            <param name="length">Length of the string to check.</param>
            <returns>List of <see cref="T:C1.Web.UI.Controls.C1SpellChecker.CharRange"/> objects that describe the spelling mistakes.</returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1SpellChecker.C1SpellCheckerComponent.CheckText(System.String,System.Int32)">
            <summary>
            Checks a string containing text and returns a list of spelling errors.
            </summary>
            <param name="text">Text to be spell-checked.</param>
            <param name="start">Index of the character where to start checking.</param>
            <returns>List of <see cref="T:C1.Web.UI.Controls.C1SpellChecker.CharRange"/> objects that describe the spelling mistakes.</returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1SpellChecker.C1SpellCheckerComponent.CheckText(System.String)">
            <summary>
            Checks a string containing text and returns a list of spelling errors.
            </summary>
            <param name="text">Text to be spell-checked.</param>
            <returns>List of <see cref="T:C1.Web.UI.Controls.C1SpellChecker.CharRange"/> objects that describe the spelling mistakes.</returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1SpellChecker.C1SpellCheckerComponent.CheckWord(System.String)">
            <summary>
            Checks a word to see if it's spelled correctly.
            </summary>
            <param name="word">Word to check.</param>
            <returns>True if the word is in the dictionary, false otherwise.</returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1SpellChecker.C1SpellCheckerComponent.GetSuggestions(System.String,System.Int32)">
            <summary>
            Gets an array containing suggestions for a misspelled word.
            </summary>
            <param name="word">Word to suggest alternatives for.</param>
            <param name="maxCount">Maximum number of suggestions to provide.</param>
            <returns>An array containing suggestions for the <paramref name="word"/> parameter.</returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1SpellChecker.C1SpellCheckerComponent.GetSuggestions(System.String)">
            <summary>
            Gets an array containing suggestions for a misspelled word.
            </summary>
            <param name="word">Word to suggest alternatives for.</param>
            <returns>An array containing suggestions for the <paramref name="word"/> parameter.</returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1SpellChecker.C1SpellCheckerComponent.OnBadWordFound(C1.Web.UI.Controls.C1SpellChecker.BadWordEventArgs)">
            <summary>
            Raises the <see cref="M:C1.Web.UI.Controls.C1SpellChecker.C1SpellCheckerComponent.OnBadWordFound(C1.Web.UI.Controls.C1SpellChecker.BadWordEventArgs)"/> event.
            </summary>
            <param name="e"><see cref="T:C1.Web.UI.Controls.C1SpellChecker.BadWordEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1SpellChecker.C1SpellCheckerComponent.OnAutoReplace(C1.Web.UI.Controls.C1SpellChecker.AutoReplaceEventArgs)">
            <summary>
            Raises the <see cref="E:C1.Web.UI.Controls.C1SpellChecker.C1SpellCheckerComponent.AutoReplace"/> event.
            </summary> 
            <param name="e"><see cref="T:C1.Web.UI.Controls.C1SpellChecker.AutoReplaceEventArgs"/> that contains the event data.</param>
        </member>
        <member name="P:C1.Web.UI.Controls.C1SpellChecker.C1SpellCheckerComponent.Enabled">
            <summary>
            Gets a value that indicates whether the main spelling dictionary has been loaded.
            </summary>
            <remarks>
            <para>If <see cref="T:C1.Web.UI.Controls.C1SpellChecker.C1SpellChecker"/> cannot find the spelling dictionary, it will not throw
            any exceptions. The <b>Enabled</b> property will be set to false and the component will not 
            be able to spell-check any text.</para>
            <para>You can check the state of the <see cref="P:C1.Web.UI.Controls.C1SpellChecker.C1SpellCheckerComponent.MainDictionary"/> and the <see cref="P:C1.Web.UI.Controls.C1SpellChecker.C1SpellCheckerComponent.UserDictionary"/>
            by inspecting their <see cref="P:C1.Web.UI.Controls.C1SpellChecker.SpellDictionaryBase.State"/> property.</para>
            </remarks>
        </member>
        <member name="P:C1.Web.UI.Controls.C1SpellChecker.C1SpellCheckerComponent.Options">
            <summary>
            Gets a <see cref="T:C1.Web.UI.Controls.C1SpellChecker.SpellOptions"/> object that specifies spell-checking options.
            </summary>
            <remarks>
            Options available include types of words to ignore, whether to display suggestions in a context menu,
            the number of suggestions to display, and so on.
            </remarks>
        </member>
        <member name="P:C1.Web.UI.Controls.C1SpellChecker.C1SpellCheckerComponent.MainDictionary">
            <summary>
            Gets the main dictionary used for spell-checking.
            </summary>
            <remarks>
            <para>This is the main dictionary. It is stored in a compressed format, and is read-only.</para>
            <para>You can edit the spell dictionaries or create your own using the
            <b>C1DictionaryEditor</b> utility that ships with <see cref="T:C1.Web.UI.Controls.C1SpellChecker.C1SpellChecker"/>.
            This option can be useful for domain-specific applications that require the
            use of technical jargon (for example, medical, legal, and so on).</para>
            <para>Users cannot add words to this dictionary, only to the <see cref="P:C1.Web.UI.Controls.C1SpellChecker.C1SpellCheckerComponent.UserDictionary"/>.</para>
            </remarks>
        </member>
        <member name="P:C1.Web.UI.Controls.C1SpellChecker.C1SpellCheckerComponent.UserDictionary">
            <summary>
            Gets the user dictionary used for spell-checking.
            </summary>
            <remarks>
            This is the user dictionary. The user may add words to this dictionary using the
            spell-checking dialog, and it is automatically persisted to the specified file.
            </remarks>
        </member>
        <member name="P:C1.Web.UI.Controls.C1SpellChecker.C1SpellCheckerComponent.CustomDictionary">
            <summary>
            Gets or sets a custom spell-checking dictionary.
            </summary>
            <remarks>
            This property allows you to specify additional custom dictionaries to be used 
            in addition to the standard <see cref="P:C1.Web.UI.Controls.C1SpellChecker.C1SpellCheckerComponent.MainDictionary"/> and <see cref="P:C1.Web.UI.Controls.C1SpellChecker.C1SpellCheckerComponent.UserDictionary"/>
            dictionaries.
            </remarks>
        </member>
        <member name="P:C1.Web.UI.Controls.C1SpellChecker.C1SpellCheckerComponent.CustomParser">
            <summary>
            Gets or sets a custom spell-checking parser.
            </summary>
            <remarks>
            <para>This property allows you to specify a custom parser for breaking up text into words
            to be spell-checked.</para>
            <para>For example, you may want to use a custom parser when checking source code files. 
            This way you can spell-check the comments in the code and skip the actual code.</para>
            </remarks>
        </member>
        <member name="P:C1.Web.UI.Controls.C1SpellChecker.C1SpellCheckerComponent.IgnoreList">
            <summary>
            Gets the list of words to ignore during spell-checking.
            </summary>
            <remarks>
            <para>The list is used by the built-in spell dialog and by the as-you-type mechanism.</para>
            <para>The user may add words to this list using the "Ignore All" button in the spell dialog 
            or the "Ignore All" option in the as-you-type context menu.</para>
            <para>Strings in the list are case-sensitive.</para>
            </remarks>
        </member>
        <member name="P:C1.Web.UI.Controls.C1SpellChecker.C1SpellCheckerComponent.AutoReplaceList">
            <summary>
            Gets a list of words and replacements to use while spell-checking.
            </summary>
            <remarks>
            <para>This list is used by the built-in spell dialog and by the as-you-type mechanism.</para>
            <para>The built-in spell dialog checks the list when it finds a misspelled word. If a match
            is found, the misspelled word is replaced with the corresponding list entry.</para>
            <para>The as-you-type mechanism looks for matches whenever the user types a character that
            is not a letter or a digit. If a match is found, the text is replaced with the corresponding
            list entry.</para>
            <para>Note the difference in operation between the two modes. In as-you-type spell-checking,
            any matches will be replaced, whether the key is spelled correctly or not. In dialog mode,
            keys that are spelled correctly will not be flagged as errors and therefore will not be 
            replaced. For example, if the <b>AutoReplaceList</b> contains an entry with the strings
            ("attn.", "attention of"), then typing "attn. " into the editor will trigger a replacement 
            and the editor will contain "attention of ". However, because "attn." is not a spelling 
            error, the spell dialog will not replace instances of the string "attn." with "attention of".</para>
            <para>The <see cref="T:C1.Web.UI.Controls.C1SpellChecker.C1SpellChecker"/> fires the <see cref="E:C1.Web.UI.Controls.C1SpellChecker.C1SpellCheckerComponent.AutoReplace"/> event before
            making each automatic replacement. The event handler may cancel the replacement.</para>
            <para>Strings in the list are case-sensitive.</para>
            </remarks>
            <example>
            The example below causes the <see cref="T:C1.Web.UI.Controls.C1SpellChecker.C1SpellChecker"/> to monitor spelling on a 
            <see cref="T:System.Windows.Forms.TextBox"/> control. If the user types the string "teh", it is automatically 
            replaced with "the". If the user types "cant", it is automatically replaced with "can't".
            <code>
            // build AutoReplace list
            c1SpellChecker1.AutoReplaceList.Clear();
            c1SpellChecker1.AutoReplaceList.Add("teh", "the");
            c1SpellChecker1.AutoReplaceList.Add("cant", "can't");
            
            // activate as-you-type spell-checking on textBox1
            c1SpellChecker1.SetSpellChecking(textBox1, true);
            </code>
            </example>
        </member>
        <member name="E:C1.Web.UI.Controls.C1SpellChecker.C1SpellCheckerComponent.BadWordFound">
            <summary>
            Event that fires when a spelling error is found by the C1SpellChecker.
            </summary>
            <remarks>
            This event fires when the component detects a spelling error in a control. 
            This happens while a spell dialog is displayed (see the CheckControl(ISpellCheckableEditor 
            method) or while the component is painting the red wavy underlines that mark misspelled words
            in dynamic mode (see the SetSpellChecking method).
            The event parameters have a Dialog property that allow the handler to determine
            whether a spell dialog is being displayed or not.
            The event parameters also have a Cancel property that can be used to ignore 
            the error.
            </remarks>
        </member>
        <member name="E:C1.Web.UI.Controls.C1SpellChecker.C1SpellCheckerComponent.AutoReplace">
            <summary>
            Event that fires before the <see cref="T:C1.Web.UI.Controls.C1SpellChecker.C1SpellChecker"/> makes an automatic replacement
            in the control's text.
            </summary>
            <remarks>
            <see cref="T:C1.Web.UI.Controls.C1SpellChecker.C1SpellChecker"/> automatically replaces text as the user types based on the
            list of words specified by the <see cref="P:C1.Web.UI.Controls.C1SpellChecker.C1SpellCheckerComponent.AutoReplaceList"/> property.
            </remarks>
        </member>
        <member name="T:C1.Web.UI.Controls.C1SpellChecker.SpellDictionary">
            <summary>
            Class that contains a list of words and methods looking them up and loading them from a compressed file.
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1SpellChecker.SpellDictionaryBase">
            <summary>
            Base class for built-in and user dictionaries (see (<see cref="T:C1.Web.UI.Controls.C1SpellChecker.SpellDictionary"/> and
            <see cref="T:C1.Web.UI.Controls.C1SpellChecker.UserDictionary"/>).
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1SpellChecker.ISpellDictionary">
            <summary>
            Interface implemented by all spell dictionaries.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1SpellChecker.ISpellDictionary.Contains(System.String)">
            <summary>
            Checks whether the dictionary contains a given word.
            </summary>
            <param name="word">Word to lookup.</param>
            <returns>True if the dictionary contains the word, false otherwise.</returns>
        </member>
        <member name="F:C1.Web.UI.Controls.C1SpellChecker.SpellDictionaryBase.m_fileName">
            <summary>
            Name of the file where the word list was loaded from.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1SpellChecker.SpellDictionaryBase.m_state">
            <summary>
            Gets or sets a <see cref="T:C1.Web.UI.Controls.C1SpellChecker.DictionaryState"/> value that indicates whether 
            the dictionary has been loaded or why it hasn't.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1SpellChecker.SpellDictionaryBase.m_enabled">
            <summary>
            Gets or sets whether the dictionary is enabled.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1SpellChecker.SpellDictionaryBase.m_spell">
            <summary>
            <see cref="T:C1.Web.UI.Controls.C1SpellChecker.C1SpellChecker"/> that owns the dictionary.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1SpellChecker.SpellDictionaryBase.EnsureLoaded">
            <summary>
            Ensures the dictionary is loaded, reading words from the file if necessary.
            </summary>
            <returns>True if the dictionary is enabled and has been loaded successfully.</returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1SpellChecker.SpellDictionaryBase.ToString">
            <summary>
            Gets a string that represents this object.
            </summary>
            <returns>A string that represents this object.</returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1SpellChecker.SpellDictionaryBase.GetFileName(System.Boolean)">
            <summary>
            Gets the fully qualified name of the file that contains the dictionary.
            </summary>
            <param name="mustExist">Whether to return a filename even if the file doesn't exist.</param>
            <returns>A complete file name which is guaranteed to exist, or an empty
            string if the file name was not specified or could not be found.</returns>
            <remarks>
            If the path is not specified, the component looks for it in the 
            application folder, in the folder where the <see cref="T:C1.Web.UI.Controls.C1SpellChecker.C1SpellChecker"/>
            assembly is installed, and in the system folder.
            </remarks>
        </member>
        <member name="M:C1.Web.UI.Controls.C1SpellChecker.SpellDictionaryBase.Load">
            <summary>
            Loads the dictionary from the file specified by the <see cref="P:C1.Web.UI.Controls.C1SpellChecker.SpellDictionaryBase.FileName"/> property.
            </summary>
            <returns>True if the dictionary was loaded successfully, false otherwise.</returns>
            <remarks>
            If the dictionary fails to load, this method returns false. In this case,
            you can check the value of the dictionary's <see cref="P:C1.Web.UI.Controls.C1SpellChecker.SpellDictionaryBase.State"/> property to determine 
            why the file failed to load.
            </remarks>
        </member>
        <member name="M:C1.Web.UI.Controls.C1SpellChecker.SpellDictionaryBase.Contains(System.String)">
            <summary>
            Checks whether the dictionary contains a given word.
            </summary>
            <param name="word">Word to lookup.</param>
            <returns>True if the dictionary contains the word, false otherwise.</returns>
        </member>
        <member name="P:C1.Web.UI.Controls.C1SpellChecker.SpellDictionaryBase.FileName">
            <summary>
            Gets or sets the name of the file that contains the dictionary.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1SpellChecker.SpellDictionaryBase.Enabled">
            <summary>
            Gets or sets whether the dictionary is enabled.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1SpellChecker.SpellDictionaryBase.State">
            <summary>
            Gets a <see cref="T:C1.Web.UI.Controls.C1SpellChecker.DictionaryState"/> value that indicates whether the dictionary was loaded
            successfully.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1SpellChecker.SpellDictionary.Contains(System.String)">
            <summary>
            Checks whether the dictionary contains a given word.
            </summary>
            <param name="word">Word to lookup.</param>
            <returns>True if the dictionary contains the word, false otherwise.</returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1SpellChecker.SpellDictionary.Load">
            <summary>
            Loads the dictionary from the file specified by the <see cref="P:C1.Web.UI.Controls.C1SpellChecker.SpellDictionary.FileName"/> property.
            </summary>
            <returns>True if the dictionary was loaded successfully, false otherwise.</returns>
            <remarks>
            If the dictionary fails to load, this method returns false. In this case,
            you can check the value of the dictionary's <see cref="P:C1.Web.UI.Controls.C1SpellChecker.SpellDictionaryBase.State"/> property to determine 
            why the file failed to load.
            </remarks>
        </member>
        <member name="P:C1.Web.UI.Controls.C1SpellChecker.SpellDictionary.FileName">
            <summary>
            Gets or sets the name of the file that contains the dictionary.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1SpellChecker.SpellDictionary.Password">
            <summary>
            Sets the password needed to load password-protected dictionaries.
            </summary>
            <remarks>
            <para>If the dictionary file in use is password-protected, you must provide a
            valid password in order to use it.</para>
            <para>The dictionary files that ship with <see cref="T:C1.Web.UI.Controls.C1SpellChecker.C1SpellChecker"/> are not
            password-protected. You can create password-protected dictionaries using the
            dictionary utility shipped with <see cref="T:C1.Web.UI.Controls.C1SpellChecker.C1SpellChecker"/>.</para>
            </remarks>
        </member>
        <member name="P:C1.Web.UI.Controls.C1SpellChecker.SpellDictionary.WordCount">
            <summary>
            Gets the number of words loaded in the dictionary.
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1SpellChecker.DictionaryEntries">
            <summary>
            DictionaryEntries is a dictionary that associates:
              key: hash codes for the lower-case version of the strings
              value: bytes (0 for lower-case strings, 1 for upper-case strings)
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1SpellChecker.DictionaryEntries.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of a <see cref="T:C1.Web.UI.Controls.C1SpellChecker.DictionaryEntries"/>.
            </summary>
            <param name="capacity">Initial capacity of the list.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1SpellChecker.DictionaryEntries.Add(System.String)">
            <summary>
            Adds a word to the list.
            </summary>
            <param name="word">Word to add to the list.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1SpellChecker.DictionaryEntries.Contains(System.String)">
            <summary>
            Checks whether the dictionary contains a given word.
            </summary>
            <param name="word">Word to lookup.</param>
            <returns>True if the dictionary contains the word, false otherwise.</returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1SpellChecker.DictionaryEntries.Load(C1.Web.UI.Controls.C1SpellChecker.SpellDictionary,System.String,System.String)">
            <summary>
            Loads the word list from a file.
            </summary>
            <param name="dictionary"><see cref="T:C1.Web.UI.Controls.C1SpellChecker.SpellDictionary"/> that owns the word list.</param>
            <param name="fileName">Fully qualified name of the file that contains the word list.</param>
            <param name="password">Password used to load the entries if the file is protected.</param>
        </member>
        <member name="T:C1.Web.UI.Controls.C1SpellChecker.DictionaryState">
            <summary>
            Describes the current state of a <see cref="T:C1.Web.UI.Controls.C1SpellChecker.SpellDictionary"/>.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1SpellChecker.DictionaryState.Empty">
            <summary>
            The dictionary has not been loaded yet.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1SpellChecker.DictionaryState.Loaded">
            <summary>
            The dictionary has been successfully loaded.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1SpellChecker.DictionaryState.FileNotFound">
            <summary>
            The dictionary has not been loaded because the specified file could not be found.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1SpellChecker.DictionaryState.InvalidFileFormat">
            <summary>
            The dictionary has not been loaded because the specified file has invalid format.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1SpellChecker.DictionaryState.InvalidPassword">
            <summary>
            The dictionary is protected and the password used to load it was missing or incorrect.
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1SpellChecker.IgnoreOptions">
            <summary>
            Specifies flags that determine whether words should be ignored during spell-checking.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1SpellChecker.IgnoreOptions.None">
            <summary>
            Do not ignore any words.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1SpellChecker.IgnoreOptions.Numbers">
            <summary>
            Ignore words that contain numbers (digits).
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1SpellChecker.IgnoreOptions.UpperCase">
            <summary>
            Ignore words that are all uppercase.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1SpellChecker.IgnoreOptions.MixedCase">
            <summary>
            Ignore words that contain a mix of uppercase and lowercase characters, except
            when there is a single uppercase at the start (for example, "Lowercase" would 
            not be ignored, but "LowerCase" and "lowerCase" would).
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1SpellChecker.IgnoreOptions.Urls">
            <summary>
            Ignore words that look like URLs or file names.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1SpellChecker.IgnoreOptions.HtmlTags">
            <summary>
            Ignore text in HTML/XML tags.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1SpellChecker.IgnoreOptions.Default">
            <summary>
            Default setting: ignores numbers, mixed case, URLs, and HTML tags.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1SpellChecker.IgnoreOptions.All">
            <summary>
            Ignores numbers, mixed case, URLs, HTML tags, and uppercase.
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1SpellChecker.DialogLanguage">
            <summary>
            Specifies the language to be used when displaying the built-in spell dialog
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1SpellChecker.DialogLanguage.Automatic">
            <summary>
            Choose dialog language according to the current application culture.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1SpellChecker.DialogLanguage.Dutch">
            <summary>
            Show Dutch dialog.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1SpellChecker.DialogLanguage.English">
            <summary>
            Show English dialog.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1SpellChecker.DialogLanguage.French">
            <summary>
            Show French dialog.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1SpellChecker.DialogLanguage.German">
            <summary>
            Show German dialog.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1SpellChecker.DialogLanguage.Italian">
            <summary>
            Show Italian dialog.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1SpellChecker.DialogLanguage.Portuguese">
            <summary>
            Show Portuguese dialog.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1SpellChecker.DialogLanguage.Spanish">
            <summary>
            Show Spanish dialog.
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1SpellChecker.SpellOptions">
            <summary>
            Class that contains spelling options including words to ignore, whether to show suggestions in
            a spell context menu, etc.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1SpellChecker.SpellOptions.#ctor(C1.Web.UI.Controls.C1SpellChecker.C1SpellCheckerComponent)">
            <summary>
            Creates a new instance of the C1Editor class.
            </summary>
            <param name="spell">The specified C1SpellCheckerComponent object.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1SpellChecker.SpellOptions.ToString">
            <summary>
            Gets a string representation of this object.
            </summary>
            <returns>A string representation of this object.</returns>
        </member>
        <member name="P:C1.Web.UI.Controls.C1SpellChecker.SpellOptions.Ignore">
            <summary>
            Gets or sets types of words to ignore during the spell-check.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1SpellChecker.SpellOptions.DialogLanguage">
            <summary>
            Gets or sets the DialogLanguage  used when displaying the built-in spell dialog.
            </summary>
            <remarks>
             The dialog language does not affect spelling. To change the language used for spelling, use
            theC1SpellChecker.MainDictionary  property to select a different spelling dictionary. 
            By default, the built-in spell dialog  C1SpellDialog is displayed in the
            language specified by the current culture. If the current culture specifies a language that is not
            available, then the dialog will be displayed in English.
            See the DialogLanguage enumeration for a list of supported dialog languages.
            </remarks>
        </member>
        <member name="T:C1.Web.UI.Controls.C1SpellChecker.FlagEditor">
            <summary>
            <see cref="T:System.Drawing.Design.UITypeEditor"/> that can be used to edit enumerations with a <b>Flags</b> attribute.
            </summary>
            <remarks>
            Shows a checked list box with one entry per flag, users can check any combination.
            </remarks>
        </member>
        <member name="T:C1.Web.UI.Controls.C1SpellChecker.SuggestionBuilder">
            <summary>
            Special chars:
                en:    ?  èé?  ïñ??   ?
                es:    ?   ? ? ñó    ??
                fr:   àáâäçèéêëíîï óô??ûü
                de: ??âä  éê    ? ?   ?
                pt :  àá?çèéê ?  óô ???
                ALL: åàáâäçèéêëíîïñóôöõùúûü
            
            Start with alpha + '
            if not enough, try ALL
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1SpellChecker.UserDictionary">
            <summary>
            Class that contains a list of additional words and methods for managing the list.
            </summary>
            <remarks>
            This class is used to store user dictionaries. It provides methods for adding and 
            removing words, as well as saving the dictionary.
            </remarks>
        </member>
        <member name="M:C1.Web.UI.Controls.C1SpellChecker.UserDictionary.AddWord(System.String)">
            <summary>
            Adds a word to the dictionary.
            </summary>
            <param name="word">Word to add to the dictionary.</param>
            <returns>True if the word was added to the dictionary, false if it was already present.</returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1SpellChecker.UserDictionary.RemoveWord(System.String)">
            <summary>
            Removes a word from the dictionary.
            </summary>
            <param name="word">Word to remove from the dictionary.</param>
            <returns>True if the word was removed from the dictionary, false if it was not found.</returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1SpellChecker.UserDictionary.Clear">
            <summary>
            Clears the dictionary removing all words in it.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1SpellChecker.UserDictionary.Save">
            <summary>
            Saves the dictionary back to a file.
            </summary>
            <returns>True in case of success, false otherwise.</returns>
            <remarks>If the dictionary cannot be saved, the reason is stored in the <see cref="T:System.Exception"/> property.</remarks>
        </member>
        <member name="M:C1.Web.UI.Controls.C1SpellChecker.UserDictionary.Load">
            <summary>
            Loads the dictionary from a file.
            </summary>
            <returns>True if the dictionary was loaded successfully, false otherwise.</returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1SpellChecker.UserDictionary.Contains(System.String)">
            <summary>
            Checks whether the dictionary contains a given word.
            </summary>
            <param name="word">Word to lookup.</param>
            <returns>True if the dictionary contains the word, false otherwise.</returns>
        </member>
        <member name="P:C1.Web.UI.Controls.C1SpellChecker.UserDictionary.FileName">
            <summary>
            Gets or sets the name of the file that contains the dictionary.
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1SpellChecker.UserDictionaryEntries">
            <summary>
            DictionaryEntries is a dictionary that associates:
              key: hash codes for lower case strings
              value: bytes (0 for lower-case entry, 1 for upper-case)
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1SpellChecker.UserDictionaryEntries.Add(System.String)">
            <summary>
            Adds a word to the list.
            </summary>
            <param name="word">Word to add to the list.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1SpellChecker.UserDictionaryEntries.Contains(System.String)">
            <summary>
            Checks whether the dictionary contains a given word.
            </summary>
            <param name="word">Word to lookup.</param>
            <returns>True if the dictionary contains the word, false otherwise.</returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1SpellChecker.UserDictionaryEntries.Load(C1.Web.UI.Controls.C1SpellChecker.UserDictionary,System.String,System.String)">
            <summary>
            Loads the word list from a UTF-8 encoded text file.
            </summary>
            <param name="dictionary"><see cref="T:C1.Web.UI.Controls.C1SpellChecker.SpellDictionary"/> that owns the word list.</param>
            <param name="fileName">Fully qualified name of the UTF-8 file that contains the word list.</param>
            <param name="password">Not used.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1SpellChecker.UserDictionaryEntries.Save(System.String)">
            <summary>
            Saves the word list to an UTF-8 encoded file.
            </summary>
            <param name="fileName">Fully qualified name of the file to save</param>
        </member>
        <member name="T:C1.Web.UI.Controls.C1SpellChecker.WordList">
            <summary>
            Keyed list of words to ignore while spell-checking.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1SpellChecker.WordList.ClearItems">
            <summary>
            Removes all elements from the list.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1SpellChecker.WordList.InsertItem(System.Int32,System.String)">
            <summary>
            Inserts a word into the list at the specified index.
            </summary>
            <param name="index">The zero-based <paramref name="index"/> at which the new item should be inserted.</param>
            <param name="item">The item to insert into the list.</param>
            <remarks>
            Duplicate items are automatically discarded; the list will contain at most one copy of any given string.
            </remarks>
        </member>
        <member name="M:C1.Web.UI.Controls.C1SpellChecker.WordList.RemoveItem(System.Int32)">
            <summary>
            Removes the word at the specified index from the collection.
            </summary>
            <param name="index">The zero-based <paramref name="index"/> at which the new item should be removed.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1SpellChecker.WordList.SetItem(System.Int32,System.String)">
            <summary>
            Not supported.
            </summary>
            <param name="index">Index of the element to replace.</param>
            <param name="item">Element to replace.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1SpellChecker.WordList.GetKeyForItem(System.String)">
            <summary>
            Obtains a key for the given element. 
            </summary>
            <param name="item">The element from which to obtain the key.</param>
            <returns>The key for the specified element.</returns>
        </member>
        <member name="T:C1.Web.UI.Controls.C1SpellChecker.WordDictionary">
            <summary>
            Dictionary of words and their replacements.
            </summary>
        </member>
        <member name="T:C1.C1Zip.C1CryptStream">
            <summary>
            C1CryptStream
            reads and decrypts data from an encrypted zip base stream, or
            encrypts and writes data to an encrypted zip base stream
            </summary>
        </member>
        <member name="M:C1.C1Zip.C1ZipEntry.CheckCRC32">
            <summary>
            Calculates a checksum value for the entry and compares it to the checksum that
            was stored when the entry was created.
            </summary>
            <returns>True if the checksum values match, false otherwise.</returns>
            <remarks>
            This method is used to check the integrity of the entries in the zip file. If the
            calculated checksum does not match the stored checksum, then either the zip file is
            corrupted or the program used to create the zip file is incompatible with 
            <b>C1Zip</b>.
            </remarks>
        </member>
        <member name="M:C1.C1Zip.C1ZipEntry.CheckPassword">
            <summary>
            Checks whether this <see cref="T:C1.C1Zip.C1ZipEntry"/> can be read with the currently set password.
            </summary>
            <returns>True if the entry can be read with the current password, or if the entry is not
            encrypted.</returns>
            <remarks>
            This method is more efficient than using a try/catch block and trying to open the entry
            to determine whether the current password is valid for the entry.
            </remarks>
        </member>
        <member name="M:C1.C1Zip.C1ZipEntry.OpenReader">
            <summary>
            Returns a <see cref="T:System.IO.Stream"/> that can be used to read the content of the entry without
            extracting it to a disk file.
            </summary>
            <returns>A <see cref="T:System.IO.Stream"/> that can be used to read the data in the entry.</returns>
            <remarks>
            The <see cref="T:System.IO.Stream"/> returned is a <see cref="T:C1.C1Zip.C1ZStreamReader"/>, which 
            decompresses the data as it is read from the entry.
            </remarks>
        </member>
        <member name="P:C1.C1Zip.C1ZipEntry.FileName">
            <summary>
            Gets the entry name. This is usually a file name, optionally including a path.
            </summary>
        </member>
        <member name="P:C1.C1Zip.C1ZipEntry.SizeUncompressed">
            <summary>
            Gets the original (uncompressed) size of the entry, in bytes.
            </summary>
        </member>
        <member name="P:C1.C1Zip.C1ZipEntry.SizeCompressed">
            <summary>
            Gets the compressed size of the entry, in bytes.
            </summary>
        </member>
        <member name="P:C1.C1Zip.C1ZipEntry.CRC32">
            <summary>
            Gets the checksum calculated when the entry was compressed.
            </summary>
            <remarks>
            This value can be used to check the integrity of the entry when it is decompressed.
            </remarks>
        </member>
        <member name="P:C1.C1Zip.C1ZipEntry.Date">
            <summary>
            Gets the date and time when the file used to create the entry was last modified.
            </summary>
            <remarks>
            This value can be used to check whether an entry needs to be updated because the
            source file was modified since it was last compressed.
            </remarks>
        </member>
        <member name="P:C1.C1Zip.C1ZipEntry.Comment">
            <summary>
            Gets or sets a comment associated with the entry.
            </summary>
        </member>
        <member name="P:C1.C1Zip.C1ZipEntry.Attributes">
            <summary>
            Gets the file attributes associated with the entry.
            </summary>
        </member>
        <member name="P:C1.C1Zip.C1ZipEntry.IsEncrypted">
            <summary>
            Gets a value that determines whether the entry is encrypted.
            </summary>
            <remarks>
            Encrypted entries can only be extracted if the <see cref="P:C1.C1Zip.C1ZipFile.Password"/> property
            on the containing <see cref="T:C1.C1Zip.C1ZipFile"/> object is set to the password that was used
            when the file was added to the zip file.
            </remarks>
        </member>
        <member name="M:C1.C1Zip.C1ZipEntryCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
            <summary>
            Copies the elements of the <b>ICollection</b> to an Array, starting at a 
            particular Array index.
            </summary>
            <param name="array">The one-dimensional Array that is the destination of the elements copied from <b>ICollection</b>. The Array must have zero-based indexing.</param>
            <param name="index">The zero-based index in <paramref name="array"/> at which copying begins.</param>
        </member>
        <member name="M:C1.C1Zip.C1ZipEntryCollection.Contains(System.String)">
            <summary>
            Determines whether the collection contains an entry with a given name.
            </summary>
            <param name="name">Name of the entry to look for.</param>
            <returns>True if the collection contains an entry with the given name, false otherwise.</returns>
        </member>
        <member name="M:C1.C1Zip.C1ZipEntryCollection.IndexOf(System.String)">
            <summary>
            Gets the index of the entry with the specified name.
            </summary>
            <param name="name">Name of the entry to look for.</param>
            <returns>The index of the entry in the collection, or -1 if the entry was not found.</returns>
        </member>
        <member name="M:C1.C1Zip.C1ZipEntryCollection.Add(System.String)">
            <summary>
            Adds an entry to the current zip file.
            </summary>
            <param name="fileName">Name of the file to add to the zip file.</param>
            <remarks>
            By default, the directory name is not stored in the zip file. To store a specific
            part of the directory name in the zip file, use the overloaded version of the 
            <b>Add</b> method with a <b>pathLevels</b> parameter.
            </remarks>
        </member>
        <member name="M:C1.C1Zip.C1ZipEntryCollection.Add(System.String[])">
            <summary>
            Adds a list of entries to the current zip file.
            </summary>
            <param name="fileNames">Array containing the file names of the entries to be added to the zip file.</param>
        </member>
        <member name="M:C1.C1Zip.C1ZipEntryCollection.Add(System.String,System.Int32)">
            <summary>
            Adds an entry to the current zip file.
            </summary>
            <param name="fileName">Name of the file to add to the zip file.</param>
            <param name="pathLevels">The number of path levels to be stored as the entry name.</param>
            <remarks>
            <para>By default, path names are not stored in the zip file. For example, adding
            the file "c:\temp\samples\readme.txt" to the zip file will create an entry called
            "readme.txt".</para>
            <para>The <paramref name="pathLevels"/> parameter allows you to store one or more levels of the path in the entry name.
            For example, adding the file "c:\temp\samples\readme.txt" to the zip file with <paramref name="pathLevels"/>=1 
            will create an entry called "samples\readme.txt".</para>
            </remarks>
        </member>
        <member name="M:C1.C1Zip.C1ZipEntryCollection.Add(System.String,System.String)">
            <summary>
            Adds an entry to the current zip file.
            </summary>
            <param name="fileName">Name of the file to add to the zip file.</param>
            <param name="entryName">Name of the new entry as stored in the zip file.</param>
            <remarks>
            By default, entries in the zip file have the same name as the original (uncompressed)
            file. This method allows you to specify a different name, including a path for example.
            </remarks>
        </member>
        <member name="M:C1.C1Zip.C1ZipEntryCollection.Add(System.IO.Stream,System.String)">
            <summary>
            Adds a stream to the current zip file.
            </summary>
            <param name="stream">Stream that contains data for the new entry.</param>
            <param name="entryName">Name to be used for the new entry.</param>
        </member>
        <member name="M:C1.C1Zip.C1ZipEntryCollection.AddFolder(System.String)">
            <summary>
            Adds the content of a folder to the current zip file.
            </summary>
            <param name="path">The full path of the folder to be added to the zip file.</param>
            <remarks>
            This method adds all files and sub folders to the zip file.
            </remarks>
        </member>
        <member name="M:C1.C1Zip.C1ZipEntryCollection.AddFolder(System.String,System.String)">
            <summary>
            Adds the content of a folder to the current zip file.
            </summary>
            <param name="path">The full path of the folder to be added to the zip file.</param>
            <param name="searchPattern">A mask that specifies which files to add.</param>
            <remarks>
            If the folder contains sub folders, those are also added to the zip file.
            </remarks>
        </member>
        <member name="M:C1.C1Zip.C1ZipEntryCollection.AddFolder(System.String,System.String,System.Boolean)">
            <summary>
            Adds the content of a folder to the current zip file.
            </summary>
            <param name="path">The full path of the folder to be added to the zip file.</param>
            <param name="searchPattern">A mask that specifies which files to add.</param>
            <param name="includeSubfolders">True to include sub folders, false to include only files at the root level.</param>
        </member>
        <member name="M:C1.C1Zip.C1ZipEntryCollection.ExtractFolder(System.String)">
            <summary>
            Extracts the contents of the zip file into a specified path.
            </summary>
            <param name="path">Destination path for the unzipped files.</param>
            <remarks>
            If the zip file contains compressed folders, new folders will be created
            under the destination path to preserve the hierarchical structure of the
            archive.
            </remarks>
        </member>
        <member name="M:C1.C1Zip.C1ZipEntryCollection.Remove(System.Int32)">
            <summary>
            Removes an entry from the current zip file.
            </summary>
            <param name="index">Index of the entry to remove.</param>
        </member>
        <member name="M:C1.C1Zip.C1ZipEntryCollection.Remove(System.String)">
            <summary>
            Removes an entry from the current zip file.
            </summary>
            <param name="fileName">Name of the entry to remove (case-insensitive).</param>
        </member>
        <member name="M:C1.C1Zip.C1ZipEntryCollection.Remove(System.Int32[])">
            <summary>
            Removes several entries from the current zip file.
            </summary>
            <param name="indices">Array containing the indices of the entries to remove.</param>
        </member>
        <member name="M:C1.C1Zip.C1ZipEntryCollection.Remove(System.String[])">
            <summary>
            Removes several entries from the current zip file.
            </summary>
            <param name="entryNames">Array containing the names of the entries to remove.</param>
        </member>
        <member name="M:C1.C1Zip.C1ZipEntryCollection.Extract(System.Int32,System.String)">
            <summary>
            Extracts a file from the current zip file. 
            </summary>
            <param name="index">Index of the entry to extract.</param>
            <param name="destFileName">Name and location of the extracted file.</param>
        </member>
        <member name="M:C1.C1Zip.C1ZipEntryCollection.Extract(System.String,System.String)">
            <summary>
            Extracts a file from the current zip file. 
            </summary>
            <param name="entryName">Name of the entry to extract.</param>
            <param name="destFileName">Name and location of the extracted file.</param>
        </member>
        <member name="M:C1.C1Zip.C1ZipEntryCollection.Extract(System.Int32)">
            <summary>
            Extracts a file from the current zip file. 
            </summary>
            <param name="index">Index of the entry to extract.</param>
            <remarks>
            The entry is extracted to a file in the same folder as the current zip
            file, with the same name as the entry.
            </remarks>
        </member>
        <member name="M:C1.C1Zip.C1ZipEntryCollection.Extract(System.String)">
            <summary>
            Extracts a file from the current zip file. 
            </summary>
            <param name="entryName">Name of the entry to extract.</param>
            <remarks>
            The entry is extracted to a file in the same folder as the current zip
            file, with the same name as the entry.
            </remarks>
        </member>
        <member name="M:C1.C1Zip.C1ZipEntryCollection.OpenWriter(System.String,System.Boolean)">
            <summary>
            Opens a stream for writing an entry into the zip file.
            </summary>
            <param name="entryName">The name of the new entry.</param>
            <param name="useMemory">Whether to use a memory stream or temporary file.</param>
            <returns>
            A stream that can be used to write data into the zip file. The entry
            is not added until the stream is closed.
            </returns>
        </member>
        <member name="P:C1.C1Zip.C1ZipEntryCollection.System#Collections#ICollection#IsSynchronized">
            <summary>
            Gets a value that indicates whether access to the ICollection is synchronized (thread-safe).
            </summary>
        </member>
        <member name="P:C1.C1Zip.C1ZipEntryCollection.System#Collections#ICollection#SyncRoot">
            <summary>
            Gets an object that can be used to synchronize access to the <b>ICollection</b>.
            </summary>
        </member>
        <member name="P:C1.C1Zip.C1ZipEntryCollection.Count">
            <summary>
            Gets the number of entries in the current zip file.
            </summary>
        </member>
        <member name="P:C1.C1Zip.C1ZipEntryCollection.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:C1.C1Zip.C1ZipEntry"/> at the specified index.
            </summary>
        </member>
        <member name="P:C1.C1Zip.C1ZipEntryCollection.Item(System.String)">
            <summary>
            Gets the <see cref="T:C1.C1Zip.C1ZipEntry"/> with the given name (returns null if the entry cannot be found).
            </summary>
        </member>
        <member name="M:C1.C1Zip.C1ZipFile.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:C1.C1Zip.C1ZipFile"/> class.
            </summary>
        </member>
        <member name="M:C1.C1Zip.C1ZipFile.#ctor(System.String,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:C1.C1Zip.C1ZipFile"/> class and creates or opens
            a zip file associated with this new instance.
            </summary>
            <param name="fileName">The name of the zip file to open or create.</param>
            <param name="create">True to create a new zip file, false to open an existing file.</param>
            <remarks>
            <para>If <paramref name="create"/> is true and the zip file already exists, it is overwritten
            with a new empty file.</para>
            <para>If <paramref name="create"/> is false and the zip file already exists, the existing file 
            is opened.</para>
            </remarks>
        </member>
        <member name="M:C1.C1Zip.C1ZipFile.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:C1.C1Zip.C1ZipFile"/> class and opens a zip file associated 
            with this new instance.
            </summary>
            <param name="fileName">The name of the zip file to open.</param>
            <remarks>
            If the file does not exist, a new empty file is created.
            </remarks>
        </member>
        <member name="M:C1.C1Zip.C1ZipFile.#ctor(System.IO.Stream,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:C1.C1Zip.C1ZipFile"/> class and opens a zip stream associated 
            with this new instance.
            </summary>
            <param name="stream"><see cref="T:System.IO.Stream"/> that contains the zip data.</param>
            <param name="create">Whether to initialize the stream with an empty zip header or open an existing
            zip file in the stream.</param>
        </member>
        <member name="M:C1.C1Zip.C1ZipFile.#ctor(System.IO.Stream)">
            <summary>
            Initializes a new instance of the <see cref="T:C1.C1Zip.C1ZipFile"/> class and opens a zip stream associated 
            with this new instance.
            </summary>
            <param name="stream"><see cref="T:System.IO.Stream"/> that contains the zip data.</param>
        </member>
        <member name="M:C1.C1Zip.C1ZipFile.Open(System.String)">
            <summary>
            Opens an existing zip file.
            </summary>
            <param name="fileName">The name of an existing zip file, including the path.</param>
            <remarks>
            <para>This method checks that the zip file exists and is a valid zip file, then
            reads the zip file directory into the <see cref="P:C1.C1Zip.C1ZipFile.Entries"/> collection.
            The zip file is then closed, and can be used by other applications. There is no
            need to close the zip file explicitly.</para>
            </remarks>
        </member>
        <member name="M:C1.C1Zip.C1ZipFile.Create(System.String)">
            <summary>
            Creates an empty zip file on disk.
            </summary>
            <param name="fileName">The name of the zip file to create, including the path.</param>
            <remarks>
            If a file by the same name already exists, it is deleted before the new one
            is created.
            </remarks>
        </member>
        <member name="M:C1.C1Zip.C1ZipFile.Open(System.IO.Stream)">
            <summary>
            Opens an existing zip file stored in a stream.
            </summary>
            <param name="stream"><see cref="T:System.IO.Stream"/> that contains a zip file.</param>
            <remarks>
            <para>This method allows you to open and work with a zip file stored in a stream
            instead of in an actual file.</para>
            <para>Typical usage scenarios for this are zip files stored as application resources 
            or in binary database fields.</para>
            </remarks>
            <example>
            <para>The example below loads information from a zip file stored in an embedded resource. 
            To embed a zip file in an application, follow these steps:</para>
            <para>1) Right-click the project node in Visual Studio, select the <b>Add | Add Existing Item...</b> menu option.</para>
            <para>2) Select a zip file to add to the project as an embedded resource.</para>
            <para>3) Select the newly added file and make sure the <b>Build Action</b> property is set to "Embedded Resource".</para>
            <code>
            // get Stream from application resources
            System.Reflection.Assembly a = this.GetType().Assembly;
            using (Stream stream = a.GetManifestResourceStream("MyApp.test.zip"))
            {
              // open C1ZipFile on the stream
              zip.Open(stream);
            
              // enumerate the entries in the zip file,
              foreach (C1ZipEntry ze in zip.Entries)
              {
                // show entries that have a 'txt' extension.
                if (ze.FileName.ToLower().EndsWith(".txt"))
                {
                  using (StreamReader sr = new StreamReader(ze.OpenReader()))
                  {
                    MessageBox.Show(sr.ReadToEnd(), ze.FileName);
                  }
                }
              }
            }
            </code>
            </example>
        </member>
        <member name="M:C1.C1Zip.C1ZipFile.Create(System.IO.Stream)">
            <summary>
            Creates a new zip file in a stream.
            </summary>
            <param name="stream"><see cref="T:System.IO.Stream"/> that will contain the new zip file.</param>
            <example>
            The code below creates a new <see cref="T:C1.C1Zip.C1ZipFile"/> on a memory stream, then adds
            several files to it. Finally, the code gets the zipped data out as an array of bytes,
            which could be stored in a database for example.
            <code>
            // create zip on a stream
            MemoryStream msZip = new MemoryStream();
            C1ZipFile zip = new C1ZipFile(msZip, true);
            
            // add some entries to it
            foreach (string f in Directory.GetFiles(@"c:\WINDOWS\Web\Wallpaper"))
            {
              zip.Entries.Add(f);
            }
            
            // get zipped data out as a byte array
            byte[] zipData = msZip.ToArray();
            </code>
            </example>
        </member>
        <member name="M:C1.C1Zip.C1ZipFile.Close">
            <summary>
            Resets all data members of the <see cref="T:C1.C1Zip.C1ZipFile"/> object.
            </summary>
            <remarks>
            Disk files are automatically closed by <b>C1Zip</b>. You only need to use this
            method if you want to break the connection between a <see cref="T:C1.C1Zip.C1ZipFile"/> class 
            and a physical zip file.
            </remarks>
        </member>
        <member name="M:C1.C1Zip.C1ZipFile.Refresh">
            <summary>
            Refreshes all data members by re-opening the current zip file.
            </summary>
            <remarks>
            This method is useful in instances where other applications may have changed
            the zip file and you want to make sure the information in the <see cref="P:C1.C1Zip.C1ZipFile.Entries"/>
            collection is up to date.
            </remarks>
        </member>
        <member name="M:C1.C1Zip.C1ZipFile.IsZipFile(System.String)">
            <summary>
            Tests whether a file is a valid zip file.
            </summary>
            <param name="fileName">Name of the file to test.</param>
            <returns>True if the file exists and is a valid zip file, false otherwise.</returns>
        </member>
        <member name="M:C1.C1Zip.C1ZipFile.IsZipFile(System.IO.Stream)">
            <summary>
            Tests whether a stream contains a valid zip file.
            </summary>
            <param name="stream"><see cref="T:System.IO.Stream"/> to test.</param>
            <returns>True if <paramref name="stream"/> contains a valid zip file, false otherwise.</returns>
        </member>
        <member name="M:C1.C1Zip.C1ZipFile.OpenBatch">
            <summary>
            Opens the zip file for multiple operations.
            </summary>
            <remarks>
            <para>By default, <see cref="T:C1.C1Zip.C1ZipFile"/> opens and closes the zip file 
            automatically whenever entries are added or removed.</para>
            <para>This can cause delays in systems that have certain types of anti-virus
            software installed, or in situations where you want to add a large number of 
            relatively small entries. In these cases, use the <see cref="M:C1.C1Zip.C1ZipFile.OpenBatch"/> and 
            <see cref="M:C1.C1Zip.C1ZipFile.CloseBatch"/> methods to keep the zip file open until the entire 
            operation is concluded.</para>
            <para>Use a finally clause to ensure that the <see cref="M:C1.C1Zip.C1ZipFile.CloseBatch"/> 
            method is called even if an exception occurs.</para>
            </remarks>
            <example>
            The code below opens a zip file, adds several entries to it, then closes 
            the file:
            <code>
            C1ZipFile zip = new C1ZipFile();
            zip.Open(myzipfile);
            try
            {
            	zip.OpenBatch();
            	foreach (string fileName in Directory.GetFiles(path, "*.*"))
            		zip.Entries.Add(fileName);
            }
            finally
            {
            	zip.CloseBatch();
            }
            </code>
            </example>
        </member>
        <member name="M:C1.C1Zip.C1ZipFile.CloseBatch">
            <summary>
            Closes a zip file after it was opened with a call to the 
            <see cref="M:C1.C1Zip.C1ZipFile.OpenBatch"/> method.
            </summary>
            <remarks>
            See the <see cref="M:C1.C1Zip.C1ZipFile.OpenBatch"/> method for a complete description 
            and a sample.
            </remarks>
        </member>
        <member name="P:C1.C1Zip.C1ZipFile.FileName">
            <summary>
            Gets the name of the current zip file.
            </summary>
        </member>
        <member name="P:C1.C1Zip.C1ZipFile.Password">
            <summary>
            Gets or sets the password to use when adding or retrieving entries from the 
            zip file.
            </summary>
            <remarks>
            <para>If the <see cref="P:C1.C1Zip.C1ZipFile.Password"/> property is set to a non-empty string, any entries 
            added to the zip file will be encrypted and protected by the password. To extract these 
            entries later, the same password must be used.</para>
            <para>The password applies to all entries from the moment it is set. If you set the 
            password to a non-empty string and then add several entries to the zip file, all
            entries will use the same password.</para>
            <para>Although <b>C1Zip</b> supports Unicode characters in passwords, several popular zip 
            utilities do not. To ensure your encrypted zip files can be opened with third-party
            utilities, use passwords that consist of ASCII characters only.</para>
            </remarks>
        </member>
        <member name="P:C1.C1Zip.C1ZipFile.Comment">
            <summary>
            Gets or sets a comment associated with the current zip file.
            </summary>
        </member>
        <member name="P:C1.C1Zip.C1ZipFile.CompressionLevel">
            <summary>
            Gets or sets the compression level to use when adding entries to the zip file.
            </summary>
            <remarks>
            Higher compression settings create smaller files, but take longer to process. The
            default setting (<see cref="F:C1.C1Zip.CompressionLevelEnum.DefaultCompression"/>) provides 
            a good trade-off between compression and speed.
            </remarks>
        </member>
        <member name="P:C1.C1Zip.C1ZipFile.Entries">
            <summary>
            Gets a <see cref="T:C1.C1Zip.C1ZipEntryCollection"/> that contains the entries in the zip file.
            </summary>
            <remarks>
            The <see cref="P:C1.C1Zip.C1ZipFile.Entries"/> collection is used to enumerate the entries in the zip file,
            and also to add, remove, and expand entries.
            </remarks>
        </member>
        <member name="P:C1.C1Zip.C1ZipFile.OverwriteReadOnly">
            <summary>
            Determines whether the component should overwrite read-only files when extracting 
            entries from the zip file.
            </summary>
        </member>
        <member name="P:C1.C1Zip.C1ZipFile.OverwriteHidden">
            <summary>
            Determines whether the component should overwrite hidden files when extracting 
            entries from the zip file.
            </summary>
        </member>
        <member name="P:C1.C1Zip.C1ZipFile.OverwriteSystem">
            <summary>
            Determines whether the component should overwrite system files when extracting 
            entries from the zip file.
            </summary>
        </member>
        <member name="P:C1.C1Zip.C1ZipFile.MemoryThreshold">
            <summary>
            Gets or sets the size of the largest stream to be compressed in memory.
            </summary>
            <remarks>
            <para><see cref="T:C1.C1Zip.C1ZipFile"/> compresses entries into temporary streams before
            adding them to the zip file.</para>
            <para>Entries with fewer than <see cref="P:C1.C1Zip.C1ZipFile.MemoryThreshold"/> bytes are compressed
            using a temporary memory stream.</para>
            <para>Entries with more than <see cref="P:C1.C1Zip.C1ZipFile.MemoryThreshold"/> bytes are compressed
            using a temporary file. You can control the location of the temporary file using
            the <see cref="P:C1.C1Zip.C1ZipFile.TempFileName"/> property.</para>
            </remarks>
        </member>
        <member name="P:C1.C1Zip.C1ZipFile.TempFileName">
            <summary>
            Gets or sets the name of the temporary file to use when adding entries to the zip file.
            </summary>
            <remarks>
            <para><see cref="T:C1.C1Zip.C1ZipFile"/> creates temporary streams while adding entries to a zip file.
            These temporary streams can be memory-based or disk-based, depending on the size of the
            entry and on the setting of the <see cref="P:C1.C1Zip.C1ZipFile.MemoryThreshold"/> property.</para>
            If a temporary file is used, <see cref="T:C1.C1Zip.C1ZipFile"/> you can control its location by 
            setting the <see cref="P:C1.C1Zip.C1ZipFile.TempFileName"/> property. If you don't select a path for the 
            temporary file, <see cref="T:C1.C1Zip.C1ZipFile"/> will create one automatically using the 
            <see cref="M:System.IO.Path.GetTempFileName"/> method.
            </remarks>
        </member>
        <member name="T:C1.C1Zip.ZipEncoding">
            <summary>
            Encoding used for entry names and comments
            
            NOTE: this is culture-dependent, which is a really bad idea, but most zip packers
            use the default OEM code page to encode file names, so we have to go along with it...
            
            Note that Encoding.Default seems like a logical choice but doesn't really work for
            international locales. Instead, we need to create an encoding using the current
            OEMCodePage. That allows accents and international characters to be used in file
            names (like the zip built into Windows, allows names such as "Åland.txt", "Äiti.txt", 
            "Würth.txt", etc.).
            
            This has nothing to do with compression, it's just used to encode and decode entry 
            names and comments.
            
            </summary>
        </member>
        <member name="T:C1.C1Zip.ZipFileException">
            <summary>
            Exception thrown when trying to open an invalid Zip file.
            </summary>
        </member>
        <member name="M:C1.C1Zip.ZipFileException.#ctor(System.String)">
            <summary>
            Initializes a new instance of a <see cref="T:System.IO.FileLoadException"/>.
            </summary>
            <param name="msg">Message that describes the exception.</param>
        </member>
        <member name="M:C1.C1Zip.ZipFileException.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of a <see cref="T:System.IO.FileLoadException"/>.
            </summary>
            <param name="msg">Message that describes the exception.</param>
            <param name="filename">Name of the file that caused the exception.</param>
        </member>
        <member name="M:C1.C1Zip.ZipFileException.#ctor(System.String,System.String,System.Exception)">
            <summary>
            Initializes a new instance of a <see cref="T:System.IO.FileLoadException"/>.
            </summary>
            <param name="msg">Message that describes the exception.</param>
            <param name="filename">Name of the file that caused the exception.</param>
            <param name="innerException">Inner exception.</param>
        </member>
        <member name="M:C1.C1Zip.C1ZStreamReader.#ctor(System.IO.Stream)">
            <summary>
            Initializes a new instance of the <see cref="T:C1.C1Zip.C1ZStreamReader"/> class.
            </summary>
            <param name="baseStream">Input stream that contains the compressed data.</param>
        </member>
        <member name="M:C1.C1Zip.C1ZStreamReader.#ctor(System.IO.Stream,System.Boolean,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:C1.C1Zip.C1ZStreamReader"/> class.
            </summary>
            <param name="baseStream">Input stream that contains the compressed data.</param>
            <param name="zip">Specifies whether the compressed stream was created in zip format.</param>
            <param name="sizeCompressed">Specifies the number of compressed bytes to read from the stream.</param>
            <remarks>
            The <paramref name="sizeCompressed"/> parameter is needed only when a single stream contains
            several compressed streams (in zip files for example). If this parameter is not 
            specified, it is assumed that the stream contains a single stream of compressed data.
            </remarks>
        </member>
        <member name="M:C1.C1Zip.C1ZStreamReader.#ctor(System.IO.Stream,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:C1.C1Zip.C1ZStreamReader"/> class.
            </summary>
            <param name="baseStream">Input stream that contains the compressed data.</param>
            <param name="zip">Specifies whether the compressed stream was created in zip format.</param>
        </member>
        <member name="M:C1.C1Zip.C1ZStreamReader.#ctor(System.IO.Stream,System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:C1.C1Zip.C1ZStreamReader"/> class.
            </summary>
            <param name="baseStream">Input stream that contains the compressed data.</param>
            <param name="header">Specifies whether the compressed stream contains header information (should be False for streams in zip files).</param>
            <param name="crc32">Specifies whether the compressed stream contains a CRC32 checksum (should be True for streams in zip files).</param>
        </member>
        <member name="M:C1.C1Zip.C1ZStreamReader.#ctor(System.IO.Stream,System.Boolean,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:C1.C1Zip.C1ZStreamReader"/> class.
            </summary>
            <param name="baseStream">Input stream that contains the compressed data.</param>
            <param name="zip">Specifies whether the compressed stream was created in zip format.</param>
            <param name="sizeCompressed">Specifies the number of compressed bytes to read from the stream.</param>
            <param name="method">Specifies the method that was used to compress the stream.</param>
        </member>
        <member name="M:C1.C1Zip.C1ZStreamReader.Seek(System.Int64,System.IO.SeekOrigin)">
            <summary>
            Not supported.
            </summary>
        </member>
        <member name="M:C1.C1Zip.C1ZStreamReader.SetLength(System.Int64)">
            <summary>
            Sets the number of compressed bytes to read from the underlying stream.
            </summary>
        </member>
        <member name="M:C1.C1Zip.C1ZStreamReader.Read(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Reads a sequence of bytes from the underlying compressed stream, decompressing them into
            a buffer, then advances the position within the stream by the number of bytes read.
            </summary>
            <param name="buf">An array of bytes. When this method returns, <paramref name="buff"/> contains the specified byte array with the values between <paramref name="offset"/>and (<paramref name="offset"/> + <paramref name="count"/>) replaced by the uncompressed data read from the stream.</param>
            <param name="offset">The zero-based byte offset in <paramref name="buff"/> at which to begin storing the data read from the current stream.</param>
            <param name="count">The maximum number of (decompressed) bytes to be read from the current stream.</param>
            <returns>The total number of bytes read into the buffer. This may be less than the number of bytes 
            requested if that many bytes are not currently available, or zero (0) if the end of the stream has been reached.
            </returns>
        </member>
        <member name="M:C1.C1Zip.C1ZStreamReader.Write(System.Byte[],System.Int32,System.Int32)">
            <summary>
            This method is overridden and is not supported by the <see cref="T:C1.C1Zip.C1ZStreamReader"/> class.
            </summary>
        </member>
        <member name="M:C1.C1Zip.C1ZStreamReader.Flush">
            <summary>
            Clears all buffers for this stream and causes any buffered data to be written to the underlying 
            stream.
            </summary>
        </member>
        <member name="M:C1.C1Zip.C1ZStreamReader.Close">
            <summary>
            <para>Closes the current stream compressor and flushed any pending data into the base stream.</para>
            <para>If the <see cref="P:C1.C1Zip.C1ZStreamReader.OwnsBaseStream"/> property is set to True (the default value), 
            then this method also closes the base stream and releases any resources (such as sockets 
            and file handles) associated with it.</para>
            </summary>
        </member>
        <member name="M:C1.C1Zip.C1ZStreamReader.ReadByte">
            <summary>
            Reads a byte from the stream and advances the position within the stream 
            by one byte, or returns -1 if at the end of the stream.
            </summary>
            <returns>The unsigned byte cast to an <see cref="T:System.Int32"/>, or -1 if at 
            the end of the stream.
            </returns>
        </member>
        <member name="P:C1.C1Zip.C1ZStreamReader.BaseStream">
            <summary>
            Gets the underlying stream that contains the compressed data.
            </summary>
        </member>
        <member name="P:C1.C1Zip.C1ZStreamReader.OwnsBaseStream">
            <summary>
            Gets or sets whether calling the <see cref="M:C1.C1Zip.C1ZStreamReader.Close"/> method will also
            close the underlying stream (see <see cref="P:C1.C1Zip.C1ZStreamReader.BaseStream"/>).
            </summary>
        </member>
        <member name="P:C1.C1Zip.C1ZStreamReader.SizeCompressed">
            <summary>
            Gets the number of bytes in the stream (compressed bytes).
            </summary>
        </member>
        <member name="P:C1.C1Zip.C1ZStreamReader.SizeUncompressed">
            <summary>
            Gets the number of bytes that were compressed into the stream (uncompressed bytes).
            </summary>
        </member>
        <member name="P:C1.C1Zip.C1ZStreamReader.CanRead">
            <summary>
            Always returns True.
            </summary>
        </member>
        <member name="P:C1.C1Zip.C1ZStreamReader.CanWrite">
            <summary>
            Always returns False.
            </summary>
        </member>
        <member name="P:C1.C1Zip.C1ZStreamReader.CanSeek">
            <summary>
            Always returns False.
            </summary>
        </member>
        <member name="P:C1.C1Zip.C1ZStreamReader.Length">
            <summary>
            Gets the length of the compressed stream if it is known (or -1 if the
            length of the compressed stream is unknown).
            </summary>
        </member>
        <member name="P:C1.C1Zip.C1ZStreamReader.Position">
            <summary>
            Gets the position within the stream (read-only).
            </summary>
        </member>
        <member name="F:C1.C1Zip.CompressionLevelEnum.NoCompression">
            <summary>
            No Compression.
            </summary>
        </member>
        <member name="F:C1.C1Zip.CompressionLevelEnum.BestSpeed">
            <summary>
            Low compression, highest speed.
            </summary>
        </member>
        <member name="F:C1.C1Zip.CompressionLevelEnum.BestCompression">
            <summary>
            Highest compression, low speed.
            </summary>
        </member>
        <member name="F:C1.C1Zip.CompressionLevelEnum.DefaultCompression">
            <summary>
            High compression, high speed.
            </summary>
        </member>
        <member name="M:C1.C1Zip.C1ZStreamWriter.#ctor(System.IO.Stream)">
            <summary>
            Initializes a new instance of the <see cref="T:C1.C1Zip.C1ZStreamWriter"/> class.
            </summary>
            <param name="baseStream">Output stream that will contain the compressed data.</param>
        </member>
        <member name="M:C1.C1Zip.C1ZStreamWriter.#ctor(System.IO.Stream,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:C1.C1Zip.C1ZStreamWriter"/> class.
            </summary>
            <param name="baseStream">Output stream that will contain the compressed data.</param>
            <param name="zip">Specifies whether the compressed stream should be compatible with zip files.</param>
            <remarks>
            <para>Streams in zip files are different from regular zlib streams in two aspects:</para>
            <para>(1) zip streams do not contain any local header information (the information is stored in the zip file headers instead) and</para>
            <para>(2) zip streams use a CRC32 checksum instead of the adler32 checksum used by zlib streams.</para>
            </remarks>
        </member>
        <member name="M:C1.C1Zip.C1ZStreamWriter.#ctor(System.IO.Stream,System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:C1.C1Zip.C1ZStreamWriter"/> class.
            </summary>
            <param name="baseStream">Output stream that will contain the compressed data.</param>
            <param name="header">Include header information in compressed stream (should be False for streams in zip files).</param>
            <param name="crc32">Include CRC32 checksum in compressed stream (should be True for streams in zip files).</param>
        </member>
        <member name="M:C1.C1Zip.C1ZStreamWriter.#ctor(System.IO.Stream,C1.C1Zip.CompressionLevelEnum)">
            <summary>
            Initializes a new instance of the <see cref="T:C1.C1Zip.C1ZStreamWriter"/> class.
            </summary>
            <param name="baseStream">Output stream that will contain the compressed data.</param>
            <param name="level">Compression level to use when compressing data.</param>
        </member>
        <member name="M:C1.C1Zip.C1ZStreamWriter.#ctor(System.IO.Stream,C1.C1Zip.CompressionLevelEnum,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:C1.C1Zip.C1ZStreamWriter"/> class.
            </summary>
            <param name="baseStream">Output stream that will contain the compressed data.</param>
            <param name="level">Compression level to use when compressing data.</param>
            <param name="zip">Specifies whether the compressed stream should be compatible with zip files.</param>
        </member>
        <member name="M:C1.C1Zip.C1ZStreamWriter.#ctor(System.IO.Stream,C1.C1Zip.CompressionLevelEnum,System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:C1.C1Zip.C1ZStreamWriter"/> class.
            </summary>
            <param name="baseStream">Output stream that will contain the compressed data.</param>
            <param name="level">Compression level to use when compressing data.</param>
            <param name="header">Include header information in compressed stream (should be False for streams in zip files).</param>
            <param name="crc32">Include CRC32 checksum in compressed stream (should be True for streams in zip files).</param>
        </member>
        <member name="M:C1.C1Zip.C1ZStreamWriter.Seek(System.Int64,System.IO.SeekOrigin)">
            <summary>
            Not supported.
            </summary>
        </member>
        <member name="M:C1.C1Zip.C1ZStreamWriter.SetLength(System.Int64)">
            <summary>
            Not supported.
            </summary>
        </member>
        <member name="M:C1.C1Zip.C1ZStreamWriter.Read(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Not supported.
            </summary>
        </member>
        <member name="M:C1.C1Zip.C1ZStreamWriter.Write(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Writes a sequence of bytes to the current stream and advances the current 
            position within this stream by the number of bytes written.
            </summary>
            <param name="buf">An array of bytes. This method copies <paramref name="count"/> bytes from
            <paramref name="buf"/> to the current stream.</param>
            <param name="offset">The zero-based byte offset in <paramref name="buf"/> at which to begin copying bytes to the current stream.</param>
            <param name="count">The number of bytes to be written to the current stream.</param>
            <remarks>
            The data is compressed as it is written into the stream. Writing <paramref name="count"/> bytes
            into the stream will usually advance the position by a number smaller than <paramref name="count"/>.
            </remarks>
        </member>
        <member name="M:C1.C1Zip.C1ZStreamWriter.Flush">
            <summary>
            Clears all buffers for this stream and causes any buffered data to be written to the underlying 
            stream.
            </summary>
        </member>
        <member name="M:C1.C1Zip.C1ZStreamWriter.Close">
            <summary>
            <para>Closes the current stream compressor and flushed any pending data into the base stream.</para>
            <para>If the <see cref="P:C1.C1Zip.C1ZStreamWriter.OwnsBaseStream"/> property is set to True (the default value), 
            then this method also closes the base stream and releases any resources (such as sockets 
            and file handles) associated with it.</para>
            </summary>
        </member>
        <member name="M:C1.C1Zip.C1ZStreamWriter.WriteByte(System.Byte)">
            <summary>
            Writes a byte to the current position in the stream and advances the position within the stream by one byte.
            </summary>
            <param name="value">Value to be written to the stream.</param>
        </member>
        <member name="P:C1.C1Zip.C1ZStreamWriter.BaseStream">
            <summary>
            Gets the underlying stream that receives the compressed data.
            </summary>
        </member>
        <member name="P:C1.C1Zip.C1ZStreamWriter.OwnsBaseStream">
            <summary>
            Gets or sets whether calling the <see cref="M:C1.C1Zip.C1ZStreamWriter.Close"/> method will also
            close the underlying stream (see <see cref="P:C1.C1Zip.C1ZStreamWriter.BaseStream"/>).
            </summary>
        </member>
        <member name="P:C1.C1Zip.C1ZStreamWriter.Checksum">
            <summary>
            Gets the checksum value used to check the integrity of the stream.
            </summary>
            <remarks>
            The checksum used may be an Adler or crc32 value depending on how
            the <see cref="T:C1.C1Zip.C1ZStreamWriter"/> was created.
            </remarks>
        </member>
        <member name="P:C1.C1Zip.C1ZStreamWriter.SizeCompressed">
            <summary>
            Gets the number of bytes in the stream (compressed bytes).
            </summary>
        </member>
        <member name="P:C1.C1Zip.C1ZStreamWriter.SizeUncompressed">
            <summary>
            Gets the number of bytes that were compressed into the stream (uncompressed bytes).
            </summary>
        </member>
        <member name="P:C1.C1Zip.C1ZStreamWriter.ZStream">
            <summary>
            Gets the ZStream instance wrapped by this <see cref="T:C1.C1Zip.C1ZStreamWriter"/>.
            </summary>
            <remarks>
            This property is useful only in advanced applications that need to customize 
            the low-level behavior of the compressor. It is not needed in common applications.
            </remarks>
        </member>
        <member name="P:C1.C1Zip.C1ZStreamWriter.CanRead">
            <summary>
            Always returns False.
            </summary>
        </member>
        <member name="P:C1.C1Zip.C1ZStreamWriter.CanWrite">
            <summary>
            Always returns True.
            </summary>
        </member>
        <member name="P:C1.C1Zip.C1ZStreamWriter.CanSeek">
            <summary>
            Always returns False.
            </summary>
        </member>
        <member name="P:C1.C1Zip.C1ZStreamWriter.Length">
            <summary>
            Returns the length of the underlying stream, in bytes.
            </summary>
        </member>
        <member name="P:C1.C1Zip.C1ZStreamWriter.Position">
            <summary>
            Gets the position within the stream (read-only).
            </summary>
        </member>
        <member name="T:C1.C1Zip.StringTables">
            <summary>
            Provide localization for error messages in Japanese.
            </summary>
        </member>
        <member name="T:C1.C1Zip.ZipEntryStreamWriter">
            <summary>
            ZipEntryStreamWriter
            Extends C1ZStreamWriter to provide the following:
            1) Creates a memory or temporary storage stream.
            2) Keeps track of the parent zip file.
            3) Overrides Close to add the compressed stream to the zip file.
            </summary>
        </member>
        <member name="T:C1.C1Zip.ZLib.IChecksum">
            <summary>
            Interface ICheckSum
            implemented by the Adler32 and CRC32 objects.
            Adler32 is a faster checksum used by the native ZLib
            CRC32   is the default checksum used in ZIP files
            </summary>
        </member>
        <member name="T:C1.C1Zip.ZLib.CRC32">
            <summary>
            Summary description for CRC32.
            methods are called Adler to keep zlib source code
            </summary>
        </member>
        <member name="T:C1.C1Zip.ZLib.Deflate">
            <summary>
            Summary description for Deflate.
            </summary>
        </member>
        <member name="T:C1.C1Zip.ZLib.InfBlocks">
            <summary>
            Summary description for InfBlocks.
            </summary>
        </member>
        <member name="T:C1.C1Zip.ZLib.InfCodes">
            <summary>
            Summary description for InfCodes.
            </summary>
        </member>
        <member name="T:C1.C1Zip.ZLib.Inflate">
            <summary>
            Summary description for Inflate.
            </summary>
        </member>
        <member name="T:C1.C1Zip.ZLib.InfTree">
            <summary>
            Summary description for InfTree.
            </summary>
        </member>
        <member name="T:C1.C1Zip.ZLib.StaticTree">
            <summary>
            Summary description for StaticTree.
            </summary>
        </member>
        <member name="T:C1.C1Zip.ZLib.Tree">
            <summary>
            Summary description for Tree.
            </summary>
        </member>
        <member name="F:C1.C1Zip.ZLib.ZStream.Z_OK">
            <summary>
            No error.
            </summary>
        </member>
        <member name="F:C1.C1Zip.ZLib.ZStream.Z_STREAM_END">
            <summary>
            End of stream detected.
            </summary>
        </member>
        <member name="F:C1.C1Zip.ZLib.ZStream.Z_NEED_DICT">
            <summary>
            A preset dictionary is needed at this point.
            </summary>
        </member>
        <member name="F:C1.C1Zip.ZLib.ZStream.Z_ERRNO">
            <summary>
            File error.
            </summary>
        </member>
        <member name="F:C1.C1Zip.ZLib.ZStream.Z_STREAM_ERROR">
            <summary>
            Stream structure is inconsistent (input/output buffers are null for example).
            </summary>
        </member>
        <member name="F:C1.C1Zip.ZLib.ZStream.Z_DATA_ERROR">
            <summary>
            Input data is corrupted (wrong format or checksum).
            </summary>
        </member>
        <member name="F:C1.C1Zip.ZLib.ZStream.Z_MEM_ERROR">
            <summary>
            Not enough memory.
            </summary>
        </member>
        <member name="F:C1.C1Zip.ZLib.ZStream.Z_BUF_ERROR">
            <summary>
            No progress possible or no room in output buffer.
            </summary>
        </member>
        <member name="F:C1.C1Zip.ZLib.ZStream.Z_VERSION_ERROR">
            <summary>
            Incompatible ZLIB version.
            </summary>
        </member>
        <member name="F:C1.C1Zip.ZLib.ZStream.next_in">
            <summary>
            Input buffer.
            </summary>
        </member>
        <member name="F:C1.C1Zip.ZLib.ZStream.next_in_index">
            <summary>
            Position of cursor into input buffer.
            </summary>
        </member>
        <member name="F:C1.C1Zip.ZLib.ZStream.avail_in">
            <summary>
            Number of bytes available in the input buffer.
            </summary>
        </member>
        <member name="F:C1.C1Zip.ZLib.ZStream.total_in">
            <summary>
            Total number of input bytes read so far.
            </summary>
        </member>
        <member name="F:C1.C1Zip.ZLib.ZStream.next_out">
            <summary>
            Output buffer.
            </summary>
        </member>
        <member name="F:C1.C1Zip.ZLib.ZStream.next_out_index">
            <summary>
            Position of cursor into the output buffer.
            </summary>
        </member>
        <member name="F:C1.C1Zip.ZLib.ZStream.avail_out">
            <summary>
            Number of free bytes remaining in output buffer.
            </summary>
        </member>
        <member name="F:C1.C1Zip.ZLib.ZStream.total_out">
            <summary>
            Total number of bytes output so far.
            </summary>
        </member>
        <member name="F:C1.C1Zip.ZLib.ZStream.msg">
            <summary>
            Description of the last error (null if no errors).
            </summary>
        </member>
        <member name="F:C1.C1Zip.ZLib.ZStream.adler">
            <summary>
            Current checksum value (Adler or CRC32).
            </summary>
        </member>
        <member name="M:C1.C1Zip.ZLib.ZStream.#ctor">
            <summary>
            Initializes a new instance of the <b>ZStream</b> class using an Adler checksum.
            </summary>
        </member>
        <member name="M:C1.C1Zip.ZLib.ZStream.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the <b>ZStream</b> class.
            </summary>
            <param name="crc32"><b>True</b> to use a CRC32 checksum, <b>False</b> to use an Adler checksum.</param>
            <remarks>
            CRC32 checksums are the standard used in zip files. Adler checksums are the default
            used by ZLIB. Adler checksums are faster to calculate, but are not compatible with the zip format.
            </remarks>
        </member>
        <member name="M:C1.C1Zip.ZLib.ZStream.inflateInit">
            <summary>
            Initializes the internal stream state for decompression.
            </summary>
            <returns>Zero on success, an error code on failure.</returns>
            <remarks>
            <para>The fields <see cref="F:C1.C1Zip.ZLib.ZStream.next_in"/> and <see cref="F:C1.C1Zip.ZLib.ZStream.avail_in"/> must be 
            initialized before by the caller.</para>
            <para><b>inflateInit</b> does not perform any decompression apart from reading the 
            zlib header if present: data decompression is done by the <see cref="M:C1.C1Zip.ZLib.ZStream.inflate(System.Int32)"/> 
            method. Therefore, the <b>next_in</b> and <b>avail_in</b> may be modified, but 
            <b>next_out</b> and <b>avail_out</b> are unchanged.</para>
            </remarks>
        </member>
        <member name="M:C1.C1Zip.ZLib.ZStream.inflateInit(System.Int32)">
            <summary>
            Initializes the internal stream state for decompression.
            </summary>
            <param name="bits">Size of the LZ77 sliding compression window in bits (the default value is 15 bits).</param>
            <returns>Zero on success, an error code on failure.</returns>
        </member>
        <member name="M:C1.C1Zip.ZLib.ZStream.inflate(System.Int32)">
            <summary>
            Decompresses as much data as possible until the input buffer is exhausted or 
            the output buffer is full.
            </summary>
            <param name="flush">How to flush data into the output buffer (default value is 2).</param>
            <returns>
            <b>Z_OK</b> if some progress has been made (more input processed or more output produced), 
            <b>Z_STREAM_END</b> if the end of the compressed data has been reached and all 
            uncompressed output has been produced, 
            <b>Z_NEED_DICT</b> if a preset dictionary is needed at this point, 
            <b>Z_DATA_ERROR</b> if the input data was corrupted (input stream not conforming to 
            the zlib format or incorrect checksum), 
            <b>Z_STREAM_ERROR</b> if the stream structure was inconsistent (for example if 
            <b>next_in</b> or <b>next_out</b> was null), 
            <b>Z_MEM_ERROR</b> if there was not enough memory,
            <b>Z_BUF_ERROR</b> if no progress is possible or if there was not enough room in the 
            output buffer when <b>Z_FINISH</b> is used.
            </returns>
            <remarks>
            <para><b>inflate</b> performs one or both of the following actions:</para>
            
            <para>1. Decompress more input starting at <b>next_in</b> and update <b>next_in</b>
            and <b>avail_in</b> accordingly. If not all input can be processed (because there 
            is not enough room in the output buffer), <b>next_in</b> is updated and processing 
            will resume at this point for the next call to inflate.</para>
            
            <para>2. Provide more output starting at <b>next_out</b> and update <b>next_out</b>
            and <b>avail_out</b> accordingly. <b>inflate</b> provides as much output as 
            possible, until there is no more input data or no more space in the output buffer.</para>
            
            <para>Before the call to inflate, the application should ensure that at least one of the 
            actions is possible, by providing more input and/or consuming more output, and 
            updating the <b>next_*</b> and <b>avail_*</b> values accordingly.</para>
            
            <para>If <b>inflate</b> returns Zero and <b>avail_out</b> == 0, it must be called again 
            after making room in the output buffer because there might be more output pending.</para>
            
            <para>The application can consume the uncompressed output when it wants, for example when 
            the output buffer is full (<b>avail_out</b> == 0), or after each call of <b>inflate</b>.</para>
            
            <para>This method may introduce some output latency (reading input without producing 
            any output) except when forced to flush.</para>
            </remarks>
        </member>
        <member name="M:C1.C1Zip.ZLib.ZStream.inflateEnd">
            <summary>
            Frees all dynamically allocated data structures for this stream, 
            discards any unprocessed input, and does not flush any pending output.
            </summary>
            <returns>Zero on success, an error code on failure.</returns>
        </member>
        <member name="M:C1.C1Zip.ZLib.ZStream.inflateSync">
            <summary>
            Skips invalid compressed data until a full flush point is found, 
            or until all available input is skipped. No output is provided.
            </summary>
            <returns>Zero on success, an error code on failure.</returns>
        </member>
        <member name="M:C1.C1Zip.ZLib.ZStream.inflateSetDictionary(System.Byte[],System.Int32)">
            <summary>
            Initializes the decompression dictionary from the given uncompressed byte sequence.
            </summary>
            <param name="dictionary">Data in the dictionary.</param>
            <param name="dictLength">Number of bytes in the dictionary.</param>
            <returns>Zero on success, an error code on failure.</returns>
            <remarks>
            <para>This method must be called immediately after a call of <see cref="M:C1.C1Zip.ZLib.ZStream.inflate(System.Int32)"/> 
            if this call returned <b>Z_NEED_DICT</b>. The dictionary chosen by the compressor 
            can be determined from the <b>Adler32</b> value returned by this call to <b>inflate</b>.</para>
            <para>The compressor and decompressor must use exactly the same dictionary 
            (see the <see cref="M:C1.C1Zip.ZLib.ZStream.deflateSetDictionary(System.Byte[],System.Int32)"/> method).</para>
            </remarks>
        </member>
        <member name="M:C1.C1Zip.ZLib.ZStream.deflateInit(System.Int32)">
            <summary>
            Initializes the internal stream state for compression.
            </summary>
            <param name="level">Compression level between zero and nine (0-9).</param>
            <returns>Zero on success, an error code on failure.</returns>
            <remarks>
            <para>Compression level 1 gives best speed, 9 gives best compression.</para>
            <para>Compression level zero gives no compression at all (the input data is simply copied a block at a time).</para>
            <para>The default compression level is 6, which provides a compromise between speed and compression.</para>
            </remarks>
        </member>
        <member name="M:C1.C1Zip.ZLib.ZStream.deflateInit(System.Int32,System.Int32)">
            <summary>
            Initializes the internal stream state for compression.
            </summary>
            <param name="level">Compression level between zero and nine (0-9).</param>
            <param name="bits">Size of the LZ77 sliding compression window in bits (the default value is 15 bits).</param>
            <returns>Zero on success, an error code on failure.</returns>
            <remarks>
            <para>Compression level 1 gives best speed, 9 gives best compression.</para>
            <para>Compression level zero gives no compression at all (the input data is simply copied a block at a time).</para>
            <para>The default compression level is 6, which provides a compromise between speed and compression.</para>
            </remarks>
        </member>
        <member name="M:C1.C1Zip.ZLib.ZStream.deflate(System.Int32)">
            <summary>
            Compresses as much data as possible, and stops when the input buffer becomes empty or the 
            output buffer becomes full.
            </summary>
            <param name="flush">Non-zero to force some data to be flushed into the output buffer.</param>
            <returns>Zero on success, an error code on failure.</returns>
            <remarks>
            <para><b>deflate</b> performs one or both of the following actions:</para>
            <para>1. Compress more input starting at <b>next_in</b> and update <b>next_in</b> and 
            <b>avail_in</b> accordingly. If not all input can be processed (because there is not 
            enough room in the output buffer), <b>next_in</b> and <b>avail_in</b> are updated and 
            processing will resume at this point for the next call to <b>deflate</b>.</para>
            <para>2. Provide more output starting at <b>next_out</b> and update <b>next_out</b> and 
            <b>avail_out</b> accordingly. This action is forced if the parameter <paramref name="flush"/> is 
            non zero. Forcing flush frequently degrades the compression ratio, so this parameter 
            should be set only when necessary (in interactive applications). Some output may be 
            provided even if flush is not set</para>
            <para>This method may introduce some output latency (reading input without producing 
            any output) except when forced to flush.</para>
            <para>If <b>deflate</b> returns with <b>avail_out</b> == 0, this method must be called 
            again with the same value of the <paramref name="flush"/> parameter and more output space 
            until the flush is complete (<b>deflate</b> returns with <b>avail_out</b> != 0).</para>
            </remarks>
        </member>
        <member name="M:C1.C1Zip.ZLib.ZStream.deflateEnd">
            <summary>
            Frees all dynamically allocated data structures for this stream, 
            discards any unprocessed input, and does not flush any pending output.
            </summary>
            <returns>Zero on success, an error code on failure.</returns>
        </member>
        <member name="M:C1.C1Zip.ZLib.ZStream.deflateParams(System.Int32,System.Int32)">
            <summary>
            Dynamically updates the compression level and compression strategy.
            </summary>
            <param name="level">Compression level between zero and nine (0-9).</param>
            <param name="strategy">Compression strategy (0-2).</param>
            <returns></returns>
        </member>
        <member name="M:C1.C1Zip.ZLib.ZStream.deflateSetDictionary(System.Byte[],System.Int32)">
            <summary>
            Initializes the compression dictionary from the given byte sequence without 
            producing any compressed output.
            </summary>
            <param name="dictionary">Data in the dictionary.</param>
            <param name="dictLength">Number of bytes in the dictionary.</param>
            <returns>Zero on success, an error code on failure.</returns>
            <remarks>
            <para>This method must be called immediately after <see cref="M:C1.C1Zip.ZLib.ZStream.deflateInit(System.Int32)"/>,
            before any call to <see cref="M:C1.C1Zip.ZLib.ZStream.deflate(System.Int32)"/>.</para>
            <para>The compressor and decompressor must use exactly the same dictionary 
            (see <see cref="M:C1.C1Zip.ZLib.ZStream.inflateSetDictionary(System.Byte[],System.Int32)"/>).</para>
            </remarks>
        </member>
        <member name="T:C1.C1Zip.ZLib.ZStreamException">
            <summary>
            The exception that is thrown when reading or writing to a compressed stream fails.
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1SuperPanel.BehaviorSettings.C1HScroller">
            <summary>
            Represents horizontal scroller of <see cref="T:C1.Web.UI.Controls.C1SuperPanel.C1SuperPanel"/>.
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1SuperPanel.BehaviorSettings.C1ScrollerBase">
            <summary>
            Base class for scroller.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1SuperPanel.BehaviorSettings.C1ScrollerBase.SmallChange">
            <summary>
            Gets or sets the value to be added to or subtracted from the Value property when the scroll box is moved a small distance.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1SuperPanel.BehaviorSettings.C1ScrollerBase.LargeChange">
            <summary>
            Gets or sets the value to be added to or subtracted from the Value property when the scroll box is moved a large distance.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1SuperPanel.BehaviorSettings.C1ScrollerBase.Value">
            <summary>
            Gets or sets a numeric value that represents the current position of the scroll box on the scroll bar control.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1SuperPanel.BehaviorSettings.C1ScrollerBase.Maximum">
            <summary>
            Gets or sets the Maximum value for scroller.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1SuperPanel.BehaviorSettings.C1ScrollerBase.Minimum">
            <summary>
            Gets or sets Minimum value of the scroller.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1SuperPanel.BehaviorSettings.C1ScrollerBase.Mode">
            <summary>
            Gets or sets the mode of this scroller.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1SuperPanel.BehaviorSettings.C1ScrollerBase.Visibility">
            <summary>
            Gets or sets visibility option for <see cref="T:C1.Web.UI.Controls.C1SuperPanel.C1SuperPanel"/>.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1SuperPanel.BehaviorSettings.C1ScrollerBase.ShowArrows">
            <summary>
            Gets or sets a value indicating whether to show scroll bar arrows.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1SuperPanel.BehaviorSettings.C1ScrollerBase.ButtonAlign">
            <summary>
            Gets or sets a value indicating the alignment of scroll buttons.
            </summary>  PanelBehaviorSettings.Hscroller.ButtonAlign
        </member>
        <member name="P:C1.Web.UI.Controls.C1SuperPanel.BehaviorSettings.C1ScrollerBase.IncreaseButtonOffsetX">
            <summary>
            Gets or sets the increase button offset.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1SuperPanel.BehaviorSettings.C1ScrollerBase.DecreaseButtonOffsetX">
            <summary>
            Gets or sets the decrease button offset.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1SuperPanel.BehaviorSettings.C1ScrollerBase.IncreaseButtonOffsetY">
            <summary>
            Gets or sets the increase button offset.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1SuperPanel.BehaviorSettings.C1ScrollerBase.DecreaseButtonOffsetY">
            <summary>
            Gets or sets the decrease button offset.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1SuperPanel.BehaviorSettings.C1ScrollerBase.HoverEdgeSpan">
            <summary>
            Gets or sets the hover edge span.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1SuperPanel.BehaviorSettings.C1HScroller.ScrollbarLocation">
            <summary>
            Gets or sets the horizontal scrollbar location.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1SuperPanel.BehaviorSettings.C1HScroller.ButtonLocation">
            <summary>
            Gets or sets the horizontal scroll button location.
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1SuperPanel.BehaviorSettings.C1VScroller">
            <summary>
            Represents vertical scroller of <see cref="T:C1.Web.UI.Controls.C1SuperPanel.C1SuperPanel"/>.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1SuperPanel.BehaviorSettings.C1VScroller.ScrollbarLocation">
            <summary>
            Gets or sets the vertical scroll bar location.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1SuperPanel.BehaviorSettings.C1VScroller.ButtonLocation">
            <summary>
            Gets or sets the vertical scroll button location. 
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1SuperPanel.BehaviorSettings.C1ScrollbarVisibility">
            <summary>
            Contains three visibility options for scroll bar or scroll button. 
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1SuperPanel.BehaviorSettings.C1ScrollbarVisibility.None">
            <summary>
            Always hidden.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1SuperPanel.BehaviorSettings.C1ScrollbarVisibility.Always">
            <summary>
            Always visible.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1SuperPanel.BehaviorSettings.C1ScrollbarVisibility.Auto">
            <summary>
            Appear when needed.
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1SuperPanel.BehaviorSettings.C1SuperPanelScrollMode">
            <summary>
            Contains scroll mode that could be used in <see cref="T:C1.Web.UI.Controls.C1SuperPanel.C1SuperPanel"/>.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1SuperPanel.BehaviorSettings.C1SuperPanelScrollMode.ScrollBar">
            <summary>
            Use scroll bar to do scrolling.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1SuperPanel.BehaviorSettings.C1SuperPanelScrollMode.Buttons">
            <summary>
            Click on scroll buttons to do scrolling.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1SuperPanel.BehaviorSettings.C1SuperPanelScrollMode.ButtonsHover">
            <summary>
            Hover on scroll buttons to do scrolling.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1SuperPanel.BehaviorSettings.C1SuperPanelScrollMode.Edge">
            <summary>
            Hover on panel inner edge to do scrolling.
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1SuperPanel.BehaviorSettings.C1VScrollBarPosition">
            <summary>
            Contains position option for vertical scrollbar.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1SuperPanel.BehaviorSettings.C1VScrollBarPosition.Left">
            <summary>
            Places vertical scrollbar at left side.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1SuperPanel.BehaviorSettings.C1VScrollBarPosition.Right">
            <summary>
            Places vertical scrollbar at right side.
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1SuperPanel.BehaviorSettings.C1HScrollBarPosition">
            <summary>
            Contains position option for horizontal scrollbar.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1SuperPanel.BehaviorSettings.C1HScrollBarPosition.Top">
            <summary>
            Places horizontal scrollbar at left side.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1SuperPanel.BehaviorSettings.C1HScrollBarPosition.Bottom">
            <summary>
            Places horizontal scrollbar at right side.
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1SuperPanel.BehaviorSettings.C1ScrollButtonAlign">
            <summary>
            Contains position option for scroll button.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1SuperPanel.BehaviorSettings.C1ScrollButtonAlign.StartSide">
            <summary>
            Place scroll buttons to start side.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1SuperPanel.BehaviorSettings.C1ScrollButtonAlign.TwoSide">
            <summary>
            Place scroll buttons to two sides. 
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1SuperPanel.BehaviorSettings.C1ScrollButtonAlign.EndSide">
            <summary>
            Place scroll buttons to end side.
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1SuperPanel.BehaviorSettings.C1HButtonLocation">
            <summary>
            Contains position option for horizontal scroll button.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1SuperPanel.BehaviorSettings.C1HButtonLocation.Top">
            <summary>
            Place horizontal scroll buttons to the top.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1SuperPanel.BehaviorSettings.C1HButtonLocation.Middle">
            <summary>
            Place horizontal scroll buttons in the middle.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1SuperPanel.BehaviorSettings.C1HButtonLocation.Bottom">
            <summary>
            Place horizontal scroll buttons to the bottom.
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1SuperPanel.BehaviorSettings.C1VButtonLocation">
            <summary>
            Contains position option for vertical scroll button.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1SuperPanel.BehaviorSettings.C1VButtonLocation.Left">
            <summary>
            Place vertical scroll buttons to the left.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1SuperPanel.BehaviorSettings.C1VButtonLocation.Center">
            <summary>
            Place vertical scroll buttons in the center.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1SuperPanel.BehaviorSettings.C1VButtonLocation.Right">
            <summary>
            Place vertical scroll buttons to the right.
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1SuperPanel.BehaviorSettings.SuperPanelBehaviorSettings">
            <summary>
            Super Panel behavior settings.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1SuperPanel.BehaviorSettings.SuperPanelBehaviorSettings.#ctor(System.Web.UI.Control)">
            <summary>
            Initializes a new instance of the <see cref="T:C1.Web.UI.Controls.C1SuperPanel.BehaviorSettings.SuperPanelBehaviorSettings"/> class.
            </summary>
            <param name="c">The c.</param>
        </member>
        <member name="P:C1.Web.UI.Controls.C1SuperPanel.BehaviorSettings.SuperPanelBehaviorSettings.Owner">
            <summary>
            Gets the owner.
            </summary>
            <value>The owner.</value>
        </member>
        <member name="P:C1.Web.UI.Controls.C1SuperPanel.BehaviorSettings.SuperPanelBehaviorSettings.AllowResize">
            <summary>
            Gets or sets a value indicating whether allow to resize.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1SuperPanel.BehaviorSettings.SuperPanelBehaviorSettings.UseCustomScrollBar">
            <summary>
            Gets or sets a value indicating whether to use custom scroll bar. 
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1SuperPanel.BehaviorSettings.SuperPanelBehaviorSettings.AnimationDuration">
            <summary>
            Gets or sets the duration of the animation.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1SuperPanel.BehaviorSettings.SuperPanelBehaviorSettings.AnimationEasing">
            <summary>
            Gets or sets the animation easing.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1SuperPanel.BehaviorSettings.SuperPanelBehaviorSettings.HScroller">
            <summary>
            Gets settings for horizontal scroller.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1SuperPanel.BehaviorSettings.SuperPanelBehaviorSettings.VScroller">
            <summary>
            Gets settings for vertical scroller.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1SuperPanel.BehaviorSettings.SuperPanelBehaviorSettings.ShowDropShadow">
            <summary>
            Gets or sets a value indicating whether to show drop shadow.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1SuperPanel.BehaviorSettings.SuperPanelBehaviorSettings.ShowRounder">
            <summary>
            Gets or sets a value indicating whether to display panel rounder.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1SuperPanel.BehaviorSettings.SuperPanelBehaviorSettings.MouseWheelSupport">
            <summary>
            Gets or sets a value indicating whether C1SuperPanel has mouse wheel support.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1SuperPanel.BehaviorSettings.SuperPanelBehaviorSettings.BubbleScrollingEvent">
            <summary>
            Gets or sets a value indicating whether to bubble scrolling event when scrollbars reach bounds.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1SuperPanel.BehaviorSettings.SuperPanelBehaviorSettings.KeyDownInterval">
            <summary>
            Gets or sets the key down interval.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1SuperPanel.BehaviorSettings.SuperPanelBehaviorSettings.KeyboardSupport">
            <summary>
            Gets or sets a value indicating whether C1SuperPanel provides keyboard support.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1SuperPanel.BehaviorSettings.SuperPanelBehaviorSettings.OnClientInitialized">
            <summary>
            Gets or sets the client function to all when initialized.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1SuperPanel.BehaviorSettings.SuperPanelBehaviorSettings.OnClientScrolled">
            <summary>
            Gets or sets the on function to call when scrolling ends.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1SuperPanel.BehaviorSettings.SuperPanelBehaviorSettings.OnClientScrolling">
            <summary>
            Gets or sets the on function to call when scrolling starts.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1SuperPanel.BehaviorSettings.SuperPanelBehaviorSettings.OnClientResized">
            <summary>
            Gets or sets the on function to call when C1SuperPanel is resized.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1SuperPanel.BehaviorSettings.SuperPanelBehaviorSettings.OnClientDragEnd">
            <summary>
            Gets or sets the on function to call when dragging is end.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1SuperPanel.BehaviorSettings.SuperPanelBehaviorSettings.Enabled">
            <summary>
            Gets or sets the enable state of the C1SuperPanel.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1SuperPanel.BehaviorSettings.SuperPanelBehaviorSettings.EnableGestureScrolling">
            <summary>
            Gets or sets a value indicating whether the content of C1SuperPanel can be dragged to scrolling when mousedown.
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1SuperPanel.C1SuperPanel">
            <summary>
            Represents a <see cref="T:C1.Web.UI.Controls.C1SuperPanel.C1SuperPanel"/> control.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1SuperPanel.C1SuperPanel.#ctor">
            <summary>
            Initialize a new instance of <see cref="T:C1.Web.UI.Controls.C1SuperPanel.C1SuperPanel"/>.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1SuperPanel.C1SuperPanel.#ctor(System.String)">
            <summary>
            Initialize a new instance of <see cref="T:C1.Web.UI.Controls.C1SuperPanel.C1SuperPanel"/>.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1SuperPanel.C1SuperPanel.AddControl(System.Web.UI.Control)">
            <summary>
            Adds the control.
            </summary>
            <param name="c">The Control to add to SuperPanel.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1SuperPanel.C1SuperPanel.OnInit(System.EventArgs)">
            <summary>
            Raises the Control.Init event.
            </summary>
            <param name="e">e: An System.EventArgs object that contains the event data.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1SuperPanel.C1SuperPanel.CreateChildControls">
            <summary>
            Called by the ASP.NET page framework to notify server controls that use composition-based implementation to create any child controls they contain in preparation for posting back or rendering.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1SuperPanel.C1SuperPanel.AddAttributesToRender(System.Web.UI.HtmlTextWriter)">
            <summary>
            Adds HTML attributes and styles that need to be rendered to the specified <see cref="T:System.Web.UI.HtmlTextWriterTag"/>. 
            </summary>
            <param name="writer">A <see cref="T:System.Web.UI.HtmlTextWriter"/> that represents the output stream to render HTML content on the client.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1SuperPanel.C1SuperPanel.OnPreRender(System.EventArgs)">
            <summary>
            Raises the System.Web.UI.Control.PreRender event.
            </summary>
            <param name="e">An System.EventArgs object that contains the event data.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1SuperPanel.C1SuperPanel.Render(System.Web.UI.HtmlTextWriter)">
            <summary>
            Renders the control to the specified HTML writer.
            </summary>
            <param name="writer">The System.Web.UI.HtmlTextWriter object that receives the control content.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1SuperPanel.C1SuperPanel.RenderContents(System.Web.UI.HtmlTextWriter)">
            <summary>
            Renders the contents of the control to the specified writer. This method is used primarily by control developers.
            </summary>
            <param name="writer">A <see cref="T:System.Web.UI.HtmlTextWriter"/> that represents the output stream to render HTML content on the client.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1SuperPanel.C1SuperPanel.GetVisualStyleClassName">
            <summary>
            Gets visual style CSS class name.
            </summary>
            <returns>Full CSS class name.</returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1SuperPanel.C1SuperPanel.System#Web#UI#IPostBackDataHandler#LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)">
            <summary>
             Processes postback data for an ASP.NET server control
            </summary>
            <param name="postDataKey"> The key identifier for the control.</param>
            <param name="postCollection">The collection of all incoming name values</param>
            <returns>true if the server control's state changes as a result of the postback; otherwise, false.</returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1SuperPanel.C1SuperPanel.LoadDialogPropertiesFromJsonData(System.Collections.Hashtable)">
            <summary>
            LoadDialogPropertiesFromJsonData
            </summary>
            <param name="hash">Hash table</param>
            <returns></returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1SuperPanel.C1SuperPanel.GetScriptDescriptors">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1SuperPanel.C1SuperPanel.GetScriptReferences">
            <summary>
            GetScriptReferences override.
            </summary>
            <returns></returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1SuperPanel.C1SuperPanel.SaveLayout(System.String)">
            <summary>
            Saves the control layout properties to the file.
            </summary>
            <param name="filename">The file where the values of the layout properties will be saved.</param> 
        </member>
        <member name="M:C1.Web.UI.Controls.C1SuperPanel.C1SuperPanel.SaveLayout(System.IO.Stream)">
            <summary>
            Saves control layout properties to the stream.
            </summary>
            <param name="stream">The stream where the values of layout properties will be saved.</param> 
        </member>
        <member name="M:C1.Web.UI.Controls.C1SuperPanel.C1SuperPanel.LoadLayout(System.String)">
            <summary>
            Loads control layout properties from the file.
            </summary>
            <param name="filename">The file where the values of layout properties will be loaded.</param> 
        </member>
        <member name="M:C1.Web.UI.Controls.C1SuperPanel.C1SuperPanel.LoadLayout(System.IO.Stream)">
            <summary>
            Load control layout properties from the stream.
            </summary>
            <param name="stream">The stream where the values of layout properties will be loaded.</param> 
        </member>
        <member name="M:C1.Web.UI.Controls.C1SuperPanel.C1SuperPanel.LoadLayout(System.String,C1.Web.UI.LayoutType)">
            <summary>
            Loads control layout properties with specified types from the file.
            </summary>
            <param name="filename">The file where the values of layout properties will be loaded.</param> 
            <param name="layoutTypes">The layout types to load.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1SuperPanel.C1SuperPanel.LoadLayout(System.IO.Stream,C1.Web.UI.LayoutType)">
            <summary>
            Loads the control layout properties with specified types from the stream.
            </summary>
            <param name="stream">The stream where the values of the layout properties will be loaded.</param> 
            <param name="layoutTypes">The layout types to load.</param>
        </member>
        <member name="P:C1.Web.UI.Controls.C1SuperPanel.C1SuperPanel.PanelBehaviorSettings">
            <summary>
            Gets the panel behavior settings for the C1SuperPanel control.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1SuperPanel.C1SuperPanel.ContentTemplate">
            <summary>
            Template for <see cref="T:C1.Web.UI.Controls.C1SuperPanel.C1SuperPanel"/> into which user could drag controls.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1SuperPanel.C1SuperPanel.TagKey">
            <summary>
            Gets the value that corresponds to this Web server control.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1SuperPanel.C1SuperPanel.VisualStyle">
            <summary>
            Gets or sets the visual style name used by the control.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1SuperPanel.C1SuperPanel.EmbeddedVisualStyles">
            <summary>
            Returns a string array with embedded visual style names.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1SuperPanel.C1SuperPanel.Width">
            <summary>
            Gets or sets the width of SuperPanel.
            </summary>
            <value></value>
            <returns>
            A <see cref="T:System.Web.UI.WebControls.Unit"/> that represents the width of the control. The default is <see cref="F:System.Web.UI.WebControls.Unit.Empty"/>.
            </returns>
            <exception cref="T:System.ArgumentException">
            The width of the Web server control was set to a negative value.
            </exception>
        </member>
        <member name="P:C1.Web.UI.Controls.C1SuperPanel.C1SuperPanel.Height">
            <summary>
            Gets or sets the height of SuperPanel.
            </summary>
            <value></value>
            <returns>
            A <see cref="T:System.Web.UI.WebControls.Unit"/> that represents the height of the control. The default is <see cref="F:System.Web.UI.WebControls.Unit.Empty"/>.
            </returns>
            <exception cref="T:System.ArgumentException">
            The height was set to a negative value.
            </exception>
        </member>
        <member name="P:C1.Web.UI.Controls.C1SuperPanel.C1SuperPanel.Enabled">
            <summary>
            Gets or sets the enable state of the C1SuperPanel.
            </summary>
            <value></value>
            <returns>true if control is enabled; otherwise, false. The default is true.
            </returns>
        </member>
        <member name="P:C1.Web.UI.Controls.C1SuperPanel.C1SuperPanel.MaintainScrollPositionOnPostback">
            <summary>
            Gets or sets a value indicating whether C1SuperPanel will maintain the scroll position on postback.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1SuperPanel.C1SuperPanel.ApplyVisualStyleToChildren">
            <summary>
            Gets or sets a value indicating whether to apply visual style to children C1Controls.
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1SuperPanel.C1SuperPanelExtender">
            <summary>
            Represents C1SuperPanelExtender.
            <remarks>
            C1SuperPanelExtender will use a C1SuperPanel to wrap the target control.
            </remarks>
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1SuperPanel.C1SuperPanelExtender.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:C1.Web.UI.Controls.C1SuperPanel.C1SuperPanelExtender"/> class.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1SuperPanel.C1SuperPanelExtender.Render(System.Web.UI.HtmlTextWriter)">
            <summary>
            Renders the specified writer.
            </summary>
            <param name="writer">The writer.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1SuperPanel.C1SuperPanelExtender.OnPreRender(System.EventArgs)">
            <summary>
            Raises the <see cref="M:C1.Web.UI.Controls.C1SuperPanel.C1SuperPanelExtender.OnPreRender(System.EventArgs)"/> event.
            </summary>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1SuperPanel.C1SuperPanelExtender.GetScriptDescriptors(System.Web.UI.Control)">
            <summary>
            Gets the script descriptors.
            </summary>
            <param name="targetControl">The target control.</param>
            <returns></returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1SuperPanel.C1SuperPanelExtender.GetScriptReferences">
            <summary>
            Gets the script references.
            </summary>
            <returns></returns>
        </member>
        <member name="P:C1.Web.UI.Controls.C1SuperPanel.C1SuperPanelExtender.PanelBehaviorSettings">
            <summary>
            Gets the panel behavior settings for the C1SuperPanelExtender control.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1SuperPanel.C1SuperPanelExtender.Width">
            <summary>
            Gets or sets the width.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1SuperPanel.C1SuperPanelExtender.Height">
            <summary>
            Gets or sets the height.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1SuperPanel.C1SuperPanelExtender.VisualStyle">
            <summary>
            Gets or sets the visual style name used by the control.
            </summary>
            <value></value>
            <remarks>
            If this value is empty then visual style will be not rendered.
            Default value is "ArcticFox".
            </remarks>
        </member>
        <member name="P:C1.Web.UI.Controls.C1SuperPanel.C1SuperPanelExtender.EmbeddedVisualStyles">
            <summary>
            Returns a string array with embedded visual style names.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1SuperPanel.C1SuperPanelSerializer.#ctor(System.Object)">
            <summary>
            Constructor.
            </summary>
            <param name="serializableObject">Serial Object.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1SuperPanel.C1SuperPanelSerializer.#ctor(System.ComponentModel.Design.IComponentChangeService,System.Object)">
            <summary>
            Constructor.
            </summary>
            <param name="componentChangeService"></param>
            <param name="serializableObject"></param>
        </member>
        <member name="T:C1.Web.UI.Controls.C1ToolTip.C1ToolTipSerializer">
            <summary>
            Serializes the C1ToolTip control.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1ToolTip.C1ToolTipSerializer.#ctor(System.Object)">
            <summary>
            Initializes a new instance of the C1ToolTipSerializer class.
            </summary>
            <param name="serializableObject">Serializable Object.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1ToolTip.C1ToolTipSerializer.#ctor(System.ComponentModel.Design.IComponentChangeService,System.Object)">
            <summary>
            Initializes a new instance of the C1ToolTipSerializer class.
            </summary>
            <param name="componentChangeService"></param>
            <param name="serializableObject"></param>
        </member>
        <member name="T:C1.Web.UI.Controls.C1ToolTip.C1ToolTip">
            <summary>
            Represents a C1ToolTip in an ASP.NET Web page.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1ToolTip.C1ToolTip.#ctor">
            <summary>
            Initializes a new instance of the C1ToolTip class.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1ToolTip.C1ToolTip.OnPreRender(System.EventArgs)">
            <summary>
            Override OnPreRender method.
            </summary>
            <param name="e">System.EventArgs is the base class for classes containing event data.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1ToolTip.C1ToolTip.RenderContents(System.Web.UI.HtmlTextWriter)">
            <summary>
            Renders the contents of the control to the specified writer. This method is used primarily by control developers.
            </summary>
            <param name="writer">An <see cref="T:System.Web.UI.HtmlTextWriter"/> that represents the output stream to render HTML content on the client.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1ToolTip.C1ToolTip.AddAttributesToRender(System.Web.UI.HtmlTextWriter)">
            <summary>
            Adds HTML attributes and styles that need to be rendered to the specified HtmlTextWriterTag.
            </summary>
            <param name="writer">A HtmlTextWriter that represents the output stream to render HTML content on the client.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1ToolTip.C1ToolTip.CreateChildControls">
            <summary>
            Override CreateChildControls method.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1ToolTip.C1ToolTip.Render(System.Web.UI.HtmlTextWriter)">
            <summary>
            Renders HTML structure for this control.
            </summary>
            <param name="writer">An HTMLTextWriter that represents the output stream to render HTML content on the client.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1ToolTip.C1ToolTip.GetScriptDescriptors">
            <summary>
            When overridden in a derived class, registers the ScriptDescriptor objects for the control.
            </summary>
            <returns>An enumeration of ScriptDescriptor objects.</returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1ToolTip.C1ToolTip.GetScriptReferences">
            <summary>
            When overridden in a derived class, registers the script libraries for the control.
            </summary>
            <returns>
            An object that implements the IEnumerable interface and that contains
            ECMAScript (JavaScript) files that have been registered as embedded resources.
            </returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1ToolTip.C1ToolTip.OnAjaxUpdate(C1.Web.UI.Controls.C1ToolTip.C1ToolTipEventArgs)">
            <summary>
            AjaxUpdate event.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1ToolTip.C1ToolTip.SaveLayout(System.String)">
            <summary>
            Saves the control layout properties to the file.
            </summary>
            <param name="filename">The file where the values of the layout properties will be saved.</param> 
        </member>
        <member name="M:C1.Web.UI.Controls.C1ToolTip.C1ToolTip.SaveLayout(System.IO.Stream)">
            <summary>
            Saves control layout properties to the stream.
            </summary>
            <param name="stream">The stream where the values of layout properties will be saved.</param> 
        </member>
        <member name="M:C1.Web.UI.Controls.C1ToolTip.C1ToolTip.LoadLayout(System.String)">
            <summary>
            Loads control layout properties from the file.
            </summary>
            <param name="filename">The file where the values of layout properties will be loaded.</param> 
        </member>
        <member name="M:C1.Web.UI.Controls.C1ToolTip.C1ToolTip.LoadLayout(System.IO.Stream)">
            <summary>
            Load control layout properties from the stream.
            </summary>
            <param name="stream">The stream where the values of layout properties will be loaded.</param> 
        </member>
        <member name="M:C1.Web.UI.Controls.C1ToolTip.C1ToolTip.LoadLayout(System.String,C1.Web.UI.LayoutType)">
            <summary>
            Loads control layout properties with specified types from the file.
            </summary>
            <param name="filename">The file where the values of layout properties will be loaded.</param> 
            <param name="layoutTypes">The layout types to load.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1ToolTip.C1ToolTip.LoadLayout(System.IO.Stream,C1.Web.UI.LayoutType)">
            <summary>
            Loads the control layout properties with specified types from the stream.
            </summary>
            <param name="stream">The stream where the values of the layout properties will be loaded.</param> 
            <param name="layoutTypes">The layout types to load.</param>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ToolTip.C1ToolTip.AccessKey">
            <summary>
            The property should be hidden.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ToolTip.C1ToolTip.ToolTip">
            <summary>
            The property should be hidden.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ToolTip.C1ToolTip.ShowAnimation">
            <summary>
            Gets or sets the animation effect that will be shown.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ToolTip.C1ToolTip.ShowDuration">
            <summary>
            Gets or sets the length of time, in milliseconds, the animation appears.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ToolTip.C1ToolTip.ShowDelay">
            <summary>
            Determines the length of the delay, in milliseconds, before the tooltip starts to appear.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ToolTip.C1ToolTip.ShowEasing">
            <summary>
            Gets or sets the transition effect for the animation that is shown.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ToolTip.C1ToolTip.HideAnimation">
            <summary>
            Determines whether the animation effect can be seen.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ToolTip.C1ToolTip.HideDuration">
            <summary>
            Determines how long, in milliseconds, the animation effect is hidden.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ToolTip.C1ToolTip.HideDelay">
            <summary>
            Determines how long, in milliseconds, before the tooltips disappears.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ToolTip.C1ToolTip.HideEasing">
            <summary>
            Specifies the transition for Hide animation.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ToolTip.C1ToolTip.CloseBehavior">
            <summary>
            Gets or sets the behavior of the C1ToolTip when it is closed.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ToolTip.C1ToolTip.CalloutSide">
            <summary>
            Gets or sets which side the callout will show.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ToolTip.C1ToolTip.CalloutOffset">
            <summary>
            Gets or sets the offset of the callout.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ToolTip.C1ToolTip.CalloutAnimationDuration">
            <summary>
            Define how long (in milliseconds) the animation of the callout will run.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ToolTip.C1ToolTip.CalloutEasing">
            <summary>
            The easing that is applied to the callout animation.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ToolTip.C1ToolTip.Enabled">
            <summary>
            this property should be hidden
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ToolTip.C1ToolTip.AutoCloseDelay">
            <summary>
            Gets or sets the delay, in milliseconds, before the C1ToolTip is automatically closed.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ToolTip.C1ToolTip.AutoTooltipify">
            <summary>
            Determines whether the C1ToolTip appears for all elements with a 'Title' property to give your page a clean, consistent look.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ToolTip.C1ToolTip.Height">
            <summary>
            Gets or sets the height of <see cref="T:C1.Web.UI.Controls.C1ToolTip.C1ToolTip"/>.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ToolTip.C1ToolTip.Modal">
            <summary>
            Determines whether a C1ToolTip is modal.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ToolTip.C1ToolTip.MouseTrailing">
            <summary>
            Determines whether the C1ToolTip will follow the mouse movement.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ToolTip.C1ToolTip.OffsetX">
            <summary>
            Gets or sets the tooltip's horizontal offset from the target control.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ToolTip.C1ToolTip.OffsetY">
            <summary>
            Gets or sets the tooltip's vertical offset from the target control.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ToolTip.C1ToolTip.Position">
            <summary>
            Gets or sets the position of the C1ToolTip relative to the target element.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ToolTip.C1ToolTip.RelativeTo">
            <summary>
            Gets or sets the item that the C1ToolTip should appear relative to: Element, Mouse, or BrowserWindow.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ToolTip.C1ToolTip.ShowCallOut">
            <summary>
            Gets or sets whether the tooltip appears in a callout box. If False, the tooltip appears in a label.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ToolTip.C1ToolTip.ShowEvent">
            <summary>
            Gets or sets the client event, such as OnMouseOver, that makes the tooltip appear.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ToolTip.C1ToolTip.TargetControls">
            <summary>
            Gets or sets the list of TargetControl objects that will be tooltipified.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ToolTip.C1ToolTip.ScrollSettings">
            <summary>        
            Gets the scroll setting for the tooltip.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ToolTip.C1ToolTip.Template">
            <summary>
            Gets or sets the template for the content area of the C1ToolTip control.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ToolTip.C1ToolTip.Text">
            <summary>
            Gets or sets the content text of the control.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ToolTip.C1ToolTip.Title">
            <summary>
            Gets or sets the title of the control.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ToolTip.C1ToolTip.ToolTipZoneID">
            <summary>
            Gets or sets the element whose children will be tooltipified.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ToolTip.C1ToolTip.UpdatePanel">
            <summary>
            Gets the UpdatePanel which template control will be added in.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ToolTip.C1ToolTip.UseEmbeddedVisualStyles">
            <summary>
            If True, then the control will use the visual style embedded in the control's assembly. Otherwise, the control will load the visual style from the disk.
            </summary>     
        </member>
        <member name="P:C1.Web.UI.Controls.C1ToolTip.C1ToolTip.EmbeddedVisualStyles">
            <summary>
            Returns string array with embedded visual style names.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ToolTip.C1ToolTip.VisibleOnPageLoad">
            <summary>
            Gets or sets whether the tooltip will open automatically when the page is loaded.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ToolTip.C1ToolTip.VisualStyle">
            <summary>
            Gets or sets the visual style shown.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ToolTip.C1ToolTip.VisualStylePath">
            <summary>
            Gets or sets the path where the visual styles are located.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ToolTip.C1ToolTip.Width">
            <summary>
            Gets or sets the width of the C1ToolTip.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ToolTip.C1ToolTip.OnClientBeforeHide">
            <summary>
            Fires on the client side before the C1ToolTip is hidden.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ToolTip.C1ToolTip.OnClientBeforeShow">
            <summary>
            Fires on the client side before the C1ToolTip is shown.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ToolTip.C1ToolTip.OnClientHide">
            <summary>
            Fires on the client side when the C1ToolTip is hidden.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ToolTip.C1ToolTip.OnClientShow">
            <summary>
            Fires on the client side when the C1ToolTip is shown.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ToolTip.C1ToolTip.TagKey">
            <summary>
            Gets the value that corresponds to this Web
            server control.
            </summary>
        </member>
        <member name="E:C1.Web.UI.Controls.C1ToolTip.C1ToolTip.AjaxUpdate">
            <summary>
            Fires when there is an update on AJAX.
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1ToolTip.C1ToolTipTargetControl">
            <summary>
            Represents the C1ToolTipTargetControl of C1ToolTip.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1ToolTip.C1ToolTipTargetControl.#ctor">
            <summary>
            Initializes a new instance of the C1ToolTipTargetControl class.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1ToolTip.C1ToolTipTargetControl.#ctor(System.String)">
            <summary>
            Initializes a new instance of the C1ToolTipTargetControl class.
            </summary>
            <param name="targetControlID">ClientID of the TargetControl.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1ToolTip.C1ToolTipTargetControl.#ctor(System.String,System.Boolean)">
            <summary>
            Initializes a new instance of the C1ToolTipTargetControl class.
            </summary>
            <param name="targetControlID">ClientID of the TargetControl.</param>
            <param name="isAjaxUpdate">whether update on ajax.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1ToolTip.C1ToolTipTargetControl.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the C1ToolTipTargetControl class.
            </summary>
            <param name="targetControlID">ClientID of the TargetControl.</param>
            <param name="value">Value of the TargetControl.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1ToolTip.C1ToolTipTargetControl.#ctor(System.String,System.String,System.Boolean)">
            <summary>
            Initializes a new instance of the C1ToolTipTargetControl class.
            </summary>
            <param name="targetControlID">ClientID of the TargetControl.</param>
            <param name="value">Value of the TargetControl.</param>
            <param name="isAjaxUpdate">whether update on ajax.</param>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ToolTip.C1ToolTipTargetControl.TargetControlID">
            <summary>
            Gets or sets an ID for the control that will show the C1ToolTip.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ToolTip.C1ToolTipTargetControl.Value">
            <summary>
            Gets or sets the value of the C1ToolTipTargetControl.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ToolTip.C1ToolTipTargetControl.IsAjaxUpdate">
            <summary>
            Determines whether there is an update on AJAX.
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1ToolTip.C1ToolTipTargetControlCollection">
            <summary>
            Represents a collection of Target control objects that are used by the TargetControl property.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1ToolTip.C1ToolTipTargetControlCollection.#ctor(C1.Web.UI.Controls.C1ToolTip.C1ToolTip)">
            <summary>
            Initializes a new instance of the C1ToolTipTargetControlCollection class.
            </summary>
            <param name="owner">The specified C1ToolTip object.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1ToolTip.C1ToolTipTargetControlCollection.Clear">
            <summary>
            Removes all the C1ToolTipTargetControls from the collection.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1ToolTip.C1ToolTipTargetControlCollection.Add(C1.Web.UI.Controls.C1ToolTip.C1ToolTipTargetControl)">
            <summary>
            Adds a new TargetControl to the end of the list of C1ToolTipTargetControls.
            </summary>
            <param name="targetControl"></param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1ToolTip.C1ToolTipTargetControlCollection.Add(System.String)">
            <summary>
            Adds a new TargetControl to the end of the list of C1ToolTipTargetControls.
            </summary>
            <param name="targetControlID"></param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1ToolTip.C1ToolTipTargetControlCollection.Add(System.String,System.Boolean)">
            <summary>
            Adds a new TargetControl to the end of the list of C1ToolTipTargetControls.
            </summary>
            <param name="targetControlID"></param>
            <param name="isAjaxUpdate"></param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1ToolTip.C1ToolTipTargetControlCollection.Add(System.String,System.String)">
            <summary>
            Adds a new TargetControl to the end of the list of C1ToolTipTargetControls.
            </summary>
            <param name="targetControlID"></param>
            <param name="value"></param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1ToolTip.C1ToolTipTargetControlCollection.Add(System.String,System.String,System.Boolean)">
            <summary>
            Adds a new TargetControl to the end of the list of C1ToolTipTargetControls.
            </summary>
            <param name="targetControlID"></param>
            <param name="value"></param>
            <param name="isAjaxUpdate"></param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1ToolTip.C1ToolTipTargetControlCollection.Insert(System.Int32,C1.Web.UI.Controls.C1ToolTip.C1ToolTipTargetControl)">
            <summary>
            Inserts a C1ToolTipTargetControl item at the specified position in the collection.
            </summary>
            <param name="index">Position, value  should be mayor or equal to 0</param>
            <param name="targetControl"></param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1ToolTip.C1ToolTipTargetControlCollection.Insert(System.Int32,System.String)">
            <summary>
            Inserts a C1ToolTipTargetControl item at the specified position in the collection.
            </summary>
            <param name="index">Position, value  should be mayor or equal to 0</param>
            <param name="targetControlID"></param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1ToolTip.C1ToolTipTargetControlCollection.Insert(System.Int32,System.String,System.Boolean)">
            <summary>
             Inserts a C1ToolTipTargetControl item at the specified position in the collection.
            </summary>
            <param name="index">Position, value  should be mayor or equal to 0</param>
            <param name="targetControlID"></param>
            <param name="isAjaxUpdate"></param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1ToolTip.C1ToolTipTargetControlCollection.Insert(System.Int32,System.String,System.String)">
            <summary>
            Inserts a C1ToolTipTargetControl item at the specified position in the collection.
            </summary>
            <param name="index">Position, value  should be mayor or equal to 0</param>
            <param name="targetControlID"></param>
            <param name="value"></param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1ToolTip.C1ToolTipTargetControlCollection.Insert(System.Int32,System.String,System.String,System.Boolean)">
            <summary>
            Inserts a C1ToolTipTargetControl item at the specified position in the collection.
            </summary>
            <param name="index">Position, value  should be mayor or equal to 0</param>
            <param name="targetControlID"></param>
            <param name="value"></param>
            <param name="isAjaxUpdate"></param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1ToolTip.C1ToolTipTargetControlCollection.Remove(C1.Web.UI.Controls.C1ToolTip.C1ToolTipTargetControl)">
            <summary>
            Removes specified C1ToolTipTargetControl item from the list.
            </summary>
            <param name="targetControl"></param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1ToolTip.C1ToolTipTargetControlCollection.RemoveAt(System.Int32)">
            <summary>
            Removes the C1ToolTipTargetControl item from the list using its index.
            </summary>
            <param name="index"></param>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ToolTip.C1ToolTipTargetControlCollection.IsEmpty">
            <summary>
            Gets a Boolean value to determine whether the C1ToolTipTargetControlCollection is empty.
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1ToolTip.CalloutSide">
            <summary>
            Specifies the side of the callout.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1ToolTip.CalloutSide.Auto">
            <summary>
            The callout will show at the auto position.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1ToolTip.CalloutSide.Top">
            <summary>
            The callout will show at the top side of the tooltip.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1ToolTip.CalloutSide.Right">
            <summary>
            The callout will show at the right side of the tooltip.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1ToolTip.CalloutSide.Bottom">
            <summary>
            The callout will show at the bottom side of the tooltip.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1ToolTip.CalloutSide.Left">
            <summary>
            The callout will show at the left side of the tooltip.
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1ToolTip.CloseBehavior">
            <summary>
            Specifies the behavior of the C1ToolTip when it is closed.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1ToolTip.CloseBehavior.Auto">
            <summary>
            The tooltip will close automatically.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1ToolTip.CloseBehavior.Manual">
            <summary>
             The tooltip will close when the close button is clicked.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1ToolTip.CloseBehavior.Sticky">
            <summary>
            The tooltip will close when the mouse is moved outside of the tooltip border.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1ToolTip.CloseBehavior.None">
            <summary>
            The tooltip will always show.
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1ToolTip.Position">
            <summary>
            Specifies the position of the tooltip relative to the target element.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1ToolTip.Position.Auto">
            <summary>
            This is the default value. The tooltip is shown centered (with respect to the element height) and to the right of the element. If the browser edge is too close to the tooltip, then the tooltip will appear centered (with respect to the element height) to the left of the element.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1ToolTip.Position.TopLeft">
            <summary>
            The tooltip is shown above the target element and to its left.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1ToolTip.Position.TopCenter">
            <summary>
            The tooltip is centered above the target element.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1ToolTip.Position.TopRight">
            <summary>
            The tooltip is shown above the target element and to its right.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1ToolTip.Position.MiddleLeft">
            <summary>
            The tooltip is shown centered (with respect to the element height) and to the left of the target element. 
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1ToolTip.Position.Center">
            <summary>
            The tooltip is centered over the target element.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1ToolTip.Position.MiddleRight">
            <summary>
            The tooltip is shown centered (with respect to the element height) and to the right of the target element.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1ToolTip.Position.BottomLeft">
            <summary>
             The tooltip is shown below the target element and to its left.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1ToolTip.Position.BottomCenter">
            <summary>
            The tooltip is centered below the target element.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1ToolTip.Position.BottomRight">
            <summary>
            The tooltip is shown below the target element and to its right.
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1ToolTip.RelativeTo">
            <summary>
            Determines whether the tooltip will appear relative to an element, the mouse, or the browser window.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1ToolTip.RelativeTo.Element">
            <summary>
            The tooltip appears relative to the element.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1ToolTip.RelativeTo.Mouse">
            <summary>
            The tooltip appears relative to the mouse.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1ToolTip.RelativeTo.BrowserWindow">
            <summary>
            The tooltip appears relative to the browser window.
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1ToolTip.ShowEvent">
            <summary>
            Specifies the client event on which the tooltip will be made visible for the target element.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1ToolTip.ShowEvent.OnMouseOver">
            <summary>
            The tooltip is shown when the user mouses over the element.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1ToolTip.ShowEvent.OnClick">
            <summary>
            The tooltip is shown when the user clicks the element.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1ToolTip.ShowEvent.OnFocus">
            <summary>
            The tooltip is shown when the element receives focus.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1ToolTip.ShowEvent.OnRightClick">
            <summary>
            The tooltip is shown when the user right-clicks the element.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1ToolTip.ShowEvent.FromCode">
            <summary>
            The tooltip is shown on the FromCode event.
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1ToolTip.C1ToolTipEventArgs">
            <summary>
            C1ToolTipEventArgs is used by the AjaxUpdate events.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1ToolTip.C1ToolTipEventArgs.#ctor">
            <summary>
            Initializes a new instance of the C1ToolTipEventArgs class.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1ToolTip.C1ToolTipEventArgs.#ctor(System.String)">
            <summary>
            Initializes a new instance of the C1ToolTipEventArgs class.
            </summary>
            <param name="targetControlID"></param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1ToolTip.C1ToolTipEventArgs.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the C1ToolTipEventArgs class.
            </summary>
            <param name="targetControlID"></param>
            <param name="value"></param>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ToolTip.C1ToolTipEventArgs.TargetControlID">
            <summary>
            Gets or sets an ID for the control that will show the C1ToolTip.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ToolTip.C1ToolTipEventArgs.Value">
            <summary>
            Gets or sets the value.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1ToolTip.C1ToolTipEventArgs.UpdatePanel">
            <summary>
            Gets or sets the UpdatePanel of the C1ToolTip.
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1ToolTip.C1ToolTipEventHandler">
            <summary>
            Represents the C1ToolTip method that will handle an event. 
            </summary>
            <param name="sender">The source of the event</param>
            <param name="e">C1ToolTipEventArgs object that contains the event data</param>
        </member>
        <member name="T:C1.Web.UI.Controls.C1Upload.C1FileInfo">
            <summary>
            Class that represents the infomation of the uploaded file.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Upload.C1FileInfo.#ctor">
            <summary>
            Create an new instance of C1FileInfo.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Upload.C1FileInfo.GetStream">
            <summary>
            Gets the file stream.
            </summary>
            <returns></returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Upload.C1FileInfo.Delete">
            <summary>
            Deletes the file from the temp folder.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Upload.C1FileInfo.SaveAs(System.String)">
            <summary>
            Saves the file to a specified path.
            </summary>
            <param name="path">The target path to save to.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Upload.C1FileInfo.SaveAs(System.String,System.Boolean)">
            <summary>
            Saves the file to a specified path.
            </summary>
            <param name="path">The target path to save to.</param>
            <param name="overwrite">Whether to overwrite the existing file.</param>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Upload.C1FileInfo.ContentType">
            <summary>
            Gets the HTTP MIME type of the output stream.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Upload.C1FileInfo.FileName">
            <summary>
            Gets the name of the uploaded file.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Upload.C1FileInfo.Extension">
            <summary>
            Gets the file extension of the uploaded file.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Upload.C1FileInfo.Size">
            <summary>
            Gets the file size.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Upload.C1FileInfo.TempFileName">
            <summary>
            Gets the full path of the temporary file.
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1Upload.C1FileInfoCollection">
            <summary>
            Represents a collection of C1FileInfo.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Upload.C1FileInfoCollection.#ctor">
            <summary>
            Create a new instance of C1FileInfoCollection.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Upload.C1FileInfoCollection.Add(C1.Web.UI.Controls.C1Upload.C1FileInfo)">
            <summary>
            Adds a C1FileInfo to this collection.
            </summary>
            <param name="fi">The C1FileInfo object to add.</param>
            <returns>The added position.</returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Upload.C1FileInfoCollection.Insert(System.Int32,C1.Web.UI.Controls.C1Upload.C1FileInfo)">
            <summary>
            Inserts a C1FileInfo to this collection.
            </summary>
            <param name="index">The position to insert.</param>
            <param name="fi">The C1FileInfo object to insert.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Upload.C1FileInfoCollection.Remove(C1.Web.UI.Controls.C1Upload.C1FileInfo)">
            <summary>
            Removes the C1FileInfo from this collection.
            </summary>
            <param name="fi">The C1FileInfo object to remove.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Upload.C1FileInfoCollection.Contains(C1.Web.UI.Controls.C1Upload.C1FileInfo)">
            <summary>
            Test whether the C1FileInfo is contained in this collection.
            </summary>
            <param name="fi">The C1FileInfo to test.</param>
            <returns>True if exists.</returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Upload.C1FileInfoCollection.IndexOf(System.Object)">
            <summary>
            Gets the index of the object.
            </summary>
            <param name="obj">The object to test.</param>
            <returns>The index of this object.</returns>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Upload.C1FileInfoCollection.Item(System.Object)">
            <summary>
            Indexer of this collection.
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="T:C1.Web.UI.Controls.C1Upload.C1Upload">
            <summary>
            Represents a Upload control.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Upload.C1Upload.#ctor">
            <summary>
            Creates an instance of C1Upload class.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Upload.C1Upload.OnLoad(System.EventArgs)">
            <summary>
            Raises the Load event.
            </summary>
            <param name="e">The EventArgs object that contains the event data.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Upload.C1Upload.OnValidatingFile(C1.Web.UI.Controls.C1Upload.ValidateFileEventArgs)">
            <summary>
            Fires the ValidatingFile event.
            </summary>
            <param name="e">ValidateFileEventArgs that contains the event data.</param>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Upload.C1Upload.FileExists">
            <summary>
            Occurs when there already exist a file with the same name.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Upload.C1Upload.OnFileExists(C1.Web.UI.Controls.C1Upload.UploadedFileEventArgs)">
            <summary>
            Fires the FileExists event.
            </summary>
            <param name="e">UploadedFileEventArgs that contains the event data.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Upload.C1Upload.OnUploaded(System.EventArgs)">
            <summary>
            Fires the Uploaded event.
            </summary>
            <param name="e">EventArgs that contains the event data.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Upload.C1Upload.GetScriptDescriptors">
            <summary>
            Gets a collection of script descriptors that represent ECMAScript (JavaScript) client components.
            </summary>
            <returns></returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Upload.C1Upload.GetScriptReferences">
            <summary>
            Registers the script libraries for the control.
            </summary>
            <returns></returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Upload.C1Upload.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)">
            <summary>
            LoadPostData.
            </summary>
            <param name="postDataKey"></param>
            <param name="postCollection"></param>
            <returns></returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Upload.C1Upload.RaisePostDataChangedEvent">
            <summary>
            RaisePostDataChangedEvent.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Upload.C1Upload.AddAttributesToRender(System.Web.UI.HtmlTextWriter)">
            <summary>
            Adds HTML attributes and styles that need to be rendered.
            </summary>
            <param name="writer">A HtmlTextWriter that represents the output stream to render HTML content on the client.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Upload.C1Upload.CreateChildControls">
            <summary>
            Create any child controls they contain in preparation for posting back or rendering.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Upload.C1Upload.GetControlCssClass">
            <summary>
            Gets the CSS class name for the control.
            </summary>
            <returns></returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Upload.C1Upload.OnPreRender(System.EventArgs)">
            <summary>
            Raises the PreRender event.
            </summary>
            <param name="e">An EventArgs object that contains the event data.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Upload.C1Upload.Render(System.Web.UI.HtmlTextWriter)">
            <summary>
            Sends server control content to a provided System.Web.UI.HtmlTextWriter object,
            which writes the content to be rendered on the client.
            </summary>
            <param name="writer">The System.Web.UI.HtmlTextWriter object that receives the server control content.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Upload.C1Upload.RenderContents(System.Web.UI.HtmlTextWriter)">
            <summary>
            RenderContents override
            </summary>
            <param name="writer">HtmlTextWriter</param>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Upload.C1Upload.UniqueID">
            <summary>
            
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Upload.C1Upload.EmbeddedVisualStyles">
            <summary>
            Defines names of the visual styles what embeded into control's assembly.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Upload.C1Upload.Enabled">
            <summary>
            Gets or sets a value indicate if a C1Upload control is enabled.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Upload.C1Upload.InternalEnabled">
            <summary>
            
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Upload.C1Upload.AddButtonText">
            <summary>
            Gets or sets the text displayed in the [Add File] button.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Upload.C1Upload.AddFileButtonText">
            <summary>
            Gets or sets the text displayed on the [Add File] button.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Upload.C1Upload.AddButtonToolTip">
            <summary>
            Gets or sets the tooltip displayed above the [Add File] button.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Upload.C1Upload.AddFileButtonToolTip">
            <summary>
            Gets or sets the tooltip displayed above the [Add File] button.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Upload.C1Upload.UploadButtonText">
            <summary>
            Gets or sets the text displayed on the [Upload] button.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Upload.C1Upload.UploadButtonToolTip">
            <summary>
            Gets or sets the tooltip displayed above the [Upload] button.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Upload.C1Upload.CancelButtonText">
            <summary>
            Gets or sets the text displayed on the [Cancel] button.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Upload.C1Upload.CancelButtonToolTip">
            <summary>
            Gets or sets the tooltip displayed above the [Cancel] button.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Upload.C1Upload.ShowTooltip">
            <summary>
            Gets or sets a value that determines whether displaying tooltip above the file place holder.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Upload.C1Upload.ShowFullPathToolTip">
            <summary>
            Gets or sets a value that determines whether displaying tooltip above the file place holder.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Upload.C1Upload.UploadTrigger">
            <summary>
            Gets or sets the trigger options to start uploading.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Upload.C1Upload.ShowEmptyPlaceholder">
            <summary>
            Gets or sets a value that determines whether an empty place holder is displayed when there is no file selected yet.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Upload.C1Upload.ShowFullPath">
            <summary>
            Gets or sets a value that determines whether only the file name or the full path is displayed.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Upload.C1Upload.ValidFileExtensions">
            <summary>
            Array of the allowed file extensions.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Upload.C1Upload.ValidMimeTypes">
            <summary>
            Array of the allowed mime types.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Upload.C1Upload.AutoReset">
            <summary>
            Gets or sets a value indicating whether to reset the file input list automatically after uploading is completed.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Upload.C1Upload.ShowProgress">
            <summary>
            Gets or sets a value that determines whether the built-in progress bar is displayed.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Upload.C1Upload.ProgressTextFormat">
            <summary>
            Gets or sets the string format for the built-in progress text.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Upload.C1Upload.MaximumFiles">
            <summary>
            Gets or sets the maximum number of files to be uploaded.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Upload.C1Upload.MaximumFileSize">
            <summary>
            Gets or sets the maximum upload size to allow in KB.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Upload.C1Upload.EmptyText">
            <summary>
            Gets or sets the text displayed on empty place holder.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Upload.C1Upload.OnClientAdding">
            <summary>
            Gets or sets the name of the client-side function which will be executed before a new fileinput is added to a C1Upload instance.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Upload.C1Upload.OnClientAdded">
            <summary>
            Gets or sets the name of the client-side function which will be executed after a new fileinput is added to a C1Upload instance.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Upload.C1Upload.OnClientProgressChanged">
            <summary>
            Gets or sets the name of the client-side function which the progress data is updated.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Upload.C1Upload.OnClientRemoving">
            <summary>
            Gets or sets the name of the client-side function which will be executed before a file input is deleted from a C1Upload instance.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Upload.C1Upload.OnClientRemoved">
            <summary>
            Gets or sets the name of the client-side function which will be executed after a file input is deleted from a C1Upload instance.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Upload.C1Upload.OnClientUploadBegin">
            <summary>
            Gets or sets the name of the client-side function which will be executed when the upload starts.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Upload.C1Upload.OnClientUploadEnd">
            <summary>
            Gets or sets the name of the client-side function which will be executed when the upload ends.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Upload.C1Upload.OnClientError">
            <summary>
            Gets or sets the name of the client-side function which will be executed when error happens.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Upload.C1Upload.OverwriteExistingFiles">
            <summary>
            Gets or sets a value that determines whether to overwrite existing files in the destination folder.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Upload.C1Upload.ProgressUpdateInterval">
            <summary>
            Gets or sets the update interval value for progress checking.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Upload.C1Upload.TempFolder">
            <summary>
            Gets or sets the local folder in which to place temporary upload files.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Upload.C1Upload.TargetFolder">
            <summary>
            Gets or sets the virtual path of the folder where C1Upload will automatically save the valid files after the upload completes.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Upload.C1Upload.TargetPhysicalFolder">
            <summary>
            Gets or sets the physical path of the folder where C1Upload will automatically save the valid files after the upload completes.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Upload.C1Upload.InvalidFiles">
            <summary>
            Gets the collection of C1FileInfo that do not follow the requirements..
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Upload.C1Upload.UploadedFiles">
            <summary>
            Gets the collection of C1FileInfo.
            </summary>
        </member>
        <member name="E:C1.Web.UI.Controls.C1Upload.C1Upload.ValidatingFile">
            <summary>
            Occurs when validating the uploaded file.
            </summary>
        </member>
        <member name="E:C1.Web.UI.Controls.C1Upload.C1Upload.Uploaded">
            <summary>
            Occurs when the entire upload is completed.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Upload.C1Upload.UploadId">
            <summary>
            Unique ID that identify the upload session.
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1Upload.UploadTrigger">
            <summary>
            Enums that define the opportunity to start uploading.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Upload.UploadTrigger.OnUploadClick">
            <summary>
            Start uploading when clicking the [Upload] button.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Upload.UploadTrigger.OnFileSelect">
            <summary>
            Start upload when selecting a file.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Upload.UploadTrigger.Never">
            <summary>
            Never start uploading, allow user to upload by calling the client side Upload() method.
            </summary>
            <remarks>When Never is used, [Upload] button is hidden automatically.</remarks>
        </member>
        <member name="T:C1.Web.UI.Controls.C1Upload.UploadedFileEventArgs">
            <summary>
            Provides data for FileExists event.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Upload.UploadedFileEventArgs.UploadedFile">
            <summary>
            The C1FileInfo that contains data about the uploaded file.
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1Upload.UploadedFileEventHandler">
            <summary>
            Represents the method that will handle FileExists event.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">A UploadedFileEventArgs that contains the event data.</param>
        </member>
        <member name="T:C1.Web.UI.Controls.C1Upload.ValidateFileEventArgs">
            <summary>
            Provides data for ValidatingFile event.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Upload.ValidateFileEventArgs.IsValid">
            <summary>
            Gets or sets whether the specified C1FileInfo passed validation. 
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1Upload.ValidateFileEventHandler">
            <summary>
            Represents the method that will handle ValidatingFile event.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">A ValidateFileEventArgs that contains the event data.</param>
        </member>
        <member name="T:C1.Web.UI.Controls.C1Upload.UploadModule">
            <summary>
            HttpModule for C1Upload.
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1Upload.UploadProgress">
            <summary>
            Class that wraps the data of the uploading progress.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Upload.UploadProgress.#ctor(C1.Web.UI.Controls.C1Upload.UploadSession)">
            <summary>
            Constructor of the UploadProgress.
            </summary>
            <param name="session">The upload session.</param>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Upload.UploadProgress.Active">
            <summary>
            Gets a value that indicates whether the session is active.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Upload.UploadProgress.RecievedBytes">
            <summary>
            Gets the recieved bytes.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Upload.UploadProgress.TotalBytes">
            <summary>
            Gets the total bytes.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Upload.UploadProgress.CurrentFile">
            <summary>
            Gets the current upload file.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Upload.UploadProgress.Progress">
            <summary>
            Gets the progress value ranging from 0.0 to 1.0;
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Upload.UploadProgress.EllapsedTime">
            <summary>
            Gets the ellapsed time in second.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Upload.UploadProgress.RemainingTime">
            <summary>
            Gets the remaining time in second.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Upload.UploadProgress.Speed">
            <summary>
            Gets the upload speed.
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1Upload.UploadProgressHandler">
            <summary>
            IHttpHandler for retrieving the progress data from client side.
            </summary>
            <remarks>
            This class is not proposed to be used by user.
            </remarks>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Upload.UploadProgressHandler.#ctor">
            <summary>
            Constructor of UploadProgressHandler class.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Upload.UploadProgressHandler.System#Web#IHttpHandler#ProcessRequest(System.Web.HttpContext)">
            <summary>
            Enables processing of HTTP Web requests by a custom HttpHandler that implements the IHttpHandler interface.
            </summary>
            <param name="context"></param>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Upload.UploadProgressHandler.System#Web#IHttpHandler#IsReusable">
            <summary>
            Gets a value indicating whether another request can use the IHttpHandler instance.
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1Editor.C1EditorImageEditorDialog">
            <summary>
            
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Editor.C1EditorImageEditorDialog.#ctor(System.String)">
            <summary>
            
            </summary>
            <param name="imagesFolder"></param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Editor.C1EditorImageEditorDialog.GetAppPath">
            <summary>
            Gets App path.
            </summary>
            <returns>Return a string.</returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Editor.C1EditorImageEditorDialog.GetAppUrl">
            <summary>
            Gets App url.
            </summary>
            <returns>Return a string.</returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Editor.C1EditorImageEditorDialog.IsValidFileType(System.String)">
            <summary>
            The designated file types on the validity
            </summary>
            <param name="fileName">The specified file name.</param>
            <returns>Return a bool value.</returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Editor.C1EditorImageEditorDialog.ReturnFilesArray">
            <summary>
            Gets file array.
            </summary>
            <returns>Return a array.</returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Editor.C1EditorImageEditorDialog.IsImageFile(System.IO.FileInfo)">
            <summary>
            Match the image file.
            </summary>
            <param name="aFile">The specified FileInfo object.</param>
            <returns>Return a bool value.</returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Editor.C1EditorImageEditorDialog.ReturnDirectoriesArray">
            <summary>
            Gets directory array.
            </summary>
            <returns>Return a array.</returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Editor.C1EditorImageEditorDialog.LoadImageFiles">
            <summary>
            Load files.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Editor.C1EditorImageEditorDialog.LoadImageFileTextValue">
            <summary>
            Load files.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Editor.C1EditorImageEditorDialog.Page">
            <summary>
            Page
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1Editor.C1EditorTemplateDialog">
            <summary>
            
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Editor.C1EditorTemplateDialog.#ctor(System.String)">
            <summary>
            C1EditorTemplateDialog constructor.
            </summary>
            <param name="templateFolder"></param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Editor.C1EditorTemplateDialog.GetAppPath">
            <summary>
            Gets App path.
            </summary>
            <returns>Return a string.</returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Editor.C1EditorTemplateDialog.IsHtmlFile(System.IO.FileInfo)">
            <summary>
            Match the image file.
            </summary>
            <param name="aFile">The specified FileInfo object.</param>
            <returns>Return a bool value.</returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Editor.C1EditorTemplateDialog.GetAppUrl">
            <summary>
            Gets App url.
            </summary>
            <returns>Return a string.</returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Editor.C1EditorTemplateDialog.ReturnFilesArray">
            <summary>
            Gets file array.
            </summary>
            <returns>Return a array.</returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Editor.C1EditorTemplateDialog.LoadTemplateFiles">
            <summary>
            Load files.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Editor.C1EditorTemplateDialog.LoadTemplateTextValue">
            <summary>
            load string
            </summary>
            <returns></returns>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Editor.C1EditorTemplateDialog.Page">
            <summary>
            Page
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Input.C1DesignerWorker.PersistTemplate(System.Web.UI.Control,System.ComponentModel.Design.IDesignerHost,System.Web.UI.ITemplate,System.String)">
            <summary>
            Helper method to save the value of a template.  This sets up all the right Undo state.
            </summary>
            <param name="panel"></param>
            <param name="host"></param>
            <param name="template"></param>
            <param name="propertyName"></param>
        </member>
        <member name="T:C1.Web.UI.Controls.C1Input.DesignerPanel">
            <summary>
            Simple class to use for template instantiation
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1Input.ButtonsDisplayPosition">
            <summary>
            Use the members of this enumeration to display the position of the buttons.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Input.ButtonsDisplayPosition.None">
            <summary>
            Indicates that buttons are not visible.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Input.ButtonsDisplayPosition.Right">
            <summary>
            Show the buttons at the right.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Input.ButtonsDisplayPosition.Left">
            <summary>
            Show the buttons at the left.
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1Input.CalendarPopupPositionEnum">
            <summary>
            Popup position of the C1Calendar control.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Input.CalendarPopupPositionEnum.Current">
            <summary>
            Current popup position of the C1Calendar control.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Input.CalendarPopupPositionEnum.Near">
            <summary>
            Popup C1Calendar at left side of the C1DateInput control.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Input.CalendarPopupPositionEnum.Far">
            <summary>
            Popup C1Calendar at right side of the C1DateInput control.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Input.CalendarPopupPositionEnum.Above">
            <summary>
            Popup C1Calendar above of the C1DateInput control.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Input.CalendarPopupPositionEnum.Below">
            <summary>
            Popup C1Calendar under C1DateInput control.
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1Input.C1NumericControlType">
            <summary>
            Type of object that is used to get and set the <tt>Value</tt> 
            property by C1NumericInput control.
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1Input.C1TextChangedEventHandler">
            <summary>
            Represents the method that will handle the TextChanged event of the control. 
            </summary>
            <param name="sender">Source of the event.</param>
            <param name="e">The EventArgs that contains the event data.</param>
        </member>
        <member name="T:C1.Web.UI.Controls.C1Input.C1DateChangedEventHandler">
            <summary>
            Represents the method that will handle the DateChanged event of the control. 
            </summary>
            <param name="sender">Source of the event.</param>
            <param name="e">The EventArgs that contains the event data.</param>
        </member>
        <member name="T:C1.Web.UI.Controls.C1Input.C1ValueChangedEventHandler">
            <summary>
            Represents the method that will handle the ValueChanged event of the control. 
            </summary>
            <param name="sender">Source of the event.</param>
            <param name="e">The EventArgs that contains the event data.</param>
        </member>
        <member name="T:C1.C1Schedule.C1BindingSource">
            <summary>
            The <see cref="T:C1.C1Schedule.C1BindingSource"/> encapsulates the data source. 
            </summary>
        </member>
        <member name="M:C1.C1Schedule.C1BindingSource.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:C1.C1Schedule.C1BindingSource"/> class. 
            </summary>
        </member>
        <member name="M:C1.C1Schedule.C1BindingSource.#ctor(System.Object,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:C1.C1Schedule.C1BindingSource"/> class
            with the specified data source and data member values.
            </summary>
            <param name="dataSource">The <see cref="T:System.Object"/> object to use as data source.</param>
            <param name="dataMember">The data member name.</param>
        </member>
        <member name="M:C1.C1Schedule.C1BindingSource.Add(System.Object)">
            <summary>
            Adds an existing item to the internal list.
            </summary>
            <param name="value">The <see cref="T:System.Object"/> to add.</param>
            <returns>The position into which the new element was inserted.</returns>
        </member>
        <member name="M:C1.C1Schedule.C1BindingSource.AddNew">
            <summary>
            Adds a new item to the underlying list. 
            </summary>
            <returns>The item added to the list.</returns>
        </member>
        <member name="M:C1.C1Schedule.C1BindingSource.FinishAddNew">
            <summary>
            Commits a pending new item to the collection. 
            </summary>
        </member>
        <member name="M:C1.C1Schedule.C1BindingSource.BeginEdit(System.Object)">
            <summary>
            Starts an edit operation on the specified object.
            </summary>
            <param name="item">The object on which to start operation.</param>
        </member>
        <member name="M:C1.C1Schedule.C1BindingSource.EndEdit(System.Object)">
            <summary>
            Applies pending changes to the underlying data source.
            </summary>
            <param name="item">The object on which to apply pending changes.</param>
        </member>
        <member name="M:C1.C1Schedule.C1BindingSource.System#ComponentModel#IBindingListView#ApplySort(System.ComponentModel.ListSortDescriptionCollection)">
            <summary>
            Sorts the data source with the specified sort description or descriptions.
            </summary>
            <param name="sorts"></param>
        </member>
        <member name="M:C1.C1Schedule.C1BindingSource.System#ComponentModel#IBindingList#ApplySort(System.ComponentModel.PropertyDescriptor,System.ComponentModel.ListSortDirection)">
            <summary>
            Sorts the data source using the specified property descriptor and sort direction.
            </summary>
            <param name="property"></param>
            <param name="direction"></param>
        </member>
        <member name="M:C1.C1Schedule.C1BindingSource.Clear">
            <summary>
            Removes all elements from the list. 
            </summary>
        </member>
        <member name="M:C1.C1Schedule.C1BindingSource.Contains(System.Object)">
            <summary>
            Determines whether an object is an item in the list. 
            </summary>
            <param name="value">The <see cref="T:System.Object"/> to locate.</param>
            <returns>True if the <see cref="T:System.Object"/> is found in the list; 
            otherwise, false.</returns>
        </member>
        <member name="M:C1.C1Schedule.C1BindingSource.CopyTo(System.Array,System.Int32)">
            <summary>
            Copies the contents of the <see cref="P:C1.C1Schedule.C1BindingSource.List"/> to the specified array, 
            starting at the specified index value. 
            </summary>
            <param name="array">The one-dimensional <see cref="T:System.Array"/> that is the 
            destination of the elements copied from <see cref="T:System.Collections.ICollection"/>. 
            The <see cref="T:System.Array"/> must have zero-based indexing.</param>
            <param name="index">The zero-based index in the array at which the copying begins.</param>
        </member>
        <member name="M:C1.C1Schedule.C1BindingSource.Dispose(System.Boolean)">
            <summary>
            Releases all resources used by the <see cref="T:C1.C1Schedule.C1BindingSource"/>.
            </summary>
            <param name="disposing">True if managed resources should be disposed; 
            otherwise, false.</param>
        </member>
        <member name="M:C1.C1Schedule.C1BindingSource.Find(System.ComponentModel.PropertyDescriptor,System.Object)">
            <summary>
            Searches for the index of the item that has the given property descriptor. 
            </summary>
            <param name="prop">The <see cref="T:System.ComponentModel.PropertyDescriptor"/> 
            to search on.</param>
            <param name="key">The value of the property parameter to search for.</param>
            <returns>The index of the item that has the given 
            <see cref="T:System.ComponentModel.PropertyDescriptor"/>.</returns>
        </member>
        <member name="M:C1.C1Schedule.C1BindingSource.Find(System.String,System.Object)">
            <summary>
            Returns the index of the item in the list with the specified property name and value. 
            </summary>
            <param name="propertyName">The property name to search on.</param>
            <param name="key">The value of the property parameter to search for.</param>
            <returns>
            The index of the item in the list with the specified property name and value.
            </returns>
        </member>
        <member name="M:C1.C1Schedule.C1BindingSource.GetEnumerator">
            <summary>
            Retrieves an enumerator for the <see cref="P:C1.C1Schedule.C1BindingSource.List"/>. 
            </summary>
            <returns>An <see cref="T:System.Collections.IEnumerable"/> object that can 
            be used to iterate through the collection.</returns>
        </member>
        <member name="M:C1.C1Schedule.C1BindingSource.GetItemProperties(System.ComponentModel.PropertyDescriptor[])">
            <summary>
            Retrieves an array of PropertyDescriptor objects representing 
            the bindable properties of the data source list type.
            </summary>
            <param name="listAccessors">An array of 
            <see cref="T:System.ComponentModel.PropertyDescriptor"/> objects to find in 
            the collection as bindable. This can be null.</param>
            <returns>The <see cref="T:System.ComponentModel.PropertyDescriptorCollection"/> 
            that represents the properties on each item used to bind data.</returns>
        </member>
        <member name="M:C1.C1Schedule.C1BindingSource.GetListName(System.ComponentModel.PropertyDescriptor[])">
            <summary>
            Gets the name of the list supplying data for the binding. 
            </summary>
            <param name="listAccessors">An array of <see cref="T:System.ComponentModel.PropertyDescriptor"/> 
            objects, the list name for which is returned. This can be null.</param>
            <returns>The name of the list.</returns>
        </member>
        <member name="M:C1.C1Schedule.C1BindingSource.IndexOf(System.Object)">
            <summary>
            Searches for the specified object and returns the index of the first 
            occurrence within the entire list.
            </summary>
            <param name="value">The <see cref="T:System.Object"/> to index.</param>
            <returns>The index of <i>value</i> if found in the list; otherwise, -1.</returns>
        </member>
        <member name="M:C1.C1Schedule.C1BindingSource.Insert(System.Int32,System.Object)">
            <summary>
            Inserts an item into the list at the specified index.
            </summary>
            <param name="index">The zero-based index at which 
            <i>value</i> should be inserted.</param>
            <param name="value">The <see cref="T:System.Object"/> to insert.</param>
        </member>
        <member name="M:C1.C1Schedule.C1BindingSource.OnAddingNew(System.ComponentModel.AddingNewEventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:C1.C1Schedule.C1BindingSource.OnDataMemberChanged(System.EventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:C1.C1Schedule.C1BindingSource.OnDataSourceChanged(System.EventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:C1.C1Schedule.C1BindingSource.OnListChanged(System.ComponentModel.ListChangedEventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:C1.C1Schedule.C1BindingSource.Remove(System.Object)">
            <summary>
            Removes the specified item from the list. 
            </summary>
            <param name="value">The <see cref="T:System.Object"/> to remove.</param>
        </member>
        <member name="M:C1.C1Schedule.C1BindingSource.RemoveAt(System.Int32)">
            <summary>
            Removes the item at the specified index in the list.
            </summary>
            <param name="index">The zero-based index of the item to remove.</param>
        </member>
        <member name="M:C1.C1Schedule.C1BindingSource.System#ComponentModel#IBindingListView#RemoveFilter">
            <summary>
            Removes the filter associated with the <see cref="T:C1.C1Schedule.C1BindingSource"/>.
            </summary>
        </member>
        <member name="M:C1.C1Schedule.C1BindingSource.System#ComponentModel#IBindingList#RemoveSort">
            <summary>
            Removes the sort associated with the <see cref="T:C1.C1Schedule.C1BindingSource"/>. 
            </summary>
        </member>
        <member name="M:C1.C1Schedule.C1BindingSource.ResetAllowNew">
            <summary>
            Reinitializes the <see cref="P:C1.C1Schedule.C1BindingSource.AllowNew"/> property. 
            </summary>
        </member>
        <member name="M:C1.C1Schedule.C1BindingSource.ResetBindings(System.Boolean)">
            <summary>
            Causes a control bound to the <see cref="T:C1.C1Schedule.C1BindingSource"/> to reread 
            all the items in the list and refresh their displayed values. 
            </summary>
            <param name="metadataChanged">The <see cref="T:System.Boolean"/> value specifying
            whether the metadata has been changed.</param>
        </member>
        <member name="M:C1.C1Schedule.C1BindingSource.ResetItem(System.Int32)">
            <summary>
            Causes a control bound to the <see cref="T:C1.C1Schedule.C1BindingSource"/> to re-read 
            the item at the specified index, and refresh its displayed value. 
            </summary>
            <param name="itemIndex">The zero-based index of item to re-read.</param>
        </member>
        <member name="P:C1.C1Schedule.C1BindingSource.AllowEdit">
            <summary>
            Gets a value indicating whether items in the underlying list can be edited.
            </summary>
        </member>
        <member name="P:C1.C1Schedule.C1BindingSource.AllowNew">
            <summary>
            Gets or sets a value indicating whether the <see cref="M:C1.C1Schedule.C1BindingSource.AddNew"/> method 
            can be used to add items to the list. 
            </summary>
        </member>
        <member name="P:C1.C1Schedule.C1BindingSource.AllowRemove">
            <summary>
            Gets a value indicating whether items can be removed from the underlying list. 
            </summary>
        </member>
        <member name="P:C1.C1Schedule.C1BindingSource.Count">
            <summary>
            Gets the total number of items in the underlying list.
            </summary>
        </member>
        <member name="P:C1.C1Schedule.C1BindingSource.DataMember">
            <summary>
            Gets or sets the specific list in the data source to which 
            the connector currently binds to.
            </summary>
        </member>
        <member name="P:C1.C1Schedule.C1BindingSource.DataSource">
            <summary>
            Gets or sets the data source that the connector binds to. 
            </summary>
        </member>
        <member name="P:C1.C1Schedule.C1BindingSource.Filter">
            <summary>
            Gets or sets the expression used to filter which rows are viewed. 
            </summary>
        </member>
        <member name="P:C1.C1Schedule.C1BindingSource.IsFixedSize">
            <summary>
            Gets a value indicating whether the underlying list has a fixed size. 
            </summary>
        </member>
        <member name="P:C1.C1Schedule.C1BindingSource.IsReadOnly">
            <summary>
            Gets a value indicating whether the underlying list is read-only.
            </summary>
        </member>
        <member name="P:C1.C1Schedule.C1BindingSource.System#ComponentModel#IBindingList#IsSorted">
            <summary>
            Gets a value indicating whether the items in the underlying list are sorted.
            </summary>
        </member>
        <member name="P:C1.C1Schedule.C1BindingSource.IsSynchronized">
            <summary>
            Gets a value indicating whether access to the collection is synchronized (thread safe). 
            </summary>
        </member>
        <member name="P:C1.C1Schedule.C1BindingSource.Item(System.Int32)">
            <summary>
            Gets or sets the list element at the specified index.
            </summary>
            <param name="index">The zero-based index of the element to get or set.</param>
        </member>
        <member name="P:C1.C1Schedule.C1BindingSource.List">
            <summary>
            Gets the list that the connector is bound to. 
            </summary>
        </member>
        <member name="P:C1.C1Schedule.C1BindingSource.RaiseListChangedEvents">
            <summary>
            Gets or sets a value indicating whether <see cref="E:C1.C1Schedule.C1BindingSource.ListChanged"/> events should be raised. 
            </summary>
        </member>
        <member name="P:C1.C1Schedule.C1BindingSource.Sort">
            <summary>
            Gets or sets the column names used for sorting, and the sort order 
            for viewing the rows in the data source.
            </summary>
        </member>
        <member name="P:C1.C1Schedule.C1BindingSource.System#ComponentModel#IBindingListView#SortDescriptions">
            <summary>
            Gets the collection of sort descriptions applied to the data source. 
            </summary>
        </member>
        <member name="P:C1.C1Schedule.C1BindingSource.System#ComponentModel#IBindingList#SortDirection">
            <summary>
            Gets the direction the items in the list are sorted.
            </summary>
        </member>
        <member name="P:C1.C1Schedule.C1BindingSource.System#ComponentModel#IBindingList#SortProperty">
            <summary>
            Gets the <see cref="T:System.ComponentModel.PropertyDescriptor"/> that is being used for sorting the list. 
            </summary>
        </member>
        <member name="P:C1.C1Schedule.C1BindingSource.SupportsAdvancedSorting">
            <summary>
            Gets a value indicating whether the data source supports multi-column sorting. 
            </summary>
        </member>
        <member name="P:C1.C1Schedule.C1BindingSource.SupportsChangeNotification">
            <summary>
            Gets a value indicating whether the data source supports change notification.
            </summary>
        </member>
        <member name="P:C1.C1Schedule.C1BindingSource.SupportsFiltering">
            <summary>
            Gets a value indicating whether the data source supports filtering.
            </summary>
        </member>
        <member name="P:C1.C1Schedule.C1BindingSource.SupportsSearching">
            <summary>
            Gets a value indicating whether the data source supports searching with 
            the Find method. 
            </summary>
        </member>
        <member name="P:C1.C1Schedule.C1BindingSource.SupportsSorting">
            <summary>
            Gets a value indicating whether the data source supports sorting.
            </summary>
        </member>
        <member name="P:C1.C1Schedule.C1BindingSource.SyncRoot">
            <summary>
            Gets an object that can be used to synchronize access to the underlying list. 
            </summary>
        </member>
        <member name="P:C1.C1Schedule.C1BindingSource.DataKeyNamesInternal">
            <summary>
            
            </summary>
        </member>
        <member name="E:C1.C1Schedule.C1BindingSource.AddingNew">
            <summary>
            Occurs before an item is added to the underlying list. 
            </summary>
        </member>
        <member name="E:C1.C1Schedule.C1BindingSource.DataMemberChanged">
            <summary>
            Occurs when the <see cref="P:C1.C1Schedule.C1BindingSource.DataMember"/> property value has changed.
            </summary>
        </member>
        <member name="E:C1.C1Schedule.C1BindingSource.DataSourceChanged">
            <summary>
            Occurs when the <see cref="P:C1.C1Schedule.C1BindingSource.DataSource"/> property value has changed. 
            </summary>
        </member>
        <member name="E:C1.C1Schedule.C1BindingSource.ListChanged">
            <summary>
            Occurs when the underlying list changes or an item in the list changes.
            </summary>
        </member>
        <member name="T:C1.C1Schedule.BaseEnumEditor">
            <summary>
            Base UITypeEditor for all dynamic enums.
            </summary>
        </member>
        <member name="T:C1.C1Schedule.NotifyCollectionChangedAction">
            <summary>
            Describes the action that caused a <see cref="E:C1.C1Schedule.INotifyCollectionChanged.CollectionChanged"/> event. 
            </summary>
        </member>
        <member name="F:C1.C1Schedule.NotifyCollectionChangedAction.Add">
            <summary>
            One or more items were added to the collection. 
            </summary>
        </member>
        <member name="F:C1.C1Schedule.NotifyCollectionChangedAction.Remove">
            <summary>
            One or more items were removed from the collection. 
            </summary>
        </member>
        <member name="F:C1.C1Schedule.NotifyCollectionChangedAction.Replace">
            <summary>
            One or more items were replaced in the collection.
            </summary>
        </member>
        <member name="F:C1.C1Schedule.NotifyCollectionChangedAction.Move">
            <summary>
            One or more items were moved within the collection.
            </summary>
        </member>
        <member name="F:C1.C1Schedule.NotifyCollectionChangedAction.Reset">
            <summary>
            The content of the collection changed dramatically.
            </summary>
        </member>
        <member name="T:C1.C1Schedule.NotifyCollectionChangedEventArgs">
            <summary>
            Provides data for the <see cref="E:C1.C1Schedule.INotifyCollectionChanged.CollectionChanged"/> event.
            </summary>
        </member>
        <member name="M:C1.C1Schedule.NotifyCollectionChangedEventArgs.#ctor(C1.C1Schedule.NotifyCollectionChangedAction)">
            <summary>
            Initializes a new instance of the <see cref="T:C1.C1Schedule.NotifyCollectionChangedEventArgs"/> class.
            </summary>
            <param name="action">The <see cref="T:C1.C1Schedule.NotifyCollectionChangedAction"/> action 
            that caused a <see cref="E:C1.C1Schedule.INotifyCollectionChanged.CollectionChanged"/> event.</param>
        </member>
        <member name="M:C1.C1Schedule.NotifyCollectionChangedEventArgs.#ctor(C1.C1Schedule.NotifyCollectionChangedAction,System.Collections.IList)">
            <summary>
            Initializes a new instance of the <see cref="T:C1.C1Schedule.NotifyCollectionChangedEventArgs"/> class.
            </summary>
            <param name="action">The <see cref="T:C1.C1Schedule.NotifyCollectionChangedAction"/> action 
            that caused a <see cref="E:C1.C1Schedule.INotifyCollectionChanged.CollectionChanged"/> event.</param>
            <param name="changedItems">The <see cref="T:System.Collections.IList"/> list containing
            changed items.</param>
        </member>
        <member name="M:C1.C1Schedule.NotifyCollectionChangedEventArgs.#ctor(C1.C1Schedule.NotifyCollectionChangedAction,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:C1.C1Schedule.NotifyCollectionChangedEventArgs"/> class.
            </summary>
            <param name="action">The <see cref="T:C1.C1Schedule.NotifyCollectionChangedAction"/> action 
            that caused a <see cref="E:C1.C1Schedule.INotifyCollectionChanged.CollectionChanged"/> event.</param>
            <param name="changedItem">The changed item.</param>
        </member>
        <member name="M:C1.C1Schedule.NotifyCollectionChangedEventArgs.#ctor(C1.C1Schedule.NotifyCollectionChangedAction,System.Collections.IList,System.Collections.IList)">
            <summary>
            Initializes a new instance of the <see cref="T:C1.C1Schedule.NotifyCollectionChangedEventArgs"/> class.
            </summary>
            <param name="action">The <see cref="T:C1.C1Schedule.NotifyCollectionChangedAction"/> action 
            that caused a <see cref="E:C1.C1Schedule.INotifyCollectionChanged.CollectionChanged"/> event.</param>
            <param name="newItems">The <see cref="T:System.Collections.IList"/> list containing added items.</param>
            <param name="oldItems">The <see cref="T:System.Collections.IList"/> list containing removed items.</param>
        </member>
        <member name="M:C1.C1Schedule.NotifyCollectionChangedEventArgs.#ctor(C1.C1Schedule.NotifyCollectionChangedAction,System.Collections.IList,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:C1.C1Schedule.NotifyCollectionChangedEventArgs"/> class.
            </summary>
            <param name="action">The <see cref="T:C1.C1Schedule.NotifyCollectionChangedAction"/> action 
            that caused a <see cref="E:C1.C1Schedule.INotifyCollectionChanged.CollectionChanged"/> event.</param>
            <param name="changedItems">The <see cref="T:System.Collections.IList"/> list containing
            changed items.</param>
            <param name="startingIndex">The zero-based starting index.</param>
        </member>
        <member name="M:C1.C1Schedule.NotifyCollectionChangedEventArgs.#ctor(C1.C1Schedule.NotifyCollectionChangedAction,System.Object,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:C1.C1Schedule.NotifyCollectionChangedEventArgs"/> class.
            </summary>
            <param name="action">The <see cref="T:C1.C1Schedule.NotifyCollectionChangedAction"/> action 
            that caused a <see cref="E:C1.C1Schedule.INotifyCollectionChanged.CollectionChanged"/> event.</param>
            <param name="changedItem">The changed item.</param>
            <param name="index">The zero-based index of the changed item.</param>
        </member>
        <member name="M:C1.C1Schedule.NotifyCollectionChangedEventArgs.#ctor(C1.C1Schedule.NotifyCollectionChangedAction,System.Object,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:C1.C1Schedule.NotifyCollectionChangedEventArgs"/> class.
            </summary>
            <param name="action">The <see cref="T:C1.C1Schedule.NotifyCollectionChangedAction"/> action 
            that caused a <see cref="E:C1.C1Schedule.INotifyCollectionChanged.CollectionChanged"/> event.</param>
            <param name="newItem">The new item.</param>
            <param name="oldItem">The old item.</param>
        </member>
        <member name="M:C1.C1Schedule.NotifyCollectionChangedEventArgs.#ctor(C1.C1Schedule.NotifyCollectionChangedAction,System.Collections.IList,System.Collections.IList,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:C1.C1Schedule.NotifyCollectionChangedEventArgs"/> class.
            </summary>
            <param name="action">The <see cref="T:C1.C1Schedule.NotifyCollectionChangedAction"/> action 
            that caused a <see cref="E:C1.C1Schedule.INotifyCollectionChanged.CollectionChanged"/> event.</param>
            <param name="newItems">The <see cref="T:System.Collections.IList"/> list containing added items.</param>
            <param name="oldItems">The <see cref="T:System.Collections.IList"/> list containing removed items.</param>
            <param name="startingIndex">The zero-based starting index.</param>
        </member>
        <member name="M:C1.C1Schedule.NotifyCollectionChangedEventArgs.#ctor(C1.C1Schedule.NotifyCollectionChangedAction,System.Collections.IList,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:C1.C1Schedule.NotifyCollectionChangedEventArgs"/> class.
            </summary>
            <param name="action">The <see cref="T:C1.C1Schedule.NotifyCollectionChangedAction"/> action 
            that caused a <see cref="E:C1.C1Schedule.INotifyCollectionChanged.CollectionChanged"/> event.</param>
            <param name="changedItems">The <see cref="T:System.Collections.IList"/> list containing
            changed items.</param>
            <param name="index">The new index.</param>
            <param name="oldIndex">The old index.</param>
        </member>
        <member name="M:C1.C1Schedule.NotifyCollectionChangedEventArgs.#ctor(C1.C1Schedule.NotifyCollectionChangedAction,System.Object,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:C1.C1Schedule.NotifyCollectionChangedEventArgs"/> class.
            </summary>
            <param name="action">The <see cref="T:C1.C1Schedule.NotifyCollectionChangedAction"/> action 
            that caused a <see cref="E:C1.C1Schedule.INotifyCollectionChanged.CollectionChanged"/> event.</param>
            <param name="changedItem">The changed item.</param>
            <param name="index">The new index.</param>
            <param name="oldIndex">The old index.</param>
        </member>
        <member name="M:C1.C1Schedule.NotifyCollectionChangedEventArgs.#ctor(C1.C1Schedule.NotifyCollectionChangedAction,System.Object,System.Object,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:C1.C1Schedule.NotifyCollectionChangedEventArgs"/> class.
            </summary>
            <param name="action">The <see cref="T:C1.C1Schedule.NotifyCollectionChangedAction"/> action 
            that caused a <see cref="E:C1.C1Schedule.INotifyCollectionChanged.CollectionChanged"/> event.</param>
            <param name="newItem">The new item.</param>
            <param name="oldItem">The old item.</param>
            <param name="index">The zero-based index of the item.</param>
        </member>
        <member name="P:C1.C1Schedule.NotifyCollectionChangedEventArgs.Action">
            <summary>
            Gets the action that caused the event. 
            </summary>
        </member>
        <member name="P:C1.C1Schedule.NotifyCollectionChangedEventArgs.NewItems">
            <summary>
            Gets the list of new items involved in the change.
            </summary>
        </member>
        <member name="P:C1.C1Schedule.NotifyCollectionChangedEventArgs.NewStartingIndex">
            <summary>
            Gets the index at which the change occurred.
            </summary>
        </member>
        <member name="P:C1.C1Schedule.NotifyCollectionChangedEventArgs.OldItems">
            <summary>
            Gets the list of items affected by a Replace, Remove, or Move action.
            </summary>
        </member>
        <member name="P:C1.C1Schedule.NotifyCollectionChangedEventArgs.OldStartingIndex">
            <summary>
            Gets the index at which a Move, Remove, ore Replace action occurred.
            </summary>
        </member>
        <member name="T:C1.C1Schedule.NotifyCollectionChangedEventHandler">
            <summary>
            The delegate type for the event handlers of the <see cref="E:C1.C1Schedule.INotifyCollectionChanged.CollectionChanged"/> event. 
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:C1.C1Schedule.NotifyCollectionChangedEventArgs"/> 
            that contains the event data.</param>
        </member>
        <member name="T:C1.C1Schedule.INotifyCollectionChanged">
            <summary>
            Notifies listeners of dynamic changes, such as when items get added 
            and removed or the whole list is refreshed.
            </summary>
        </member>
        <member name="E:C1.C1Schedule.INotifyCollectionChanged.CollectionChanged">
            <summary>
            Occurs when the collection changes.
            </summary>
        </member>
        <member name="T:C1.C1Schedule.C1ObservableCollection`1">
            <summary>
            The <see cref="T:C1.C1Schedule.C1ObservableCollection`1"/> is the base class for all 
            <see cref="T:System.Collections.ObjectModel.Collection`1"/> derived collections. Supports notification.
            </summary>
            <typeparam name="T">The type of objects to keep in collection.</typeparam>
        </member>
        <member name="M:C1.C1Schedule.C1ObservableCollection`1.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:C1.C1Schedule.C1ObservableCollection`1"/> class.
            </summary>
        </member>
        <member name="M:C1.C1Schedule.C1ObservableCollection`1.#ctor(System.Collections.Generic.IList{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:C1.C1Schedule.C1ObservableCollection`1"/> class.
            </summary>
            <param name="list">The <see cref="T:System.Collections.Generic.IList`1"/> list that is wrapped 
            by the new collection.</param>
        </member>
        <member name="M:C1.C1Schedule.C1ObservableCollection`1.ClearItems">
            <summary>
            
            </summary>
        </member>
        <member name="M:C1.C1Schedule.C1ObservableCollection`1.InsertItem(System.Int32,`0)">
            <summary>
            
            </summary>
            <param name="index"></param>
            <param name="item"></param>
        </member>
        <member name="M:C1.C1Schedule.C1ObservableCollection`1.RemoveItem(System.Int32)">
            <summary>
            
            </summary>
            <param name="index"></param>
        </member>
        <member name="M:C1.C1Schedule.C1ObservableCollection`1.SetItem(System.Int32,`0)">
            <summary>
            
            </summary>
            <param name="index"></param>
            <param name="item"></param>
        </member>
        <member name="M:C1.C1Schedule.C1ObservableCollection`1.OnCollectionChanged(C1.C1Schedule.NotifyCollectionChangedEventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="T:C1.C1Schedule.C1ObservableKeyedCollection`2">
            <summary>
            The <see cref="T:C1.C1Schedule.C1ObservableCollection`1"/> is the base class for all 
            <see cref="T:System.Collections.ObjectModel.KeyedCollection`2"/> derived collections. Supports notification.
            </summary>
            <typeparam name="TKey">The type of keys in the collection.</typeparam>
            <typeparam name="TItem">The type of objects to keep in the collection.</typeparam>
        </member>
        <member name="M:C1.C1Schedule.C1ObservableKeyedCollection`2.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:C1.C1Schedule.C1ObservableKeyedCollection`2"/> class.
            </summary>
        </member>
        <member name="M:C1.C1Schedule.C1ObservableKeyedCollection`2.#ctor(System.Collections.Generic.IEqualityComparer{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:C1.C1Schedule.C1ObservableKeyedCollection`2"/> class.
            </summary>
            <param name="comparer">The implementation of the <see cref="T:System.Collections.IEqualityComparer"/> generic interface 
            to use when comparing keys, or a null reference (Nothing in Visual Basic) 
            to use the default equality comparer for the type of the key, obtained 
            from EqualityComparer.Default.</param>
        </member>
        <member name="M:C1.C1Schedule.C1ObservableKeyedCollection`2.#ctor(System.Collections.Generic.IEqualityComparer{`0},System.Int32)">
            <summary>
            
            </summary>
            <param name="comparer"></param>
            <param name="dictionaryCreationThreshold"></param>
        </member>
        <member name="M:C1.C1Schedule.C1ObservableKeyedCollection`2.ClearItems">
            <summary>
            
            </summary>
        </member>
        <member name="M:C1.C1Schedule.C1ObservableKeyedCollection`2.InsertItem(System.Int32,`1)">
            <summary>
            
            </summary>
            <param name="index"></param>
            <param name="item"></param>
        </member>
        <member name="M:C1.C1Schedule.C1ObservableKeyedCollection`2.RemoveItem(System.Int32)">
            <summary>
            
            </summary>
            <param name="index"></param>
        </member>
        <member name="M:C1.C1Schedule.C1ObservableKeyedCollection`2.SetItem(System.Int32,`1)">
            <summary>
            
            </summary>
            <param name="index"></param>
            <param name="item"></param>
        </member>
        <member name="M:C1.C1Schedule.C1ObservableKeyedCollection`2.OnCollectionChanged(C1.C1Schedule.NotifyCollectionChangedEventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:C1.C1Schedule.PlatformIndependenceHelper.GetColor(System.UInt32)">
            <summary>
            Gets a platform specific Color object based on its integer representation.
            The byte ordering in the <paramref name="color"/> is ARGB, for example
            the constant 0x01020304 represents the color with the following components:
            A = 0x01
            R = 0x02
            G = 0x03
            B = 0x04
            </summary>
            <param name="color"></param>
            <returns></returns>
        </member>
        <member name="M:C1.C1Schedule.PlatformIndependenceHelper.IsEmptyColor(System.Drawing.Color)">
            <summary>
            Indicates whether the specified <paramref name="color"/> is transparent.
            </summary>
            <param name="color"></param>
            <returns></returns>
        </member>
        <member name="T:C1.C1Schedule.AppointmentMappingCollection">
            <summary>
            Represents a generic collection of mappings for properties of 
            <see cref="T:C1.C1Schedule.BaseObject"/> derived objects to appropriate data fields. 
            </summary>
        </member>
        <member name="T:C1.C1Schedule.MappingCollectionBase`1">
            <summary>
            Represents a collection of mappings for properties of the 
            <see cref="T:C1.C1Schedule.BasePersistableObject"/> object to the appropriate data fields. 
            Names of properties are keys in this collection.
            </summary>
            <typeparam name="T">The type of the objects for mapping.
            It should be derived from the <see cref="T:C1.C1Schedule.BasePersistableObject"/>class 
            and have the default parameter-less constructor.</typeparam>
        </member>
        <member name="M:C1.C1Schedule.MappingCollectionBase`1.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:C1.C1Schedule.MappingCollectionBase`1"/> class.
            </summary>
        </member>
        <member name="M:C1.C1Schedule.MappingCollectionBase`1.GetKeyForItem(C1.C1Schedule.MappingInfo)">
            <summary>
            Returns property name as the key for collection.
            </summary>
            <param name="item">The <see cref="T:C1.C1Schedule.MappingInfo"/> object.</param>
            <returns>The property name.</returns>
        </member>
        <member name="M:C1.C1Schedule.MappingCollectionBase`1.ReadObject(`0,System.Object,System.Boolean)">
            <summary>
            Fills internal object derived from BasePersistableObject 
            with values from specified bound object.
            </summary>
            <param name="internalObject"></param>
            <param name="boundObject"></param>
            <param name="raiseChanged">Specifies if internalObject should raise Changed 
            event during this method call</param>
            <returns>Value indicating if bound object was changed by this method.</returns>
            <remarks>Overriding method of derived class should call the base 
            class's ReadObject method or fill BasePersistableObject
            properties on it's own.</remarks>
        </member>
        <member name="M:C1.C1Schedule.MappingCollectionBase`1.ReadObject(`0,System.Object,System.Boolean,System.Boolean)">
            <summary>
            Fills internal object derived from BasePersistableObject 
            with values from specified bound object.
            </summary>
            <param name="internalObject"></param>
            <param name="boundObject"></param>
            <param name="raiseChanged">Specifies if internalObject should raise Changed 
            event during this method call</param>
            <param name="dirty">Specifies whether an object has been changed</param>
            <returns>Value indicating if bound object was changed by this method.</returns>
            <remarks>Overriding method of derived class should call the base 
            class's ReadObject method or fill BasePersistableObject
            properties on it's own.</remarks>
        </member>
        <member name="M:C1.C1Schedule.MappingCollectionBase`1.WriteObject(`0,System.Object)">
            <summary>
            When implemented in a derived class fills boundObject 
            with values from specified internalObject.
            </summary>
            <param name="internalObject">object from C1Schedule collection.</param>
            <param name="boundObject">object from custom data source.</param>
            <remarks>Overriding method of derived class should call 
            the base class's WriteObject method or fill boundObject
            properties on it's own.</remarks>
        </member>
        <member name="M:C1.C1Schedule.MappingCollectionBase`1.NewItem">
            <summary>
            Implementation in derived classes should return new object of type T.
            </summary>
            <returns>New object of type T.</returns>
        </member>
        <member name="M:C1.C1Schedule.MappingCollectionBase`1.InsertItem(System.Int32,C1.C1Schedule.MappingInfo)">
            <summary>
            
            </summary>
            <param name="index"></param>
            <param name="item"></param>
        </member>
        <member name="M:C1.C1Schedule.MappingCollectionBase`1.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, 
            or resetting unmanaged resources. 
            </summary>
        </member>
        <member name="P:C1.C1Schedule.MappingCollectionBase`1.IdMapping">
            <summary>
            Returns <see cref="T:C1.C1Schedule.MappingInfo"/> object for the <see cref="P:C1.C1Schedule.BasePersistableObject.Id"/> property.
            If the storage object is bound to a data source via its DataSource property, 
            the properties of this object allow the <see cref="P:C1.C1Schedule.BasePersistableObject.Id"/> property  
            to be bound to the appropriate field in the data source. 
            </summary>
             <remarks> Each object derived from <see cref="T:C1.C1Schedule.BasePersistableObject"/> is identified 
            by either Id or Index property. 
            To allow data to be correctly restored from your data sources you should specify mapping 
            either for the <see cref="P:C1.C1Schedule.MappingCollectionBase`1.IdMapping"/> or 
            for the <see cref="P:C1.C1Schedule.MappingCollectionBase`1.IndexMapping"/>.
            It makes sense in case if you bind to your data storages of Resources, Labels, 
            Contacts or Categories. 
            C1Schedule saves only Ids or Indexes of these objects in AppointmentSorage. 
            If there is no mapping for IdMapping or IndexMapping, C1Schedule won't be able to 
            identify Appointment's properties correctly in storages initialized by your data.
            </remarks>
        </member>
        <member name="P:C1.C1Schedule.MappingCollectionBase`1.IndexMapping">
            <summary>
            Returns <see cref="T:C1.C1Schedule.MappingInfo"/> object for the <see cref="P:C1.C1Schedule.BasePersistableObject.Index"/> property.
            If the storage object is bound to a data source via its DataSource property, 
            the properties of this object allow the <see cref="P:C1.C1Schedule.BasePersistableObject.Index"/> property 
            to be bound to the appropriate field in the data source. 
            </summary>
             <remarks> Each object derived from <see cref="T:C1.C1Schedule.BasePersistableObject"/> is identified 
            by either Id or Index property. 
            To allow data to be correctly restored from your data sources you should specify mapping 
            either for the <see cref="P:C1.C1Schedule.MappingCollectionBase`1.IdMapping"/> or 
            for the <see cref="P:C1.C1Schedule.MappingCollectionBase`1.IndexMapping"/>.
            It makes sense in case if you bind to your data storages of Resources, Labels, 
            Contacts or Categories. 
            C1Schedule saves only Ids or Indexes of these objects in AppointmentSorage. 
            If there is no mapping for IdMapping or IndexMapping, C1Schedule won't be able to 
            identify Appointment's properties correctly in storages initialized by your data.
            </remarks>
        </member>
        <member name="P:C1.C1Schedule.MappingCollectionBase`1.Count">
            <summary>
            Gets the number of elements actually contained in 
            the <see cref="T:C1.C1Schedule.MappingCollectionBase`1"/> object.
            </summary>
        </member>
        <member name="P:C1.C1Schedule.MappingCollectionBase`1.Comparer">
            <summary>
            Gets the generic equality comparer that is used to determine equality 
            of keys in the collection.
            </summary>
        </member>
        <member name="E:C1.C1Schedule.MappingCollectionBase`1.Disposed">
            <summary>
            Represents the method that handles the Disposed event of a component. 
            </summary>
        </member>
        <member name="P:C1.C1Schedule.MappingCollectionBase`1.Site">
            <summary>
            Gets or sets the ISite associated with the IComponent. 
            </summary>
        </member>
        <member name="M:C1.C1Schedule.AppointmentMappingCollection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:C1.C1Schedule.AppointmentMappingCollection"/> class.
            </summary>
        </member>
        <member name="M:C1.C1Schedule.AppointmentMappingCollection.ReadObject(C1.C1Schedule.Appointment,System.Object,System.Boolean)">
            <summary>
            Fills BaseObject object with values from specified boundObject.
            </summary>
            <param name="internalObject"></param>
            <param name="boundObject"></param>
            <param name="raiseChanged"></param>
            <returns></returns>
        </member>
        <member name="M:C1.C1Schedule.AppointmentMappingCollection.WriteObject(C1.C1Schedule.Appointment,System.Object)">
            <summary>
            Fills boundObject with values from specified BaseObject object.
            </summary>
            <param name="internalObject">Appointment object.</param>
            <param name="boundObject">object from custom data source/</param>
        </member>
        <member name="P:C1.C1Schedule.AppointmentMappingCollection.Body">
            <summary>
            Returns <see cref="T:C1.C1Schedule.MappingInfo"/> object for the <see cref="P:C1.C1Schedule.Appointment.Body"/> 
            property of the <see cref="T:C1.C1Schedule.Appointment"/> object.
            If the storage object is bound to a data source via its DataSource property, 
            the properties of the <see cref="P:C1.C1Schedule.AppointmentMappingCollection.Body"/> allow 
            the <see cref="P:C1.C1Schedule.Appointment.Body"/> property 
            to be bound to the appropriate field in the data source. 
            </summary>
        </member>
        <member name="P:C1.C1Schedule.AppointmentMappingCollection.End">
            <summary>
            Returns <see cref="T:C1.C1Schedule.MappingInfo"/> object for the <see cref="P:C1.C1Schedule.Appointment.End"/> 
            property of the <see cref="T:C1.C1Schedule.Appointment"/> object.
            If the storage object is bound to a data source via its DataSource property, 
            the properties of this object allow the <see cref="P:C1.C1Schedule.Appointment.End"/> property 
            to be bound to the appropriate field in the data source. 
            </summary>
        </member>
        <member name="P:C1.C1Schedule.AppointmentMappingCollection.Location">
            <summary>
            Returns <see cref="T:C1.C1Schedule.MappingInfo"/> object for the <see cref="P:C1.C1Schedule.Appointment.Location"/>
            property of the <see cref="T:C1.C1Schedule.Appointment"/> object.
            If the storage object is bound to a data source via its DataSource property, 
            the properties of this object allow the <see cref="P:C1.C1Schedule.Appointment.Location"/> property 
            to be bound to the appropriate field in the data source. 
            </summary>
        </member>
        <member name="P:C1.C1Schedule.AppointmentMappingCollection.Start">
            <summary>
            Returns <see cref="T:C1.C1Schedule.MappingInfo"/> object for the <see cref="P:C1.C1Schedule.Appointment.Start"/>
            property of the <see cref="T:C1.C1Schedule.Appointment"/> object.
            If the storage object is bound to a data source via its DataSource property, 
            the properties of this object allow the <see cref="P:C1.C1Schedule.Appointment.Start"/> property 
            to be bound to the appropriate field in the data source. 
            </summary>
        </member>
        <member name="P:C1.C1Schedule.AppointmentMappingCollection.Subject">
            <summary>
            Returns <see cref="T:C1.C1Schedule.MappingInfo"/> object for the <see cref="P:C1.C1Schedule.Appointment.Subject"/>
            property of the <see cref="T:C1.C1Schedule.Appointment"/> object.
            If the storage object is bound to a data source via its DataSource property, 
            the properties of this object allow the <see cref="P:C1.C1Schedule.Appointment.Subject"/> property 
            to be bound to the appropriate field in the data source. 
            </summary>
        </member>
        <member name="P:C1.C1Schedule.AppointmentMappingCollection.AppointmentProperties">
            <summary>
            Returns <see cref="T:C1.C1Schedule.MappingInfo"/> object for the memory field 
            which is intended to store the other properties of the <see cref="T:C1.C1Schedule.Appointment"/> object.
            If the storage object is bound to a data source via its DataSource property, 
            the properties of this object allow the other properties of 
            the <see cref="T:C1.C1Schedule.Appointment"/> object to be bound to 
            the appropriate field in the data source. 
            </summary>
        </member>
        <member name="P:C1.C1Schedule.AppointmentMappingCollection.OwnerIdMapping">
            <summary>
            Returns <see cref="T:C1.C1Schedule.MappingInfo"/> object for the Appointment.Owner.Id property of the <see cref="T:C1.C1Schedule.Appointment"/> object.
            If the storage object is bound to a data source via its DataSource property, 
            the properties of this object allow the <see cref="P:C1.C1Schedule.Appointment.Owner"/> property 
            to be bound to the appropriate field in the data source. 
            </summary>
        </member>
        <member name="P:C1.C1Schedule.AppointmentMappingCollection.OwnerIndexMapping">
            <summary>
            Returns <see cref="T:C1.C1Schedule.MappingInfo"/> object for the Appointment.Owner.Index property of the <see cref="T:C1.C1Schedule.Appointment"/> object.
            If the storage object is bound to a data source via its DataSource property, 
            the properties of this object allow the <see cref="P:C1.C1Schedule.Appointment.Owner"/> property 
            to be bound to the appropriate field in the data source. 
            </summary>
        </member>
        <member name="T:C1.C1Schedule.BaseObjectMappingCollection`1">
            <summary>
            Represents a generic collection of mappings for properties 
            of the <see cref="T:C1.C1Schedule.BaseObject"/> derived objects to appropriate data fields. 
            </summary>
            <typeparam name="T">The type of the objects for mapping.
            It should be derived from the <see cref="T:C1.C1Schedule.BaseObject"/> class 
            and have the default parameter-less constructor.</typeparam>
        </member>
        <member name="M:C1.C1Schedule.BaseObjectMappingCollection`1.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:C1.C1Schedule.BaseObjectMappingCollection`1"/> class.
            </summary>
        </member>
        <member name="M:C1.C1Schedule.BaseObjectMappingCollection`1.ReadObject(`0,System.Object,System.Boolean)">
            <summary>
            Fills BaseObject object with values from specified boundObject.
            </summary>
            <param name="internalObject"></param>
            <param name="boundObject"></param>
            <param name="raiseChanged"></param>
            <returns></returns>
        </member>
        <member name="M:C1.C1Schedule.BaseObjectMappingCollection`1.WriteObject(`0,System.Object)">
            <summary>
            Fills boundObject with values from specified BaseObject object.
            </summary>
            <param name="internalObject">T object.</param>
            <param name="boundObject">Object from custom data source.</param>
        </member>
        <member name="P:C1.C1Schedule.BaseObjectMappingCollection`1.TextMapping">
            <summary>
            Returns <see cref="T:C1.C1Schedule.MappingInfo"/> object for the <see cref="P:C1.C1Schedule.BaseObject.Text"/> 
            property of the object.
            If the storage object is bound to a data source via its DataSource property, 
            the properties of this object allow the <see cref="P:C1.C1Schedule.BaseObject.Text"/> 
            property of the object to be bound to the appropriate field in the data source. 
            </summary>
        </member>
        <member name="P:C1.C1Schedule.BaseObjectMappingCollection`1.ColorMapping">
            <summary>
            Returns <see cref="T:C1.C1Schedule.MappingInfo"/> object for the <see cref="P:C1.C1Schedule.BaseObject.Color"/> 
            property of the object.
            If the storage object is bound to a data source via its DataSource property, 
            the properties of this object allow the <see cref="P:C1.C1Schedule.BaseObject.Color"/> 
            property of the object to be bound to the appropriate field in the data source. 
            </summary>
        </member>
        <member name="P:C1.C1Schedule.BaseObjectMappingCollection`1.CaptionMapping">
            <summary>
            Returns <see cref="T:C1.C1Schedule.MappingInfo"/> object for <see cref="P:C1.C1Schedule.BaseObject.MenuCaption"/> 
            property of the object.
            If the storage object is bound to a data source via its DataSource property, 
            the properties of this object allow the <see cref="P:C1.C1Schedule.BaseObject.MenuCaption"/> 
            property of the object to be bound to the appropriate field in the data source. 
            </summary>
        </member>
        <member name="T:C1.C1Schedule.CategoryMappingCollection">
            <summary>
            Represents a generic collection of mappings for properties of 
            <see cref="T:C1.C1Schedule.BaseObject"/> derived objects to appropriate data fields. 
            </summary>
        </member>
        <member name="M:C1.C1Schedule.CategoryMappingCollection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:C1.C1Schedule.CategoryMappingCollection"/> class.
            </summary>
        </member>
        <member name="M:C1.C1Schedule.CategoryMappingCollection.ReadObject(C1.C1Schedule.Category,System.Object,System.Boolean)">
            <summary>
            Fills BaseObject object with values from specified boundObject.
            </summary>
            <param name="internalObject"></param>
            <param name="boundObject"></param>
            <param name="raiseChanged"></param>
            <returns></returns>
        </member>
        <member name="M:C1.C1Schedule.CategoryMappingCollection.WriteObject(C1.C1Schedule.Category,System.Object)">
            <summary>
            Fills boundObject with values from specified BaseObject object.
            </summary>
            <param name="internalObject">Category object.</param>
            <param name="boundObject">Object from custom data source.</param>
        </member>
        <member name="P:C1.C1Schedule.CategoryMappingCollection.TextMapping">
            <summary>
            Returns <see cref="T:C1.C1Schedule.MappingInfo"/> object for the 
            <see cref="P:C1.C1Schedule.BaseObject.Text"/> property of the object.
            If the storage object is bound to a data source via its DataSource property, 
            the properties of this object allow the <see cref="P:C1.C1Schedule.BaseObject.Text"/> 
            property of the object to be bound to the appropriate field in the data source. 
            </summary>
        </member>
        <member name="P:C1.C1Schedule.CategoryMappingCollection.CaptionMapping">
            <summary>
            Returns <see cref="T:C1.C1Schedule.MappingInfo"/> object for 
            the <see cref="P:C1.C1Schedule.BaseObject.MenuCaption"/> property of the object.
            If the storage object is bound to a data source via its DataSource property, 
            the properties of this object allow the <see cref="P:C1.C1Schedule.BaseObject.MenuCaption"/> 
            property of the object to be bound to the appropriate field in the data source. 
            </summary>
        </member>
        <member name="T:C1.C1Schedule.MappingInfo">
            <summary>
            This class provides information on the mapping of the single property 
            of the object to the appropriate data field. 
            </summary>
        </member>
        <member name="M:C1.C1Schedule.MappingInfo.#ctor(System.Type,System.String,System.Boolean,System.Object)">
            <summary>
            Use this ctor for simple properties that has the same types 
            in the internal object and in the bound object.
            </summary>
            <param name="type"></param>
            <param name="propName"></param>
            <param name="required"></param>
            <param name="defaultValue"></param>
        </member>
        <member name="M:C1.C1Schedule.MappingInfo.#ctor(System.Type,System.Type,System.String,System.Boolean,System.Object)">
            <summary>
            Use this ctor when property of bound object has to have the type other than 
            type of the internal object's property.
            </summary>
            <param name="type"></param>
            <param name="dataType"></param>
            <param name="propName"></param>
            <param name="required"></param>
            <param name="defaultValue"></param>
        </member>
        <member name="M:C1.C1Schedule.MappingInfo.GetPropertyValue(System.Object)">
            <summary>
            Returns the property of specified object.
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:C1.C1Schedule.MappingInfo.SetPropertyValue(System.Object,System.Object)">
            <summary>
            Sets property of specified object to the specified value.
            </summary>
            <param name="obj"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="P:C1.C1Schedule.MappingInfo.DataType">
            <summary>
            Gets the <see cref="T:System.Type"/> value determining the type of the data field 
            or property which can be bound to this object.
            </summary>
        </member>
        <member name="P:C1.C1Schedule.MappingInfo.MappingName">
            <summary>
            Gets or sets the <see cref="T:System.String"/> value determining the name of the data field 
            or property to be bound to the object.
            </summary>
        </member>
        <member name="P:C1.C1Schedule.MappingInfo.IsMapped">
            <summary>
            Gets the <see cref="T:System.Boolean"/> value indicating if this objects is mapped 
            to the data field or property.
            </summary>
        </member>
        <member name="P:C1.C1Schedule.MappingInfo.Required">
            <summary>
            Gets the <see cref="T:System.Boolean"/> value indicating if mapping for this property is required or optional.
            </summary>
        </member>
        <member name="P:C1.C1Schedule.MappingInfo.PropertyName">
            <summary>
            Gets the <see cref="T:System.String"/> value determining the name of the property 
            which should be mapped.
            </summary>
        </member>
        <member name="T:C1.C1Schedule.AppointmentStorage">
            <summary>
            The <see cref="T:C1.C1Schedule.AppointmentStorage"/> is the storage 
            for <see cref="T:C1.C1Schedule.Appointment"/> objects. It allows binding to the data source 
            and mapping data source fields to the appointment properties.
            </summary>
        </member>
        <member name="T:C1.C1Schedule.BaseStorage`2">
            <summary>
            The <see cref="T:C1.C1Schedule.BaseStorage`2"/> is the base generic component 
            for all storages in C1Schedule object model.
            Represents a storage of objects derived from <see cref="T:C1.C1Schedule.BasePersistableObject"/>.
            This component implements methods of operations over the collections of objects. 
            It allows the collection to be populated programmatically 
            or automatically by retrieving data from the data source which 
            is specified by the DataSource and DataMember properties. 
            It allows mapping of data source fields to the object properties.
            </summary>
            <typeparam name="T">The type of the objects which will be stored in the storage.
            It should be derived from the <see cref="T:C1.C1Schedule.BasePersistableObject"/> class
            and have the default parameter-less constructor.</typeparam>
            <typeparam name="TMappingCollection">The type of the collection which
            will be used for mapping. It should be derived from 
            the <see cref="T:C1.C1Schedule.MappingCollectionBase`1"/> class
            and have the default parameter-less constructor.</typeparam>
        </member>
        <member name="M:C1.C1Schedule.BaseStorage`2.RefreshData">
            <summary>
            Call this method each time after changing your data source 
            if it doesn't implement IBindingList interface.
            Or use BaseStorage{T, TMappingCollection}.Add 
            and BaseStorage{T, TMappingCollection}.Remove 
            instead of corresponding methods of your data source class.
            </summary>
        </member>
        <member name="M:C1.C1Schedule.BaseStorage`2.ShouldSerializeMappings">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:C1.C1Schedule.BaseStorage`2.System#IServiceProvider#GetService(System.Type)">
            <summary>
            
            </summary>
            <param name="serviceType"></param>
            <returns></returns>
        </member>
        <member name="M:C1.C1Schedule.BaseStorage`2.OnListChanged(System.ComponentModel.ListChangedEventArgs)">
            <summary>
            Translates changes in the internal list to the Objects collection.
            </summary>
            <param name="e">A System.ComponentModel.ListChangedEventArgs object that contains the event data.</param>
        </member>
        <member name="M:C1.C1Schedule.BaseStorage`2.Remove(System.Object)">
            <summary>
            Removes object from the Objects collection.
            </summary>
            <param name="value">The <see cref="T:System.Object"/> to remove.</param>
        </member>
        <member name="M:C1.C1Schedule.BaseStorage`2.OnDataSourceItemSynchronized(C1.C1Schedule.ItemSynchronizedEventArgs)">
            <summary>
            Raises the <see cref="E:C1.C1Schedule.BaseStorage`2.DataSourceItemSynchronized"/> event.
            </summary>
            <param name="e">The <see cref="T:C1.C1Schedule.ItemSynchronizedEventArgs"/> 
            that contains the event data.</param>
        </member>
        <member name="M:C1.C1Schedule.BaseStorage`2.SetCollectionItemBaseItem(C1.C1Schedule.BasePersistableObject,System.Object,C1.C1Schedule.ItemsMapTableRow)">
            <summary>
            Updates ItemsMap and BasePersistableObject.BaseSourceItemMap.
            <paramref name="mapRow"/> should be specified if it's known (for 
            performance purposes), if it's null then the one will be determined
            by <paramref name="sourceItem"/>
            </summary>
            <param name="collectionItem"></param>
            <param name="sourceItem"></param>
            <param name="mapRow"></param>
        </member>
        <member name="M:C1.C1Schedule.BaseStorage`2.IsSynchronizable(C1.C1Schedule.BasePersistableObject)">
            <summary>
            Indicates whether the specified collection item should be synchronized.
            </summary>
            <param name="collectionItem">The <see cref="T:C1.C1Schedule.BasePersistableObject"/> object.</param>
            <returns>True if item should be synchronized; false, otherwise.</returns>
        </member>
        <member name="P:C1.C1Schedule.BaseStorage`2.BoundMode">
            <summary>
            Gets a value indicating if the collection is bound to data. 
            </summary>
        </member>
        <member name="P:C1.C1Schedule.BaseStorage`2.Mappings">
            <summary>
            Gets or sets the <see cref="T:C1.C1Schedule.MappingCollectionBase`1"/> derived object 
            that allows the properties of objects maintained by the current collection 
            to be bound to the appropriate fields in the data source. 
            </summary>
        </member>
        <member name="P:C1.C1Schedule.BaseStorage`2.ScheduleStorage">
            <summary>
            Gets the reference to the owning <see cref="T:C1.C1Schedule.C1ScheduleStorage"/> component.
            </summary>
        </member>
        <member name="P:C1.C1Schedule.BaseStorage`2.System#ComponentModel#ISite#Component">
            <summary>
            
            </summary>
        </member>
        <member name="P:C1.C1Schedule.BaseStorage`2.System#ComponentModel#ISite#Container">
            <summary>
            
            </summary>
        </member>
        <member name="P:C1.C1Schedule.BaseStorage`2.System#ComponentModel#ISite#DesignMode">
            <summary>
            
            </summary>
        </member>
        <member name="P:C1.C1Schedule.BaseStorage`2.System#ComponentModel#ISite#Name">
            <summary>
            
            </summary>
        </member>
        <member name="P:C1.C1Schedule.BaseStorage`2.DataKeyNamesInternal">
            <summary>
            This property is for internal use only.
            </summary>
        </member>
        <member name="P:C1.C1Schedule.AppointmentStorage.Appointments">
            <summary>
            Gets an <see cref="T:C1.C1Schedule.AppointmentCollection"/> object that contains appointment related information. 
            </summary>
        </member>
        <member name="T:C1.C1Schedule.SynchronizationActionEnum">
            <summary>
            Describes the version of data in a data storage. 
            </summary>
        </member>
        <member name="F:C1.C1Schedule.SynchronizationActionEnum.Added">
            <summary>
            A new item.
            </summary>
        </member>
        <member name="F:C1.C1Schedule.SynchronizationActionEnum.Deleted">
            <summary>
            A deleted item.
            </summary>
        </member>
        <member name="F:C1.C1Schedule.SynchronizationActionEnum.Changed">
            <summary>
            A changed item.
            </summary>
        </member>
        <member name="T:C1.C1Schedule.ItemSynchronizedEventArgs">
            <summary>
            Provides data for the DataSourceItemSynchronized event.
            </summary>
        </member>
        <member name="M:C1.C1Schedule.ItemSynchronizedEventArgs.#ctor(C1.C1Schedule.C1BindingSource,C1.C1Schedule.BasePersistableObject,System.Object,C1.C1Schedule.SynchronizationActionEnum)">
            <summary>
            Initializes a new instance of the <see cref="T:C1.C1Schedule.ItemSynchronizedEventArgs"/> class.
            </summary>
            <param name="storage">Reference to the changed <see cref="T:C1.C1Schedule.C1BindingSource"/> object.</param>
            <param name="collectionItem">Reference to the <see cref="T:C1.C1Schedule.BasePersistableObject"/> derived object.</param>
            <param name="dataSourceItem">Reference to the corresponding item in the data source.</param>
            <param name="action">The <see cref="T:C1.C1Schedule.SynchronizationActionEnum"/> value.</param>
        </member>
        <member name="P:C1.C1Schedule.ItemSynchronizedEventArgs.Storage">
            <summary>
            Gets the reference to the changed <see cref="T:C1.C1Schedule.C1BindingSource"/> object.
            </summary>
        </member>
        <member name="P:C1.C1Schedule.ItemSynchronizedEventArgs.DataSourceItem">
            <summary>
            Gets the reference to the data source item.
            </summary>
        </member>
        <member name="P:C1.C1Schedule.ItemSynchronizedEventArgs.CollectionItem">
            <summary>
            Gets the reference to the <see cref="T:C1.C1Schedule.BasePersistableObject"/> derived object.
            </summary>
        </member>
        <member name="P:C1.C1Schedule.ItemSynchronizedEventArgs.Action">
            <summary>
            Gets the <see cref="T:C1.C1Schedule.SynchronizationActionEnum"/> value.
            </summary>
        </member>
        <member name="T:C1.C1Schedule.DataSourceItemSynchronizedEventHandler">
            <summary>
            The delegate type for the event handlers of the DataSourceItemSynchronized event. 
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:C1.C1Schedule.ItemSynchronizedEventArgs"/> 
            that contains the event data.</param>
        </member>
        <member name="T:C1.C1Schedule.C1ScheduleStorage">
            <summary>
            The <see cref="T:C1.C1Schedule.C1ScheduleStorage"/> component handles all data 
            operations for the scheduler control and contains specific data storages 
            for appointments, resources, contacts, owners, labels and statuses, 
            which are used for binding different collections to the data.
            The <see cref="T:C1.C1Schedule.C1ScheduleStorage"/> component also handles data 
            importing and exporting to other scheduling formats such as binary, iCal, and XML.
            </summary>
        </member>
        <member name="M:C1.C1Schedule.C1ScheduleStorage.Clear">
            <summary>
            Clears all unbound storages. Loads default sets if any for unbound storages. 
            </summary>
        </member>
        <member name="M:C1.C1Schedule.C1ScheduleStorage.Export(System.String,C1.C1Schedule.FileFormatEnum)">
            <summary>
            Exports the scheduler's data to a file in the specified format. 
            </summary>
            <param name="path">A <see cref="T:System.String"/> containing the full path 
            (including the file name and extension) to export the scheduler's data to. </param>
            <param name="format">The <see cref="T:C1.C1Schedule.FileFormatEnum"/> value.</param>
        </member>
        <member name="M:C1.C1Schedule.C1ScheduleStorage.Export(System.IO.Stream,C1.C1Schedule.FileFormatEnum)">
            <summary>
            Exports the scheduler's data to a stream in the specified format. 
            </summary>
            <param name="stream">A <see cref="T:System.IO.Stream"/> object which specifies 
            the stream into which the scheduler's data will be exported.</param>
            <param name="format">The <see cref="T:C1.C1Schedule.FileFormatEnum"/> value.</param>
        </member>
        <member name="M:C1.C1Schedule.C1ScheduleStorage.Export(System.String,System.Collections.Generic.IList{C1.C1Schedule.Appointment},C1.C1Schedule.FileFormatEnum)">
            <summary>
            Exports the appointments' data to a file in the specified format. 
            </summary>
            <param name="path">A <see cref="T:System.String"/> containing the full path 
            (including the file name and extension) to export. </param>
            <param name="appointments"><see cref="T:System.Collections.Generic.IList`1"/> to be exported.</param>
            <param name="format">The <see cref="T:C1.C1Schedule.FileFormatEnum"/> value.</param>
        </member>
        <member name="M:C1.C1Schedule.C1ScheduleStorage.Export(System.IO.Stream,System.Collections.Generic.IList{C1.C1Schedule.Appointment},C1.C1Schedule.FileFormatEnum)">
            <summary>
            Exports the appointments' data to a stream in the specified format. 
            </summary>
            <param name="stream">A <see cref="T:System.IO.Stream"/> object which specifies 
            the stream into which the appointments's data will be exported.</param>
            <param name="appointments"><see cref="T:System.Collections.Generic.IList`1"/> to be exported.</param>
            <param name="format">The <see cref="T:C1.C1Schedule.FileFormatEnum"/> value.</param>
        </member>
        <member name="M:C1.C1Schedule.C1ScheduleStorage.Import(System.String,C1.C1Schedule.FileFormatEnum)">
            <summary>
            Imports data into the scheduler from a file of the specified format.
            </summary>
            <param name="path">A <see cref="T:System.String"/> value containing the full path 
            (including the file name and extension) to a file which contains 
            the data to be imported into the scheduler.</param>
            <param name="format">The <see cref="T:C1.C1Schedule.FileFormatEnum"/> value.</param>
        </member>
        <member name="M:C1.C1Schedule.C1ScheduleStorage.Import(System.IO.Stream,C1.C1Schedule.FileFormatEnum)">
            <summary>
            Imports the scheduler's data from a stream whose data is in the specified format.
            </summary>
            <param name="stream">A <see cref="T:System.IO.Stream"/> object which specifies 
            the stream that contains the data to import to the scheduler. </param>
            <param name="format">The <see cref="T:C1.C1Schedule.FileFormatEnum"/> value.</param>
        </member>
        <member name="F:C1.C1Schedule.C1ScheduleStorage.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:C1.C1Schedule.C1ScheduleStorage.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:C1.C1Schedule.C1ScheduleStorage.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="E:C1.C1Schedule.C1ScheduleStorage.AppointmentsLoaded">
            <summary>
            Occurs when appointments were loaded from the file.
            </summary>
        </member>
        <member name="P:C1.C1Schedule.C1ScheduleStorage.ContactStorage">
            <summary>
            Gets the <see cref="P:C1.C1Schedule.C1ScheduleStorage.ContactStorage"/> object. 
            </summary>
        </member>
        <member name="P:C1.C1Schedule.C1ScheduleStorage.OwnerStorage">
            <summary>
            Gets the <see cref="P:C1.C1Schedule.C1ScheduleStorage.ContactStorage"/> object used to keep contacts which might be used as appointment owners. 
            </summary>
            <remarks><see cref="P:C1.C1Schedule.Appointment.Owner"/> property only accepts <see cref="T:C1.C1Schedule.Contact"/> objects which are present in this storage.</remarks>
        </member>
        <member name="P:C1.C1Schedule.C1ScheduleStorage.AppointmentStorage">
            <summary>
            Gets the <see cref="P:C1.C1Schedule.C1ScheduleStorage.AppointmentStorage"/> object. 
            </summary>
        </member>
        <member name="P:C1.C1Schedule.C1ScheduleStorage.LabelStorage">
            <summary>
            Gets the <see cref="P:C1.C1Schedule.C1ScheduleStorage.LabelStorage"/> object. 
            </summary>
        </member>
        <member name="P:C1.C1Schedule.C1ScheduleStorage.ResourceStorage">
            <summary>
            Gets the <see cref="P:C1.C1Schedule.C1ScheduleStorage.ResourceStorage"/> object. 
            </summary>
        </member>
        <member name="P:C1.C1Schedule.C1ScheduleStorage.StatusStorage">
            <summary>
            Gets the <see cref="P:C1.C1Schedule.C1ScheduleStorage.StatusStorage"/> object. 
            </summary>
        </member>
        <member name="P:C1.C1Schedule.C1ScheduleStorage.CategoryStorage">
            <summary>
            Gets the <see cref="P:C1.C1Schedule.C1ScheduleStorage.CategoryStorage"/> object. 
            </summary>
        </member>
        <member name="P:C1.C1Schedule.C1ScheduleStorage.Reminders">
            <summary>
            Gets the <see cref="T:C1.C1Schedule.ReminderCollection"/> object. 
            </summary>
        </member>
        <member name="P:C1.C1Schedule.C1ScheduleStorage.Actions">
            <summary>
            Gets the <see cref="T:C1.C1Schedule.ActionCollection"/> object. 
            </summary>
        </member>
        <member name="T:C1.C1Schedule.CategoryStorage">
            <summary>
            The <see cref="T:C1.C1Schedule.CategoryStorage"/> is the storage for <see cref="T:C1.C1Schedule.Category"/> objects.
            It allows binding to the data source and mapping data source fields 
            to the category properties.
            </summary>
        </member>
        <member name="P:C1.C1Schedule.CategoryStorage.Categories">
            <summary>
            Gets the <see cref="T:C1.C1Schedule.CategoryCollection"/> object that contains 
            category related information. 
            </summary>
        </member>
        <member name="T:C1.C1Schedule.ContactStorage">
            <summary>
            The <see cref="T:C1.C1Schedule.ContactStorage"/> is the storage for <see cref="T:C1.C1Schedule.Contact"/> objects.
            It allows binding to the data source and mapping data source fields 
            to the contact properties.
            </summary>
        </member>
        <member name="P:C1.C1Schedule.ContactStorage.Contacts">
            <summary>
            Gets the <see cref="T:C1.C1Schedule.ContactCollection"/> object that contains 
            contact related information. 
            </summary>
        </member>
        <member name="T:C1.C1Schedule.LabelStorage">
            <summary>
            The <see cref="T:C1.C1Schedule.LabelStorage"/> is the storage for <see cref="T:C1.C1Schedule.Label"/> objects.
            It allows binding to the data source and mapping data source fields 
            to the label properties.
            </summary>
        </member>
        <member name="P:C1.C1Schedule.LabelStorage.Labels">
            <summary>
            Gets the <see cref="T:C1.C1Schedule.LabelCollection"/> object 
            that contains label related information. 
            </summary>
        </member>
        <member name="T:C1.C1Schedule.ResourceStorage">
            <summary>
            The <see cref="T:C1.C1Schedule.ResourceStorage"/> is the storage for <see cref="T:C1.C1Schedule.Resource"/> objects.
            It allows binding to the data source and mapping data source fields 
            to the resource properties.
            </summary>
        </member>
        <member name="P:C1.C1Schedule.ResourceStorage.Resources">
            <summary>
            Gets the <see cref="T:C1.C1Schedule.ResourceCollection"/> object 
            that contains resource related information. 
            </summary>
        </member>
        <member name="T:C1.C1Schedule.StatusStorage">
            <summary>
            The <see cref="T:C1.C1Schedule.StatusStorage"/> is the storage for <see cref="T:C1.C1Schedule.Status"/> objects.
            It allows binding to the data source and mapping data sources fields 
            to the status properties.
            </summary>
        </member>
        <member name="P:C1.C1Schedule.StatusStorage.Statuses">
            <summary>
            Gets the <see cref="T:C1.C1Schedule.StatusCollection"/> object 
            that contains status related information. 
            </summary>
        </member>
        <member name="T:C1.C1Schedule.SourceToCollectionItemsMap">
            <summary>
            Represents a mapping between data source and collection items and holds a cache
            of source items in order as they are represented in a source list. The latter
            necessary to get an instance of a deleted item.
            </summary>
        </member>
        <member name="F:C1.C1Schedule.SourceToCollectionItemsMap._mapTable">
            key - source item, value - SourceCollectionItemPair, 
            item[int].SourceItem - the same as source.item[int]
        </member>
        <member name="M:C1.C1Schedule.SourceToCollectionItemsMap.SetSourceItems(System.Collections.IList)">
            <summary>
            Initialize a source items cache.
            </summary>
            <param name="sourceList"></param>
        </member>
        <member name="M:C1.C1Schedule.SourceToCollectionItemsMap.UpdateByListChange(System.ComponentModel.ListChangedEventArgs,System.Collections.IList,System.Boolean@)">
            <summary>
            Updates the source items cache based on the specified list change action in
            the specified source list.
            Returns a map row affected by this change.
            </summary>
            <param name="e"></param>
            <param name="sourceList"></param>
            <param name="duplicateAdd"></param>
            <returns></returns>
        </member>
        <member name="M:C1.C1Schedule.SourceToCollectionItemsMap.IsValidIndex(System.Int32)">
            <summary>
            Indicates whether the specified index is valid.
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="P:C1.C1Schedule.SyncBatchInfo.ResetState">
            <summary>
            Finished means not Reset state.
            </summary>
        </member>
        <member name="T:C1.C1Schedule.BinaryExchanger">
            <summary>
            
            </summary>
        </member>
        <member name="T:C1.C1Schedule.C1ScheduleExchanger">
            <summary>
            The base class for all importers/exporters in C1Schedule
            </summary>
        </member>
        <member name="M:C1.C1Schedule.C1ScheduleExchanger.Export(System.String)">
            <summary>
            Exports the scheduler's data to a file. 
            </summary>
            <param name="path">A <see cref="T:System.String"/> containing the full path 
            (including the file name and extension) to export the scheduler's data to. </param>
        </member>
        <member name="M:C1.C1Schedule.C1ScheduleExchanger.Export(System.IO.Stream)">
            <summary>
            Exports the scheduler's data to a stream. 
            </summary>
            <param name="stream">A <see cref="T:System.IO.Stream"/> object which specifies 
            the stream into which the scheduler's data will be exported.</param>
        </member>
        <member name="M:C1.C1Schedule.C1ScheduleExchanger.Export(System.String,System.Collections.Generic.IList{C1.C1Schedule.Appointment})">
            <summary>
            Exports the appointments's data to a file. 
            </summary>
            <param name="path">A <see cref="T:System.String"/> containing the full path 
            (including the file name and extension) to export. </param>
            <param name="appointments">A <see cref="T:System.Collections.Generic.IList`1"/> object.</param>
        </member>
        <member name="M:C1.C1Schedule.C1ScheduleExchanger.Export(System.IO.Stream,System.Collections.Generic.IList{C1.C1Schedule.Appointment})">
            <summary>
            Exports the appointments's data to a stream. 
            </summary>
            <param name="stream">A <see cref="T:System.IO.Stream"/> object which specifies 
            the stream into which the appointments's data will be exported.</param>
            <param name="appointments">A <see cref="T:System.Collections.Generic.IList`1"/> object.</param>
        </member>
        <member name="M:C1.C1Schedule.C1ScheduleExchanger.Import(System.String)">
            <summary>
            Imports data into the scheduler from a file.
            </summary>
            <param name="path">A <see cref="T:System.String"/> value containing the full path 
            (including the file name and extension) to a file which contains 
            the data to be imported into the scheduler.</param>
        </member>
        <member name="M:C1.C1Schedule.C1ScheduleExchanger.Import(System.IO.Stream)">
            <summary>
            Imports the scheduler's data from a stream.
            </summary>
            <param name="stream">A <see cref="T:System.IO.Stream"/> object which specifies 
            the stream that contains the data to import to the scheduler. </param>
        </member>
        <member name="M:C1.C1Schedule.BinaryExchanger.ExportInternal(System.IO.Stream)">
            <summary>
            Exports the appointments's data to a stream in the XML format. 
            </summary>
            <param name="stream">A <see cref="T:System.IO.Stream"/> object which specifies 
            the stream into which the appointments's data will be exported.</param>
        </member>
        <member name="M:C1.C1Schedule.BinaryExchanger.ImportInternal(System.IO.Stream)">
            <summary>
            Imports the scheduler's data from a stream whose data is in the XML format.
            </summary>
            <param name="stream">A <see cref="T:System.IO.Stream"/> object which specifies 
            the stream that contains the data to import to the scheduler. </param>
        </member>
        <member name="T:C1.C1Schedule.FileFormatEnum">
            <summary>
            Specifies the format of the exported or imported file.
            </summary>
        </member>
        <member name="F:C1.C1Schedule.FileFormatEnum.XML">
            <summary>
            XML format (ComponentOne's own format).
            </summary>
        </member>
        <member name="F:C1.C1Schedule.FileFormatEnum.iCal">
            <summary>
            iCal format according to RFC 2445.
            Format specification could be found here:
            http://tools.ietf.org/rfc/rfc2445.txt
            </summary>
        </member>
        <member name="F:C1.C1Schedule.FileFormatEnum.Binary">
            <summary>
            Binary format.
            </summary>
        </member>
        <member name="T:C1.C1Schedule.ICalExchanger">
            <summary>
            
            </summary>
        </member>
        <member name="M:C1.C1Schedule.ICalExchanger.ExportInternal(System.IO.Stream)">
            <summary>
            Exports the appointments's data to a stream in the iCal format. 
            </summary>
            <param name="stream">A <see cref="T:System.IO.Stream"/> object which specifies 
            the stream into which the appointments's data will be exported.</param>
        </member>
        <member name="M:C1.C1Schedule.ICalExchanger.ImportInternal(System.IO.Stream)">
            <summary>
            Imports the scheduler's data from a stream whose data is in the ICal format.
            </summary>
            <param name="stream">A <see cref="T:System.IO.Stream"/> object which specifies 
            the stream that contains the data to import to the scheduler. </param>
        </member>
        <member name="T:C1.C1Schedule.ICalPattern">
            <summary>
            
            </summary>
        </member>
        <member name="T:C1.C1Schedule.ICalTimeZoneInfo">
            <summary>
            The <see cref="T:C1.C1Schedule.ICalTimeZoneInfo"/> class determines time zone properties.
            </summary>
        </member>
        <member name="T:C1.C1Schedule.TimeZoneInfo">
            <summary>
            The <see cref="T:C1.C1Schedule.TimeZoneInfo"/> class determines time zone properties.
            It can be used for conversion to/from utc times and local times and respect DST.
            </summary>
        </member>
        <member name="M:C1.C1Schedule.TimeZoneInfo.ToString">
            <summary>
            Gets display name of this time zone instance.
            </summary>
            <returns>Time zone standard name.</returns>
        </member>
        <member name="M:C1.C1Schedule.TimeZoneInfo.GetTimeZone(System.String)">
            <summary>
            Returns a TimeZoneInfo instance for the time zone with supplied name.
            </summary>
            <remarks>This method searches by standard, daylight and display names.</remarks>
            <param name="name">A name of the time zone to search for.</param>
            <returns>TimeZoneInfo instance if any; null otherwise.</returns>
        </member>
        <member name="M:C1.C1Schedule.TimeZoneInfo.ToLocalTime(System.DateTime)">
            <summary>
            Converts the value of the utc time to a local time in this time zone.
            </summary>
            <param name="utc">The UTC time to convert.</param>
            <returns>The local time.</returns>
        </member>
        <member name="M:C1.C1Schedule.TimeZoneInfo.ToUniversalTime(System.DateTime)">
            <summary>
            Converts the value of the local time to UTC time.
            Note that there may be different possible interpretations at the daylight time boundaries.
            </summary>
            <param name="local">The local time to convert.</param>
            <returns>The UTC DateTime.</returns>
            <exception cref="T:System.NotSupportedException">Thrown if the method failed due to missing platform support.</exception>
        </member>
        <member name="M:C1.C1Schedule.TimeZoneInfo.CopyFrom(C1.C1Schedule.TimeZoneInfo)">
            <summary>
            Copies a time zone info form the specified <see cref="T:C1.C1Schedule.TimeZoneInfo"/> object into the current instance.
            </summary>
            <param name="info"></param>
        </member>
        <member name="M:C1.C1Schedule.TimeZoneInfo.InitTzi(System.Byte[])">
            <summary>
            Initialize the _tzi member.
            </summary>
            <param name="info">The Tzi data from the registry.</param>
        </member>
        <member name="P:C1.C1Schedule.TimeZoneInfo.TimeZones">
            <summary>
            Gets a list of all time zones defined in the local system.
            </summary>
        </member>
        <member name="P:C1.C1Schedule.TimeZoneInfo.TimeZoneNames">
            <summary>
            Gets a string array of display time zone names supported in the local system.
            </summary>
        </member>
        <member name="P:C1.C1Schedule.TimeZoneInfo.CurrentTimeZone">
            <summary>
            Gets the current time zone information.
            </summary>
        </member>
        <member name="P:C1.C1Schedule.TimeZoneInfo.StandardName">
            <summary>
            The time zone's name during 'standard' time (i.e. not daylight savings).
            </summary>
        </member>
        <member name="P:C1.C1Schedule.TimeZoneInfo.DaylightName">
            <summary>
            The time zone's name during daylight savings time (DST).
            </summary>
        </member>
        <member name="P:C1.C1Schedule.TimeZoneInfo.DisplayName">
            <summary>
            The time zone's display name (e.g. '(GMT-05:00) Eastern Time (US and Canada)').
            </summary>
        </member>
        <member name="P:C1.C1Schedule.TimeZoneInfo.StandardOffset">
            <summary>
            Gets the standard offset from UTC as a TimeSpan.
            </summary>
        </member>
        <member name="P:C1.C1Schedule.TimeZoneInfo.DaylightOffset">
            <summary>
            Gets the daylight offset from UTC as a TimeSpan.
            </summary>
        </member>
        <member name="P:C1.C1Schedule.TimeZoneInfo.StandardBias">
            <summary>
            Gets the difference, in minutes, between UTC and local time.
            UTC = local time + bias.
            </summary>
        </member>
        <member name="P:C1.C1Schedule.TimeZoneInfo.DaylightBias">
            <summary>
            Gets the difference, in minutes, between UTC and local time (in daylight savings time).
            UTC = local time + bias.
            </summary>
        </member>
        <member name="T:C1.C1Schedule.TimeZoneInfo.SYSTEMTIME">
            <summary>
            The standard Windows SYSTEMTIME structure.
            </summary>
        </member>
        <member name="T:C1.C1Schedule.TimeZoneInfo.TZI">
            <summary>
            The layout of the Tzi value in the registry.
            </summary>
        </member>
        <member name="T:C1.C1Schedule.TimeZoneInfo.TIME_ZONE_INFORMATION">
            <summary>
            The standard Win32 TIME_ZONE_INFORMATION structure.
            Thanks to www.pinvoke.net.
            </summary>
        </member>
        <member name="T:C1.C1Schedule.TimeZoneInfo.NativeMethods">
            <summary>
            A container for P/Invoke declarations.
            </summary>
        </member>
        <member name="M:C1.C1Schedule.TimeZoneInfo.NativeMethods.TzSpecificLocalTimeToSystemTime(C1.C1Schedule.TimeZoneInfo.TIME_ZONE_INFORMATION@,C1.C1Schedule.TimeZoneInfo.SYSTEMTIME@,C1.C1Schedule.TimeZoneInfo.SYSTEMTIME@)">
            <summary>
            Convert a local time to UTC, using the supplied time zone information.
            Windows XP and Server 2003 and later only.
            </summary>
            <param name="lpTimeZone">The time zone to use.</param>
            <param name="lpLocalTime">The local time to convert.</param>
            <param name="lpUniversalTime">The resultant time in UTC.</param>
            <returns>true if successful, false otherwise.</returns>
        </member>
        <member name="P:C1.C1Schedule.ICalTimeZoneInfo.LastModified">
            <summary>
            A UTC value that specifies the date and time that this 
            time zone definition was last updated.
            It's unknown (has value DateTime.MinValue) for time zones,
            registered in the local system.
            But it makes sense for time zones, imported from iCal format.
            </summary>
        </member>
        <member name="T:C1.C1Schedule.ICalUtils">
            <summary>
            
            </summary>
        </member>
        <member name="T:C1.C1Schedule.XmlExchanger">
            <summary>
            
            </summary>
        </member>
        <member name="M:C1.C1Schedule.XmlExchanger.ExportInternal(System.IO.Stream)">
            <summary>
            Exports the appointments's data to a stream in the XML format. 
            </summary>
            <param name="stream">A <see cref="T:System.IO.Stream"/> object which specifies 
            the stream into which the appointments's data will be exported.</param>
        </member>
        <member name="M:C1.C1Schedule.XmlExchanger.ImportInternal(System.IO.Stream)">
            <summary>
            Imports the scheduler's data from a stream whose data is in the XML format.
            </summary>
            <param name="stream">A <see cref="T:System.IO.Stream"/> object which specifies 
            the stream that contains the data to import to the scheduler. </param>
        </member>
        <member name="T:C1.C1Schedule.ActionTypeEnum">
            <summary>
            <see cref="T:C1.C1Schedule.ActionTypeEnum"/> determines the type of action. 
            </summary>
        </member>
        <member name="F:C1.C1Schedule.ActionTypeEnum.ExecuteApplication">
            <summary>
            Execute local application with specified parameters.
            </summary>
        </member>
        <member name="F:C1.C1Schedule.ActionTypeEnum.NavigateToUrl">
            <summary>
            Open specified target in default browser.
            </summary>
        </member>
        <member name="T:C1.C1Schedule.Action">
            <summary>
            Represents an action to take when the current system time reaches 
            the start of the associated <see cref="T:C1.C1Schedule.Appointment"/> object.
            </summary>
        </member>
        <member name="M:C1.C1Schedule.Action.#ctor(C1.C1Schedule.Appointment)">
            <summary>
            Initializes a new instance of the <see cref="T:C1.C1Schedule.Action"/> class.
            </summary>
            <param name="owner">The <see cref="T:C1.C1Schedule.Appointment"/> object.</param>
        </member>
        <member name="M:C1.C1Schedule.Action.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:C1.C1Schedule.Action"/> class.
            </summary>
        </member>
        <member name="M:C1.C1Schedule.Action.FromXml(System.Xml.XmlNode)">
            <summary>
            Reconstructs action properties from an <see cref="T:System.Xml.XmlNode"/>. 
            </summary>
            <param name="node"></param>
            <returns>True if an action has been changed.</returns>
        </member>
        <member name="M:C1.C1Schedule.Action.FromXml(System.Xml.XmlReader)">
            <summary>
            Reconstructs action properties from an <see cref="T:System.Xml.XmlReader"/>. 
            </summary>
            <param name="reader"></param>
            <returns>True if an action has been changed.</returns>
        </member>
        <member name="M:C1.C1Schedule.Action.ToXml(System.Xml.XmlWriter)">
            <summary>
            Creates an XML encoding of the action properties. 
            </summary>
            <param name="writer"></param>
        </member>
        <member name="M:C1.C1Schedule.Action.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Special constructor for deserialization.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/>.</param>
            <param name="context">The context information.</param>
        </member>
        <member name="P:C1.C1Schedule.Action.ParentAppointment">
            <summary>
            Gets or sets the owning <see cref="T:C1.C1Schedule.Appointment"/> object. 
            </summary>
        </member>
        <member name="P:C1.C1Schedule.Action.Command">
            <summary>
            Gets or sets the command string for the action.
            </summary>
        </member>
        <member name="P:C1.C1Schedule.Action.Parameters">
            <summary>
            Gets or sets parameters used when the action is invoked.
            </summary>
        </member>
        <member name="P:C1.C1Schedule.Action.Enabled">
            <summary>
            Gets or sets the <see cref="T:System.Boolean"/> value indicating 
            whether the action is enabled. Default value is True.
            </summary>
        </member>
        <member name="P:C1.C1Schedule.Action.Type">
            <summary>
            Gets or sets the <see cref="T:C1.C1Schedule.ActionTypeEnum"/> value determining 
            the type of action that will occur. Default value is ActionTypeEnum.ExecuteApplication.
            </summary>
        </member>
        <member name="T:C1.C1Schedule.ActionCollection">
            <summary>
            The <see cref="T:C1.C1Schedule.ActionCollection"/> is a collection of all <see cref="T:C1.C1Schedule.Action"/> objects 
            that represents the reminders for all pending items.
            </summary>
        </member>
        <member name="M:C1.C1Schedule.ActionCollection.#ctor">
            <summary>
            Initialize new <see cref="T:C1.C1Schedule.ReminderCollection"/> object.
            </summary>
        </member>
        <member name="M:C1.C1Schedule.ActionCollection.InsertItem(System.Int32,C1.C1Schedule.Action)">
            <summary>
            Overrides default behavior.
            </summary>
            <param name="index">The zero-based index of the item.</param>
            <param name="item">The <see cref="T:C1.C1Schedule.Action"/> object to insert.</param>
        </member>
        <member name="M:C1.C1Schedule.ActionCollection.RemoveItem(System.Int32)">
            <summary>
            Overrides default behavior.
            </summary>
            <param name="index">The zero-based index of the item to remove.</param>
        </member>
        <member name="M:C1.C1Schedule.ActionCollection.ClearItems">
            <summary>
            Overrides default behavior.
            </summary>
        </member>
        <member name="M:C1.C1Schedule.ActionCollection.WaitProc(System.Object,System.Boolean)">
            <summary>
            Method to be called when it is time to execute action.
            </summary>
            <param name="state"></param>
            <param name="timedOut"></param>
        </member>
        <member name="M:C1.C1Schedule.ActionCollection.Dispose">
            <summary>
            Releases all unmanaged resources.
            </summary>
        </member>
        <member name="T:C1.C1Schedule.RecurrenceStateEnum">
            <summary>
            Determines the type of the <see cref="T:C1.C1Schedule.Appointment"/> object.
            </summary>
        </member>
        <member name="F:C1.C1Schedule.RecurrenceStateEnum.NotRecurring">
            <summary>
            Represents a standard (non-recurring) appointment. 
            </summary>
        </member>
        <member name="F:C1.C1Schedule.RecurrenceStateEnum.Master">
            <summary>
            Represents the appointment which serves as the pattern 
            for the other recurring appointments. 
            The pattern for recurring appointments is specified via 
            the Appointment.Recurrence property.
            </summary>
        </member>
        <member name="F:C1.C1Schedule.RecurrenceStateEnum.Occurrence">
            <summary>
            Represents one of recurring appointments whose pattern appointment 
            is specified via the Appointment.Recurrence property.
            </summary>
        </member>
        <member name="F:C1.C1Schedule.RecurrenceStateEnum.Exception">
            <summary>
            Represents a recurring appointment, which was changed 
            and now doesn't satisfy the pattern of the recurring series.  
            </summary>
        </member>
        <member name="F:C1.C1Schedule.RecurrenceStateEnum.Removed">
            <summary>
            Represents a recurring appointment, which was deleted
            and now doesn't satisfy the pattern of the recurring series.  
            </summary>
        </member>
        <member name="T:C1.C1Schedule.ImportanceEnum">
            <summary>
            Determines the importance of the <see cref="T:C1.C1Schedule.Appointment"/> object.
            </summary>
        </member>
        <member name="F:C1.C1Schedule.ImportanceEnum.Low">
            <summary>
            Low
            </summary>
        </member>
        <member name="F:C1.C1Schedule.ImportanceEnum.Normal">
            <summary>
            Normal
            </summary>
        </member>
        <member name="F:C1.C1Schedule.ImportanceEnum.High">
            <summary>
            High
            </summary>
        </member>
        <member name="T:C1.C1Schedule.SensitivityEnum">
            <summary>
            Determines the sensitivity of the <see cref="T:C1.C1Schedule.Appointment"/> object.
            </summary>
        </member>
        <member name="F:C1.C1Schedule.SensitivityEnum.Confidential">
            <summary>
            Confidential
            </summary>
        </member>
        <member name="F:C1.C1Schedule.SensitivityEnum.Normal">
            <summary>
            Normal
            </summary>
        </member>
        <member name="F:C1.C1Schedule.SensitivityEnum.Personal">
            <summary>
            Personal
            </summary>
        </member>
        <member name="F:C1.C1Schedule.SensitivityEnum.Private">
            <summary>
            Private
            </summary>
        </member>
        <member name="T:C1.C1Schedule.Appointment">
            <summary>
            The <see cref="T:C1.C1Schedule.Appointment"/> object is a meeting, a one-time appointment, 
            or a recurring appointment or meeting in the C1Schedule. 
            The <see cref="T:C1.C1Schedule.Appointment"/> class includes properties 
            that specify meeting details such as the location and time.
            </summary>
        </member>
        <member name="T:C1.C1Schedule.BasePersistableObject">
            <summary>
            The <see cref="T:C1.C1Schedule.BasePersistableObject"/> is a base class for persistable objects.
            </summary>
        </member>
        <member name="M:C1.C1Schedule.BasePersistableObject.OnPropertyChanged(System.String)">
            <summary>
            Overrides the default behavior.
            </summary>
            <param name="propertyName">The property name.</param>
        </member>
        <member name="M:C1.C1Schedule.BasePersistableObject.#ctor">
            <summary>
            Creates new BasePersistableObject object.
            </summary>
        </member>
        <member name="M:C1.C1Schedule.BasePersistableObject.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Special constructor for deserialization.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/>.</param>
            <param name="context">The context information.</param>
        </member>
        <member name="M:C1.C1Schedule.BasePersistableObject.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            A method called when serializing.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> 
            to populate with data.</param>
            <param name="context">The context information about the source or destination 
            of the serialization.</param>
        </member>
        <member name="M:C1.C1Schedule.BasePersistableObject.BeginEdit">
            <summary>
            Brings the object in edit mode.
            </summary>
            <remarks>
            A corresponding item from a data source will not be updated on this object's
            property changes while the object is in edit mode. Data synchronization will
            be performed when the <see cref="M:C1.C1Schedule.BasePersistableObject.EndEdit"/> method will be called.
            </remarks>
        </member>
        <member name="M:C1.C1Schedule.BasePersistableObject.EndEdit">
            <summary>
            Finishes edit mode started by the <see cref="M:C1.C1Schedule.BasePersistableObject.BeginEdit"/> method and
            updates a corresponding data source item.
            </summary>
        </member>
        <member name="M:C1.C1Schedule.BasePersistableObject.EndEdit(System.Boolean)">
            <summary>
            
            </summary>
            <param name="canRaiseChangeNotification"></param>
        </member>
        <member name="M:C1.C1Schedule.BasePersistableObject.CancelEdit">
            <summary>
            Discards changes since the last <see cref="M:C1.C1Schedule.BasePersistableObject.BeginEdit"/> call.
            </summary>
        </member>
        <member name="M:C1.C1Schedule.BasePersistableObject.SetBaseSourceItemMap(C1.C1Schedule.ItemsMapTableRow)">
            <summary>
            WARNING: don't call this method! This a special method that must be called
            from the BaseStorage.SetCollectionItemBaseItem method only!
            </summary>
            <param name="sourceItemMap"></param>
        </member>
        <member name="M:C1.C1Schedule.BasePersistableObject.FromXml(System.Xml.XmlNode)">
            <summary>
            Loads an object from the specified <see cref="T:System.Xml.XmlNode"/>.
            </summary>
            <param name="node">An <see cref="T:System.Xml.XmlNode"/> which contains the object data.</param>
            <returns>Returns true if object has been changed.</returns>
        </member>
        <member name="M:C1.C1Schedule.BasePersistableObject.FromXml(System.Xml.XmlReader)">
            <summary>
            Loads an object from the specified <see cref="T:System.Xml.XmlReader"/>.
            </summary>
            <param name="reader">An <see cref="T:System.Xml.XmlReader"/> which contains the object data.</param>
            <returns>Returns true if object has been changed.</returns>
        </member>
        <member name="M:C1.C1Schedule.BasePersistableObject.ToXml(System.Xml.XmlWriter)">
            <summary>
            Saves an object to the specified <see cref="T:System.Xml.XmlWriter"/>.
            </summary>
            <param name="writer">The <see cref="T:System.Xml.XmlWriter"/> that will receive 
            the object data.</param>
        </member>
        <member name="M:C1.C1Schedule.BasePersistableObject.FromXml(System.IO.Stream)">
            <summary>
            Loads an object from the specified <see cref="T:System.IO.Stream"/>.
            </summary>
            <param name="stream">The <see cref="T:System.IO.Stream"/> that contains the object data.</param>
            <returns>Returns true if object has been changed.</returns>
        </member>
        <member name="M:C1.C1Schedule.BasePersistableObject.ToXml(System.IO.Stream)">
            <summary>
            Saves an object to the specified <see cref="T:System.IO.Stream"/>.
            </summary>
            <param name="stream">The <see cref="T:System.IO.Stream"/> that contains the object data.</param>
        </member>
        <member name="P:C1.C1Schedule.BasePersistableObject.Key">
            <summary>
            Gets an array of objects representing the key of the <see cref="T:C1.C1Schedule.BasePersistableObject"/>.
            </summary>
            <remarks><para>In the current version, the array always contains a single object.
            It can be either an <see cref="T:System.Int32"/> or <see cref="T:System.Guid"/> value depending on
            which one is actually used for binding this data.
            For example, if you bind AppointmentStorage to the database and set
            IndexMapping, this property will return an <see cref="T:System.Int32"/> value.
            If you set IdMapping, this property will return a <see cref="T:System.Guid"/> value.</para>
            <para>In future versions working with compound keys might be implemented.
            In such case this property will return array of objects composing the key.</para></remarks>
        </member>
        <member name="P:C1.C1Schedule.BasePersistableObject.Id">
            <summary>
            Unique value for serialization purposes.
            </summary>
        </member>
        <member name="P:C1.C1Schedule.BasePersistableObject.Index">
            <summary>
            User can specify mapping either for Id property or for Index property
            (depending on his database structure or object model).
            In unbound mode or if user doesn't specify mapping for any of these properties,
            Index will contain index of the object in containing collection.
            </summary>
        </member>
        <member name="P:C1.C1Schedule.BasePersistableObject.IsEdit">
            <summary>
            Indicates whether the object is in edit mode, 
            which is started using the <see cref="M:C1.C1Schedule.BasePersistableObject.BeginEdit"/> method.
            </summary>
        </member>
        <member name="P:C1.C1Schedule.BasePersistableObject.BaseSourceItemMap">
            <summary>
            Keeps a reference to a data source item that this object is based on.
            A null value means that there is no base source item.
            </summary>
        </member>
        <member name="M:C1.C1Schedule.Appointment.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:C1.C1Schedule.Appointment"/> class with the specified key.
            </summary>
            <param name="key">The <see cref="T:System.Int32"/> value which should be used as appointment key.</param>
            <remarks>Use this constructor if your business logic requires setting custom key value.
            Make sure that you use the correct constructor overload (with integer or Guid key value) and that key value is unique.</remarks>
        </member>
        <member name="M:C1.C1Schedule.Appointment.#ctor(System.Guid)">
            <summary>
            Initializes a new instance of the <see cref="T:C1.C1Schedule.Appointment"/> class with the specified key.
            </summary>
            <param name="key">The <see cref="T:System.Guid"/> value which should be used as appointment key.</param>
            <remarks>Use this constructor if your business logic requires setting custom key value.
            Make sure that you use the correct constructor overload (with integer or Guid key value) and that key value is unique.</remarks>
        </member>
        <member name="M:C1.C1Schedule.Appointment.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:C1.C1Schedule.Appointment"/> class.
            </summary>
            <remarks>Creates an appointment with default properties.</remarks>
        </member>
        <member name="M:C1.C1Schedule.Appointment.#ctor(System.DateTime,System.DateTime)">
            <summary>
            Initializes a new instance of the <see cref="T:C1.C1Schedule.Appointment"/> 
            class with the specified parameters.
            </summary>
            <param name="start">The <see cref="T:System.DateTime"/> value which specifies 
            the start date and time of the appointment.</param>
            <param name="end">The <see cref="T:System.DateTime"/> value which specifies 
            the end date and time of the appointment.</param>
        </member>
        <member name="M:C1.C1Schedule.Appointment.#ctor(System.DateTime,System.TimeSpan)">
            <summary>
            Initializes a new instance of the <see cref="T:C1.C1Schedule.Appointment"/> 
            class with the specified parameters.
            </summary>
            <param name="start">The <see cref="T:System.DateTime"/> value which specifies 
            the start date and time of the appointment.</param>
            <param name="duration">The <see cref="T:System.TimeSpan"/> value which specifies 
            the duration of the appointment.</param>
        </member>
        <member name="M:C1.C1Schedule.Appointment.#ctor(System.DateTime,System.DateTime,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:C1.C1Schedule.Appointment"/> 
            class with the specified parameters.
            </summary>
            <param name="start">The <see cref="T:System.DateTime"/> value which specifies 
            the start date and time of the appointment.</param>
            <param name="end">The <see cref="T:System.DateTime"/> value which specifies 
            the end date and time of the appointment.</param>
            <param name="subject">The <see cref="T:System.String"/> value which contains 
            the subject of the appointment.</param>
        </member>
        <member name="M:C1.C1Schedule.Appointment.#ctor(System.DateTime,System.TimeSpan,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:C1.C1Schedule.Appointment"/> 
            class with the specified parameters.
            </summary>
            <param name="start">The <see cref="T:System.DateTime"/> value which specifies 
            the start date and time of the appointment.</param>
            <param name="duration">The <see cref="T:System.TimeSpan"/> value which specifies 
            the duration of the appointment.</param>
            <param name="subject">The <see cref="T:System.String"/> value which contains 
            the subject of the appointment.</param>
        </member>
        <member name="M:C1.C1Schedule.Appointment.BeginEdit">
            <summary>
            Prevents the <see cref="T:C1.C1Schedule.Appointment"/> object from being updated until 
            the <see cref="M:C1.C1Schedule.Appointment.EndEdit(System.Boolean)"/> method is called.
            </summary>
            <remarks>The <see cref="M:C1.C1Schedule.Appointment.BeginEdit"/> and <see cref="M:C1.C1Schedule.Appointment.EndEdit(System.Boolean)"/> methods 
            are designed to implement batch modifications. 
            This allows you to prevent generation of change notifications
            when changing multiple settings at the same time. 
            To do this enclose the code that changes the properties in calls to these methods.
            Each call to <see cref="M:C1.C1Schedule.Appointment.BeginEdit"/> must be paired with a call to <see cref="M:C1.C1Schedule.Appointment.EndEdit(System.Boolean)"/>. 
            To ensure that <see cref="M:C1.C1Schedule.Appointment.EndEdit(System.Boolean)"/> is always called even if an exception occurs, 
            wrap any calls to these methods in a try...finally statement.</remarks>
        </member>
        <member name="M:C1.C1Schedule.Appointment.EndEdit(System.Boolean)">
            <summary>
            Unlocks the <see cref="T:C1.C1Schedule.Appointment"/> object after a call 
            to the <see cref="M:C1.C1Schedule.Appointment.BeginEdit"/> method and causes an immediate update. 
            </summary>
            <param name="canRaiseChangeNotification">The <see cref="T:System.Boolean"/> value determining
            if change notifications can be generated when applying changes.</param>
        </member>
        <member name="M:C1.C1Schedule.Appointment.IsGroupMember(C1.C1Schedule.BaseObject,System.String)">
            <summary>
            Returns True if the current <see cref="T:C1.C1Schedule.Appointment"/> object is a member of a group which is specified by the
            groupOwner and groupBy parameters; False otherwise. 
            </summary>
            <param name="groupOwner">The <see cref="T:C1.C1Schedule.BaseObject"/> object determining the appointment group.</param>
            <param name="groupBy">The <see cref="T:System.String"/> value determining the type of grouping.</param>
            <returns></returns>
        </member>
        <member name="M:C1.C1Schedule.Appointment.ClearRecurrencePattern">
            <summary>
            Removes the recurrence settings and restores 
            the <see cref="F:C1.C1Schedule.RecurrenceStateEnum.NotRecurring"/> state for an appointment.
            </summary>
        </member>
        <member name="M:C1.C1Schedule.Appointment.GetRecurrencePattern">
            <summary>
            Returns the <see cref="T:C1.C1Schedule.RecurrencePattern"/> object that represents 
            the recurrence attributes of an appointment. 
            If there is no existing recurrence pattern, a new 
            empty <see cref="T:C1.C1Schedule.RecurrencePattern"/> object is returned.
            </summary>
            <returns>The <see cref="T:C1.C1Schedule.RecurrencePattern"/> object.</returns>
        </member>
        <member name="M:C1.C1Schedule.Appointment.Copy">
            <summary>
            Creates the copy of the <see cref="T:C1.C1Schedule.Appointment"/> object.
            </summary>
            <returns>The new <see cref="T:C1.C1Schedule.Appointment"/> instance.</returns>
        </member>
        <member name="M:C1.C1Schedule.Appointment.CopyForPattern">
            <summary>
            Creates the copy of the <see cref="T:C1.C1Schedule.Appointment"/> object. Doesn't copy recurrence pattern.
            </summary>
            <returns>The new <see cref="T:C1.C1Schedule.Appointment"/> instance.</returns>
        </member>
        <member name="M:C1.C1Schedule.Appointment.CopyFrom(C1.C1Schedule.Appointment,System.Boolean)">
             <summary>
             Copies properties from the specified <see cref="T:C1.C1Schedule.Appointment"/> object to this one. 
             </summary>
             <param name="app">The <see cref="T:C1.C1Schedule.Appointment"/> instance to copy.</param>
             <param name="includeKeys">Specifies whether to copy internal keys.</param>
            <remarks><para>Set includeKeys to true if you want to receive exact copy 
            of the specified <see cref="T:C1.C1Schedule.Appointment"/> object.</para>
            <para>Set includeKeys to false in order to copy only descriptive <see cref="T:C1.C1Schedule.Appointment"/> 
            properties to other <see cref="T:C1.C1Schedule.Appointment"/> object (for example, 
            if you want to duplicate appointment from one day to another).</para></remarks>
        </member>
        <member name="M:C1.C1Schedule.Appointment.Delete">
            <summary>
            Deletes an appointment and removes it from 
            the owning <see cref="T:C1.C1Schedule.AppointmentCollection"/> collection.
            </summary>
        </member>
        <member name="M:C1.C1Schedule.Appointment.GetTimeTillEvent">
            <summary>
            Returns a time term before the appointment start; a negative value means that 
            appointment is expired.
            </summary>
            <returns>A time term before the appointment starts; a negative value means 
            that the appointment has expired.</returns>
        </member>
        <member name="M:C1.C1Schedule.Appointment.SaveAs(System.String,C1.C1Schedule.FileFormatEnum)">
            <summary>
            Saves the appointment to the specified path in the format 
            of the specified file format. 
            </summary>
            <param name="path">Required string. The path in which to save the item.</param>
            <param name="fileFormat">The <see cref="T:C1.C1Schedule.FileFormatEnum"/> value indicating 
            the file format to save.</param>
        </member>
        <member name="M:C1.C1Schedule.Appointment.FromXml(System.Xml.XmlNode)">
            <summary>
            Reconstructs appointment from an <see cref="T:System.Xml.XmlNode"/>. 
            </summary>
            <param name="node">An <see cref="T:System.Xml.XmlNode"/> 
            which contains the <see cref="T:C1.C1Schedule.Appointment"/> data.</param>
            <returns>True if appointment has been changed.</returns>
        </member>
        <member name="M:C1.C1Schedule.Appointment.FromXml(System.Xml.XmlReader)">
            <summary>
            Reconstructs appointment from an <see cref="T:System.Xml.XmlReader"/>. 
            </summary>
            <param name="reader">An <see cref="T:System.Xml.XmlReader"/> 
            which contains the <see cref="T:C1.C1Schedule.Appointment"/> data.</param>
            <returns>True if appointment has been changed.</returns>
        </member>
        <member name="M:C1.C1Schedule.Appointment.ToXml(System.Xml.XmlWriter)">
            <summary>
            Creates an XML encoding of the appointment. 
            </summary>
            <param name="writer">The <see cref="T:System.Xml.XmlWriter"/> 
            that will receive the object data.</param>
        </member>
        <member name="M:C1.C1Schedule.Appointment.GetAppointmentProperties">
            <summary>
            Returns XML encoding of appointment properties.
            </summary>
            <remarks>Use this property to get the same string as serialized value of appointment properties, which you get
            when set mapping for AppointmentProperties.</remarks>
            <returns>The <see cref="T:System.String"/> value containing XML encoding of appointment properties.</returns>
        </member>
        <member name="M:C1.C1Schedule.Appointment.SetAppointmentProperties(System.String)">
            <summary>
            Reconstructs appointment properties from the specified string.
            </summary>
            <param name="source">The <see cref="T:System.String"/> value containing XML encoding of appointment properties.</param>
            <returns>True if appointment has been changed.</returns>
        </member>
        <member name="M:C1.C1Schedule.Appointment.PropsFromXml(System.Xml.XmlNode)">
            <summary>
            Reconstructs appointment properties from an <see cref="T:System.Xml.XmlNode"/>. 
            </summary>
            <param name="node"></param>
            <returns>True if appointment has been changed.</returns>
        </member>
        <member name="M:C1.C1Schedule.Appointment.PropsFromXml(System.Xml.XmlReader)">
            <summary>
            Reconstructs appointment properties from an <see cref="T:System.Xml.XmlReader"/>. 
            </summary>
            <param name="reader"></param>
            <returns>True if appointment has been changed.</returns>
        </member>
        <member name="M:C1.C1Schedule.Appointment.PropsToXml(System.Xml.XmlWriter)">
            <summary>
            Creates an XML encoding of the appointment properties. 
            </summary>
            <param name="writer"></param>
        </member>
        <member name="M:C1.C1Schedule.Appointment.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Special constructor for deserialization.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/>.</param>
            <param name="context">The context information.</param>
        </member>
        <member name="M:C1.C1Schedule.Appointment.CopyPatternFrom(C1.C1Schedule.Appointment)">
            <summary>
            Copies RecurrencePattern from the specified Appointment
            </summary>
            <param name="app"></param>
        </member>
        <member name="M:C1.C1Schedule.Appointment.OnPropertyChanged(System.String)">
            <summary>
            Overrides default behavior.
            </summary>
            <param name="propertyName">The property name.</param>
        </member>
        <member name="P:C1.C1Schedule.Appointment.ParentCollection">
            <summary>
            Gets the reference to the parent <see cref="T:C1.C1Schedule.AppointmentCollection"/> object.
            </summary>
        </member>
        <member name="P:C1.C1Schedule.Appointment.Action">
            <summary>
            Gets an <see cref="P:C1.C1Schedule.Appointment.Action"/> object for the <see cref="T:C1.C1Schedule.Appointment"/> object.
            Once this property is first requested, a new <see cref="P:C1.C1Schedule.Appointment.Action"/> object 
            is created and assigned to the <see cref="P:C1.C1Schedule.Appointment.Action"/> property.
            </summary>
            <remarks>The <see cref="P:C1.C1Schedule.Appointment.Action"/> object contains information regarding 
            the type of action to perform as well as the command 
            and parameters to pass to the action.
            If the action object is enabled, the action will be invoked 
            when the start date and time of the owning <see cref="T:C1.C1Schedule.Appointment"/> object has occurred.
            </remarks>
        </member>
        <member name="P:C1.C1Schedule.Appointment.Importance">
            <summary>
            Gets or sets the <see cref="T:C1.C1Schedule.ImportanceEnum"/> value indicating 
            the relative importance level for the appointment.
            Default value is <see cref="F:C1.C1Schedule.ImportanceEnum.Normal"/>.
            </summary>
        </member>
        <member name="P:C1.C1Schedule.Appointment.AllDayEvent">
            <summary>
            Gets or sets the <see cref="T:System.Boolean"/> value indicating 
            if the current appointment is an All-day appointment.
            </summary>
        </member>
        <member name="P:C1.C1Schedule.Appointment.Tag">
            <summary>
            Gets or sets custom information associated with this object.
            </summary>
            <remarks>This property is valid only for the lifetime of the object.</remarks>
        </member>
        <member name="P:C1.C1Schedule.Appointment.CustomData">
            <summary>
            Gets or sets custom text associated with this object.
            </summary>
            <remarks>This property is serialized with other appointment properties.
            It isn't used by the scheduler, use it to keep your data associated with appointment.
            This property is serialized into xml and binary formats and it is saved into underlying 
            data source if mapping for Appointment Properties is set. 
            It isn't retained at export/import to iCal format.</remarks>
        </member>
        <member name="P:C1.C1Schedule.Appointment.Saved">
            <summary>
            Gets the <see cref="T:System.Boolean"/> value indicating if the appointment 
            has not been modified since the last save.
            </summary>
        </member>
        <member name="P:C1.C1Schedule.Appointment.Sensitivity">
            <summary>
            Gets or sets the <see cref="T:C1.C1Schedule.SensitivityEnum"/> value indicating 
            the sensitivity level of the appointment. 
            </summary>
        </member>
        <member name="P:C1.C1Schedule.Appointment.Private">
            <summary>
            Gets or sets the <see cref="T:System.Boolean"/> value determining 
            whether the calendar owner intends to keep the <see cref="T:C1.C1Schedule.Appointment"/>
            object private.
            </summary>
        </member>
        <member name="P:C1.C1Schedule.Appointment.Subject">
            <summary>
            Gets or sets the <see cref="T:System.String"/> value 
            representing the subject of the <see cref="T:C1.C1Schedule.Appointment"/> object. 
            </summary>
        </member>
        <member name="P:C1.C1Schedule.Appointment.Body">
            <summary>
            Gets or sets the <see cref="T:System.String"/> value representing 
            the body of the <see cref="T:C1.C1Schedule.Appointment"/> object.
            </summary>
        </member>
        <member name="P:C1.C1Schedule.Appointment.Conflicts">
            <summary>
            Gets the <see cref="T:C1.C1Schedule.AppointmentList"/> object representing 
            the list of <see cref="T:C1.C1Schedule.Appointment"/> objects which are in conflict 
            with this particular appointment.
            </summary>
        </member>
        <member name="P:C1.C1Schedule.Appointment.AutoResolvedWinner">
            <summary>
            Gets the <see cref="T:System.Boolean"/> value determining if the item is 
            a winner of an automatic conflict resolution.
            </summary>
            <remarks>A value of false does not necessarily indicate that the item is 
            a loser of an automatic conflict resolution. 
            The item should be in conflict with another item.
            If an item has its Conflicts.Count property greater than zero 
            and if its <see cref="P:C1.C1Schedule.Appointment.AutoResolvedWinner"/> property is true, 
            it is a winner of an automatic conflict resolution. 
            On the other hand, if the item is in conflict and has its 
            <see cref="P:C1.C1Schedule.Appointment.AutoResolvedWinner"/> property as false, 
            it is a loser in an automatic conflict resolution.</remarks>
        </member>
        <member name="P:C1.C1Schedule.Appointment.Start">
            <summary>
            Gets or sets the <see cref="T:System.DateTime"/> value determining the 
            start date and time of the appointment. 
            </summary>
            <remarks>
            <para>If the <see cref="P:C1.C1Schedule.Appointment.AllDayEvent"/> property is set to true, 
            then the start date of the appointment is the <see cref="P:System.DateTime.Date"/> of 
            the <see cref="P:C1.C1Schedule.Appointment.Start"/>, and the start time of the appointment is 0:00.</para>
            <para>At setting this property, if it's time is not equal 0:00, 
            the <see cref="P:C1.C1Schedule.Appointment.AllDayEvent"/> property will be set to false.</para></remarks>
        </member>
        <member name="P:C1.C1Schedule.Appointment.End">
            <summary>
            Gets or sets the <see cref="T:System.DateTime"/> value determining 
            the end date and time of the appointment. 
            </summary>
            <remarks> <para>The <see cref="P:C1.C1Schedule.Appointment.End"/> property is usually specified 
            by the <see cref="P:C1.C1Schedule.Appointment.Start"/> and <see cref="P:C1.C1Schedule.Appointment.Duration"/> properties, 
            and is always calculated as <see cref="P:C1.C1Schedule.Appointment.End"/> = <see cref="P:C1.C1Schedule.Appointment.Start"/> + <see cref="P:C1.C1Schedule.Appointment.Duration"/>. 
            When setting the <see cref="P:C1.C1Schedule.Appointment.End"/> property, the <see cref="P:C1.C1Schedule.Appointment.Start"/> property 
            retains its value, and the <see cref="P:C1.C1Schedule.Appointment.Duration"/> is changed according 
            to the new value of the <see cref="P:C1.C1Schedule.Appointment.End"/> property. 
            If the new <see cref="P:C1.C1Schedule.Appointment.End"/> property's value is less than 
            the <see cref="P:C1.C1Schedule.Appointment.Start"/> property's value, then an exception will be raised.</para>
            <para>At setting this property, if it's time is not equal 0:00, 
            or value is equal to the value of <see cref="P:C1.C1Schedule.Appointment.Start"/> property, 
            the <see cref="P:C1.C1Schedule.Appointment.AllDayEvent"/> property will be set to false.</para></remarks>
        </member>
        <member name="P:C1.C1Schedule.Appointment.IsOneDay">
            <summary>
            Gets a <see cref="T:System.Boolean"/> value indicating either it is 
            a one day appointment or shares some days.
            </summary>
        </member>
        <member name="P:C1.C1Schedule.Appointment.Duration">
            <summary>
            Gets or sets the <see cref="T:System.TimeSpan"/> value indicating the 
            duration of the appointment.
            </summary>
            <remarks>At setting this property, if it's value is not equal to the whole 
            number of days, the <see cref="P:C1.C1Schedule.Appointment.AllDayEvent"/> property will be set to false.</remarks>
        </member>
        <member name="P:C1.C1Schedule.Appointment.Location">
            <summary>
            Gets or sets the <see cref="T:System.String"/> value specifying 
            where the appointment is going to be.
            </summary>
        </member>
        <member name="P:C1.C1Schedule.Appointment.Reminder">
            <summary>
            Gets the <see cref="P:C1.C1Schedule.Appointment.Reminder"/> object which is associated with the appointment.
            To associate an appointment with the reminder, set its 
            <see cref="P:C1.C1Schedule.Appointment.ReminderSet"/> property to true. 
            Once this property is set to true, a new <see cref="P:C1.C1Schedule.Appointment.Reminder"/> object 
            is created and assigned to the <see cref="P:C1.C1Schedule.Appointment.Reminder"/> property.
            </summary>
        </member>
        <member name="P:C1.C1Schedule.Appointment.ReminderSet">
            <summary>
            Gets or sets the <see cref="T:System.Boolean"/> value indicating whether 
            a reminder is associated with the appointment. 
            Once this property is set to true, a new <see cref="P:C1.C1Schedule.Appointment.Reminder"/> object 
            is created and assigned to the <see cref="P:C1.C1Schedule.Appointment.Reminder"/> property.
            </summary>
        </member>
        <member name="P:C1.C1Schedule.Appointment.ReminderTimeBeforeStart">
            <summary>
            Gets or sets the <see cref="T:System.TimeSpan"/> value indicating the 
            interval of time the reminder should occur 
            prior to the start of the appointment. 
            </summary>
        </member>
        <member name="P:C1.C1Schedule.Appointment.ReminderOverrideDefault">
            <summary>
            Gets or sets the <see cref="T:System.Boolean"/> value indicating if the associated
            <see cref="P:C1.C1Schedule.Appointment.Reminder"/> object has non-default settings.
            True if the reminder overrides the default reminder behavior for the appointment.
            You must set the <see cref="P:C1.C1Schedule.Appointment.ReminderOverrideDefault"/> property to validate 
            the <see cref="P:C1.C1Schedule.Appointment.ReminderPlaySound"/> and 
            the <see cref="P:C1.C1Schedule.Appointment.ReminderSoundFile"/> properties.
            </summary>
        </member>
        <member name="P:C1.C1Schedule.Appointment.ReminderPlaySound">
            <summary>
            Gets or sets the <see cref="T:System.Boolean"/> value indicating if the reminder 
            should play a sound when it occurs for this appointment or task. 
            The <see cref="P:C1.C1Schedule.Appointment.ReminderPlaySound"/> property must be set in order to validate 
            the <see cref="P:C1.C1Schedule.Appointment.ReminderSoundFile"/> property. 
            This property is only valid if the <see cref="P:C1.C1Schedule.Appointment.ReminderOverrideDefault"/> property 
            is set to true.
            </summary>
        </member>
        <member name="P:C1.C1Schedule.Appointment.ReminderSoundFile">
            <summary>
            Gets or sets the <see cref="T:System.String"/> value indicating the path and file name 
            of the sound file to play when the reminder occurs for the appointment. 
            This property is only valid if the <see cref="P:C1.C1Schedule.Appointment.ReminderOverrideDefault"/> and 
            <see cref="P:C1.C1Schedule.Appointment.ReminderPlaySound"/> properties are set to true.
            </summary>
            <remarks>The default sound is the system Exclamation sound.</remarks>
        </member>
        <member name="P:C1.C1Schedule.Appointment.IsRecurring">
            <summary>
            Gets the <see cref="T:System.Boolean"/> value indicating if the appointment is recurring.
            </summary>
        </member>
        <member name="P:C1.C1Schedule.Appointment.ParentRecurrence">
            <summary>
            Gets the <see cref="T:C1.C1Schedule.Appointment"/> object that defines the recurrence 
            criteria for this <see cref="T:C1.C1Schedule.Appointment"/> object. 
            If this appointment is a not member of a recurrence, 
            or is itself a root appointment, null is returned. 
            </summary>
            <remarks>If an appointment is recurring (see the <see cref="P:C1.C1Schedule.Appointment.IsRecurring"/> property) 
            it represents an occurrence in the series that is started and defined 
            by a specific pattern appointment. 
            Use the <see cref="P:C1.C1Schedule.Appointment.ParentRecurrence"/> property to obtain the pattern 
            of the current appointment. A pattern appointment can be recognized by its 
            <see cref="P:C1.C1Schedule.Appointment.RecurrenceState"/> property set 
            to the <see cref="F:C1.C1Schedule.RecurrenceStateEnum.Master"/> value. 
            The recurrence information defined by the pattern appointment can be accessed 
            via the <see cref="T:C1.C1Schedule.RecurrencePattern"/> property of the appointment. 
            </remarks>
        </member>
        <member name="P:C1.C1Schedule.Appointment.RecurrenceState">
            <summary>
            Gets the <see cref="T:C1.C1Schedule.RecurrenceStateEnum"/> value indicating 
            the recurrence state of the appointment. 
            </summary>
        </member>
        <member name="P:C1.C1Schedule.Appointment.Label">
            <summary>
            Gets or sets the <see cref="P:C1.C1Schedule.Appointment.Label"/> object associated with this appointment.
            </summary>
            <remarks>Labels may be associated with an appointment 
            to effectively group appointments. </remarks>
            <remarks>This property only accepts <see cref="P:C1.C1Schedule.Appointment.Label"/> objects which are present in the C1ScheduleStorage.LabelStorage storage.</remarks>
        </member>
        <member name="P:C1.C1Schedule.Appointment.Resources">
            <summary>
            Gets the <see cref="T:C1.C1Schedule.ResourceList"/> object which holds the set of 
            <see cref="T:C1.C1Schedule.Resource"/> objects for this appointment.
            An appointment may be associated with multiple resources.
            </summary>
            <remarks>This property only accepts <see cref="T:C1.C1Schedule.Resource"/> objects which are present in the C1ScheduleStorage.ResourceStorage storage.</remarks>
        </member>
        <member name="P:C1.C1Schedule.Appointment.Links">
            <summary>
            Gets the <see cref="T:C1.C1Schedule.ContactList"/> object which holds the set 
            of <see cref="T:C1.C1Schedule.Contact"/> objects for this appointment.
            An appointment may be associated with multiple contacts.
            </summary>
            <remarks>This property only accepts <see cref="T:C1.C1Schedule.Contact"/> objects which are present in the C1ScheduleStorage.ContactStorage storage.</remarks>
        </member>
        <member name="P:C1.C1Schedule.Appointment.BusyStatus">
            <summary>
            Gets or sets the <see cref="T:C1.C1Schedule.Status"/> object indicating the busy status 
            of the user for the appointment.
            </summary>
            <remarks>This property only accepts <see cref="T:C1.C1Schedule.Status"/> objects which are present in the C1ScheduleStorage.StatusStorage storage.</remarks>
        </member>
        <member name="P:C1.C1Schedule.Appointment.Categories">
            <summary>
            Gets the <see cref="T:C1.C1Schedule.CategoryList"/> object which holds the set 
            of categories assigned to the appointment.
            Categories may be associated with an appointment to effectively group appointments. 
            An appointment may be associated with multiple categories.
            </summary>
            <remarks>This property only accepts <see cref="T:C1.C1Schedule.Category"/> objects which are present in the C1ScheduleStorage.CategoryStorage storage.</remarks>
        </member>
        <member name="P:C1.C1Schedule.Appointment.Owner">
            <summary>
            Gets or sets the <see cref="T:C1.C1Schedule.Contact"/> object which owns current <see cref="T:C1.C1Schedule.Appointment"/> object.
            </summary>
            <remarks>This property only accepts <see cref="T:C1.C1Schedule.Contact"/> objects which are present in the C1ScheduleStorage.OwnerStorage storage.</remarks>
            <value>The default value is null.</value>
        </member>
        <member name="T:C1.C1Schedule.AppointmentCollection">
            <summary>
            The <see cref="T:C1.C1Schedule.AppointmentCollection"/> is a collection of all 
            <see cref="T:C1.C1Schedule.Appointment"/> objects in the C1Schedule component.
            </summary>
        </member>
        <member name="T:C1.C1Schedule.BaseCollection`1">
            <summary>
            The <see cref="T:C1.C1Schedule.BaseCollection`1"/> is a base generic class for all collections 
            in C1Schedule object model.
            </summary>
            <typeparam name="T">The type of the objects which will be stored in the collection.
            It should be derived from the <see cref="T:C1.C1Schedule.BasePersistableObject"/> class
            and have the default parameter-less constructor.</typeparam>
        </member>
        <member name="M:C1.C1Schedule.BaseCollection`1.#ctor(System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:C1.C1Schedule.BaseCollection`1"/> class.
            </summary>
            <param name="owner">The owning storage.</param>
        </member>
        <member name="M:C1.C1Schedule.BaseCollection`1.Add(`0)">
            <summary>
            Adds a new custom object to the collection.
            If the item already exists in the collection, its index is returned.
            </summary>
            <returns>Returns the index of newly added custom object.</returns>
        </member>
        <member name="M:C1.C1Schedule.BaseCollection`1.Contains(System.Int32)">
            <summary>
            Check if collection contains an item with specified index.
            </summary>
            <param name="index">The zero-based index of the item to locate.</param>
            <returns>True if the item is found in the collection; otherwise, false.</returns>
        </member>
        <member name="M:C1.C1Schedule.BaseCollection`1.RefreshIndices">
            <summary>
            Call this method after removing items from the unbound storage.
            </summary>
        </member>
        <member name="M:C1.C1Schedule.BaseCollection`1.AddRange(`0[])">
            <summary>
            Adds an array of objects to the collection.
            This methods clears the collection before adding new items. 
            Don't use it if you want to keep preexisting items.
            </summary>
            <param name="items">An array of items.</param>
        </member>
        <member name="M:C1.C1Schedule.BaseCollection`1.AddRange(System.Object[])">
            <summary>
            Adds an array of objects to the collection.
            This methods clears the collection before adding new items. 
            Don't use it if you want to keep preexisting items.
            </summary>
            <param name="items">An array of items.</param>
        </member>
        <member name="M:C1.C1Schedule.BaseCollection`1.InsertItem(System.Int32,`0)">
            <summary>
            Overrides default behavior of collection at inserting new items.
            </summary>
            <param name="index">The zero-based index of the item to insert.</param>
            <param name="item">The object to insert.</param>
        </member>
        <member name="M:C1.C1Schedule.BaseCollection`1.GetKeyForItem(`0)">
            <summary>
            Extracts the key from the specified element.
            </summary>
            <param name="item">The element from which to extract the key.</param>
            <returns>The key for the specified element.</returns>
        </member>
        <member name="M:C1.C1Schedule.BaseCollection`1.RemoveItem(System.Int32)">
            <summary>
            Overrides base class implementation.
            </summary>
            <param name="index">The zero-based index of the item to remove.</param>
        </member>
        <member name="P:C1.C1Schedule.BaseCollection`1.Item(System.Guid)">
            <summary>
            Gets the element with the specified key if any. 
            </summary>
            <param name="key">The key of the element to get.</param>
            <returns>The element with the specified key. If an element with the specified key is not found, return null.</returns>
        </member>
        <member name="P:C1.C1Schedule.BaseCollection`1.OwnerInternal">
            <summary>
            
            </summary>
        </member>
        <member name="M:C1.C1Schedule.AppointmentCollection.Add">
            <summary>
            Creates the new <see cref="T:C1.C1Schedule.Appointment"/> object 
            with default settings and adds it to the collection.
            </summary>
            <returns>The <see cref="T:C1.C1Schedule.Appointment"/> object.</returns>
        </member>
        <member name="M:C1.C1Schedule.AppointmentCollection.Add(System.DateTime,System.DateTime)">
            <summary>
            Creates the new <see cref="T:C1.C1Schedule.Appointment"/> object 
            with specified parameters and adds it to the collection.
            </summary>
            <param name="start">The <see cref="T:System.DateTime"/> value which specifies 
            the start date and time of the appointment.</param>
            <param name="end">The <see cref="T:System.DateTime"/> value which specifies 
            the end date and time of the appointment.</param>
            <returns>The <see cref="T:C1.C1Schedule.Appointment"/> object.</returns>
        </member>
        <member name="M:C1.C1Schedule.AppointmentCollection.Add(System.DateTime,System.TimeSpan)">
            <summary>
            Creates the new <see cref="T:C1.C1Schedule.Appointment"/> object 
            with specified parameters and adds it to the collection.
            </summary>
            <param name="start">The <see cref="T:System.DateTime"/> value which specifies 
            the start date and time of the appointment.</param>
            <param name="duration">The <see cref="T:System.TimeSpan"/> value which specifies 
            the duration of the appointment.</param>
            <returns>The <see cref="T:C1.C1Schedule.Appointment"/> object.</returns>
        </member>
        <member name="M:C1.C1Schedule.AppointmentCollection.Add(System.DateTime,System.DateTime,System.String)">
            <summary>
            Creates the new <see cref="T:C1.C1Schedule.Appointment"/> object 
            with specified parameters and adds it to the collection.
            </summary>
            <param name="start">The <see cref="T:System.DateTime"/> value which specifies 
            the start date and time of the appointment.</param>
            <param name="end">The <see cref="T:System.DateTime"/> value which specifies 
            the end date and time of the appointment.</param>
            <param name="subject">The <see cref="T:System.String"/> value which contains 
            the subject of the appointment.</param>
            <returns>The <see cref="T:C1.C1Schedule.Appointment"/> object.</returns>
        </member>
        <member name="M:C1.C1Schedule.AppointmentCollection.Add(System.DateTime,System.TimeSpan,System.String)">
            <summary>
            Creates the new <see cref="T:C1.C1Schedule.Appointment"/> object 
            with specified parameters and adds it to the collection.
            </summary>
            <param name="start">The <see cref="T:System.DateTime"/> value which specifies 
            the start date and time of the appointment.</param>
            <param name="duration">The <see cref="T:System.TimeSpan"/> value which specifies 
            the duration of the appointment.</param>
            <param name="subject">The <see cref="T:System.String"/> value which contains 
            the subject of the appointment.</param>
            <returns>The <see cref="T:C1.C1Schedule.Appointment"/> object.</returns>
        </member>
        <member name="M:C1.C1Schedule.AppointmentCollection.GetOccurrence(C1.C1Schedule.Appointment,System.DateTime,C1.C1Schedule.CalendarInfo)">
            <summary>
            Returns a specific instance of the Appointment object on the specified date.
            </summary>
            <param name="pattern"></param>
            <param name="startDate"></param>
            <param name="info"></param>
            <returns></returns>
            <remarks>The GetOccurrence method generates an exception if no appointment 
            of that series exists on the specified date.</remarks>
        </member>
        <member name="M:C1.C1Schedule.AppointmentCollection.GetOccurrences(System.DateTime,System.DateTime)">
            <summary>
            Retrieves the <see cref="T:C1.C1Schedule.AppointmentList"/> object which contains 
            the full list of <see cref="T:C1.C1Schedule.Appointment"/> objects in the specified time interval. 
            </summary>
            <param name="start">The <see cref="T:System.DateTime"/> value which specifies 
            the start date and time of the interval.</param>
            <param name="end">The <see cref="T:System.DateTime"/> value which specifies 
            the end date and time of the interval.</param>
            <returns>The <see cref="T:C1.C1Schedule.AppointmentList"/> object.</returns>
            <remarks>This method will create instances of the <see cref="T:C1.C1Schedule.Appointment"/>
            object for recurring appointments if they haven't been created yet.
            </remarks>
        </member>
        <member name="M:C1.C1Schedule.AppointmentCollection.GetOccurrences(C1.C1Schedule.BaseObject,System.String,System.DateTime,System.DateTime,System.Boolean)">
            <summary>
            Retrieves the <see cref="T:C1.C1Schedule.AppointmentList"/> object which contains 
            the full list of <see cref="T:C1.C1Schedule.Appointment"/> objects in the specified time interval. 
            </summary>
            <param name="groupOwner">The <see cref="T:C1.C1Schedule.BaseObject"/> object determining the appointment group.</param>
            <param name="groupBy">The <see cref="T:System.String"/> value determining the type of grouping.</param>
            <param name="start">The <see cref="T:System.DateTime"/> value which specifies 
            the start date and time of the interval.</param>
            <param name="end">The <see cref="T:System.DateTime"/> value which specifies 
            the end date and time of the interval.</param>
            <param name="includePrivateAppointments">The <see cref="T:System.Boolean"/> value determining whether 
            to include private appointments.</param>
            <returns>The <see cref="T:C1.C1Schedule.AppointmentList"/> object.</returns>
            <remarks>This method will create instances of the <see cref="T:C1.C1Schedule.Appointment"/>
            object for recurring appointments if they haven't been created yet.
            </remarks>
        </member>
        <member name="M:C1.C1Schedule.AppointmentCollection.GetOccurrences(C1.C1Schedule.Appointment,System.DateTime,System.DateTime)">
            <summary>
            Retrieves the <see cref="T:C1.C1Schedule.AppointmentList"/> object which contains 
            the list of occurrences of the specified master appointment 
            in the specified time interval. 
            </summary>
            <param name="appointment">The <see cref="T:C1.C1Schedule.Appointment"/> object 
            representing the master appointment.</param>
            <param name="start">The <see cref="T:System.DateTime"/> value which specifies 
            the start date and time of the interval.</param>
            <param name="end">The <see cref="T:System.DateTime"/> value which specifies 
            the end date and time of the interval.</param>
            <returns>The <see cref="T:C1.C1Schedule.AppointmentList"/> object.</returns>
            <remarks>This method will create instances of the <see cref="T:C1.C1Schedule.Appointment"/>
            object for recurring appointments if they haven't been created yet.</remarks>
        </member>
        <member name="M:C1.C1Schedule.AppointmentCollection.GetConflicts(C1.C1Schedule.Appointment)">
            <summary>
            Retrieves the <see cref="T:C1.C1Schedule.AppointmentList"/> object which contains 
            the list of occurrences of <see cref="T:C1.C1Schedule.Appointment"/> objects 
            which are in conflict with the specified appointment.
            </summary>
            <param name="appointment">The <see cref="T:C1.C1Schedule.Appointment"/> object.</param>
            <returns>The <see cref="T:C1.C1Schedule.AppointmentList"/> object.</returns>
        </member>
        <member name="M:C1.C1Schedule.AppointmentCollection.ClearItems">
            <summary>
            Clears the collection.
            </summary>
        </member>
        <member name="M:C1.C1Schedule.AppointmentCollection.RemoveItem(System.Int32)">
            <summary>
            Overrides the default behavior.
            </summary>
            <param name="index">The zero-based index of the item to remove.</param>
        </member>
        <member name="M:C1.C1Schedule.AppointmentCollection.InsertItem(System.Int32,C1.C1Schedule.Appointment)">
            <summary>
            Overrides the default behavior.
            </summary>
            <param name="index">The zero-based index of the item.</param>
            <param name="item">The <see cref="T:C1.C1Schedule.Appointment"/> object to insert.</param>
        </member>
        <member name="M:C1.C1Schedule.AppointmentCollection.SetItem(System.Int32,C1.C1Schedule.Appointment)">
            <summary>
            Overrides the default behavior.
            </summary>
            <param name="index">The zero-based index of the item.</param>
            <param name="item">The <see cref="T:C1.C1Schedule.Appointment"/> object to set.</param>
        </member>
        <member name="M:C1.C1Schedule.AppointmentCollection.AddRange(C1.C1Schedule.Appointment[])">
            <summary>
            Adds an array of <see cref="T:C1.C1Schedule.Appointment"/> objects to the collection.
            This methods clears collection before adding new items. 
            Don't use it if you want to save previously existed items.
            </summary>
            <param name="items">An array of <see cref="T:C1.C1Schedule.Appointment"/> objects.</param>
        </member>
        <member name="E:C1.C1Schedule.AppointmentCollection.AppointmentRecurrenceStateChanged">
            <summary>
            Occurs when RecurrenceState of an appointment is changed.
            </summary>
        </member>
        <member name="E:C1.C1Schedule.AppointmentCollection.AppointmentCustomAction">
            <summary>
            Occurs when a custom action of an appointment executes. 
            </summary>
        </member>
        <member name="E:C1.C1Schedule.AppointmentCollection.AppointmentAdded">
            <summary>
            Occurs when an appointment was added.
            </summary>
        </member>
        <member name="E:C1.C1Schedule.AppointmentCollection.AppointmentRemoved">
            <summary>
            Occurs when an appointment was removed.
            </summary>
        </member>
        <member name="E:C1.C1Schedule.AppointmentCollection.AppointmentChanged">
            <summary>
            Occurs when an appointment was changed.
            </summary>
        </member>
        <member name="P:C1.C1Schedule.AppointmentCollection.ParentStorage">
            <summary>
            Gets the reference to the owning <see cref="T:C1.C1Schedule.AppointmentStorage"/> object.
            </summary>
        </member>
        <member name="T:C1.C1Schedule.AppointmentList">
            <summary>
            The <see cref="T:C1.C1Schedule.AppointmentList"/> is a sortable collection of 
            <see cref="T:C1.C1Schedule.Appointment"/> objects.
            </summary>
            <remarks>The <see cref="T:C1.C1Schedule.AppointmentList"/> is not guaranteed to be sorted. 
            You must sort the <see cref="T:C1.C1Schedule.AppointmentList"/> before performing operations
            that require the <see cref="T:C1.C1Schedule.AppointmentList"/> to be sorted.</remarks>
        </member>
        <member name="M:C1.C1Schedule.AppointmentList.Sort">
            <summary>
            Sorts the elements in the entire AppointmentList using the default comparer
            (by the Appointment.Start value).
            </summary>
        </member>
        <member name="M:C1.C1Schedule.AppointmentList.Sort(System.Comparison{C1.C1Schedule.Appointment})">
            <summary>
            Sorts the elements in the entire AppointmentList using 
            the specified System.Comparison. 
            </summary>
            <param name="comparison">The <see cref="T:System.Comparison`1"/> 
            to use when comparing elements.</param>
        </member>
        <member name="M:C1.C1Schedule.AppointmentList.Sort(System.Collections.Generic.IComparer{C1.C1Schedule.Appointment})">
            <summary>
            Sorts the elements in the entire AppointmentList using 
            the specified comparer. 
            </summary>
            <param name="comparer">The IComparer{Appointment} implementation to use 
            when comparing elements, or a null reference (Nothing in Visual Basic) 
            to use the default comparer.</param>
        </member>
        <member name="M:C1.C1Schedule.AppointmentList.Sort(System.Int32,System.Int32,System.Collections.Generic.IComparer{C1.C1Schedule.Appointment})">
            <summary>
            Sorts the elements in a range of elements in AppointmentList using 
            the specified comparer. 
            </summary>
            <param name="index">The zero-based starting index of the range to sort.</param>
            <param name="count">The length of the range to sort.</param>
            <param name="comparer">The IComparer{Appointment} implementation to use 
            when comparing elements, or a null reference (Nothing in Visual Basic) 
            to use the default comparer.</param>
        </member>
        <member name="M:C1.C1Schedule.AppointmentList.Clone">
            <summary>
            Creates a copy of the list by copying items to the new list.
            </summary>
            <returns></returns>
        </member>
        <member name="T:C1.C1Schedule.AppointmentComparer">
            <summary>
            Compares <see cref="T:C1.C1Schedule.Appointment"/> objects by their start time.
            </summary>
        </member>
        <member name="M:C1.C1Schedule.AppointmentComparer.Compare(C1.C1Schedule.Appointment,C1.C1Schedule.Appointment)">
            <summary>
            Performs a comparison of two <see cref="T:C1.C1Schedule.Appointment"/> objects and returns 
            a value indicating whether the one <see cref="T:C1.C1Schedule.Appointment"/> starts earlier, 
            at the same time, or later than the other. 
            </summary>
            <param name="x">The first <see cref="T:C1.C1Schedule.Appointment"/> to compare.</param>
            <param name="y">The second <see cref="T:C1.C1Schedule.Appointment"/> to compare.</param>
            <returns>Less than zero - x occurs earlier than y.
            Zero - x and y occur at the same time.
            Greater than zero - x occurs later than y.</returns>
        </member>
        <member name="P:C1.C1Schedule.AppointmentComparer.Default">
            <summary>
            Returns an existing instance of <see cref="T:C1.C1Schedule.AppointmentComparer"/> class if any;
            or creates a new one.
            </summary>
        </member>
        <member name="T:C1.C1Schedule.AppointmentEventArgs">
            <summary>
            The <see cref="T:C1.C1Schedule.AppointmentEventArgs"/> class describes event data for <see cref="P:C1.C1Schedule.AppointmentEventArgs.Appointment"/> events.
            </summary>
        </member>
        <member name="M:C1.C1Schedule.AppointmentEventArgs.#ctor(C1.C1Schedule.Appointment)">
            <summary>
            Initializes a new instance of the <see cref="T:C1.C1Schedule.AppointmentEventArgs"/>
            class with the specified appointment. 
            </summary>
            <param name="appointment">The <see cref="T:C1.C1Schedule.Appointment"/> object.</param>
        </member>
        <member name="P:C1.C1Schedule.AppointmentEventArgs.Appointment">
            <summary>
            Gets the appointment which the event was raised for. 
            </summary>
        </member>
        <member name="T:C1.C1Schedule.CancelAppointmentEventHandler">
            <summary>
            Delegate for handling the cancelable event involving a single 
            <see cref="T:C1.C1Schedule.Appointment"/> object. 
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:C1.C1Schedule.CancelAppointmentEventArgs"/> 
            that contains the event data.</param>
        </member>
        <member name="T:C1.C1Schedule.CancelAppointmentEventArgs">
            <summary>
            The <see cref="T:C1.C1Schedule.CancelAppointmentEventArgs"/> class describes event data 
            for <see cref="P:C1.C1Schedule.CancelAppointmentEventArgs.Appointment"/> events.
            </summary>
        </member>
        <member name="M:C1.C1Schedule.CancelAppointmentEventArgs.#ctor(C1.C1Schedule.Appointment)">
            <summary>
            Initializes a new instance of the <see cref="T:C1.C1Schedule.CancelAppointmentEventArgs"/>
            class with the specified appointment. 
            </summary>
            <param name="appointment">The <see cref="P:C1.C1Schedule.CancelAppointmentEventArgs.Appointment"/> object.</param>
        </member>
        <member name="P:C1.C1Schedule.CancelAppointmentEventArgs.Appointment">
            <summary>
            Gets the <see cref="P:C1.C1Schedule.CancelAppointmentEventArgs.Appointment"/> object which the event was raised for. 
            </summary>
        </member>
        <member name="P:C1.C1Schedule.CancelAppointmentEventArgs.Cancel">
            <summary>
            Set to true to cancel the operation.
            </summary>
        </member>
        <member name="T:C1.C1Schedule.BaseObject">
            <summary>
            The <see cref="T:C1.C1Schedule.BaseObject"/> is a base class for resources, labels, statuses, 
            categories and contacts. It implements base UI properties and persistence.
            </summary>
        </member>
        <member name="M:C1.C1Schedule.BaseObject.#ctor">
            <summary>
            Creates the new <see cref="T:C1.C1Schedule.BaseObject"/> object with default settings.
            </summary>
        </member>
        <member name="M:C1.C1Schedule.BaseObject.#ctor(System.String)">
            <summary>
            Creates the new <see cref="T:C1.C1Schedule.BaseObject"/> object with specified text.
            </summary>
            <param name="text">The <see cref="T:System.String"/> value.</param>
        </member>
        <member name="M:C1.C1Schedule.BaseObject.#ctor(System.String,System.String)">
            <summary>
            Creates the new <see cref="T:C1.C1Schedule.BaseObject"/> object with specified text and menu caption.
            </summary>
            <param name="text">The <see cref="T:System.String"/> value.</param>
            <param name="menuCaption">The <see cref="T:System.String"/> value.</param>
        </member>
        <member name="M:C1.C1Schedule.BaseObject.#ctor(System.Drawing.Color,System.String,System.String)">
            <summary>
            Creates the new <see cref="T:C1.C1Schedule.BaseObject"/> object with specified color, 
            text and menu caption.
            </summary>
            <param name="color">The <see cref="P:C1.C1Schedule.BaseObject.Color"/> value.</param>
            <param name="text">The <see cref="T:System.String"/> value.</param>
            <param name="menuCaption">The <see cref="T:System.String"/> value.</param>
        </member>
        <member name="M:C1.C1Schedule.BaseObject.#ctor(System.Drawing.Color,System.String,System.String,C1.C1Schedule.C1Brush)">
            <summary>
            Creates the new <see cref="T:C1.C1Schedule.BaseObject"/> object with specified parameters.
            </summary>
            <param name="color">The <see cref="P:C1.C1Schedule.BaseObject.Color"/> value.</param>
            <param name="text">The <see cref="T:System.String"/> value.</param>
            <param name="menuCaption">The <see cref="T:System.String"/> value.</param>
            <param name="brush">The <see cref="P:C1.C1Schedule.BaseObject.Brush"/> object.</param>
        </member>
        <member name="M:C1.C1Schedule.BaseObject.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Special constructor for deserialization.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/>.</param>
            <param name="context">The context information.</param>
        </member>
        <member name="M:C1.C1Schedule.BaseObject.FromXml(System.Xml.XmlNode)">
            <summary>
            Loads an object from the specified <see cref="T:System.Xml.XmlNode"/>.
            </summary>
            <param name="node">An <see cref="T:System.Xml.XmlNode"/> 
            which contains the object data.</param>
        </member>
        <member name="M:C1.C1Schedule.BaseObject.FromXml(System.Xml.XmlReader)">
            <summary>
            Loads an object from the specified <see cref="T:System.Xml.XmlReader"/>.
            </summary>
            <param name="reader">An <see cref="T:System.Xml.XmlReader"/> which contains the object data.</param>
            <returns>Returns true if object has been changed.</returns>
        </member>
        <member name="M:C1.C1Schedule.BaseObject.ToXml(System.Xml.XmlWriter)">
            <summary>
            Saves an object into specified <see cref="T:System.Xml.XmlWriter"/>.
            </summary>
            <param name="writer">The <see cref="T:System.Xml.XmlWriter"/> 
            that will receive the object data.</param>
        </member>
        <member name="M:C1.C1Schedule.BaseObject.ToString">
            <summary>
            Overrides the default behavior.
            </summary>
            <returns>The text which identifies a user interface object.</returns>
        </member>
        <member name="P:C1.C1Schedule.BaseObject.Color">
            <summary>
            Gets or sets the color of the user interface object.
            </summary>
        </member>
        <member name="P:C1.C1Schedule.BaseObject.Text">
            <summary>
            Gets or sets the text which identifies a user interface object. 
            </summary>
        </member>
        <member name="P:C1.C1Schedule.BaseObject.MenuCaption">
            <summary>
            Gets or sets the menu caption for the user interface object.
            </summary>
        </member>
        <member name="P:C1.C1Schedule.BaseObject.Brush">
            <summary>
            Gets or sets the brush used to fill the user interface object's image.
            </summary>
            <remarks>Supported persistence only for System.Drawing.Drawing2D.HatchBrush
            and System.Drawing.SolidBrush</remarks>
        </member>
        <member name="T:C1.C1Schedule.BaseList`1">
            <summary>
            The <see cref="T:C1.C1Schedule.BaseList`1"/> is a base generic class for all lists 
            in C1Schedule's object model.
            Only objects existing in the owning collection can be added to this list.
            </summary>
            <typeparam name="T">The type of the objects which will be stored in the list.
            It should be derived from the <see cref="T:C1.C1Schedule.BasePersistableObject"/> class.</typeparam>
        </member>
        <member name="F:C1.C1Schedule.BaseList`1._owner">
            <summary>
            
            </summary>
        </member>
        <member name="M:C1.C1Schedule.BaseList`1.InsertItem(System.Int32,`0)">
            <summary>
            Overrides default behavior of Collection.
            Prevents from adding items non-existent in the parent collection.
            </summary>
            <param name="index">The zero-based index of the item to insert.</param>
            <param name="item">The object to insert.</param>
        </member>
        <member name="M:C1.C1Schedule.BaseList`1.SetItem(System.Int32,`0)">
            <summary>
            Overrides default behavior of Collection.
            Prevents from adding items non-existent in the parent collection.
            </summary>
            <param name="index">The zero-based index of the item.</param>
            <param name="item">The object to set.</param>
        </member>
        <member name="M:C1.C1Schedule.BaseList`1.ToString">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="P:C1.C1Schedule.BaseList`1.Owner">
            <summary>
            Gets the reference to the owning collection.
            </summary>
        </member>
        <member name="T:C1.C1Schedule.TimeScaleEnum">
            <summary>
            Determines the time interval which is used for 
            displaying time slots in the DayView.
            </summary>
        </member>
        <member name="F:C1.C1Schedule.TimeScaleEnum.FiveMinutes">
            <summary>
            5 minutes.
            </summary>
        </member>
        <member name="F:C1.C1Schedule.TimeScaleEnum.SixMinutes">
            <summary>
            6 minutes.
            </summary>
        </member>
        <member name="F:C1.C1Schedule.TimeScaleEnum.TenMinutes">
            <summary>
            10 minutes.
            </summary>
        </member>
        <member name="F:C1.C1Schedule.TimeScaleEnum.FifteenMinutes">
            <summary>
            15 minutes.
            </summary>
        </member>
        <member name="F:C1.C1Schedule.TimeScaleEnum.TwentyMinutes">
            <summary>
            20 minutes.
            </summary>
        </member>
        <member name="F:C1.C1Schedule.TimeScaleEnum.ThirtyMinutes">
            <summary>
            30 minutes.
            </summary>
        </member>
        <member name="F:C1.C1Schedule.TimeScaleEnum.OneHour">
            <summary>
            60 minutes.
            </summary>
        </member>
        <member name="T:C1.C1Schedule.CalendarInfo">
            <summary>
            The <see cref="T:C1.C1Schedule.CalendarInfo"/> class manages and exposes 
            all date-related data to C1Schedule controls. 
            </summary>
        </member>
        <member name="M:C1.C1Schedule.CalendarInfo.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:C1.C1Schedule.CalendarInfo"/> component.
            </summary>
        </member>
        <member name="M:C1.C1Schedule.CalendarInfo.IsWorkingDay(System.DateTime)">
            <summary>
            Returns true if specified date is not weekend or holiday.
            </summary>
            <param name="day">The <see cref="T:System.DateTime"/> value to check.</param>
            <returns>True if specified date is not weekend or holiday; false - otherwise.</returns>
        </member>
        <member name="M:C1.C1Schedule.CalendarInfo.CopyFrom(C1.C1Schedule.CalendarInfo)">
            <summary>
            Copies properties from the specified <see cref="T:C1.C1Schedule.CalendarInfo"/> object to this one. 
            </summary>
            <param name="info">The <see cref="T:C1.C1Schedule.CalendarInfo"/> instance to copy.</param>
        </member>
        <member name="M:C1.C1Schedule.CalendarInfo.GetDayOfWeekName(System.DayOfWeek)">
            <summary>
            Returns the culture-specific full name of the specified day of the week
            based on the current UI culture.
            </summary>
            <param name="day"></param>
            <returns></returns>
        </member>
        <member name="M:C1.C1Schedule.CalendarInfo.GetMonthName(System.Int32)">
            <summary>
            Returns the culture-specific full name of the specified month based on the 
            current UI culture.
            </summary>
            <param name="month"></param>
            <returns></returns>
        </member>
        <member name="M:C1.C1Schedule.CalendarInfo.GetInstanceName(C1.C1Schedule.WeekOfMonthEnum)">
            <summary>
            Returns the culture-specific full name of the specified instance based on the 
            current UI culture.
            </summary>
            <param name="instance"></param>
            <returns></returns>
        </member>
        <member name="M:C1.C1Schedule.CalendarInfo.ParseTime(System.String)">
            <summary>
            Returns DateTime value with filled DateTimeKind property.
            DateTimeKind = DateTimeKind.Utc if string was saved using RFC1123Pattern. 
            </summary>
            <param name="source"></param>
            <returns></returns>
        </member>
        <member name="E:C1.C1Schedule.CalendarInfo.SelectedDaysChanged">
            <summary>
            Occurs when the range of selected days was changed.
            </summary>
        </member>
        <member name="E:C1.C1Schedule.CalendarInfo.PropertyChanged">
            <summary>
            Occurs when the property of <see cref="T:C1.C1Schedule.CalendarInfo"/> object was changed.
            </summary>
        </member>
        <member name="P:C1.C1Schedule.CalendarInfo.Culture">
            <summary>
            Gets or sets the <see cref="P:C1.C1Schedule.CalendarInfo.CultureInfo"/> object which 
            holds culture-specific information used by C1Schedule components.
            </summary>
        </member>
        <member name="P:C1.C1Schedule.CalendarInfo.CultureInfo">
            <summary>
            Gets or sets the <see cref="P:C1.C1Schedule.CalendarInfo.CultureInfo"/> object which 
            holds culture-specific information used by C1Schedule components.
            </summary>
        </member>
        <member name="P:C1.C1Schedule.CalendarInfo.DateFormatString">
            <summary>
            Gets or sets the <see cref="T:System.String"/> value determining display format 
            of date values to use in appointments and built-in dialogs.
            </summary>
            <remarks>The actual representation depends on the value 
            of the <see cref="P:C1.C1Schedule.CalendarInfo.Culture"/> property.</remarks>
        </member>
        <member name="P:C1.C1Schedule.CalendarInfo.TimeFormatString">
            <summary>
            Gets or sets the <see cref="T:System.String"/> value determining display format 
            of time values to use in appointments and built-in dialogs.
            </summary>
            <remarks>The actual representation depends on the value 
            of the <see cref="P:C1.C1Schedule.CalendarInfo.Culture"/> property.</remarks>
        </member>
        <member name="P:C1.C1Schedule.CalendarInfo.WeekStart">
            <summary>
            Gets or sets the <see cref="T:System.DayOfWeek"/> value determining
            the first day of the week. Default is system settings.
            </summary>
        </member>
        <member name="P:C1.C1Schedule.CalendarInfo.WorkDays">
            <summary>
            Gets or sets the <see cref="P:C1.C1Schedule.CalendarInfo.WorkDays"/> object containing the 
            set of working days in one week.
            </summary>
        </member>
        <member name="P:C1.C1Schedule.CalendarInfo.NoWorkingDays">
            <summary>
            Gets or sets the <see cref="T:System.Boolean"/> value determining whether
            the <see cref="T:C1.C1Schedule.CalendarInfo"/> object has any working days.
            </summary>
        </member>
        <member name="P:C1.C1Schedule.CalendarInfo.TimeScale">
            <summary>
            Gets or sets the <see cref="T:System.TimeSpan"/> value specifying the time interval 
            which is used for displaying time slots in the DayView.
            </summary>
            <remarks>The <see cref="P:C1.C1Schedule.CalendarInfo.TimeScale"/> property cannot be set to any 
            arbitrary value. When assigning a value to this property it is 
            automatically calculated so as to be equal to the nearest 
            <see cref="T:C1.C1Schedule.TimeScaleEnum"/> value.</remarks>
        </member>
        <member name="P:C1.C1Schedule.CalendarInfo.TimeInterval">
            <summary>
            Gets or sets the <see cref="T:C1.C1Schedule.TimeScaleEnum"/> value specifying the time interval 
            which is used for displaying time slots in the DayView.
            </summary>
        </member>
        <member name="P:C1.C1Schedule.CalendarInfo.StartDayTime">
            <summary>
            Gets or sets the <see cref="T:System.TimeSpan"/> value specifying the beginning 
            of the working time.
            </summary>
        </member>
        <member name="P:C1.C1Schedule.CalendarInfo.EndDayTime">
            <summary>
            Gets or sets the <see cref="T:System.TimeSpan"/> value specifying 
            the end of the working time.
            </summary>
        </member>
        <member name="P:C1.C1Schedule.CalendarInfo.FirstDate">
            <summary>
            Gets or sets the <see cref="T:System.DateTime"/> value specifying minimum date allowed. 
            </summary>
        </member>
        <member name="P:C1.C1Schedule.CalendarInfo.LastDate">
            <summary>
            Gets or sets the <see cref="T:System.DateTime"/> value specifying maximum date allowed. 
            </summary>
        </member>
        <member name="P:C1.C1Schedule.CalendarInfo.Holidays">
            <summary>
            Gets the <see cref="T:System.Collections.Generic.List`1"/> object which holds
            the list of holidays (non-working days in addition to weekends).
            </summary>
        </member>
        <member name="P:C1.C1Schedule.CalendarInfo.WeekendExceptions">
            <summary>
            Gets the <see cref="T:System.Collections.Generic.List`1"/> object which holds
            the list of weekend days which should be working.
            </summary>
        </member>
        <member name="P:C1.C1Schedule.CalendarInfo.DateTimeKind">
            <summary>
            Gets or sets <see cref="P:C1.C1Schedule.CalendarInfo.DateTimeKind"/> specifying DateTime kind
            used for saving <see cref="T:System.DateTime"/> values.
            </summary>
            <remarks>
            This property only have an influence on the process of saving data to
            the AppointmentStorage.DataSource object and on export operations.
            All properties of the <see cref="T:C1.C1Schedule.Appointment"/> and <see cref="T:C1.C1Schedule.RecurrencePattern"/>
            objects represent current system local time values.
            Set this property to DateTimeLind.Utc if you need to save
            data with universal time. In such case the data will be converted 
            to the local time and back at every read/write operation.
            </remarks>
        </member>
        <member name="T:C1.C1Schedule.WorkDays">
            <summary>
            The <see cref="T:C1.C1Schedule.WorkDays"/> class is a list of working days for the single week.
            </summary>
        </member>
        <member name="M:C1.C1Schedule.WorkDays.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:C1.C1Schedule.WorkDays"/> class.
            </summary>
        </member>
        <member name="M:C1.C1Schedule.WorkDays.AddRange(System.DayOfWeek[])">
            <summary>
            Creates the new <see cref="T:C1.C1Schedule.WorkDays"/> object.
            </summary>
            <param name="items">The array of <see cref="T:System.DayOfWeek"/> objects.</param>
        </member>
        <member name="T:C1.C1Schedule.Category">
            <summary>
            The <see cref="T:C1.C1Schedule.Category"/> class represents the category which can be
            associated with the <see cref="T:C1.C1Schedule.Appointment"/> object. 
            </summary>
        </member>
        <member name="M:C1.C1Schedule.Category.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:C1.C1Schedule.Category"/> class with the specified key.
            </summary>
            <param name="key">The <see cref="T:System.Int32"/> value which should be used as category key.</param>
            <remarks>Use this constructor if your business logic requires setting custom key value.
            Make sure that you use the correct constructor overload (with integer or Guid key value) and that key value is unique.</remarks>
        </member>
        <member name="M:C1.C1Schedule.Category.#ctor(System.Guid)">
            <summary>
            Initializes a new instance of the <see cref="T:C1.C1Schedule.Category"/> class with the specified key.
            </summary>
            <param name="key">The <see cref="T:System.Guid"/> value which should be used as category key.</param>
            <remarks>Use this constructor if your business logic requires setting custom key value.
            Make sure that you use the correct constructor overload (with integer or Guid key value) and that key value is unique.</remarks>
        </member>
        <member name="M:C1.C1Schedule.Category.#ctor">
            <summary>
            Creates the new <see cref="T:C1.C1Schedule.Category"/> object.
            </summary>
        </member>
        <member name="M:C1.C1Schedule.Category.#ctor(System.String)">
            <summary>
            Creates custom <see cref="T:C1.C1Schedule.Category"/> object with specified text.
            </summary>
            <param name="text">The text of category.</param>
        </member>
        <member name="M:C1.C1Schedule.Category.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Special constructor for deserialization.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/>.</param>
            <param name="context">The context information.</param>
        </member>
        <member name="T:C1.C1Schedule.CategoryCollection">
            <summary>
            The <see cref="T:C1.C1Schedule.CategoryCollection"/> is a collection of <see cref="T:C1.C1Schedule.Category"/> 
            objects which represents all available categories in C1Schedule object model.
            By default it contains the set of predefined categories. 
            </summary>
        </member>
        <member name="M:C1.C1Schedule.CategoryCollection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:C1.C1Schedule.CategoryCollection"/> class.
            </summary>
        </member>
        <member name="M:C1.C1Schedule.CategoryCollection.LoadDefaults">
            <summary>
            Restores the collection to its default state.
            </summary>
            <remarks>The <see cref="M:C1.C1Schedule.CategoryCollection.LoadDefaults"/> method removes all 
            custom categories from the collection and leaves only the standard ones.
            </remarks>
        </member>
        <member name="M:C1.C1Schedule.CategoryCollection.GetDefaults">
            <summary>
            Returns the list of predefined categories.
            </summary>
            <returns>The <see cref="T:System.Collections.Generic.List`1"/> object.</returns>
        </member>
        <member name="T:C1.C1Schedule.CategoryList">
            <summary>
            The <see cref="T:C1.C1Schedule.CategoryList"/> is a list of <see cref="T:C1.C1Schedule.Category"/> objects.
            Only objects existing in the owning <see cref="T:C1.C1Schedule.CategoryCollection"/> object 
            may be added to this list.
            Use the <see cref="T:C1.C1Schedule.CategoryList"/> to associate the set of <see cref="T:C1.C1Schedule.Category"/> objects 
            with an <see cref="T:C1.C1Schedule.Appointment"/> object.
            </summary>
        </member>
        <member name="T:C1.C1Schedule.Contact">
            <summary>
            The <see cref="T:C1.C1Schedule.Contact"/> class represents the person information.
            Not real class just sample for prototyping.
            </summary>
        </member>
        <member name="M:C1.C1Schedule.Contact.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:C1.C1Schedule.Contact"/> class with the specified key.
            </summary>
            <param name="key">The <see cref="T:System.Int32"/> value which should be used as contact key.</param>
            <remarks>Use this constructor if your business logic requires setting custom key value.
            Make sure that you use the correct constructor overload (with integer or Guid key value) and that key value is unique.</remarks>
        </member>
        <member name="M:C1.C1Schedule.Contact.#ctor(System.Guid)">
            <summary>
            Initializes a new instance of the <see cref="T:C1.C1Schedule.Contact"/> class with the specified key.
            </summary>
            <param name="key">The <see cref="T:System.Guid"/> value which should be used as contact key.</param>
            <remarks>Use this constructor if your business logic requires setting custom key value.
            Make sure that you use the correct constructor overload (with integer or Guid key value) and that key value is unique.</remarks>
        </member>
        <member name="M:C1.C1Schedule.Contact.#ctor">
            <summary>
            Creates the new <see cref="T:C1.C1Schedule.Contact"/> object.
            </summary>
        </member>
        <member name="M:C1.C1Schedule.Contact.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Special constructor for deserialization.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/>.</param>
            <param name="context">The context information.</param>
        </member>
        <member name="T:C1.C1Schedule.ContactCollection">
            <summary>
            The <see cref="T:C1.C1Schedule.ContactCollection"/> is a collection of <see cref="T:C1.C1Schedule.Contact"/> 
            objects which represents all available contacts in C1Schedule object model.
            </summary>
        </member>
        <member name="M:C1.C1Schedule.ContactCollection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:C1.C1Schedule.ContactCollection"/> class.
            </summary>
        </member>
        <member name="T:C1.C1Schedule.ContactList">
            <summary>
            The <see cref="T:C1.C1Schedule.ContactList"/> is a list of <see cref="T:C1.C1Schedule.Contact"/> objects.
            Only objects existing in the owning <see cref="T:C1.C1Schedule.ContactCollection"/> object 
            may be added to this list.
            Use the <see cref="T:C1.C1Schedule.ContactList"/> to associate the set of <see cref="T:C1.C1Schedule.Contact"/> objects
            with an <see cref="T:C1.C1Schedule.Appointment"/> object.
            </summary>
        </member>
        <member name="T:C1.C1Schedule.Day">
            <summary>
            Represents one day in the C1Schedule. 
            </summary>
        </member>
        <member name="M:C1.C1Schedule.Day.#ctor(System.DateTime)">
            <summary>
            Creates new Day object.
            </summary>
        </member>
        <member name="T:C1.C1Schedule.DayCollection">
            <summary>
            Collection of all days in the C1Schedule component.
            </summary>
        </member>
        <member name="M:C1.C1Schedule.DayCollection.#ctor(C1.C1Schedule.CalendarInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:C1.C1Schedule.DayCollection"/> class.
            </summary>
        </member>
        <member name="M:C1.C1Schedule.DayCollection.FillDayCollection">
            <summary>
            Returns DayCollection for all dates from the FirstDate till the LastDate.
            </summary>
            <returns></returns>
        </member>
        <member name="M:C1.C1Schedule.DayCollection.FillDayCollection(System.DateTime,System.DateTime)">
            <summary>
            Returns DayCollection for all dates from the start till the end.
            </summary>
            <returns></returns>
        </member>
        <member name="M:C1.C1Schedule.DayCollection.GetKeyForItem(C1.C1Schedule.Day)">
            <summary>
            Extracts the key from the specified element.
            </summary>
            <param name="item">The element from which to extract the key.</param>
            <returns>The key for the specified element.</returns>
        </member>
        <member name="T:C1.C1Schedule.DateList">
            <summary>
            The <see cref="T:C1.C1Schedule.DateList"/> class is a wrapper for the 
            <see cref="T:System.Collections.Generic.List`1"/> instance.
            At addition of the new value, it cuts off the time part of the value
            and ensures that the value is not present in the list yet.
            </summary>
            <remarks>This class uses binary search for all operations.</remarks>
        </member>
        <member name="M:C1.C1Schedule.DateList.#ctor">
            <summary>
            Initializes a new instance of <see cref="T:C1.C1Schedule.DateList"/> class.
            </summary>
        </member>
        <member name="M:C1.C1Schedule.DateList.Add(System.DateTime)">
            <summary>
            Adds new date to the list.
            </summary>
            <param name="item">The <see cref="T:System.DateTime"/> value to add.</param>
        </member>
        <member name="M:C1.C1Schedule.DateList.Clear">
            <summary>
            Clears all items from the wrapped list.
            </summary>
        </member>
        <member name="M:C1.C1Schedule.DateList.Remove(System.DateTime)">
            <summary>
            Removes specified item from the wrapped list.
            </summary>
            <param name="item">The <see cref="T:System.DateTime"/> value to remove.</param>
        </member>
        <member name="M:C1.C1Schedule.DateList.RemoveAt(System.Int32)">
            <summary>
            Removes item at the specified index.
            </summary>
            <param name="index">The zero-based index of the item remove to.</param>
        </member>
        <member name="M:C1.C1Schedule.DateList.Contains(System.DateTime)">
            <summary>
            Returns true if specified item exists in the wrapped list.
            </summary>
            <param name="item">An item to search for.</param>
            <returns>True if item exists in the wrapped list.</returns>
        </member>
        <member name="M:C1.C1Schedule.DateList.Contains(System.DateTime[])">
            <summary>
            Returns true if either of specified items exists in the wrapped list.
            </summary>
            <param name="days">An array of <see cref="T:System.DateTime"/> values to search for.</param>
            <returns>True if at least one of specified items exists in the wrapped list.</returns>
        </member>
        <member name="M:C1.C1Schedule.DateList.Contains(System.Collections.Generic.IList{System.DateTime})">
            <summary>
            Returns true if either of specified items exists in the wrapped list.
            </summary>
            <param name="days">A list of <see cref="T:System.DateTime"/> values to search for.</param>
            <returns>True if at least one of specified items exists in the wrapped list.</returns>
        </member>
        <member name="M:C1.C1Schedule.DateList.GetPreviousDate(System.DateTime)">
            <summary>
            Returns the first item that is less than specified one.
            </summary>
            <param name="item">An item to search for.</param>
            <returns>The first item that is less than specified one; 
            or DateTime.MinValue if such item is not found.</returns>
        </member>
        <member name="M:C1.C1Schedule.DateList.GetNextDate(System.DateTime)">
            <summary>
            Returns the first item that is greater than specified one.
            </summary>
            <param name="item">An item to search for.</param>
            <returns>The first item that is greater than specified one; 
            or DateTime.MaxValue if such item is not found.</returns>
        </member>
        <member name="P:C1.C1Schedule.DateList.Count">
            <summary>
            Returns the number of items in the wrapped list.
            </summary>
        </member>
        <member name="P:C1.C1Schedule.DateList.Items">
            <summary>
            Returns the reference to the wrapped list.
            </summary>
        </member>
        <member name="T:C1.C1Schedule.C1BrushStyleEnum">
            <summary>
            Specifies the different patterns available for brushes.
            </summary>
        </member>
        <member name="F:C1.C1Schedule.C1BrushStyleEnum.Transparent">
            <summary>
            Represents transparent brush.
            </summary>
        </member>
        <member name="F:C1.C1Schedule.C1BrushStyleEnum.Solid">
            <summary>
            Represents solid brush.
            </summary>
        </member>
        <member name="F:C1.C1Schedule.C1BrushStyleEnum.BackwardDiagonal">
            <summary>
            A pattern of lines on a diagonal from upper right to lower left.
            </summary>
        </member>
        <member name="F:C1.C1Schedule.C1BrushStyleEnum.Cross">
            <summary>
            Specifies horizontal and vertical lines that cross.  
            </summary>
        </member>
        <member name="F:C1.C1Schedule.C1BrushStyleEnum.DiagonalCross">
            <summary>
            A pattern of crisscross diagonal lines. 
            </summary>
        </member>
        <member name="F:C1.C1Schedule.C1BrushStyleEnum.ForwardDiagonal">
            <summary>
            A pattern of lines on a diagonal from upper left to lower right. 
            </summary>
        </member>
        <member name="F:C1.C1Schedule.C1BrushStyleEnum.Horizontal">
            <summary>
            A pattern of horizontal lines. 
            </summary>
        </member>
        <member name="F:C1.C1Schedule.C1BrushStyleEnum.Vertical">
            <summary>
            A pattern of vertical lines. 
            </summary>
        </member>
        <member name="F:C1.C1Schedule.C1BrushStyleEnum.Wave">
            <summary>
            Specifies horizontal lines that are composed of tildes. 
            </summary>
        </member>
        <member name="F:C1.C1Schedule.C1BrushStyleEnum.ZigZag">
            <summary>
            Specifies horizontal lines that are composed of zigzags. 
            </summary>
        </member>
        <member name="T:C1.C1Schedule.C1Brush">
            <summary>
            Wrapper class for brushes. Only for serialization/deserialization purposes.
            </summary>
        </member>
        <member name="M:C1.C1Schedule.C1Brush.#ctor">
            <summary>
            Creates the new <see cref="T:C1.C1Schedule.C1Brush"/> object.
            </summary>
        </member>
        <member name="M:C1.C1Schedule.C1Brush.#ctor(System.Drawing.Color,System.Drawing.Color,C1.C1Schedule.C1BrushStyleEnum)">
            <summary>
            Creates the new <see cref="T:C1.C1Schedule.C1Brush"/> object.
            </summary>
            <param name="foreColor">The foreground <see cref="T:System.Drawing.Color"/> value.</param>
            <param name="backColor">The background <see cref="T:System.Drawing.Color"/> value.</param>
            <param name="style">The <see cref="T:C1.C1Schedule.C1BrushStyleEnum"/> value.</param>
        </member>
        <member name="M:C1.C1Schedule.C1Brush.#ctor(System.Drawing.Color)">
            <summary>
            Creates a new solid <see cref="T:C1.C1Schedule.C1Brush"/> object.
            </summary>
            <param name="backColor">The background <see cref="T:System.Drawing.Color"/> value.</param>
        </member>
        <member name="M:C1.C1Schedule.C1Brush.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Special constructor for deserialization.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/>.</param>
            <param name="context">The context information.</param>
        </member>
        <member name="M:C1.C1Schedule.C1Brush.Equals(System.Object)">
            <summary>
            
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:C1.C1Schedule.C1Brush.GetHashCode">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:C1.C1Schedule.C1Brush.GetARGBstring(System.Drawing.Color)">
            <summary>
            Returns string representation of color in ARGB format.
            </summary>
            <param name="color">The <see cref="P:C1.C1Schedule.BaseObject.Color"/>value.</param>
            <returns>The string representation of color in ARGB format</returns>
        </member>
        <member name="P:C1.C1Schedule.C1Brush.ForeColor">
            <summary>
            
            </summary>
        </member>
        <member name="P:C1.C1Schedule.C1Brush.BackColor">
            <summary>
            
            </summary>
        </member>
        <member name="P:C1.C1Schedule.C1Brush.Style">
            <summary>
            
            </summary>
        </member>
        <member name="P:C1.C1Schedule.C1Brush.Brush">
            <summary>
            
            </summary>
        </member>
        <member name="P:C1.C1Schedule.C1Brush.BrushInternal">
            <summary>
            Gets or sets WinForms/WebForms specific brush object based on the C1Brush definition. 
            </summary>
        </member>
        <member name="T:C1.C1Schedule.Label">
            <summary>
            The <see cref="T:C1.C1Schedule.Label"/> class represents the label which can be
            associated with the <see cref="T:C1.C1Schedule.Appointment"/> object. 
            </summary>
        </member>
        <member name="M:C1.C1Schedule.Label.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:C1.C1Schedule.Label"/> class with the specified key.
            </summary>
            <param name="key">The <see cref="T:System.Int32"/> value which should be used as label key.</param>
            <remarks>Use this constructor if your business logic requires setting custom key value.
            Make sure that you use the correct constructor overload (with integer or Guid key value) and that key value is unique.</remarks>
        </member>
        <member name="M:C1.C1Schedule.Label.#ctor(System.Guid)">
            <summary>
            Initializes a new instance of the <see cref="T:C1.C1Schedule.Label"/> class with the specified key.
            </summary>
            <param name="key">The <see cref="T:System.Guid"/> value which should be used as label key.</param>
            <remarks>Use this constructor if your business logic requires setting custom key value.
            Make sure that you use the correct constructor overload (with integer or Guid key value) and that key value is unique.</remarks>
        </member>
        <member name="M:C1.C1Schedule.Label.#ctor">
            <summary>
            Creates the new <see cref="T:C1.C1Schedule.Label"/> object with default parameters.
            </summary>
        </member>
        <member name="M:C1.C1Schedule.Label.#ctor(System.String)">
            <summary>
            Creates custom <see cref="T:C1.C1Schedule.Label"/> object with specified text.
            </summary>
            <param name="text">The text of the label.</param>
        </member>
        <member name="M:C1.C1Schedule.Label.#ctor(System.String,System.String)">
            <summary>
            Creates custom <see cref="T:C1.C1Schedule.Label"/> object with specified text and menu caption.
            </summary>
            <param name="text">The text of the label.</param>
            <param name="menuCaption">The menu caption for displaying label in dialogs.</param>
        </member>
        <member name="M:C1.C1Schedule.Label.#ctor(System.Drawing.Color,System.String,System.String)">
            <summary>
            Creates custom <see cref="T:C1.C1Schedule.Label"/> object with specified color, text and menu caption.
            </summary>
            <param name="color">The color of the label.</param>
            <param name="text">The text of the label.</param>
            <param name="menuCaption">The menu caption for displaying label in dialogs.</param>
        </member>
        <member name="M:C1.C1Schedule.Label.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Special constructor for deserialization.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/>.</param>
            <param name="context">The context information.</param>
        </member>
        <member name="T:C1.C1Schedule.LabelCollection">
            <summary>
            The <see cref="T:C1.C1Schedule.LabelCollection"/> is a collection of <see cref="T:C1.C1Schedule.Label"/> 
            objects which represents all available labels in C1Schedule object model.
            </summary> 
            <remarks>
            <para>By default it contains the following set of predefined labels:</para>
            <list type="bullet">
            <item><term></term><description>None</description></item>
            <item><term></term><description>Important</description></item>
            <item><term></term><description>Business</description></item>
            <item><term></term><description>Personal</description></item>
            <item><term></term><description>Vacation</description></item>
            <item><term></term><description>Must Attend</description></item>
            <item><term></term><description>Deadline</description></item>
            <item><term></term><description>Travel Required</description></item>
            <item><term></term><description>Needs Preparation</description></item>
            <item><term></term><description>Birthday</description></item>
            <item><term></term><description>Anniversary</description></item>
            <item><term></term><description>Phone Call</description></item>
            <para>It also allows adding of custom labels.</para>
            </list>
            </remarks>
        </member>
        <member name="F:C1.C1Schedule.LabelCollection.NoneLabelId">
            <summary>
            Defines Id of the None label.
            </summary>
        </member>
        <member name="M:C1.C1Schedule.LabelCollection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:C1.C1Schedule.LabelCollection"/> class.
            </summary>
        </member>
        <member name="M:C1.C1Schedule.LabelCollection.LoadDefaults">
            <summary>
            Restores the collection to its default state.
            </summary>
            <remarks>The <see cref="M:C1.C1Schedule.LabelCollection.LoadDefaults"/> method removes all 
            custom labels from the collection and leaves only the standard ones.
            </remarks>
        </member>
        <member name="T:C1.C1Schedule.LabelList">
            <summary>
            The <see cref="T:C1.C1Schedule.LabelList"/> is a list of <see cref="T:C1.C1Schedule.Label"/> objects.
            Only objects existing in the owning <see cref="T:C1.C1Schedule.LabelCollection"/> object 
            may be added to this list.
            </summary>
        </member>
        <member name="T:C1.C1Schedule.RecurrenceTypeEnum">
            <summary>
            Determines the types of recurrent appointments.
            </summary>
        </member>
        <member name="F:C1.C1Schedule.RecurrenceTypeEnum.Daily">
            <summary>
            The recurring appointment reoccurs on a daily basis.
            </summary>
        </member>
        <member name="F:C1.C1Schedule.RecurrenceTypeEnum.Workdays">
            <summary>
            The recurring appointment reoccurs every working day.
            </summary>
        </member>
        <member name="F:C1.C1Schedule.RecurrenceTypeEnum.Monthly">
            <summary>
            The recurring appointment reoccurs on a monthly basis. 
            </summary>
        </member>
        <member name="F:C1.C1Schedule.RecurrenceTypeEnum.MonthlyNth">
            <summary>
            The recurring appointment reoccurs every N months. 
            </summary>
        </member>
        <member name="F:C1.C1Schedule.RecurrenceTypeEnum.Weekly">
            <summary>
            The recurring appointment reoccurs on a weekly basis.
            </summary>
        </member>
        <member name="F:C1.C1Schedule.RecurrenceTypeEnum.Yearly">
            <summary>
            The recurring appointment reoccurs on an yearly basis.
            </summary>
        </member>
        <member name="F:C1.C1Schedule.RecurrenceTypeEnum.YearlyNth">
            <summary>
            The recurring appointment reoccurs every N years.
            </summary>
        </member>
        <member name="T:C1.C1Schedule.WeekDaysEnum">
            <summary>
            Determines the set of days and groups of days for recurrence patterns. 
            </summary>
        </member>
        <member name="F:C1.C1Schedule.WeekDaysEnum.None">
            <summary>
            No specific value; the actual value is obtained from 
            the root <see cref="T:C1.C1Schedule.Appointment"/> object. 
            </summary>
        </member>
        <member name="F:C1.C1Schedule.WeekDaysEnum.Sunday">
            <summary>
            Specifies Sunday.
            </summary>
        </member>
        <member name="F:C1.C1Schedule.WeekDaysEnum.Monday">
            <summary>
            Specifies Monday.
            </summary>
        </member>
        <member name="F:C1.C1Schedule.WeekDaysEnum.Tuesday">
            <summary>
            Specifies Tuesday. 
            </summary>
        </member>
        <member name="F:C1.C1Schedule.WeekDaysEnum.Wednesday">
            <summary>
            Specifies Wednesday.
            </summary>
        </member>
        <member name="F:C1.C1Schedule.WeekDaysEnum.Thursday">
            <summary>
            Specifies Thursday.
            </summary>
        </member>
        <member name="F:C1.C1Schedule.WeekDaysEnum.Friday">
            <summary>
            Specifies Friday.
            </summary>
        </member>
        <member name="F:C1.C1Schedule.WeekDaysEnum.Saturday">
            <summary>
            Specifies Saturday.
            </summary>
        </member>
        <member name="F:C1.C1Schedule.WeekDaysEnum.WeekendDays">
            <summary>
            Specifies Saturday and Sunday (or what ever days according 
            to the settings of the C1Schedule).
            </summary>
        </member>
        <member name="F:C1.C1Schedule.WeekDaysEnum.WorkDays">
            <summary>
            Specifies work days (all days except weekend).
            </summary>
        </member>
        <member name="F:C1.C1Schedule.WeekDaysEnum.EveryDay">
            <summary>
            Specifies every day of the week.
            </summary>
        </member>
        <member name="T:C1.C1Schedule.WeekOfMonthEnum">
            <summary>
            Determines the week in a month in which the appointment will occur.
            </summary>
        </member>
        <member name="F:C1.C1Schedule.WeekOfMonthEnum.First">
            <summary>
            The recurring appointment will occur on the specified 
            day or days of the first week in the month. 
            </summary>
        </member>
        <member name="F:C1.C1Schedule.WeekOfMonthEnum.Second">
            <summary>
            The recurring appointment will occur on the specified 
            day or days of the second week in the month. 
            </summary>
        </member>
        <member name="F:C1.C1Schedule.WeekOfMonthEnum.Third">
            <summary>
            The recurring appointment will occur on the specified 
            day or days of the third week in the month. 
            </summary>
        </member>
        <member name="F:C1.C1Schedule.WeekOfMonthEnum.Fourth">
            <summary>
            The recurring appointment will occur on the specified 
            day or days of the fourth week in the month. 
            </summary>
        </member>
        <member name="F:C1.C1Schedule.WeekOfMonthEnum.Last">
            <summary>
            The recurring appointment will occur on the specified 
            day or days of the last week in the month. 
            </summary>
        </member>
        <member name="T:C1.C1Schedule.RecurrencePattern">
            <summary>
            The <see cref="T:C1.C1Schedule.RecurrencePattern"/> class contains information 
            that describes the recurrence pattern and range 
            of the associated <see cref="T:C1.C1Schedule.Appointment"/> object. 
            </summary>
        </member>
        <member name="M:C1.C1Schedule.RecurrencePattern.OnPropertyChanged(System.String)">
            <summary>
            
            </summary>
            <param name="propertyName"></param>
        </member>
        <member name="M:C1.C1Schedule.RecurrencePattern.GetDescription(System.Globalization.CultureInfo)">
            <summary>
            Gets the human-readable description of the <see cref="T:C1.C1Schedule.RecurrencePattern"/> object
            according to the specified culture.
            </summary>
            <param name="culture">The <see cref="T:System.Globalization.CultureInfo"/> object used for getting calendar specific strings.</param>
            <returns>The <see cref="T:System.String"/> value described the <see cref="T:C1.C1Schedule.RecurrencePattern"/> object.</returns>
        </member>
        <member name="M:C1.C1Schedule.RecurrencePattern.GetDescription(C1.C1Schedule.CalendarInfo)">
            <summary>
            Gets the human-readable description of the <see cref="T:C1.C1Schedule.RecurrencePattern"/> object
            according to the specified <see cref="T:C1.C1Schedule.CalendarInfo"/> object.
            Use this method instead of <see cref="P:C1.C1Schedule.RecurrencePattern.Description"/> property if the <see cref="T:C1.C1Schedule.RecurrencePattern"/> 
            object does not belong to any <see cref="N:C1.C1Schedule"/> control.
            </summary>
            <param name="calendarInfo">The <see cref="T:C1.C1Schedule.CalendarInfo"/> object used for getting calendar specific strings.</param>
            <returns>The <see cref="T:System.String"/> value described the <see cref="T:C1.C1Schedule.RecurrencePattern"/> object.</returns>
            <remarks>If the <see cref="T:C1.C1Schedule.RecurrencePattern"/> object does not belong to the <see cref="N:C1.C1Schedule"/> control,
            its Description property will return the default description using current user culture and calendar settings.</remarks>
        </member>
        <member name="M:C1.C1Schedule.RecurrencePattern.GetOccurrence(System.DateTime,C1.C1Schedule.CalendarInfo)">
            <summary>
            Returns a specific instance of the Appointment object on the specified date.
            </summary>
            <param name="startDate"></param>
            <param name="info">CalendarInfo</param>
            <returns></returns>
            <remarks>The GetOccurrence method generates an exception if no appointment 
            of that series exists on the specified date.</remarks>
        </member>
        <member name="M:C1.C1Schedule.RecurrencePattern.FromXml(System.Xml.XmlNode)">
            <summary>
            Reconstructs recurrence pattern properties from an <see cref="T:System.Xml.XmlNode"/>. 
            </summary>
            <param name="node"></param>
            <returns>True if pattern has been changed.</returns>
        </member>
        <member name="M:C1.C1Schedule.RecurrencePattern.FromXml(System.Xml.XmlReader)">
            <summary>
            Reconstructs recurrence pattern properties from an <see cref="T:System.Xml.XmlReader"/>. 
            </summary>
            <param name="reader"></param>
            <returns>True if pattern has been changed.</returns>
        </member>
        <member name="M:C1.C1Schedule.RecurrencePattern.ToXml(System.Xml.XmlWriter)">
            <summary>
            Creates an XML encoding of the recurrence pattern properties. 
            </summary>
            <param name="writer"></param>
        </member>
        <member name="M:C1.C1Schedule.RecurrencePattern.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Special constructor for deserialization.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/>.</param>
            <param name="context">The context information.</param>
        </member>
        <member name="M:C1.C1Schedule.RecurrencePattern.Copy">
            <summary>
            Creates the copy of the <see cref="T:C1.C1Schedule.RecurrencePattern"/> object.
            </summary>
            <returns>The new <see cref="T:C1.C1Schedule.RecurrencePattern"/> instance.</returns>
        </member>
        <member name="P:C1.C1Schedule.RecurrencePattern.ParentAppointment">
            <summary>
            Gets the <see cref="T:C1.C1Schedule.Appointment"/> object which represents
            the master appointment for this <see cref="T:C1.C1Schedule.RecurrencePattern"/> object.
            </summary>
        </member>
        <member name="P:C1.C1Schedule.RecurrencePattern.Description">
            <summary>
            Gets the human-readable description of the <see cref="T:C1.C1Schedule.RecurrencePattern"/> object.
            </summary>
        </member>
        <member name="P:C1.C1Schedule.RecurrencePattern.RecurrenceType">
            <summary>
            Gets or sets the <see cref="T:C1.C1Schedule.RecurrenceTypeEnum"/> value
            determining the type of recurrence (daily, monthly, etc.).
            Default value is RecurrenceTypeEnum.Weekly.
            </summary>
        </member>
        <member name="P:C1.C1Schedule.RecurrencePattern.Interval">
             <summary>
             Gets or sets the <see cref="T:System.Int32"/> value specifying 
             the interval between occurrences of the recurrence. 
             The <see cref="P:C1.C1Schedule.RecurrencePattern.Interval"/> property works in conjunction with 
             the <see cref="P:C1.C1Schedule.RecurrencePattern.RecurrenceType"/> property to determine the cycle of the recurrence. 
             The maximum allowable value is 99 for weekly patterns and 999 for daily patterns.
             The default value is 1.
             </summary>
            <remarks>For example, if the <see cref="P:C1.C1Schedule.RecurrencePattern.RecurrenceType"/> is set 
             to <see cref="F:C1.C1Schedule.RecurrenceTypeEnum.Daily"/>, and the <see cref="P:C1.C1Schedule.RecurrencePattern.Interval"/> is set to 3, 
             the recurrence will occur every third day.</remarks> 
        </member>
        <member name="P:C1.C1Schedule.RecurrencePattern.EndTime">
            <summary>
            Gets or sets the <see cref="T:System.DateTime"/> value indicating 
            the end time for the given occurrence of the recurrence pattern. 
            </summary>
        </member>
        <member name="P:C1.C1Schedule.RecurrencePattern.StartTime">
            <summary>
            Gets or sets the <see cref="T:System.DateTime"/> value indicating 
            the start time for the given occurrence of the recurrence pattern. 
            </summary>
        </member>
        <member name="P:C1.C1Schedule.RecurrencePattern.Duration">
            <summary>
            Gets or sets the <see cref="T:System.TimeSpan"/> value indicating 
            the duration of each occurrence in the recurrence pattern.
            </summary>
        </member>
        <member name="P:C1.C1Schedule.RecurrencePattern.PatternStartDate">
            <summary>
            Gets or sets the <see cref="T:System.DateTime"/> value indicating 
            the start date of the recurrence pattern. 
            </summary>
        </member>
        <member name="P:C1.C1Schedule.RecurrencePattern.PatternEndDate">
            <summary>
            Gets or sets the <see cref="T:System.DateTime"/> value indicating 
            the end date of the recurrence pattern. 
            </summary>
            <remarks>This property is optional but must be coordinated 
            with other properties when setting up a recurrence pattern. 
            If this property or the <see cref="P:C1.C1Schedule.RecurrencePattern.Occurrences"/> property is set, 
            the pattern is considered to be finite, and the <see cref="P:C1.C1Schedule.RecurrencePattern.NoEndDate"/> 
            property is false. 
            If neither <see cref="P:C1.C1Schedule.RecurrencePattern.PatternEndDate"/> nor <see cref="P:C1.C1Schedule.RecurrencePattern.Occurrences"/> is set, 
            the pattern is considered infinite and <see cref="P:C1.C1Schedule.RecurrencePattern.NoEndDate"/> is true. 
            The <see cref="P:C1.C1Schedule.RecurrencePattern.Interval"/> property must be set before 
            setting <see cref="P:C1.C1Schedule.RecurrencePattern.PatternEndDate"/>.</remarks>
        </member>
        <member name="P:C1.C1Schedule.RecurrencePattern.Occurrences">
            <summary>
            Gets or sets the number of occurrences for the recurrence pattern.
            This property allows the definition of a recurrence pattern that 
            is only valid for the specified number of subsequent occurrences. 
            For example, you can set this property to 10 for a formal training 
            course that will be held on the next ten Thursday evenings.
            The default value is 0.
            </summary>
            <remarks>This property must be coordinated with other properties 
            when setting up a recurrence pattern. 
            If the <see cref="P:C1.C1Schedule.RecurrencePattern.PatternEndDate"/> property 
            or the <see cref="P:C1.C1Schedule.RecurrencePattern.Occurrences"/> property is set, the pattern 
            is considered to be finite and the <see cref="P:C1.C1Schedule.RecurrencePattern.NoEndDate"/> property is false. 
            If neither <see cref="P:C1.C1Schedule.RecurrencePattern.PatternEndDate"/> nor <see cref="P:C1.C1Schedule.RecurrencePattern.Occurrences"/> is set, 
            the pattern is considered infinite and <see cref="P:C1.C1Schedule.RecurrencePattern.NoEndDate"/> is true.</remarks>
        </member>
        <member name="P:C1.C1Schedule.RecurrencePattern.Instance">
            <summary>
            Get or sets the <see cref="T:C1.C1Schedule.WeekOfMonthEnum"/> value specifying 
            the count for which the recurrence pattern is valid for a given interval. 
            This property is only valid for recurrences of 
            the <see cref="F:C1.C1Schedule.RecurrenceTypeEnum.MonthlyNth"/> and 
            <see cref="F:C1.C1Schedule.RecurrenceTypeEnum.YearlyNth"/> types and allows the definition 
            of a recurrence pattern that is only valid for the Nth occurrence, 
            such as "the 2nd Sunday in March" pattern. 
            The default value is WeekOfMonthEnum.First.
            </summary>
        </member>
        <member name="P:C1.C1Schedule.RecurrencePattern.DayOfWeekMask">
            <summary>
            Gets or sets the <see cref="T:C1.C1Schedule.WeekDaysEnum"/> value representing the mask 
            for week days on which the recurring appointment occurs. 
            Monthly and yearly patterns are only valid for a single day. 
            Weekly patterns are only valid as the Or of the <see cref="P:C1.C1Schedule.RecurrencePattern.DayOfWeekMask"/>.
            The default value is 0.
            </summary>
            <remarks>
            When the <see cref="P:C1.C1Schedule.RecurrencePattern.RecurrenceType"/> property is set to 
              <see cref="F:C1.C1Schedule.RecurrenceTypeEnum.Daily"/>, the <see cref="P:C1.C1Schedule.RecurrencePattern.DayOfWeekMask"/> property 
              can only be set to <see cref="F:C1.C1Schedule.WeekDaysEnum.EveryDay"/>; setting the property 
              to any other value will result in an exception.
            When the <see cref="P:C1.C1Schedule.RecurrencePattern.RecurrenceType"/> property is set to 
              <see cref="F:C1.C1Schedule.RecurrenceTypeEnum.Workdays"/>, the <see cref="P:C1.C1Schedule.RecurrencePattern.DayOfWeekMask"/> property 
              can only be set to <see cref="F:C1.C1Schedule.WeekDaysEnum.WorkDays"/>; setting the property 
              to any other value will result in an exception.
            When the <see cref="P:C1.C1Schedule.RecurrencePattern.RecurrenceType"/> property is set to 
              <see cref="F:C1.C1Schedule.RecurrenceTypeEnum.Weekly"/>, the <see cref="P:C1.C1Schedule.RecurrencePattern.DayOfWeekMask"/> property 
              cannot be set to <see cref="F:C1.C1Schedule.WeekDaysEnum.None"/>; doing so will result 
              in an exception being thrown.
            When the <see cref="P:C1.C1Schedule.RecurrencePattern.RecurrenceType"/> property is set to 
              <see cref="F:C1.C1Schedule.RecurrenceTypeEnum.Monthly"/> or <see cref="F:C1.C1Schedule.RecurrenceTypeEnum.Yearly"/>
              the <see cref="P:C1.C1Schedule.RecurrencePattern.DayOfWeekMask"/> property is not applicable.</remarks>
        </member>
        <member name="P:C1.C1Schedule.RecurrencePattern.DayOfMonth">
            <summary>
            Gets or sets the number of the day in its respective month on which 
            each occurrence will occur. Applicable only when the <see cref="P:C1.C1Schedule.RecurrencePattern.RecurrenceType"/> 
            property is set to <see cref="F:C1.C1Schedule.RecurrenceTypeEnum.Monthly"/> 
            or <see cref="F:C1.C1Schedule.RecurrenceTypeEnum.Yearly"/>.
            The default value is 1.
            </summary>
        </member>
        <member name="P:C1.C1Schedule.RecurrencePattern.MonthOfYear">
            <summary>
            Gets or sets the value indicating which month of the year is valid 
            for the specified recurrence pattern. Can be a number from 1 to 12.
            This property is only valid for recurrence patterns whose <see cref="P:C1.C1Schedule.RecurrencePattern.RecurrenceType"/> 
            property is set to <see cref="F:C1.C1Schedule.RecurrenceTypeEnum.YearlyNth"/> 
            or <see cref="F:C1.C1Schedule.RecurrenceTypeEnum.Yearly"/>.
            The default value is 1.
            </summary>
        </member>
        <member name="P:C1.C1Schedule.RecurrencePattern.NoEndDate">
            <summary>
            Gets or sets the <see cref="T:System.Boolean"/> value indicating if
            the recurrence pattern is endless.
            The default value is True.
            </summary>
            <remarks>This property must be coordinated with other properties when 
            setting up a recurrence pattern. If the <see cref="P:C1.C1Schedule.RecurrencePattern.PatternEndDate"/> property 
            or the <see cref="P:C1.C1Schedule.RecurrencePattern.Occurrences"/> property is set, the pattern is considered 
            to be finite and the <see cref="P:C1.C1Schedule.RecurrencePattern.NoEndDate"/> property is false. 
            If neither <see cref="P:C1.C1Schedule.RecurrencePattern.PatternEndDate"/> nor <see cref="P:C1.C1Schedule.RecurrencePattern.Occurrences"/> is set, 
            the pattern is considered infinite and <see cref="P:C1.C1Schedule.RecurrencePattern.NoEndDate"/> is true.</remarks>
        </member>
        <member name="P:C1.C1Schedule.RecurrencePattern.Exceptions">
            <summary>
            Gets the <see cref="T:C1.C1Schedule.AppointmentList"/> object which holds the list 
            of <see cref="T:C1.C1Schedule.Appointment"/> objects that define the exceptions to that series 
            of appointments. <see cref="T:C1.C1Schedule.Appointment"/> objects are added to 
            the <see cref="P:C1.C1Schedule.RecurrencePattern.Exceptions"/> whenever a property in the corresponding 
            <see cref="T:C1.C1Schedule.Appointment"/> object is altered.
            </summary>
        </member>
        <member name="P:C1.C1Schedule.RecurrencePattern.RemovedOccurrences">
            <summary>
            Gets the <see cref="T:C1.C1Schedule.AppointmentList"/> object which holds the list 
            of <see cref="T:C1.C1Schedule.Appointment"/> objects removed from that series of appointments. 
            </summary>
        </member>
        <member name="T:C1.C1Schedule.Reminder">
            <summary>
            The <see cref="T:C1.C1Schedule.Reminder"/> class represents an object which allows users to keep track 
            of upcoming appointments by scheduling a pop-up dialog box to appear at a given time. 
            </summary>
        </member>
        <member name="M:C1.C1Schedule.Reminder.#ctor(C1.C1Schedule.Appointment)">
            <summary>
            Initializes a new instance of the <see cref="T:C1.C1Schedule.Reminder"/> class.
            </summary>
            <param name="owner"></param>
        </member>
        <member name="M:C1.C1Schedule.Reminder.Snooze(System.TimeSpan)">
            <summary>
            The <see cref="M:C1.C1Schedule.Reminder.Snooze(System.TimeSpan)"/> method notifies the scheduler to defer the triggering 
            of a reminder by the specified interval.
            </summary>
            <param name="delay">The <see cref="T:System.TimeSpan"/>value specifying the interval
            of time to wait before displaying the reminder again.</param>
        </member>
        <member name="M:C1.C1Schedule.Reminder.Dismiss">
            <summary>
            Dismisses the current <see cref="T:C1.C1Schedule.Reminder"/> object.
            </summary>
        </member>
        <member name="M:C1.C1Schedule.Reminder.OnPropertyChanged(System.String)">
            <summary>
            
            </summary>
            <param name="propertyName"></param>
        </member>
        <member name="P:C1.C1Schedule.Reminder.ParentAppointment">
            <summary>
            Gets the owning <see cref="T:C1.C1Schedule.Appointment"/> object. 
            </summary>
        </member>
        <member name="P:C1.C1Schedule.Reminder.Caption">
            <summary>
            Gets the <see cref="T:System.String"/> value representing the window caption text 
            of the <see cref="T:C1.C1Schedule.Appointment"/> object which 
            the <see cref="T:C1.C1Schedule.Reminder"/> object is applied to.
            </summary>
        </member>
        <member name="P:C1.C1Schedule.Reminder.IsActive">
            <summary>
            Gets a value that determines if the <see cref="T:C1.C1Schedule.Reminder"/> object 
            is currently active (visible). 
            </summary>
        </member>
        <member name="P:C1.C1Schedule.Reminder.NextReminderDate">
            <summary>
            Gets the <see cref="T:System.DateTime"/> value indicating the next time the specified 
            reminder will occur. 
            </summary>
            <remarks>The <see cref="P:C1.C1Schedule.Reminder.NextReminderDate"/> property value changes every time 
            the object's <see cref="M:C1.C1Schedule.Reminder.Snooze(System.TimeSpan)"/> method is executed or when the user 
            clicks the Snooze button.</remarks>
        </member>
        <member name="P:C1.C1Schedule.Reminder.OriginalReminderDate">
            <summary>
            Gets the <see cref="T:System.DateTime"/> value specifying the original date and time 
            that the specified reminder is set to occur. 
            It is calculated using the following formula: 
            <see cref="P:C1.C1Schedule.Reminder.OriginalReminderDate"/> = <see cref="P:C1.C1Schedule.Appointment.Start"/> 
              - <see cref="P:C1.C1Schedule.Appointment.ReminderTimeBeforeStart"/>.
            </summary>
            <remarks>This value corresponds to the original date and time 
            value before the <see cref="M:C1.C1Schedule.Reminder.Snooze(System.TimeSpan)"/> method is executed or the user 
            clicks the Snooze button.</remarks>
        </member>
        <member name="T:C1.C1Schedule.ReminderCollection">
            <summary>
            The <see cref="T:C1.C1Schedule.ReminderCollection"/> is a collection of all <see cref="T:C1.C1Schedule.Reminder"/> objects 
            that represents the reminders for all pending items.
            </summary>
            <remarks>Use the <see cref="P:C1.C1Schedule.C1ScheduleStorage.Reminders"/> property to get a reference  
            to the Reminders collection. 
            Reminders are created programmatically when a new <see cref="T:C1.C1Schedule.Appointment"/> object 
            is created with a reminder. For example, a reminder is created when 
            an <see cref="T:C1.C1Schedule.Appointment"/> object is created and the <see cref="P:C1.C1Schedule.Appointment.ReminderSet"/>
            property is set to true. 
            </remarks>
        </member>
        <member name="M:C1.C1Schedule.ReminderCollection.#ctor">
            <summary>
            Initialize new <see cref="T:C1.C1Schedule.ReminderCollection"/> object.
            </summary>
        </member>
        <member name="M:C1.C1Schedule.ReminderCollection.InsertItem(System.Int32,C1.C1Schedule.Reminder)">
            <summary>
            Overrides default behavior.
            </summary>
            <param name="index">The zero-based index of the item.</param>
            <param name="item">The <see cref="T:C1.C1Schedule.Reminder"/> object to insert.</param>
        </member>
        <member name="M:C1.C1Schedule.ReminderCollection.RemoveItem(System.Int32)">
            <summary>
            Overrides default behavior.
            </summary>
            <param name="index">The zero-based index of the item to remove.</param>
        </member>
        <member name="M:C1.C1Schedule.ReminderCollection.ClearItems">
            <summary>
            Overrides default behavior.
            </summary>
        </member>
        <member name="M:C1.C1Schedule.ReminderCollection.SetItem(System.Int32,C1.C1Schedule.Reminder)">
            <summary>
            Overrides default behavior.
            </summary>
            <param name="index">The zero-based index of the item.</param>
            <param name="item">The <see cref="T:C1.C1Schedule.Reminder"/> object to set.</param>
        </member>
        <member name="M:C1.C1Schedule.ReminderCollection.WaitProc(System.Object,System.Boolean)">
            <summary>
            Method to be called when it is time to show reminder.
            </summary>
            <param name="state"></param>
            <param name="timedOut"></param>
        </member>
        <member name="M:C1.C1Schedule.ReminderCollection.Dispose">
            <summary>
            Releases all unmanaged resources.
            </summary>
        </member>
        <member name="E:C1.C1Schedule.ReminderCollection.ReminderAdd">
            <summary>
            Occurs after a reminder is added.
            </summary>
        </member>
        <member name="E:C1.C1Schedule.ReminderCollection.ReminderChange">
            <summary>
            Occurs after a reminder has been modified.
            </summary>
        </member>
        <member name="E:C1.C1Schedule.ReminderCollection.ReminderFire">
            <summary>
            Occurs before the reminder is executed.
            </summary>
        </member>
        <member name="E:C1.C1Schedule.ReminderCollection.ReminderSnooze">
            <summary>
            Occurs when a reminder is dismissed using the Snooze button.
            </summary>
        </member>
        <member name="E:C1.C1Schedule.ReminderCollection.ReminderRemove">
            <summary>
            Occurs when a <see cref="T:C1.C1Schedule.Reminder"/>  object has been removed from the collection.
            </summary>
            <remarks>A reminder can be removed from the Reminders collection 
            by any of the following means:
            - The Reminders collection's Remove method. 
            - The Reminder object's Dismiss method. 
            - When the user clicks the Dismiss button. 
            - When a user turns off a meeting reminder from within the associated item.
            - When a user deletes an item that contains a reminder. </remarks>
        </member>
        <member name="T:C1.C1Schedule.ReminderEventArgs">
            <summary>
            Describes event data for <see cref="P:C1.C1Schedule.ReminderEventArgs.Reminder"/> object events.
            </summary>
        </member>
        <member name="M:C1.C1Schedule.ReminderEventArgs.#ctor(C1.C1Schedule.Reminder)">
            <summary>
            Initializes a new instance of the <see cref="T:C1.C1Schedule.ReminderEventArgs"/> 
            class with the specified <see cref="P:C1.C1Schedule.ReminderEventArgs.Reminder"/> object. 
            </summary>
            <param name="reminder">The <see cref="P:C1.C1Schedule.ReminderEventArgs.Reminder"/> object.</param>
        </member>
        <member name="P:C1.C1Schedule.ReminderEventArgs.Reminder">
            <summary>
            Gets the reminder which the event was raised for. 
            </summary>
        </member>
        <member name="T:C1.C1Schedule.CancelReminderEventHandler">
            <summary>
            Delegate for handling the cancelable event involving a single <see cref="T:C1.C1Schedule.Reminder"/> object. 
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:C1.C1Schedule.CancelReminderEventArgs"/> 
            that contains the event data.</param>
        </member>
        <member name="T:C1.C1Schedule.CancelReminderEventArgs">
            <summary>
            Describes event data for cancelable Reminder events.
            </summary>
        </member>
        <member name="M:C1.C1Schedule.CancelReminderEventArgs.#ctor(C1.C1Schedule.Reminder)">
            <summary>
            Initializes a new instance of the <see cref="T:C1.C1Schedule.CancelReminderEventArgs"/>
            class with the specified <see cref="P:C1.C1Schedule.CancelReminderEventArgs.Reminder"/> object. 
            </summary>
            <param name="reminder">The <see cref="T:C1.C1Schedule.Reminder"/> object.</param>
        </member>
        <member name="P:C1.C1Schedule.CancelReminderEventArgs.Reminder">
            <summary>
            Gets the reminder which the event was raised for. 
            </summary>
        </member>
        <member name="P:C1.C1Schedule.CancelReminderEventArgs.Cancel">
            <summary>
            Set to true to cancel the operation.
            </summary>
        </member>
        <member name="T:C1.C1Schedule.Resource">
            <summary>
            The <see cref="T:C1.C1Schedule.Resource"/> class represents the resource which can be
            associated with the <see cref="T:C1.C1Schedule.Appointment"/> object. 
            </summary>
        </member>
        <member name="M:C1.C1Schedule.Resource.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:C1.C1Schedule.Resource"/> class with the specified key.
            </summary>
            <param name="key">The <see cref="T:System.Int32"/> value which should be used as resource key.</param>
            <remarks>Use this constructor if your business logic requires setting custom key value.
            Make sure that you use the correct constructor overload (with integer or Guid key value) and that key value is unique.</remarks>
        </member>
        <member name="M:C1.C1Schedule.Resource.#ctor(System.Guid)">
            <summary>
            Initializes a new instance of the <see cref="T:C1.C1Schedule.Resource"/> class with the specified key.
            </summary>
            <param name="key">The <see cref="T:System.Guid"/> value which should be used as resource key.</param>
            <remarks>Use this constructor if your business logic requires setting custom key value.
            Make sure that you use the correct constructor overload (with integer or Guid key value) and that key value is unique.</remarks>
        </member>
        <member name="M:C1.C1Schedule.Resource.#ctor">
            <summary>
            Creates the new <see cref="T:C1.C1Schedule.Resource"/> object.
            </summary>
        </member>
        <member name="M:C1.C1Schedule.Resource.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Special constructor for deserialization.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/>.</param>
            <param name="context">The context information.</param>
        </member>
        <member name="T:C1.C1Schedule.ResourceCollection">
            <summary>
            The <see cref="T:C1.C1Schedule.ResourceCollection"/> is a collection of <see cref="T:C1.C1Schedule.Resource"/> 
            objects which represents all available resources in C1Schedule object model.
            </summary>
        </member>
        <member name="M:C1.C1Schedule.ResourceCollection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:C1.C1Schedule.ResourceCollection"/> class.
            </summary>
        </member>
        <member name="T:C1.C1Schedule.ResourceList">
            <summary>
            The <see cref="T:C1.C1Schedule.ResourceList"/> is a list of <see cref="T:C1.C1Schedule.Resource"/> objects.
            Only objects existing in the owning <see cref="T:C1.C1Schedule.ResourceCollection"/> object 
            may be added to this list.
            Use the <see cref="T:C1.C1Schedule.ResourceList"/> to associate the set of <see cref="T:C1.C1Schedule.Resource"/> objects 
            with an <see cref="T:C1.C1Schedule.Appointment"/> object.
            </summary>
        </member>
        <member name="T:C1.C1Schedule.StatusTypeEnum">
            <summary>
            Determines the type of status.
            </summary>
        </member>
        <member name="F:C1.C1Schedule.StatusTypeEnum.Free">
            <summary>
            This status means that a person is in the office and available to others. 
            </summary>
        </member>
        <member name="F:C1.C1Schedule.StatusTypeEnum.Tentative">
            <summary>
            This status means that a person is in the office and tentatively available to others.
            </summary>
        </member>
        <member name="F:C1.C1Schedule.StatusTypeEnum.Busy">
            <summary>
            This status means that a person is in the office but unavailable to others.
            </summary>
        </member>
        <member name="F:C1.C1Schedule.StatusTypeEnum.OutOfOffice">
            <summary>
            This status means that a person is out of the office and unavailable to others.
            </summary>
        </member>
        <member name="F:C1.C1Schedule.StatusTypeEnum.Custom">
            <summary>
            This status represents all custom statuses added to the StatusCollection.
            </summary>
        </member>
        <member name="T:C1.C1Schedule.Status">
            <summary>
            The <see cref="T:C1.C1Schedule.Status"/> class represents an availability status 
            for the <see cref="T:C1.C1Schedule.Appointment"/> object. 
            </summary>
        </member>
        <member name="M:C1.C1Schedule.Status.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:C1.C1Schedule.Status"/> class with the specified key.
            </summary>
            <param name="key">The <see cref="T:System.Int32"/> value which should be used as status key.</param>
            <remarks>Use this constructor if your business logic requires setting custom key value.
            Make sure that you use the correct constructor overload (with integer or Guid key value) and that key value is unique.</remarks>
        </member>
        <member name="M:C1.C1Schedule.Status.#ctor(System.Guid)">
            <summary>
            Initializes a new instance of the <see cref="T:C1.C1Schedule.Status"/> class with the specified key.
            </summary>
            <param name="key">The <see cref="T:System.Guid"/> value which should be used as status key.</param>
            <remarks>Use this constructor if your business logic requires setting custom key value.
            Make sure that you use the correct constructor overload (with integer or Guid key value) and that key value is unique.</remarks>
        </member>
        <member name="M:C1.C1Schedule.Status.#ctor">
            <summary>
            Creates the new custom <see cref="T:C1.C1Schedule.Status"/> object with default parameters.
            </summary>
        </member>
        <member name="M:C1.C1Schedule.Status.#ctor(C1.C1Schedule.StatusTypeEnum)">
            <summary>
            Creates a new instance of the <see cref="T:C1.C1Schedule.Status"/> class 
            and initializes it with the specified type. 
            </summary>
            <param name="type">The <see cref="T:C1.C1Schedule.StatusTypeEnum"/> value.</param>
        </member>
        <member name="M:C1.C1Schedule.Status.#ctor(C1.C1Schedule.StatusTypeEnum,System.Globalization.CultureInfo)">
            <summary>
            Creates a new instance of the <see cref="T:C1.C1Schedule.Status"/> class 
            and initializes it with the specified type. 
            </summary>
            <param name="type">The <see cref="T:C1.C1Schedule.StatusTypeEnum"/> value.</param>
            <param name="culture">The <see cref="T:System.Globalization.CultureInfo"/> value.</param>
        </member>
        <member name="M:C1.C1Schedule.Status.#ctor(System.String)">
            <summary>
            Creates a new instance of the custom <see cref="T:C1.C1Schedule.Status"/> object with the specified text.
            </summary>
            <param name="text">The <see cref="T:System.String"/> value.</param>
        </member>
        <member name="M:C1.C1Schedule.Status.#ctor(System.String,System.String)">
            <summary>
            Creates the new custom <see cref="T:C1.C1Schedule.Status"/> object with specified text and menu caption.
            </summary>
            <param name="text">The <see cref="T:System.String"/> value.</param>
            <param name="menuCaption">The menu caption for displaying status in dialogs.</param>
        </member>
        <member name="M:C1.C1Schedule.Status.#ctor(System.Drawing.Color,System.String,System.String)">
            <summary>
            Creates the new custom <see cref="T:C1.C1Schedule.Status"/> object with specified color, 
            text and menu caption.
            </summary>
            <param name="color">The color which will be used for displaying status.</param>
            <param name="text">The <see cref="T:System.String"/> value.</param>
            <param name="menuCaption">The menu caption for displaying status in dialogs.</param>
        </member>
        <member name="M:C1.C1Schedule.Status.#ctor(System.Drawing.Color,System.String,System.String,C1.C1Schedule.C1Brush)">
            <summary>
            Creates the new custom <see cref="T:C1.C1Schedule.Status"/> object with specified parameters.
            </summary>
            <param name="color">The color which will be used for displaying status.</param>
            <param name="text">The <see cref="T:System.String"/> value.</param>
            <param name="menuCaption">The menu caption for displaying status in dialogs.</param>
            <param name="brush">The brush which will be used for displaying status.</param>
        </member>
        <member name="M:C1.C1Schedule.Status.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Special constructor for deserialization.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/>.</param>
            <param name="context">The context information.</param>
        </member>
        <member name="P:C1.C1Schedule.Status.StatusType">
            <summary>
            Gets the <see cref="T:C1.C1Schedule.StatusTypeEnum"/> value determining the type of the status. 
            </summary>
        </member>
        <member name="T:C1.C1Schedule.StatusCollection">
            <summary>
            The <see cref="T:C1.C1Schedule.StatusCollection"/> is a collection of <see cref="T:C1.C1Schedule.Status"/> 
            objects which represents all available statuses in C1Schedule object model.
            By default it contains the set of predefined statuses. 
            </summary>
        </member>
        <member name="M:C1.C1Schedule.StatusCollection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:C1.C1Schedule.StatusCollection"/> class.
            </summary>
        </member>
        <member name="M:C1.C1Schedule.StatusCollection.LoadDefaults">
            <summary>
            Restores the collection to its default state.
            </summary>
            <remarks>The <see cref="M:C1.C1Schedule.StatusCollection.LoadDefaults"/> method removes all the custom 
            appointment statuses from the collection and leaves only the standard ones.
            </remarks>
        </member>
        <member name="P:C1.C1Schedule.StatusCollection.Item(C1.C1Schedule.StatusTypeEnum)">
            <summary>
            Gets the <see cref="T:C1.C1Schedule.Status"/> object specified by the appointment status type. 
            For custom statuses returns the first occurrence.
            If there is no such <see cref="T:C1.C1Schedule.Status"/> object in the collection, returns null.
            </summary>
            <param name="type">The <see cref="T:C1.C1Schedule.StatusTypeEnum"/> value.</param>
            <returns>The <see cref="T:C1.C1Schedule.Status"/> object.</returns>
        </member>
        <member name="T:C1.C1Schedule.StatusList">
            <summary>
            The <see cref="T:C1.C1Schedule.StatusList"/> is a list of <see cref="T:C1.C1Schedule.Status"/> objects.
            Only objects existing in the owning <see cref="T:C1.C1Schedule.StatusCollection"/> object 
            may be added to this list.
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1Editor.RibbonUI">
            <summary>
            RibbonUI
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Editor.RibbonUI.DefaultCreate">
            <summary>
            DefaultCreate
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Editor.RibbonUI.GetToolbar_save_tb">
            <summary>
            Get the toolbar named 'save_tb'.
            </summary>
            <returns>return C1ToolBar object.</returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Editor.RibbonUI.GetToolbar_edit_tb">
            <summary>
            Get the toolbar named 'edit_tb'.
            </summary>
            <returns>return C1ToolBar object.</returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Editor.RibbonUI.GetToolbar_font_tb">
            <summary>
            Get the toolbar named 'font_tb'.
            </summary>
            <returns>return C1ToolBar object.</returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Editor.RibbonUI.GetToolbar_para_tb">
            <summary>
            Get the toolbar named 'para_tb'.
            </summary>
            <returns>return C1ToolBar object.</returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Editor.RibbonUI.GetToolbar_review_spell_tb">
            <summary>
            Get the toolbar named 'review_spell_tb'.
            </summary>
            <returns>return C1ToolBar object.</returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Editor.RibbonUI.GetToolbar_review_inspect_tb">
            <summary>
            Get the toolbar named 'review_inspect_tb'.
            </summary>
            <returns>return C1ToolBar object.</returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Editor.RibbonUI.GetToolbar_table_tb">
            <summary>
            Get the toolbar named 'table_tb'.
            </summary>
            <returns>return C1ToolBar object.</returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Editor.RibbonUI.GetToolbar_table_edit_tb">
            <summary>
            Get the toolbar named 'table_edit_tb'.
            </summary>
            <returns>return C1ToolBar object.</returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Editor.RibbonUI.GetToolbar_break_tb">
            <summary>
            Get the toolbar named 'break_tb'.
            </summary>
            <returns>return C1ToolBar object.</returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Editor.RibbonUI.GetToolbar_forms_tb">
            <summary>
            Get the toolbar named 'forms_tb'.
            </summary>
            <returns>return C1ToolBar object.</returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Editor.RibbonUI.GetToolbar_link_tb">
            <summary>
            Get the toolbar named 'link_tb'.
            </summary>
            <returns>return C1ToolBar object.</returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Editor.RibbonUI.GetToolbar_special_tb">
            <summary>
            Get the toolbar named 'special_tb'.
            </summary>
            <returns>return C1ToolBar object.</returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Editor.RibbonUI.#ctor(C1.Web.UI.Controls.C1Editor.C1Editor,System.Boolean)">
            <summary>
            RibbonUI class
            </summary>
            <param name="editor">Parent <see cref="T:C1.Web.UI.Controls.C1Editor.C1Editor"/> for this instance.</param>
            <param name="isDesign">If <see cref="T:C1.Web.UI.Controls.C1Editor.C1Editor"/> is rendered for design mode.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Editor.RibbonUI.Create">
            <summary>
            Create a Ribbon UI for C1Editor
            </summary>
            <returns>Parent control that contains all the children of this UI.</returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Editor.RibbonUI.GetToolbar(System.String,System.String,System.Int32)">
            <summary>
            Create a <see cref="N:C1.Web.UI.Controls.C1ToolBar"/> object.
            </summary>
            <param name="id">Object ID.</param>
            <param name="css">Toolbar css</param>
            <param name="width">Toolbar width(in pixcels)</param>
            <returns></returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Editor.RibbonUI.GetFooterPanel">
            <summary>
            Creates footer panel for <see cref="T:C1.Web.UI.Controls.C1Editor.C1Editor"/>.
            </summary>
            <returns></returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Editor.RibbonUI.GetBodyPanel">
            <summary>
            Creates body panel for <see cref="T:C1.Web.UI.Controls.C1Editor.C1Editor"/>.
            </summary>
            <returns></returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Editor.RibbonUI.CreateSplitter">
            <summary>
            Create a Splitter for the control.
            </summary>
            <returns></returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Editor.RibbonUI.GetBodyPanelHeight">
            <summary>
            Get height of the group.
            </summary>
            <returns></returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Editor.RibbonUI.CreatePathSelector">
            <summary>
            Create a PathSelector for the control.
            </summary>
            <returns></returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Editor.RibbonUI.GetHeaderPanel">
            <summary>
            GetHeaderPanel
            </summary>
            <returns></returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Editor.RibbonUI.CreateGroup(C1.Web.UI.Controls.C1Editor.C1EditorGroup)">
            <summary>
            CreateGroup
            </summary>
            <param name="group"></param>
            <returns></returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Editor.RibbonUI.GetToolbarPanel">
            <summary>
            Creates tool bar panel for <see cref="T:C1.Web.UI.Controls.C1Editor.C1Editor"/>.
            </summary>
            <returns></returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Editor.RibbonUI.CreateRibbonGroup(C1.Web.UI.Controls.C1Editor.EditorRibbonGroup)">
            <summary>
            Creates ribbon group.
            </summary>
            <param name="editorRibbonGroup">EditorRibbonGroup Type</param>
            <returns></returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Editor.RibbonUI.GetSplitButton(System.String,System.String,System.String,C1.Web.UI.TextImageRelation,System.String,System.String,C1.Web.UI.Controls.C1Editor.IconType)">
            <summary>
            Get split button.
            </summary>
            <param name="text"></param>
            <param name="toolTip"></param>
            <param name="css"></param>
            <param name="textImageRelation"></param>
            <param name="imageName"></param>
            <param name="cmdName"></param>
            <param name="iconType"></param>
            <returns></returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Editor.RibbonUI.GetToolbarDropDownList(System.String,System.String,System.String)">
            <summary>
            Create a <see cref="T:C1.Web.UI.Controls.C1ToolBar.C1ToolBarDropDownList"/> object.
            </summary>
            <param name="id"><see cref="T:C1.Web.UI.Controls.C1ToolBar.C1ToolBarDropDownList"/> ID</param>
            <param name="text"><see cref="T:C1.Web.UI.Controls.C1ToolBar.C1ToolBarDropDownList"/> Text</param>
            <param name="css"><see cref="T:C1.Web.UI.Controls.C1ToolBar.C1ToolBarDropDownList"/> CSS</param>
            <returns><see cref="T:C1.Web.UI.Controls.C1ToolBar.C1ToolBarDropDownList"/> object</returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Editor.RibbonUI.GetC1ToolbarGroup(System.String,System.String)">
            <summary>
            Get group of C1Toolbar.
            </summary>
            <param name="text"></param>
            <param name="css"></param>
            <returns></returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Editor.RibbonUI.GetC1ToolbarGroup(System.String,System.String,System.Int32)">
            <summary>
            Get group of C1Toolbar.
            </summary>
            <param name="text"></param>
            <param name="css"></param>
            <param name="width"></param>
            <returns></returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Editor.RibbonUI.GetToolbarButton(System.String,System.String,System.String,C1.Web.UI.TextImageRelation,System.String,System.String,C1.Web.UI.Controls.C1Editor.IconType)">
            <summary>
            Get button of Toolbar.
            </summary>
            <param name="text"></param>
            <param name="toolTip"></param>
            <param name="css"></param>
            <param name="textImageRelation"></param>
            <param name="imageName"></param>
            <param name="cmdName"></param>
            <param name="iconType"></param>
            <returns></returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Editor.RibbonUI.GetToolbarButton(System.String,System.String,System.String,System.Boolean,System.String,C1.Web.UI.TextImageRelation,System.String,System.String,C1.Web.UI.Controls.C1Editor.IconType)">
            <summary>
            Get button of Toolbar.
            </summary>
            <param name="text"></param>
            <param name="toolTip"></param>
            <param name="value"></param>
            <param name="showToolTip"></param>
            <param name="css"></param>
            <param name="textImageRelation"></param>
            <param name="imageName"></param>
            <param name="cmdName"></param>
            <param name="iconType"></param>
            <returns></returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Editor.RibbonUI.GetToolbar(System.String,System.String)">
            <summary>
            Get toolbar.
            </summary>
            <param name="id"></param>
            <param name="css"></param>
            <returns></returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Editor.RibbonUI.CreateContainer">
            <summary>
            Create a container for the control.
            </summary>
            <returns>Return a control.</returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Editor.RibbonUI.CreateContextMenu">
            <summary>
            Create a ContextMenu for C1Editor.
            </summary>
            <returns>The control.</returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Editor.RibbonUI.CreateMenuItem(System.String,System.String,System.String)">
            <summary>
            Create a MenuItem for ContextMenu of C1Editor.
            </summary>
            <param name="text">The specified text.</param>
            <param name="liCss">The specified LI css.</param>
            <param name="anchorCss">The specified Anchor css.</param>
            <returns>The control.</returns>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Editor.RibbonUI.TabPages">
            <summary>
            
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Editor.RibbonUI.IsFF">
            <summary>
            IsFF
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Editor.RibbonUI.CurrentPage">
            <summary>
            Get current page.
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1Editor.UIConst">
            <summary>
            Contains all the string constants that will be used when constructing Control hierarchy for <see cref="T:C1.Web.UI.Controls.C1Editor.C1Editor"/>.
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1Schedule.CommandBase">
            <summary>
            Command Base class.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Schedule.CommandBase.#ctor(C1.Web.UI.Controls.C1Schedule.C1Schedule)">
            <summary>
            Initializes a new instance of the <see cref="T:C1.Web.UI.Controls.C1Schedule.CommandBase"/> class.
            </summary>
            <param name="control">The control.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Schedule.CommandBase.Execute">
            <summary>
            Executes command.
            </summary>
            <returns></returns>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Schedule.CommandBase.Control">
            <summary>
            Gets the control.
            </summary>
            <value>The control.</value>
        </member>
        <member name="T:C1.Web.UI.Controls.C1Schedule.C1Schedule">
            <summary>
            <para>The <see cref="T:C1.Web.UI.Controls.C1Schedule.C1Schedule"/> is WebControl which is used to implement 
            interactions between end-users and the scheduling application.</para>
            <para>The main purpose of this control is to show the scheduled data (appointments) 
            on a WebForm using one of the possible data views.</para>
            <para>It allows appointments to be created, edited and deleted, 
            and all other actions required by end-users to schedule their timetables 
            to be performed.</para>
            
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Schedule.C1Schedule.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:C1.Web.UI.Controls.C1Schedule.C1Schedule"/> web control.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Schedule.C1Schedule.SetViewTypeValue(C1.Web.UI.Controls.C1Schedule.ScheduleViewEnum)">
            <summary>
            Show buttons in the navigation bar at the top of schedule view.
            </summary>
            COMMENTED: OBSOLETE.
        </member>
        <member name="M:C1.Web.UI.Controls.C1Schedule.C1Schedule.RegisterRunTimeStyleSheets(System.Boolean)">
            <summary>
            Override this method if you want to render additional style sheets that will be use by control only at run-time.
            </summary>
            <param name="beforeVisualStyle"></param>
            <remarks>Primarily this method used by control developers.
            Note, stylesheet styles.css from embedded VisualStyle will be included automatically by VisualStyle mechanism.
            </remarks>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Schedule.C1Schedule.OnInit(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Web.UI.Control.Init"/> event.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs"/> object that contains the event data.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Schedule.C1Schedule.GetCultureInfoScriptBlockText">
            <summary>
            Returns client script text for client Culture initialization
            </summary>
            <returns></returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Schedule.C1Schedule.ResolveClientUrl(System.String)">
            <summary>
            Resolve Client Url for using in browser
            </summary>
            <param name="url"></param>
            <returns></returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Schedule.C1Schedule.SaveScheduleDataToLocalFile">
            <summary>
            Saves the schedule data to local file.
            </summary>
            <returns></returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Schedule.C1Schedule.LoadViewState(System.Object)">
            <summary>
            Restores view-state information from a previous request that was saved 
            with the SaveViewState() method.
            </summary>
            <param name="state"></param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Schedule.C1Schedule.SaveViewState">
            <summary>
            This member overrides Control.SaveViewState.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Schedule.C1Schedule.TrackViewState">
            <summary>
            This member overrides Control.TrackViewState.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Schedule.C1Schedule.GetScriptDescriptors">
            <summary>
            Gets ScriptDescriptors.
            </summary>
            <returns></returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Schedule.C1Schedule.GetScriptReferences">
            <summary>
            Gets ScriptReferences.
            </summary>
            <returns></returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Schedule.C1Schedule.CreateChildControls">
            <summary>
            CreateChildControls
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Schedule.C1Schedule.CreateWindowObject(System.String)">
            <summary>
            Create a C1Window object.
            </summary>
            <param name="windowID">ID that will be assigned to new C1Window object.</param>
            <returns>New C1Window object</returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Schedule.C1Schedule.Render(System.Web.UI.HtmlTextWriter)">
            <summary>
            Render
            </summary>
            <param name="writer"></param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Schedule.C1Schedule.RenderDesignTimeStyleSheets(System.Web.UI.HtmlTextWriter,System.Boolean)">
            <summary>
            Override this method if you want to render additional style sheets that will be use by control only at design-time.
            </summary>
            <param name="writer"></param>
            <param name="beforeVisualStyle"></param>
            <remarks>Primarily this method used by control developers.
            Note, stylesheet styles.css from embedded VisualStyle will be included automatically by VisualStyle mechanism.</remarks>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Schedule.C1Schedule.OnPreRender(System.EventArgs)">
            <summary>
            OnPreRender. 
            Register client script.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Schedule.C1Schedule.GetUnsavedDescription(System.Collections.Hashtable,System.Globalization.CultureInfo,C1.C1Schedule.CalendarInfo)">
            <summary>
            Gets the human-readable description of the <see cref="T:C1.C1Schedule.RecurrencePattern"/> object
            according to the specified culture. 
            </summary>
            <param name="aHashtable">The <see cref="T:System.Collections.Hashtable"/> collection of attributes that describes unsaved <see cref="T:C1.C1Schedule.RecurrencePattern"/></param>
            <param name="culture">The <see cref="T:System.Globalization.CultureInfo"/> object used for getting calendar specific strings.</param>
            <param name="info">The <see cref="P:C1.Web.UI.Controls.C1Schedule.C1Schedule.CalendarInfo"/> object used for  management and exposition of all date-related data to C1Schedule controls.</param>
            <returns>The <see cref="T:System.String"/> value described the <see cref="T:C1.C1Schedule.RecurrencePattern"/> object.</returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Schedule.C1Schedule.GetCallbackResult">
            <summary>
            Returns the results of a callback event that targets a control.
            </summary>
            <returns>The result of the callback.</returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Schedule.C1Schedule.LoadClientPropertiesState(System.Collections.Hashtable)">
            <summary>
            Loads the state of the client properties.
            </summary>
            <param name="propertiesState">State of the properties.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Schedule.C1Schedule.RaiseCallbackEvent(System.String)">
            <summary>
            Processes a callback event that targets a control.
            </summary>
            <param name="eventArgument">A string that represents an event argument to pass to the event handler.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Schedule.C1Schedule.ResolveClientUrlOrResource(System.String)">
            <summary>
            Resolve client url or resource name.
            </summary>
            <param name="relativeUrl"></param>
            <returns></returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Schedule.C1Schedule.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)">
            <summary>
            When implemented by a class, processes postback data for an ASP.NET server control.
            </summary>
            <param name="postDataKey">The key identifier for the control.</param>
            <param name="postCollection">The collection of all incoming name values.</param>
            <returns>
            true if the server control's state changes as a result of the postback; otherwise, false.
            </returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Schedule.C1Schedule.RaisePostDataChangedEvent">
            <summary>
            When implemented by a class, signals the server control to notify the ASP.NET application that the state of the control has changed.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Schedule.C1Schedule.RaisePostBackEvent(System.String)">
            <summary>
            When implemented by a class, enables a server control to process an event raised when a form is posted to the server.
            </summary>
            <param name="eventArgument">A <see cref="T:System.String"/> that represents an optional event argument to be passed to the event handler.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Schedule.C1Schedule.InternalRaisePostbackServerEvents">
            <summary>
            Internal raise postback server events.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Schedule.C1Schedule.Appointments">
            <summary>
            Gets the appointments.
            </summary>
            <value>The appointments.</value>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Schedule.C1Schedule.BoldedDates">
            <summary>
            Gets the bolded day dates (days that contains appointments).
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Schedule.C1Schedule.MasterAppointments">
            <summary>
            Gets the master appointments.
            </summary>
            <value>The master appointments.</value>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Schedule.C1Schedule.RecurrencePatterns">
            <summary>
            Gets the recurrence patterns.
            </summary>
            <value>The recurrence patterns.</value>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Schedule.C1Schedule.Labels">
            <summary>
            Gets the labels.
            </summary>
            <value>The labels.</value>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Schedule.C1Schedule.Statuses">
            <summary>
            Gets the statuses.
            </summary>
            <value>The statuses.</value>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Schedule.C1Schedule.Contacts">
            <summary>
            Gets the contacts.
            </summary>
            <value>The contacts.</value>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Schedule.C1Schedule.Categories">
            <summary>
            Gets the categories.
            </summary>
            <value>The categories.</value>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Schedule.C1Schedule.Resources">
            <summary>
            Gets the resources.
            </summary>
            <value>The resources.</value>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Schedule.C1Schedule.AccessKey">
            <summary>
            Gets or sets the access key that allows you to quickly navigate to the Web server control.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Schedule.C1Schedule.AutoPostBack">
            <summary>
            Automatically posts back to server if the schedule data or properties is changed.
            </summary>
            <remarks>If EnableCallback property is true then data will be sent through AJAX callbacks.</remarks>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Schedule.C1Schedule.ClientObjectID">
            <summary>
            Gets ID of the client side object associated with the control.
            </summary>
            <remarks>
            <para>
            <b>Note</b> ClientObjectID that equals ClientID can cause error 
            when control is working in Atlas UpdatePanel 
            </para>
            </remarks>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Schedule.C1Schedule.DataAreaScrollTop">
            <summary>
            Indicates DataArea scroll position for Day and WorkWeek Views. Default value is -1, means that scroll top position will be adjusted to current time slot automatically.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Schedule.C1Schedule.DefaultWeekViewLayout">
            <summary>
            Gets or sets the <see cref="P:C1.Web.UI.Controls.C1Schedule.C1Schedule.DefaultWeekViewLayout"/> value determining currently displayed week view layout.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Schedule.C1Schedule.DialogsPath">
            <summary>
            Path to folder with custom dialogs. 
            Note if a dialog not found in this folder then control will use embedded dialogs.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Schedule.C1Schedule.EditOptions">
            <summary>
            Determines the set of edit options available to the end-user.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Schedule.C1Schedule.WorkWeekOptionMode">
            <summary>
            Gets or sets the <see cref="P:C1.Web.UI.Controls.C1Schedule.C1Schedule.WorkWeekOptionMode"/> value determining the way the work week option is displayed.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Schedule.C1Schedule.Enabled">
            <summary>
            Gets or sets a value indicating whether the Web server control is enabled.
            </summary>
            <value></value>
            <returns>true if control is enabled; otherwise, false. The default is true.
            </returns>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Schedule.C1Schedule.SelectedDate">
            <summary>Gets or sets the selected date.</summary>
            <returns>A <see cref="T:System.DateTime"></see> 
            that represents the selected date. 
            The default value is DateTime.MinValue.</returns>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Schedule.C1Schedule.SelectedDates">
            <summary>Gets a collection of DateTime objects that represent 
            the selected dates on the C1WebSchedule control for DayView.</summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Schedule.C1Schedule.ShowReminderForm">
            <summary>
            Gets or sets the <see cref="T:System.Boolean"/> value indicating whether the control 
            should show the reminder form when a reminder alerts.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Schedule.C1Schedule.ShowAppointmentToolTip">
            <summary>
            Gets or sets a value indicating whether show appointment ToolTip when mouse is over appointment.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Schedule.C1Schedule.AppointmentText">
            <summary>
            Format of text in the appointment.
            {0} = Start, {1} = End, {2} = Subject, {3} = Location, {4} = Reserved(not used), {5} = body, {6} = line break.
            </summary>
            <example>
            {0:h:mmtt}-{1:h:mmtt} {2}
            </example>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Schedule.C1Schedule.TimeRulerFormat">
            <summary>
            Format of a text in the time ruler for the Day or HorizontalWeek view. Sample formats: '<b>'MM.y'</b>' HH:mm, HH:mm.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Schedule.C1Schedule.EscapedAppointmentText">
            <summary>
            Gets the resolved appointment text.
            </summary>
            <value>The resolved appointment text.</value>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Schedule.C1Schedule.UsedCulture">
            <summary>
            CultureInfo object what currently used by control.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Schedule.C1Schedule.UniqueID">
            <summary>
            Gets the unique, hierarchically qualified identifier for the server control.
            </summary>
            <value></value>
            <returns>
            The fully qualified identifier for the server control.
            </returns>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Schedule.C1Schedule.ViewType">
            <summary>
            Gets or sets the <see cref="P:C1.Web.UI.Controls.C1Schedule.C1Schedule.ViewType"/> value determining 
            currently displayed view.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Schedule.C1Schedule.Culture">
            <summary>
            CultureInfo object. Each culture has different conventions 
            for displaying dates, time, numbers, and other 
            information. Neutrals cultures are not supported.
            </summary>
            <remarks>returning value can be null if Culture is not defined</remarks>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Schedule.C1Schedule.UseDefaultStyle">
            <summary>
            Indicates whether control will use default style for empty style values.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Schedule.C1Schedule.CalendarInfo">
            <summary>
            The CalendarInfo manages and exposes date-related data to C1WebSchedule control.
            </summary>        
        </member>
        <member name="P:C1.Web.UI.Controls.C1Schedule.C1Schedule.DataStorage">
            <summary>
            Gets the C1WebScheduleStorage object.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Schedule.C1Schedule.ShowWorkTimeOnly">
            <summary>
            Gets or sets a value indicating if the control should show 
            only working hours in a Day View.  
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Schedule.C1Schedule.TimeInterval">
            <summary>
            Gets the TimeInterval. Used by control internally.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Schedule.C1Schedule.StartDayTime">
            <summary>
            Gets the start day time. Used by control internally.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Schedule.C1Schedule.EndDayTimeM">
            <summary>
            Gets the end of working day time in minutes. Used by control internally.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Schedule.C1Schedule.ShowStatusBar">
            <summary>
            Show status bar at the bottom of the schedule view.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Schedule.C1Schedule.ShowNavigationBar">
            <summary>
            Show navigation bar at the top of the schedule view.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Schedule.C1Schedule.ShowViewSelectionBar">
            <summary>
            Show the view selection bar at the top of the control.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Schedule.C1Schedule.DayTimeInterval">
            <summary>
            Indicates how to show WeekView in Office2003 or in Office2007 style.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Schedule.C1Schedule.DataFilePath">
            <summary>
            Filename what will be used for saving data when C1WebSchedule in not bounded to the data base.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Schedule.C1Schedule.TitleText">
            <summary>
            Text that will be displayed in the navigation bar. {0} = start date. {1} = end date.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Schedule.C1Schedule.Width">
            <summary>
            Gets or sets the width of the control.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Schedule.C1Schedule.Height">
            <summary>
            Gets or sets the height of the control.
            All height value minor than 300px will be ignored.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Schedule.C1Schedule.OnClientBeforeAppointmentCreate">
            <summary>
            Fires on client side before appointment create.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Schedule.C1Schedule.OnClientBeforeAppointmentDelete">
            <summary>
            Fires on client side before appointment delete.
            </summary>        
        </member>
        <member name="P:C1.Web.UI.Controls.C1Schedule.C1Schedule.OnClientBeforeAppointmentUpdate">
            <summary>
            Fires on client side before appointment update.
            </summary>        
        </member>
        <member name="P:C1.Web.UI.Controls.C1Schedule.C1Schedule.OnClientBeforeViewChange">
            <summary>
            Fires on client side before view change.
            </summary>        
        </member>
        <member name="P:C1.Web.UI.Controls.C1Schedule.C1Schedule.OnClientBeforeDialogOpen">
            <summary>
            Fires on client side before dialog open.
            </summary>
            <example>
            function C1Schedule1_OnClientBeforeDialogOpen(schedule, dialogEventArgs) {
                if (dialogEventArgs.get_dialogType() == C1.Web.UI.Controls.C1Schedule.DialogType.editAppointment) {
                    dialogEventArgs.set_cancel(true);
                    var appointment = dialogEventArgs.get_appointment();
                    alert("Here you can provide own 'Edit Appointment' dialog for appointment with subject '" + appointment.get_subject() + "'.");
                }
            }
            </example>  
        </member>
        <member name="P:C1.Web.UI.Controls.C1Schedule.C1Schedule.OnClientCellsSelectionChanged">
            <summary>
            Fires on the client side after cells selection changed.
            </summary>
            <value>The on client cells selection changed.</value>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Schedule.C1Schedule.Page">
            <summary>
              Gets a reference to the System.Web.UI.Page instance that contains the server
              control.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Schedule.C1Schedule.ViewStateFieldID">
            <summary>
            Gets ID of field used to store postback data
            </summary>
        </member>
        <member name="E:C1.Web.UI.Controls.C1Schedule.C1Schedule.BeforeAppointmentCreate">
            <summary>
            BeforeAppointmentCreate event. Fires before appointment create.
            </summary>
        </member>
        <member name="E:C1.Web.UI.Controls.C1Schedule.C1Schedule.BeforeAppointmentDelete">
            <summary>
            BeforeAppointmentDelete event. Fires before appointment delete.
            </summary>        
        </member>
        <member name="E:C1.Web.UI.Controls.C1Schedule.C1Schedule.BeforeAppointmentUpdate">
            <summary>
            BeforeAppointmentUpdate event. Fires before appointment update.
            </summary>
        </member>
        <member name="E:C1.Web.UI.Controls.C1Schedule.C1Schedule.BeforeViewChange">
            <summary>
            BeforeViewChange event. Fires before view change.
            </summary>
        </member>
        <member name="E:C1.Web.UI.Controls.C1Schedule.C1Schedule.CustomClientCall">
            <summary>
            CustomClientCall event. Fires custom client call.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Schedule.C1Schedule.EmbeddedVisualStyles">
            <summary>
            Defines names of the visual styles what embeded into control's assembly.
            </summary>
            <value></value>
            <remarks>Primarily this property used by control developers.</remarks>
        </member>
        <member name="T:C1.Web.UI.Controls.C1Schedule.C1WebDataStorage.C1WebCalendarInfo">
            <summary>
            The <see cref="T:C1.Web.UI.Controls.C1Schedule.C1WebDataStorage.C1WebCalendarInfo"/> class class manages and exposes 
            date-related data to C1WebSchedule control. 
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Schedule.C1WebDataStorage.C1WebCalendarInfo.#ctor(C1.Web.UI.Controls.C1Schedule.C1Schedule,System.Web.UI.StateBag,C1.C1Schedule.C1ScheduleStorage)">
            <summary>
            Initializes a new instance of the <see cref="T:C1.Web.UI.Controls.C1Schedule.C1WebDataStorage.C1WebCalendarInfo"/> object.
            </summary>
            <param name="parentSchedule"></param>
            <param name="aVs"></param>
            <param name="winStorage"></param>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Schedule.C1WebDataStorage.C1WebCalendarInfo.DateFormatString">
            <summary>
            Format string to display dates in appointments and built-in dialogs.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Schedule.C1WebDataStorage.C1WebCalendarInfo.TimeFormatString">
            <summary>
            Format string to display times in appointments and built-in dialogs.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Schedule.C1WebDataStorage.C1WebCalendarInfo.FirstDate">
            <summary>
            The minimum date allowed.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Schedule.C1WebDataStorage.C1WebCalendarInfo.TimeInterval">
            <summary>
            The time interval which is used for displaying time slots in the DayView.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Schedule.C1WebDataStorage.C1WebCalendarInfo.StartDayTime">
            <summary>
            Start of the working day.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Schedule.C1WebDataStorage.C1WebCalendarInfo.EndDayTime">
            <summary>
            End of the working day.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Schedule.C1WebDataStorage.C1WebCalendarInfo.WeekStart">
            <summary>
            First working day.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Schedule.C1WebDataStorage.C1WebCalendarInfo.StartDateTime">
            <summary>
            This property is obsolete. Use StartDayTime instead of StartDateTime.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Schedule.C1WebDataStorage.C1WebCalendarInfo.EndDateTime">
            <summary>
            This property is obsolete. Use EndDayTime instead of EndDateTime.
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1Schedule.C1WebDataStorage.C1WebScheduleStorage">
            <summary>
            The C1WebScheduleStorage implements all data operations for the 
            C1WebSchedule control. It does all the background work required by 
            the scheduling application. It contains specific data storages for appointments, 
            resources, contacts, Labels and statuses, which are intended for binding different 
            schedule views and collections to the data. 
            Also it implements data export and import to other scheduling applications and formats.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Schedule.C1WebDataStorage.C1WebScheduleStorage.Load(System.String)">
            <summary>
            Load data from the specified xml file.
            If C1WebScheduleStorage contains any data these data will be lost. 
            </summary>
            <param name="fileName"></param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Schedule.C1WebDataStorage.C1WebScheduleStorage.Save(System.String)">
            <summary>
            Saves all available data to the specified xml file. 
            If the file already exists it will be overwritten.
            </summary>
            <param name="fileName"></param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Schedule.C1WebDataStorage.C1WebScheduleStorage.Export(System.String,C1.C1Schedule.FileFormatEnum)">
            <summary>
            Exports the scheduler's data to a file in the specified format. 
            </summary>
            <param name="path">A <see cref="T:System.String"/> containing the full path 
            (including the file name and extension) to export the scheduler's data to. </param>
            <param name="format">The <see cref="T:C1.C1Schedule.FileFormatEnum"/> value.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Schedule.C1WebDataStorage.C1WebScheduleStorage.Export(System.IO.Stream,C1.C1Schedule.FileFormatEnum)">
            <summary>
            Exports the scheduler's data to a stream in the specified format. 
            </summary>
            <param name="stream">A <see cref="T:System.IO.Stream"/> object which specifies 
            the stream into which the scheduler's data will be exported.</param>
            <param name="format">The <see cref="T:C1.C1Schedule.FileFormatEnum"/> value.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Schedule.C1WebDataStorage.C1WebScheduleStorage.Export(System.String,System.Collections.Generic.IList{C1.C1Schedule.Appointment},C1.C1Schedule.FileFormatEnum)">
            <summary>
            Exports the appointments' data to a file in the specified format. 
            </summary>
            <param name="path">A <see cref="T:System.String"/> containing the full path 
            (including the file name and extension) to export. </param>
            <param name="appointments"><see cref="T:System.Collections.Generic.IList`1"/> to be exported.</param>
            <param name="format">The <see cref="T:C1.C1Schedule.FileFormatEnum"/> value.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Schedule.C1WebDataStorage.C1WebScheduleStorage.Export(System.IO.Stream,System.Collections.Generic.IList{C1.C1Schedule.Appointment},C1.C1Schedule.FileFormatEnum)">
            <summary>
            Exports the appointments' data to a stream in the specified format. 
            </summary>
            <param name="stream">A <see cref="T:System.IO.Stream"/> object which specifies 
            the stream into which the appointments's data will be exported.</param>
            <param name="appointments"><see cref="T:System.Collections.Generic.IList`1"/> to be exported.</param>
            <param name="format">The <see cref="T:C1.C1Schedule.FileFormatEnum"/> value.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Schedule.C1WebDataStorage.C1WebScheduleStorage.Import(System.String,C1.C1Schedule.FileFormatEnum)">
            <summary>
            Imports data into the scheduler from a file of the specified format.
            </summary>
            <param name="path">A <see cref="T:System.String"/> value containing the full path 
            (including the file name and extension) to a file which contains 
            the data to be imported into the scheduler.</param>
            <param name="format">The <see cref="T:C1.C1Schedule.FileFormatEnum"/> value.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Schedule.C1WebDataStorage.C1WebScheduleStorage.Import(System.IO.Stream,C1.C1Schedule.FileFormatEnum)">
            <summary>
            Imports the scheduler's data from a stream whose data is in the specified format.
            </summary>
            <param name="stream">A <see cref="T:System.IO.Stream"/> object which specifies 
            the stream that contains the data to import to the scheduler. </param>
            <param name="format">The <see cref="T:C1.C1Schedule.FileFormatEnum"/> value.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Schedule.C1WebDataStorage.C1WebScheduleStorage.ToString">
            <summary>
            ToString
            </summary>
            <returns></returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Schedule.C1WebDataStorage.C1WebScheduleStorage.IsNeedSaveDataToFile">
            <summary>
            Determines whether is need save data to file.
            </summary>
            <returns>
            	<c>true</c> if data must be saved to file; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Schedule.C1WebDataStorage.C1WebScheduleStorage.AppointmentStorage">
            <summary>
            Gets the <see cref="T:C1.Web.UI.Controls.C1Schedule.C1WebDataStorage.WebAppointmentStorage"/> object.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Schedule.C1WebDataStorage.C1WebScheduleStorage.CategoryStorage">
            <summary>
            Gets the <see cref="T:C1.Web.UI.Controls.C1Schedule.C1WebDataStorage.WebCategoryStorage"/> object.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Schedule.C1WebDataStorage.C1WebScheduleStorage.ContactStorage">
            <summary>
            Gets the <see cref="T:C1.Web.UI.Controls.C1Schedule.C1WebDataStorage.WebContactStorage"/> object.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Schedule.C1WebDataStorage.C1WebScheduleStorage.LabelStorage">
            <summary>
            Gets the <see cref="T:C1.Web.UI.Controls.C1Schedule.C1WebDataStorage.WebLabelStorage"/> object.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Schedule.C1WebDataStorage.C1WebScheduleStorage.ResourceStorage">
            <summary>
            Gets the <see cref="T:C1.Web.UI.Controls.C1Schedule.C1WebDataStorage.WebResourceStorage"/> object.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Schedule.C1WebDataStorage.C1WebScheduleStorage.StatusStorage">
            <summary>
            Gets the <see cref="T:C1.Web.UI.Controls.C1Schedule.C1WebDataStorage.WebStatusStorage"/> object.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Schedule.C1WebDataStorage.C1WebScheduleStorage.ViewState">
            <summary>
            ViewState
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1Schedule.C1WebDataStorage.AppointmentSerializableWrapper">
            <summary>
            This class preliminary used by control developers.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Schedule.C1WebDataStorage.AppointmentSerializableWrapper.#ctor(C1.C1Schedule.Appointment,System.String,C1.Web.UI.Controls.C1Schedule.C1WebDataStorage.C1WebScheduleStorage)">
            <summary>
            Initializes a new instance of the <see cref="T:C1.Web.UI.Controls.C1Schedule.C1WebDataStorage.AppointmentSerializableWrapper"/> class.
            </summary>
            <param name="ap">The ap.</param>
            <param name="aPrevId">A prev id.</param>
            <param name="storage">The storage.</param>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Schedule.C1WebDataStorage.AppointmentSerializableWrapper.Reminder">
            <summary>
            Gets the reminder.
            </summary>
            <value>The reminder.</value>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Schedule.C1WebDataStorage.AppointmentSerializableWrapper.Resources">
            <summary>
            Gets the resources ids.
            </summary>
            <value>The resources.</value>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Schedule.C1WebDataStorage.AppointmentSerializableWrapper.Categories">
            <summary>
            Gets the categories ids.
            </summary>
            <value>The categories.</value>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Schedule.C1WebDataStorage.AppointmentSerializableWrapper.Links">
            <summary>
            Gets the Contact links ids.
            </summary>
            <value>The links.</value>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Schedule.C1WebDataStorage.AppointmentSerializableWrapper.ReminderTimeBeforeStart">
            <summary>
            Gets the reminder time before start.
            </summary>
            <value>The reminder time before start.</value>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Schedule.C1WebDataStorage.AppointmentSerializableWrapper.ReminderSoundFile">
            <summary>
            Gets the reminder sound file.
            </summary>
            <value>The reminder sound file.</value>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Schedule.C1WebDataStorage.AppointmentSerializableWrapper.Duration">
            <summary>
            Gets the duration.
            </summary>
            <value>The duration.</value>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Schedule.C1WebDataStorage.AppointmentSerializableWrapper.Start">
            <summary>
            Gets the start.
            </summary>
            <value>The start.</value>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Schedule.C1WebDataStorage.AppointmentSerializableWrapper.End">
            <summary>
            Gets the end.
            </summary>
            <value>The end.</value>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Schedule.C1WebDataStorage.AppointmentSerializableWrapper.type_name">
            <summary>
            Gets the type_name.
            </summary>
            <value>The type_name.</value>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Schedule.C1WebDataStorage.AppointmentSerializableWrapper.IsChangedOnClient">
            <summary>
            Gets a value indicating whether this instance is changed on client.
            </summary>
            <value>
            	<c>true</c> if this instance is changed on client; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Schedule.C1WebDataStorage.AppointmentSerializableWrapper.Id">
            <summary>
            Gets the id.
            </summary>
            <value>The id.</value>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Schedule.C1WebDataStorage.AppointmentSerializableWrapper.PreviousId">
            <summary>
            Gets the previous id.
            </summary>
            <value>The previous id.</value>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Schedule.C1WebDataStorage.AppointmentSerializableWrapper.AllDayEvent">
            <summary>
            Gets a value indicating whether [all day event].
            </summary>
            <value><c>true</c> if [all day event]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Schedule.C1WebDataStorage.AppointmentSerializableWrapper.BusyStatus">
            <summary>
            Gets the busy status.
            </summary>
            <value>The busy status.</value>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Schedule.C1WebDataStorage.AppointmentSerializableWrapper.Body">
            <summary>
            Gets the body.
            </summary>
            <value>The body.</value>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Schedule.C1WebDataStorage.AppointmentSerializableWrapper.Importance">
            <summary>
            Gets the importance.
            </summary>
            <value>The importance.</value>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Schedule.C1WebDataStorage.AppointmentSerializableWrapper.Label">
            <summary>
            Gets the label.
            </summary>
            <value>The label.</value>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Schedule.C1WebDataStorage.AppointmentSerializableWrapper.Location">
            <summary>
            Gets the location.
            </summary>
            <value>The location.</value>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Schedule.C1WebDataStorage.AppointmentSerializableWrapper.RecurrenceState">
            <summary>
            Gets the state of the recurrence.
            </summary>
            <value>The state of the recurrence.</value>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Schedule.C1WebDataStorage.AppointmentSerializableWrapper.ReminderPlaySound">
            <summary>
            Gets a value indicating whether [reminder play sound].
            </summary>
            <value><c>true</c> if [reminder play sound]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Schedule.C1WebDataStorage.AppointmentSerializableWrapper.ReminderSet">
            <summary>
            Gets a value indicating whether [reminder set].
            </summary>
            <value><c>true</c> if [reminder set]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Schedule.C1WebDataStorage.AppointmentSerializableWrapper.Sensitivity">
            <summary>
            Gets the sensitivity.
            </summary>
            <value>The sensitivity.</value>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Schedule.C1WebDataStorage.AppointmentSerializableWrapper.Subject">
            <summary>
            Gets the subject.
            </summary>
            <value>The subject.</value>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Schedule.C1WebDataStorage.AppointmentSerializableWrapper.Private">
            <summary>
            Gets a value indicating whether this <see cref="T:C1.Web.UI.Controls.C1Schedule.C1WebDataStorage.AppointmentSerializableWrapper"/> is private.
            </summary>
            <value><c>true</c> if private; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Schedule.C1WebDataStorage.AppointmentSerializableWrapper.IsOneDay">
            <summary>
            Gets a value indicating whether this instance is one day.
            </summary>
            <value>
            	<c>true</c> if this instance is one day; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Schedule.C1WebDataStorage.AppointmentSerializableWrapper.IsRecurring">
            <summary>
            Gets a value indicating whether this instance is recurring.
            </summary>
            <value>
            	<c>true</c> if this instance is recurring; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Schedule.C1WebDataStorage.AppointmentSerializableWrapper.ReminderOverrideDefault">
            <summary>
            Gets a value indicating whether [reminder override default].
            </summary>
            <value>
            	<c>true</c> if [reminder override default]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:C1.Web.UI.Controls.C1Schedule.C1WebDataStorage.ReminderSerializableWrapper">
            <summary>
            This class preliminary used by control developers.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Schedule.C1WebDataStorage.ReminderSerializableWrapper.#ctor(C1.C1Schedule.Reminder)">
            <summary>
            Initializes a new instance of the <see cref="T:C1.Web.UI.Controls.C1Schedule.C1WebDataStorage.ReminderSerializableWrapper"/> class.
            </summary>
            <param name="r">The r.</param>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Schedule.C1WebDataStorage.ReminderSerializableWrapper.type_name">
            <summary>
            Gets the type_name.
            </summary>
            <value>The type_name.</value>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Schedule.C1WebDataStorage.ReminderSerializableWrapper.Caption">
            <summary>
            Gets the caption.
            </summary>
            <value>The caption.</value>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Schedule.C1WebDataStorage.ReminderSerializableWrapper.IsActive">
            <summary>
            Gets a value indicating whether this instance is active.
            </summary>
            <value><c>true</c> if this instance is active; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Schedule.C1WebDataStorage.ReminderSerializableWrapper.NextReminderDate">
            <summary>
            Gets the next reminder date.
            </summary>
            <value>The next reminder date.</value>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Schedule.C1WebDataStorage.ReminderSerializableWrapper.OriginalReminderDate">
            <summary>
            Gets the original reminder date.
            </summary>
            <value>The original reminder date.</value>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Schedule.C1WebDataStorage.ReminderSerializableWrapper.ParentAppointment">
            <summary>
            Gets the parent appointment.
            </summary>
            <value>The parent appointment.</value>
        </member>
        <member name="T:C1.Web.UI.Controls.C1Schedule.C1WebDataStorage.LabelSerializableWrapper">
            <summary>
            This class preliminary used by control developers.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Schedule.C1WebDataStorage.LabelSerializableWrapper.#ctor(C1.C1Schedule.Label)">
            <summary>
            Initializes a new instance of the <see cref="T:C1.Web.UI.Controls.C1Schedule.C1WebDataStorage.LabelSerializableWrapper"/> class.
            </summary>
            <param name="lbl">The LBL.</param>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Schedule.C1WebDataStorage.LabelSerializableWrapper.type_name">
            <summary>
            Gets the type_name.
            </summary>
            <value>The type_name.</value>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Schedule.C1WebDataStorage.LabelSerializableWrapper.Id">
            <summary>
            Gets the id.
            </summary>
            <value>The id.</value>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Schedule.C1WebDataStorage.LabelSerializableWrapper.Index">
            <summary>
            Gets the index.
            </summary>
            <value>The index.</value>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Schedule.C1WebDataStorage.LabelSerializableWrapper.MenuCaption">
            <summary>
            Gets the menu caption.
            </summary>
            <value>The menu caption.</value>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Schedule.C1WebDataStorage.LabelSerializableWrapper.Text">
            <summary>
            Gets the text.
            </summary>
            <value>The text.</value>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Schedule.C1WebDataStorage.LabelSerializableWrapper.Color">
            <summary>
            Gets the color.
            </summary>
            <value>The color.</value>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Schedule.C1WebDataStorage.LabelSerializableWrapper.Brush">
            <summary>
            Gets the brush.
            </summary>
            <value>The brush.</value>
        </member>
        <member name="T:C1.Web.UI.Controls.C1Schedule.C1WebDataStorage.ContactSerializableWrapper">
            <summary>
            This class preliminary used by control developers.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Schedule.C1WebDataStorage.ContactSerializableWrapper.#ctor(C1.C1Schedule.Contact,C1.Web.UI.Controls.C1Schedule.C1WebDataStorage.C1WebScheduleStorage)">
            <summary>
            Initializes a new instance of the <see cref="T:C1.Web.UI.Controls.C1Schedule.C1WebDataStorage.ContactSerializableWrapper"/> class.
            </summary>
            <param name="contact">The contact.</param>
            <param name="storage">The storage.</param>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Schedule.C1WebDataStorage.ContactSerializableWrapper.type_name">
            <summary>
            Gets the type_name.
            </summary>
            <value>The type_name.</value>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Schedule.C1WebDataStorage.ContactSerializableWrapper.Id">
            <summary>
            Gets the id.
            </summary>
            <value>The id.</value>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Schedule.C1WebDataStorage.ContactSerializableWrapper.Index">
            <summary>
            Gets the index.
            </summary>
            <value>The index.</value>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Schedule.C1WebDataStorage.ContactSerializableWrapper.MenuCaption">
            <summary>
            Gets the menu caption.
            </summary>
            <value>The menu caption.</value>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Schedule.C1WebDataStorage.ContactSerializableWrapper.Text">
            <summary>
            Gets the text.
            </summary>
            <value>The text.</value>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Schedule.C1WebDataStorage.ContactSerializableWrapper.Color">
            <summary>
            Gets the color.
            </summary>
            <value>The color.</value>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Schedule.C1WebDataStorage.ContactSerializableWrapper.Brush">
            <summary>
            Gets the brush.
            </summary>
            <value>The brush.</value>
        </member>
        <member name="T:C1.Web.UI.Controls.C1Schedule.C1WebDataStorage.CategorySerializableWrapper">
            <summary>
            This class preliminary used by control developers.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Schedule.C1WebDataStorage.CategorySerializableWrapper.#ctor(C1.C1Schedule.Category,C1.Web.UI.Controls.C1Schedule.C1WebDataStorage.C1WebScheduleStorage)">
            <summary>
            Initializes a new instance of the <see cref="T:C1.Web.UI.Controls.C1Schedule.C1WebDataStorage.CategorySerializableWrapper"/> class.
            </summary>
            <param name="category">The category.</param>
            <param name="storage">The storage.</param>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Schedule.C1WebDataStorage.CategorySerializableWrapper.type_name">
            <summary>
            Gets the type_name.
            </summary>
            <value>The type_name.</value>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Schedule.C1WebDataStorage.CategorySerializableWrapper.Id">
            <summary>
            Gets the id.
            </summary>
            <value>The id.</value>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Schedule.C1WebDataStorage.CategorySerializableWrapper.Index">
            <summary>
            Gets the index.
            </summary>
            <value>The index.</value>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Schedule.C1WebDataStorage.CategorySerializableWrapper.MenuCaption">
            <summary>
            Gets the menu caption.
            </summary>
            <value>The menu caption.</value>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Schedule.C1WebDataStorage.CategorySerializableWrapper.Text">
            <summary>
            Gets the text.
            </summary>
            <value>The text.</value>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Schedule.C1WebDataStorage.CategorySerializableWrapper.Color">
            <summary>
            Gets the color.
            </summary>
            <value>The color.</value>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Schedule.C1WebDataStorage.CategorySerializableWrapper.Brush">
            <summary>
            Gets the brush.
            </summary>
            <value>The brush.</value>
        </member>
        <member name="T:C1.Web.UI.Controls.C1Schedule.C1WebDataStorage.ResourceSerializableWrapper">
            <summary>
            This class preliminary used by control developers.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Schedule.C1WebDataStorage.ResourceSerializableWrapper.#ctor(C1.C1Schedule.Resource,C1.Web.UI.Controls.C1Schedule.C1WebDataStorage.C1WebScheduleStorage)">
            <summary>
            Initializes a new instance of the <see cref="T:C1.Web.UI.Controls.C1Schedule.C1WebDataStorage.ResourceSerializableWrapper"/> class.
            </summary>
            <param name="resource">The resource.</param>
            <param name="storage">The storage.</param>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Schedule.C1WebDataStorage.ResourceSerializableWrapper.type_name">
            <summary>
            Gets the type_name.
            </summary>
            <value>The type_name.</value>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Schedule.C1WebDataStorage.ResourceSerializableWrapper.Id">
            <summary>
            Gets the id.
            </summary>
            <value>The id.</value>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Schedule.C1WebDataStorage.ResourceSerializableWrapper.Index">
            <summary>
            Gets the index.
            </summary>
            <value>The index.</value>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Schedule.C1WebDataStorage.ResourceSerializableWrapper.MenuCaption">
            <summary>
            Gets the menu caption.
            </summary>
            <value>The menu caption.</value>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Schedule.C1WebDataStorage.ResourceSerializableWrapper.Text">
            <summary>
            Gets the text.
            </summary>
            <value>The text.</value>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Schedule.C1WebDataStorage.ResourceSerializableWrapper.Color">
            <summary>
            Gets the color.
            </summary>
            <value>The color.</value>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Schedule.C1WebDataStorage.ResourceSerializableWrapper.Brush">
            <summary>
            Gets the brush.
            </summary>
            <value>The brush.</value>
        </member>
        <member name="T:C1.Web.UI.Controls.C1Schedule.C1WebDataStorage.StatusSerializableWrapper">
            <summary>
            This class preliminary used by control developers.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Schedule.C1WebDataStorage.StatusSerializableWrapper.#ctor(C1.C1Schedule.Status,C1.Web.UI.Controls.C1Schedule.C1WebDataStorage.C1WebScheduleStorage)">
            <summary>
            Initializes a new instance of the <see cref="T:C1.Web.UI.Controls.C1Schedule.C1WebDataStorage.StatusSerializableWrapper"/> class.
            </summary>
            <param name="status">The status.</param>
            <param name="storage">The storage.</param>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Schedule.C1WebDataStorage.StatusSerializableWrapper.type_name">
            <summary>
            Gets the type_name.
            </summary>
            <value>The type_name.</value>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Schedule.C1WebDataStorage.StatusSerializableWrapper.Id">
            <summary>
            Gets the id.
            </summary>
            <value>The id.</value>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Schedule.C1WebDataStorage.StatusSerializableWrapper.Index">
            <summary>
            Gets the index.
            </summary>
            <value>The index.</value>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Schedule.C1WebDataStorage.StatusSerializableWrapper.MenuCaption">
            <summary>
            Gets the menu caption.
            </summary>
            <value>The menu caption.</value>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Schedule.C1WebDataStorage.StatusSerializableWrapper.StatusType">
            <summary>
            Gets the type of the status.
            </summary>
            <value>The type of the status.</value>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Schedule.C1WebDataStorage.StatusSerializableWrapper.Text">
            <summary>
            Gets the text.
            </summary>
            <value>The text.</value>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Schedule.C1WebDataStorage.StatusSerializableWrapper.Color">
            <summary>
            Gets the color.
            </summary>
            <value>The color.</value>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Schedule.C1WebDataStorage.StatusSerializableWrapper.Brush">
            <summary>
            Gets the brush.
            </summary>
            <value>The brush.</value>
        </member>
        <member name="T:C1.Web.UI.Controls.C1Schedule.C1WebDataStorage.BrushSerializableWrapper">
            <summary>
            This class preliminary used by control developers.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Schedule.C1WebDataStorage.BrushSerializableWrapper.#ctor(C1.C1Schedule.C1Brush)">
            <summary>
            Initializes a new instance of the <see cref="T:C1.Web.UI.Controls.C1Schedule.C1WebDataStorage.BrushSerializableWrapper"/> class.
            </summary>
            <param name="brush">The brush.</param>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Schedule.C1WebDataStorage.BrushSerializableWrapper.BackColor">
            <summary>
            Gets the color of the back.
            </summary>
            <value>The color of the back.</value>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Schedule.C1WebDataStorage.BrushSerializableWrapper.ForeColor">
            <summary>
            Gets the color of the fore.
            </summary>
            <value>The color of the fore.</value>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Schedule.C1WebDataStorage.BrushSerializableWrapper.Style">
            <summary>
            Gets the style.
            </summary>
            <value>The style.</value>
        </member>
        <member name="T:C1.Web.UI.Controls.C1Schedule.C1WebDataStorage.RecurrencePatternSerializableWrapper">
            <summary>
            This class preliminary used by control developers.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Schedule.C1WebDataStorage.RecurrencePatternSerializableWrapper.#ctor(C1.C1Schedule.RecurrencePattern,C1.Web.UI.Controls.C1Schedule.C1WebDataStorage.C1WebScheduleStorage)">
            <summary>
            Initializes a new instance of the <see cref="T:C1.Web.UI.Controls.C1Schedule.C1WebDataStorage.RecurrencePatternSerializableWrapper"/> class.
            </summary>
            <param name="rp">The rp.</param>
            <param name="storage">The storage.</param>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Schedule.C1WebDataStorage.RecurrencePatternSerializableWrapper.type_name">
            <summary>
            Gets the type_name.
            </summary>
            <value>The type_name.</value>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Schedule.C1WebDataStorage.RecurrencePatternSerializableWrapper.ParentAppointment">
            <summary>
            Gets the parent appointment.
            </summary>
            <value>The parent appointment.</value>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Schedule.C1WebDataStorage.RecurrencePatternSerializableWrapper.PatternStartDate">
            <summary>
            Gets the pattern start date.
            </summary>
            <value>The pattern start date.</value>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Schedule.C1WebDataStorage.RecurrencePatternSerializableWrapper.PatternEndDate">
            <summary>
            Gets the pattern end date.
            </summary>
            <value>The pattern end date.</value>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Schedule.C1WebDataStorage.RecurrencePatternSerializableWrapper.StartTime">
            <summary>
            Gets the start time.
            </summary>
            <value>The start time.</value>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Schedule.C1WebDataStorage.RecurrencePatternSerializableWrapper.EndTime">
            <summary>
            Gets the end time.
            </summary>
            <value>The end time.</value>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Schedule.C1WebDataStorage.RecurrencePatternSerializableWrapper.Duration">
            <summary>
            Gets the duration.
            </summary>
            <value>The duration.</value>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Schedule.C1WebDataStorage.RecurrencePatternSerializableWrapper.NoEndDate">
            <summary>
            Gets a value indicating whether [no end date].
            </summary>
            <value><c>true</c> if [no end date]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Schedule.C1WebDataStorage.RecurrencePatternSerializableWrapper.RecurrenceType">
            <summary>
            Gets the type of the recurrence.
            </summary>
            <value>The type of the recurrence.</value>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Schedule.C1WebDataStorage.RecurrencePatternSerializableWrapper.DayOfMonth">
            <summary>
            Gets the day of month.
            </summary>
            <value>The day of month.</value>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Schedule.C1WebDataStorage.RecurrencePatternSerializableWrapper.DayOfWeekMask">
            <summary>
            Gets the day of week mask.
            </summary>
            <value>The day of week mask.</value>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Schedule.C1WebDataStorage.RecurrencePatternSerializableWrapper.Interval">
            <summary>
            Gets the interval.
            </summary>
            <value>The interval.</value>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Schedule.C1WebDataStorage.RecurrencePatternSerializableWrapper.MonthOfYear">
            <summary>
            Gets the month of year.
            </summary>
            <value>The month of year.</value>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Schedule.C1WebDataStorage.RecurrencePatternSerializableWrapper.Occurrences">
            <summary>
            Gets the occurrences.
            </summary>
            <value>The occurrences.</value>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Schedule.C1WebDataStorage.RecurrencePatternSerializableWrapper.Description">
            <summary>
            Gets the description.
            </summary>
            <value>The description.</value>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Schedule.C1WebDataStorage.RecurrencePatternSerializableWrapper.Instance">
            <summary>
            Gets the instance.
            </summary>
            <value>The instance.</value>
        </member>
        <member name="T:C1.Web.UI.Controls.C1Schedule.C1WebDataStorage.WebAppointmentStorage">
            <summary>
            Allows binding to DataSource and mapping DataSource's fields to Appointment's properties.
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1Schedule.Common.IWebScheduleDesignSupport">
            <summary>
            IWebScheduleDesignSupport.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Schedule.Common.IWebScheduleDesignSupport.GetParentSchedule">
            <summary>
            Gets the parent schedule.
            </summary>
            <returns></returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Schedule.C1WebDataStorage.WebAppointmentStorage.#ctor(C1.Web.UI.Controls.C1Schedule.C1Schedule,C1.C1Schedule.C1ScheduleStorage)">
            <summary>
            C1WebScheduleStorage constructor.
            </summary>
            <param name="parentControl"></param>
            <param name="winStorage"></param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Schedule.C1WebDataStorage.WebAppointmentStorage.ToString">
            <summary>
            Returns a System.String that represents the current object.
            </summary>
            <returns></returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Schedule.C1WebDataStorage.WebAppointmentStorage.GetParentSchedule">
            <summary>
            Returns parent C1WebSchedule.
            </summary>
            <returns></returns>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Schedule.C1WebDataStorage.WebAppointmentStorage.Mappings">
            <summary>
            Gets WebAppointmentStorageMappings object.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Schedule.C1WebDataStorage.WebAppointmentStorage.DataSourceID">
            <summary>
            Data source ID.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Schedule.C1WebDataStorage.WebAppointmentStorage.DataMember">
            <summary>
            Data member.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Schedule.C1WebDataStorage.WebAppointmentStorage.Appointments">
            <summary>
            Gets a AppointmentCollection object that contains appointment related information.
            </summary>        
        </member>
        <member name="P:C1.Web.UI.Controls.C1Schedule.C1WebDataStorage.WebAppointmentStorage.ViewState">
            <summary>
            ViewState
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1Schedule.C1WebDataStorage.WebAppointmentStorageMappings">
            <summary>
            WebAppointmentStorageMappings class.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Schedule.C1WebDataStorage.WebAppointmentStorageMappings.ToString">
            <summary>
            Returns a System.String that represents the current object.
            </summary>
            <returns></returns>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Schedule.C1WebDataStorage.WebAppointmentStorageMappings.IdMapping">
            <summary>
            Gets WebMappingInfo object for Id Mapping.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Schedule.C1WebDataStorage.WebAppointmentStorageMappings.IndexMapping">
            <summary>
            Index Mapping.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Schedule.C1WebDataStorage.WebAppointmentStorageMappings.LocationMapping">
            <summary>
            Location Mapping.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Schedule.C1WebDataStorage.WebAppointmentStorageMappings.StartMapping">
            <summary>
            Start Mapping.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Schedule.C1WebDataStorage.WebAppointmentStorageMappings.EndMapping">
            <summary>
            End Mapping.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Schedule.C1WebDataStorage.WebAppointmentStorageMappings.SubjectMapping">
            <summary>
            Subject Mapping.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Schedule.C1WebDataStorage.WebAppointmentStorageMappings.BodyMapping">
            <summary>
            Body Mapping.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Schedule.C1WebDataStorage.WebAppointmentStorageMappings.AppointmentProperties">
            <summary>
            AppointmentProperties Mapping.
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1Schedule.C1WebDataStorage.WebCategoryStorage">
            <summary>
            WebCategoryStorage class.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Schedule.C1WebDataStorage.WebCategoryStorage.RefreshData">
            <summary>
            Call this method each time after changing your data source 
            if it doesn't implement <see cref="T:System.ComponentModel.IBindingList"/> interface.
            Or use BaseStorage{T, TMappingCollection}.Add 
            and BaseStorage{T, TMappingCollection}.Remove 
            instead of corresponding methods of your data source class.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Schedule.C1WebDataStorage.WebCategoryStorage.ToString">
            <summary>
            Returns a System.String that represents the current object.
            </summary>
            <returns></returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Schedule.C1WebDataStorage.WebCategoryStorage.GetParentSchedule">
            <summary>
            Returns parent C1WebSchedule.
            </summary>
            <returns></returns>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Schedule.C1WebDataStorage.WebCategoryStorage.Mappings">
            <summary>
            Mappings.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Schedule.C1WebDataStorage.WebCategoryStorage.DataSourceID">
            <summary>
            Data source ID.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Schedule.C1WebDataStorage.WebCategoryStorage.DataMember">
            <summary>
            Data member.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Schedule.C1WebDataStorage.WebCategoryStorage.Categories">
            <summary>
            Gets a CategoryCollection object that contains Category related information.
            </summary>        
        </member>
        <member name="P:C1.Web.UI.Controls.C1Schedule.C1WebDataStorage.WebCategoryStorage.ViewState">
            <summary>
            ViewState
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1Schedule.C1WebDataStorage.WebCategoryStorageMappings">
            <summary>
            WebCategoryStorageMappings class.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Schedule.C1WebDataStorage.WebCategoryStorageMappings.ToString">
            <summary>
            Returns a System.String that represents the current object.
            </summary>
            <returns></returns>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Schedule.C1WebDataStorage.WebCategoryStorageMappings.IndexMapping">
            <summary>
            Index Mapping.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Schedule.C1WebDataStorage.WebCategoryStorageMappings.CaptionMapping">
            <summary>
            Caption Mapping.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Schedule.C1WebDataStorage.WebCategoryStorageMappings.IdMapping">
            <summary>
            Id Mapping.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Schedule.C1WebDataStorage.WebCategoryStorageMappings.TextMappingMapping">
            <summary>
            TextMapping Mapping.
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1Schedule.C1WebDataStorage.WebContactStorage">
            <summary>
            WebContactStorage class.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Schedule.C1WebDataStorage.WebContactStorage.ToString">
            <summary>
            ToString
            </summary>
            <returns></returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Schedule.C1WebDataStorage.WebContactStorage.GetParentSchedule">
            <summary>
            Returns parent C1WebSchedule.
            </summary>
            <returns></returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Schedule.C1WebDataStorage.WebContactStorage.RefreshData">
            <summary>
            Call this method each time after changing your data source 
            if it doesn't implement <see cref="T:System.ComponentModel.IBindingList"/> interface.
            Or use BaseStorage{T, TMappingCollection}.Add 
            and BaseStorage{T, TMappingCollection}.Remove 
            instead of corresponding methods of your data source class.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Schedule.C1WebDataStorage.WebContactStorage.Mappings">
            <summary>
            Mappings.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Schedule.C1WebDataStorage.WebContactStorage.DataSourceID">
            <summary>
            Data source ID.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Schedule.C1WebDataStorage.WebContactStorage.DataMember">
            <summary>
            Data member.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Schedule.C1WebDataStorage.WebContactStorage.Contacts">
            <summary>
            Gets a ContactCollection object that contains Contacts related information.
            </summary>        
        </member>
        <member name="P:C1.Web.UI.Controls.C1Schedule.C1WebDataStorage.WebContactStorage.ViewState">
            <summary>
            ViewState
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1Schedule.C1WebDataStorage.WebContactStorageMappings">
            <summary>
            WebContactStorageMappings class.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Schedule.C1WebDataStorage.WebContactStorageMappings.ToString">
            <summary>
            Returns a System.String that represents the current object.
            </summary>
            <returns></returns>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Schedule.C1WebDataStorage.WebContactStorageMappings.IndexMapping">
            <summary>
            Index Mapping.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Schedule.C1WebDataStorage.WebContactStorageMappings.CaptionMapping">
            <summary>
            Caption Mapping.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Schedule.C1WebDataStorage.WebContactStorageMappings.ColorMapping">
            <summary>
            Color Mapping.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Schedule.C1WebDataStorage.WebContactStorageMappings.IdMapping">
            <summary>
            Id Mapping.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Schedule.C1WebDataStorage.WebContactStorageMappings.TextMappingMapping">
            <summary>
            TextMapping Mapping.
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1Schedule.C1WebDataStorage.WebLabelStorage">
            <summary>
            WebLabelStorage class.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Schedule.C1WebDataStorage.WebLabelStorage.#ctor(C1.Web.UI.Controls.C1Schedule.C1Schedule,C1.C1Schedule.C1ScheduleStorage)">
            <summary>
            
            </summary>
            <param name="parentControl"></param>
            <param name="winStorage"></param>        
        </member>
        <member name="M:C1.Web.UI.Controls.C1Schedule.C1WebDataStorage.WebLabelStorage.ToString">
            <summary>
            Returns a System.String that represents the current object.
            </summary>
            <returns></returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Schedule.C1WebDataStorage.WebLabelStorage.GetParentSchedule">
            <summary>
            Returns parent C1WebSchedule.
            </summary>
            <returns></returns>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Schedule.C1WebDataStorage.WebLabelStorage.Mappings">
            <summary>
            Mappings.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Schedule.C1WebDataStorage.WebLabelStorage.DataSourceID">
            <summary>
            Data source ID.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Schedule.C1WebDataStorage.WebLabelStorage.DataMember">
            <summary>
            Data member.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Schedule.C1WebDataStorage.WebLabelStorage.Labels">
            <summary>
            Gets a LabelCollection object that contains Labels related information.
            </summary>        
        </member>
        <member name="P:C1.Web.UI.Controls.C1Schedule.C1WebDataStorage.WebLabelStorage.ViewState">
            <summary>
            ViewState
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1Schedule.C1WebDataStorage.WebLabelStorageMappings">
            <summary>
            Mappings for WebLabelStorage.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Schedule.C1WebDataStorage.WebLabelStorageMappings.#ctor(C1.Web.UI.Controls.C1Schedule.C1WebDataStorage.WebLabelStorage)">
            <summary>
            WebLabelStorageMappings constructor.
            </summary>
            <param name="parentWebLabelStorage"></param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Schedule.C1WebDataStorage.WebLabelStorageMappings.ToString">
            <summary>
            ToString
            </summary>
            <returns></returns>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Schedule.C1WebDataStorage.WebLabelStorageMappings.IndexMapping">
            <summary>
            Index Mapping.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Schedule.C1WebDataStorage.WebLabelStorageMappings.CaptionMapping">
            <summary>
            Caption Mapping.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Schedule.C1WebDataStorage.WebLabelStorageMappings.ColorMapping">
            <summary>
            Color Mapping.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Schedule.C1WebDataStorage.WebLabelStorageMappings.IdMapping">
            <summary>
            Id Mapping.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Schedule.C1WebDataStorage.WebLabelStorageMappings.TextMappingMapping">
            <summary>
            Text Mapping.
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1Schedule.C1WebDataStorage.WebMappingInfo">
            <summary>
            WebMappingInfo class.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Schedule.C1WebDataStorage.WebMappingInfo.#ctor(C1.C1Schedule.MappingInfo,System.String,System.Web.UI.StateBag)">
            <summary>
            WebMappingInfo constructor.
            </summary>
            <param name="pMappingInfo"></param>
            <param name="mappingInfoName"></param>
            <param name="pStateBag"></param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Schedule.C1WebDataStorage.WebMappingInfo.ToString">
            <summary>
            Returns a System.String that represents the current object.
            </summary>
            <returns></returns>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Schedule.C1WebDataStorage.WebMappingInfo.MappingName">
            <summary>
            Name of data field or property to be bound to this object.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Schedule.C1WebDataStorage.WebMappingInfo.PropertyName">
            <summary>
            Name of the property which should be mapped. (readonly)
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Schedule.C1WebDataStorage.WebMappingInfo.DataType">
            <summary>
            Gets the <see cref="T:System.String"/> value determining the name of the data field 
            or property to be bound to this object. (readonly)
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Schedule.C1WebDataStorage.WebMappingInfo.IsMapped">
            <summary>
            Gets the <see cref="T:System.Boolean"/> value indicating if this objects is mapped 
            to the data field or property. (readonly)
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Schedule.C1WebDataStorage.WebMappingInfo.Required">
            <summary>
            Gets the <see cref="T:System.Boolean"/> value indicating if mapping for this property is required or optional.(readonly)
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1Schedule.C1WebDataStorage.WebResourceStorage">
            <summary>
            WebResourceStorage class.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Schedule.C1WebDataStorage.WebResourceStorage.ToString">
            <summary>
            Returns a System.String that represents the current object.
            </summary>
            <returns></returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Schedule.C1WebDataStorage.WebResourceStorage.GetParentSchedule">
            <summary>
            Returns parent C1WebSchedule.
            </summary>
            <returns></returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Schedule.C1WebDataStorage.WebResourceStorage.RefreshData">
            <summary>
            Call this method each time after changing your data source 
            if it doesn't implement <see cref="T:System.ComponentModel.IBindingList"/> interface.
            Or use BaseStorage{T, TMappingCollection}.Add 
            and BaseStorage{T, TMappingCollection}.Remove 
            instead of corresponding methods of your data source class.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Schedule.C1WebDataStorage.WebResourceStorage.Mappings">
            <summary>
            Mappings.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Schedule.C1WebDataStorage.WebResourceStorage.DataSourceID">
            <summary>
            Data source ID.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Schedule.C1WebDataStorage.WebResourceStorage.DataMember">
            <summary>
            Data member.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Schedule.C1WebDataStorage.WebResourceStorage.Resources">
            <summary>
            Gets a ResourceCollection object that contains Resources related information.
            </summary>        
        </member>
        <member name="P:C1.Web.UI.Controls.C1Schedule.C1WebDataStorage.WebResourceStorage.ViewState">
            <summary>
            ViewState
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1Schedule.C1WebDataStorage.WebResourceStorageMappings">
            <summary>
            WebResourceStorageMappings class.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Schedule.C1WebDataStorage.WebResourceStorageMappings.#ctor(C1.Web.UI.Controls.C1Schedule.C1WebDataStorage.WebResourceStorage)">
            <summary>
            Initializes a new instance of the <see cref="T:C1.Web.UI.Controls.C1Schedule.C1WebDataStorage.WebResourceStorageMappings"/> object.
            </summary>
            <param name="parentWebResourceStorage"></param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Schedule.C1WebDataStorage.WebResourceStorageMappings.ToString">
            <summary>
            ToString
            </summary>
            <returns></returns>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Schedule.C1WebDataStorage.WebResourceStorageMappings.IndexMapping">
            <summary>
            Index Mapping.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Schedule.C1WebDataStorage.WebResourceStorageMappings.CaptionMapping">
            <summary>
            Caption Mapping.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Schedule.C1WebDataStorage.WebResourceStorageMappings.ColorMapping">
            <summary>
            Color Mapping.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Schedule.C1WebDataStorage.WebResourceStorageMappings.IdMapping">
            <summary>
            Id Mapping.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Schedule.C1WebDataStorage.WebResourceStorageMappings.TextMappingMapping">
            <summary>
            TextMapping Mapping.
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1Schedule.C1WebDataStorage.WebStatusStorage">
            <summary>
            WebStatus Storage.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Schedule.C1WebDataStorage.WebStatusStorage.#ctor(C1.Web.UI.Controls.C1Schedule.C1Schedule,C1.C1Schedule.C1ScheduleStorage)">
            <summary>
            WebStatusStorage constructor.
            </summary>
            <param name="parentControl"></param>
            <param name="winStorage"></param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Schedule.C1WebDataStorage.WebStatusStorage.ToString">
            <summary>
            ToString
            </summary>
            <returns></returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Schedule.C1WebDataStorage.WebStatusStorage.GetParentSchedule">
            <summary>
            Returns parent C1WebSchedule control.
            </summary>
            <returns></returns>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Schedule.C1WebDataStorage.WebStatusStorage.Mappings">
            <summary>
            Mappings.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Schedule.C1WebDataStorage.WebStatusStorage.DataSourceID">
            <summary>
            Data source ID.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Schedule.C1WebDataStorage.WebStatusStorage.DataMember">
            <summary>
            Data member.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Schedule.C1WebDataStorage.WebStatusStorage.Statuses">
            <summary>
            Gets a StatusCollection object that contains Statuses related information.
            </summary>        
        </member>
        <member name="P:C1.Web.UI.Controls.C1Schedule.C1WebDataStorage.WebStatusStorage.ViewState">
            <summary>
            ViewState
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1Schedule.C1WebDataStorage.WebStatusStorageMappings">
            <summary>
            Mappings for WebStatusStorage.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Schedule.C1WebDataStorage.WebStatusStorageMappings.#ctor(C1.Web.UI.Controls.C1Schedule.C1WebDataStorage.WebStatusStorage)">
            <summary>
            WebStatusStorageMappings constructor.
            </summary>
            <param name="parentWebStatusStorage"></param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Schedule.C1WebDataStorage.WebStatusStorageMappings.ToString">
            <summary>
            ToString
            </summary>
            <returns></returns>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Schedule.C1WebDataStorage.WebStatusStorageMappings.IndexMapping">
            <summary>
            Index Mapping.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Schedule.C1WebDataStorage.WebStatusStorageMappings.CaptionMapping">
            <summary>
            Caption Mapping.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Schedule.C1WebDataStorage.WebStatusStorageMappings.ColorMapping">
            <summary>
            Color Mapping.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Schedule.C1WebDataStorage.WebStatusStorageMappings.IdMapping">
            <summary>
            Id Mapping.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Schedule.C1WebDataStorage.WebStatusStorageMappings.TextMappingMapping">
            <summary>
            TextMapping Mapping.
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1Schedule.Commands.LoadDialogTemplateCommand">
            <summary>
            This class preliminary used by control developers.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Schedule.Commands.LoadDialogTemplateCommand.#ctor(System.String,System.Object,C1.Web.UI.Controls.C1Schedule.C1Schedule)">
            <summary>
            Initializes a new instance of the <see cref="T:C1.Web.UI.Controls.C1Schedule.Commands.LoadDialogTemplateCommand"/> class.
            </summary>
            <param name="commandName">Name of the command.</param>
            <param name="arguments">The arguments.</param>
            <param name="control">The control.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Schedule.Commands.LoadDialogTemplateCommand.Execute">
            <summary>
            Excute ajax command.
            </summary>
            <returns></returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Schedule.Commands.LoadDialogTemplateCommand.GetEditorDialogsContent(System.String)">
            <summary>
            GetEditorDialogsContent
            </summary>
            <param name="templateName">Template Name</param>
            <returns>Template content string.</returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Schedule.Commands.LoadDialogTemplateCommand.GetSiteRootPath">
            <summary>
            Returns root path of the current site.
            </summary>
            <returns></returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Schedule.Commands.LoadDialogTemplateCommand.GetResourceTextContent(System.String,System.Reflection.Assembly)">
            <summary>
            GetResourceTextContent
            </summary>
            <param name="name">Template Name</param>
            <param name="assembly">assembly contains the template.</param>
            <returns></returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Schedule.Commands.LoadDialogTemplateCommand.ResolveLocalizationStrings(System.String,C1.Web.UI.Controls.C1Schedule.C1Schedule)">
            <summary>
            Resolves the localization strings.
            </summary>
            <param name="userControlContent">Content of the user control.</param>
            <param name="c1Schedule">The c1 schedule.</param>
            <returns></returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Schedule.Commands.LoadDialogTemplateCommand.ResolveAssemblyNames(System.String)">
            <summary>
            Resolves the assembly names.
            </summary>
            <param name="userControlContent">Content of the user control.</param>
            <returns></returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Schedule.Commands.LoadDialogTemplateCommand.SchedulePropsMatchEvaluator(System.Text.RegularExpressions.Match)">
            <summary>
            SchedulePropsMatchEvaluator.
            </summary>
            <param name="match">The match.</param>
            <returns></returns>
        </member>
        <member name="T:C1.Web.UI.Controls.C1Schedule.Common.CancelableAppointmentEventArgs">
            <summary>
            Cancelable Appointment event arguments.
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1Schedule.Common.CancelableEventArgs">
            <summary>
            Event arguments object that provides the ability to cancel the event.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Schedule.Common.CancelableEventArgs.#ctor">
            <summary>
            CancelableEventArgs constructor.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Schedule.Common.CancelableEventArgs.CancelEvent">
            <summary>
            Set this property to true if you want to cancel action that called this event.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Schedule.Common.CancelableAppointmentEventArgs.#ctor(C1.C1Schedule.Appointment)">
            <summary>
            CancelableAppointmentEventArgs constructor.
            </summary>
            <param name="appointment"></param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Schedule.Common.CancelableAppointmentEventArgs.#ctor(C1.C1Schedule.Appointment,C1.Web.UI.Controls.C1Schedule.Common.ClientAppointmentData)">
            <summary>
            CancelableAppointmentEventArgs constructor.
            </summary>
            <param name="appointment"></param>
            <param name="aClientAppointmentData"></param>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Schedule.Common.CancelableAppointmentEventArgs.Appointment">
            <summary>
            The Appointment object to be updated.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Schedule.Common.CancelableAppointmentEventArgs.ClientData">
            <summary>
            The appointment information that was received from client. 
            Note, this property returns null for the BeforeAppointmentDelete event.
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1Schedule.Common.ClientAppointmentData">
            <summary>
            The appointment information that was received from client.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Schedule.Common.ClientAppointmentData.#ctor(System.Collections.Hashtable,C1.Web.UI.Controls.C1Schedule.C1Schedule)">
            <summary>
            ClientAppointmentData constructor.
            </summary>
            <param name="ht"></param>
            <param name="schedule"></param>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Schedule.Common.ClientAppointmentData.RecurrenceState">
            <summary>
            Gets the <see cref="T:C1.C1Schedule.RecurrenceStateEnum"/> value indicating 
            the recurrence state of the appointment.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Schedule.Common.ClientAppointmentData.HasRecurrenceState">
            <summary>
            Is RecurrenceState value specified.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Schedule.Common.ClientAppointmentData.ReminderSet">
            <summary>
            Gets the <see cref="T:System.Boolean"/> value indicating whether 
            a reminder is associated with the appointment.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Schedule.Common.ClientAppointmentData.HasReminderSet">
            <summary>
            Is ReminderSet value specified.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Schedule.Common.ClientAppointmentData.Private">
            <summary>
            Gets the <see cref="T:System.Boolean"/> value determining 
            whether the calendar owner intends to keep the <see cref="T:C1.C1Schedule.Appointment"/>
            object private.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Schedule.Common.ClientAppointmentData.HasPrivate">
            <summary>
            Is Private value specified.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Schedule.Common.ClientAppointmentData.SnoozeTime">
            <summary>
            Snooze time in seconds.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Schedule.Common.ClientAppointmentData.HasSnoozeTime">
            <summary>
            Is SnoozeTime value specified.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Schedule.Common.ClientAppointmentData.StartDate">
            <summary>
            Gets the <see cref="T:System.DateTime"/> value determining the 
            start date and time of the appointment. 
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Schedule.Common.ClientAppointmentData.HasStartDate">
            <summary>
            Is StartDate value specified.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Schedule.Common.ClientAppointmentData.Duration">
            <summary>
            Duration in minutes. Used by UpdateAppointmentLocationCommand / SaveAppointmentCommand.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Schedule.Common.ClientAppointmentData.HasDuration">
            <summary>
            Is Duration value specified.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Schedule.Common.ClientAppointmentData.ReminderTimeBeforeStart">
            <summary>
            Gets the <see cref="T:System.TimeSpan"/> value indicating the 
            interval of time the reminder should occur 
            prior to the start of the appointment. 
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Schedule.Common.ClientAppointmentData.HasReminderTimeBeforeStart">
            <summary>
            Is ReminderTimeBeforeStart value specified.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Schedule.Common.ClientAppointmentData.Location">
            <summary>
            Location. 
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Schedule.Common.ClientAppointmentData.HasLocation">
            <summary>
            Is Location value specified.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Schedule.Common.ClientAppointmentData.Subject">
            <summary>
            Subject. 
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Schedule.Common.ClientAppointmentData.HasSubject">
            <summary>
            Is Subject value specified.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Schedule.Common.ClientAppointmentData.Body">
            <summary>
            Gets the <see cref="T:System.String"/> value representing 
            the body of the <see cref="T:C1.C1Schedule.Appointment"/> object.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Schedule.Common.ClientAppointmentData.HasBody">
            <summary>
            Is Body value specified.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Schedule.Common.ClientAppointmentData.AllDayEvent">
            <summary>
            Is an all day event appointment. Used by SaveAppointmentCommand.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Schedule.Common.ClientAppointmentData.HasAllDayEvent">
            <summary>
            Is AllDayEvent value specified by client.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Schedule.Common.ClientAppointmentData.BusyStatus">
            <summary>
            Gets or sets the <see cref="T:C1.C1Schedule.Status"/> object indicating the busy status 
            of the user for the appointment.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Schedule.Common.ClientAppointmentData.HasBusyStatus">
            <summary>
            Is BusyStatus value specified by client.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Schedule.Common.ClientAppointmentData.Label">
            <summary>
            Gets the <see cref="P:C1.Web.UI.Controls.C1Schedule.Common.ClientAppointmentData.Label"/> object associated with appointment.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Schedule.Common.ClientAppointmentData.HasLabel">
            <summary>
            Is Label value specified by client.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Schedule.Common.ClientAppointmentData.Resources">
            <summary>
            Gets the Resource List which holds the set of 
            <see cref="T:C1.C1Schedule.Resource"/> objects for this appointment.
            An appointment may be associated with multiple resources.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Schedule.Common.ClientAppointmentData.HasResources">
            <summary>
            Is Resources value specified by client.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Schedule.Common.ClientAppointmentData.Links">
            <summary>
            Gets the Contact List which holds the set 
            of <see cref="T:C1.C1Schedule.Contact"/> objects for this appointment.
            An appointment may be associated with multiple contacts.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Schedule.Common.ClientAppointmentData.HasLinks">
            <summary>
            Is Links value specified by client.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Schedule.Common.ClientAppointmentData.Categories">
            <summary>
            Gets the Category List which holds the set 
            of categories assigned to the appointment.
            Categories may be associated with an appointment to effectively group appointments. 
            An appointment may be associated with multiple categories.
            </summary>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Schedule.Common.ClientAppointmentData.HasCategories">
            <summary>
            Is Categories value specified by client.
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1Schedule.Common.CancelableBeforeViewChangeEventArgs">
            <summary>
            Cancelable BeforeViewChange event arguments.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Schedule.Common.CancelableBeforeViewChangeEventArgs.#ctor(C1.Web.UI.Controls.C1Schedule.ScheduleViewEnum)">
            <summary>
            CancelableBeforeViewChangeEventArgs constructor.
            </summary>
            <param name="newViewType"></param>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Schedule.Common.CancelableBeforeViewChangeEventArgs.NewViewType">
            <summary>
            The type of the new view.
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1Schedule.Common.ClientSideEventArgumentsAttribute">
            <summary>
            ClientSideEventArgumentsAttribute
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Schedule.Common.ClientSideEventArgumentsAttribute.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="args"></param>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Schedule.Common.ClientSideEventArgumentsAttribute.Arguments">
            <summary>
            Event Arguments
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1Schedule.Common.Convertors.BorderStyleConverter">
            <summary>
            Provides a unified way of converting string to System.Web.UI.WebControls.BorderStyle type
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Schedule.Common.Convertors.BorderStyleConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Can Convert convert from type.
            </summary>
            <param name="context"></param>
            <param name="sourceType"></param>
            <returns></returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Schedule.Common.Convertors.BorderStyleConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            Convert string to BorderStyle.
            </summary>
            <param name="context"></param>
            <param name="culture"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="T:C1.Web.UI.Controls.C1Schedule.Common.Convertors.C1ViewTypeConverter">
            <summary>
            Provides a unified way of converting string to ViewType type
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Schedule.Common.Convertors.C1ViewTypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Can convert convert from type.
            </summary>
            <param name="context"></param>
            <param name="sourceType"></param>
            <returns></returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Schedule.Common.Convertors.C1ViewTypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            Convert string to ViewType type.
            </summary>
            <param name="context"></param>
            <param name="culture"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="T:C1.Web.UI.Controls.C1Schedule.Common.Convertors.RecurrenceTypeEnumConverter">
            <summary>
            Provides a unified way of converting string to RecurrenceTypeEnum type
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Schedule.Common.Convertors.RecurrenceTypeEnumConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Can Convert convert from type.
            </summary>
            <param name="context"></param>
            <param name="sourceType"></param>
            <returns></returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Schedule.Common.Convertors.RecurrenceTypeEnumConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            Convert string to RecurrenceTypeEnum.
            </summary>
            <param name="context"></param>
            <param name="culture"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="T:C1.Web.UI.Controls.C1Schedule.Common.Convertors.WeekDaysEnumConverter">
            <summary>
            Provides a unified way of converting string to WeekDaysEnum type
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Schedule.Common.Convertors.WeekDaysEnumConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Can convert convert from type.
            </summary>
            <param name="context"></param>
            <param name="sourceType"></param>
            <returns></returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Schedule.Common.Convertors.WeekDaysEnumConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            Convert string to WeekDaysEnum type.
            </summary>
            <param name="context"></param>
            <param name="culture"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Schedule.Common.Convertors.WeekDaysEnumConverter.WeekDaysEnumToString(C1.C1Schedule.WeekDaysEnum)">
            <summary>
            Convert WeekDaysEnum type to string.
            </summary>
            <param name="en"></param>
            <returns></returns>
        </member>
        <member name="T:C1.Web.UI.Controls.C1Schedule.Common.Convertors.WeekOfMonthEnumConverter">
            <summary>
            Provides a unified way of converting string to WeekOfMonthEnum type
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Schedule.Common.Convertors.WeekOfMonthEnumConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Can Convert convert from type.
            </summary>
            <param name="context"></param>
            <param name="sourceType"></param>
            <returns></returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Schedule.Common.Convertors.WeekOfMonthEnumConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            Convert string to WeekOfMonthEnum.
            </summary>
            <param name="context"></param>
            <param name="culture"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="T:C1.Web.UI.Controls.C1Schedule.Common.Convertors.WeekViewStyleEnumConverter">
            <summary>
            Provides a unified way of converting string to WeekViewStyleEnum type
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Schedule.Common.Convertors.WeekViewStyleEnumConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Can convert convert from type.
            </summary>
            <param name="context"></param>
            <param name="sourceType"></param>
            <returns></returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Schedule.Common.Convertors.WeekViewStyleEnumConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            Convert string to WeekViewStyleEnum type.
            </summary>
            <param name="context"></param>
            <param name="culture"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="T:C1.Web.UI.Controls.C1Schedule.Common.CustomClientCallEventArgs">
            <summary>
            CustomClientCall event arguments.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Schedule.Common.CustomClientCallEventArgs.#ctor(System.Object)">
            <summary>
            CustomClientCall event arguments.
            </summary>
            <param name="CustomCommand">The neme of the command that will be executed</param>
        </member>
        <member name="P:C1.Web.UI.Controls.C1Schedule.Common.CustomClientCallEventArgs.CustomCommand">
            <summary>
            The neme of the command that will be executed.
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1Schedule.Common.BeforeAppointmentCreateEventHandler">
            <summary>
            Delegate for BeforeAppointmentCreate Event.
            </summary>
            <param name="sender">Sender object.</param>
            <param name="e">CancelableAppointmentEventArgs object.</param>
        </member>
        <member name="T:C1.Web.UI.Controls.C1Schedule.Common.BeforeAppointmentDeleteEventHandler">
            <summary>
            Delegate for BeforeAppointmentDelete Event.
            </summary>
            <param name="sender">Sender object.</param>
            <param name="e">CancelableAppointmentEventArgs object.</param>
        </member>
        <member name="T:C1.Web.UI.Controls.C1Schedule.Common.BeforeAppointmentUpdateEventHandler">
            <summary>
            Delegate for BeforeAppointmentUpdate Event.
            </summary>
            <param name="sender">Sender object.</param>
            <param name="e">BeforeAppointmentUpdateEventArgs object.</param>
        </member>
        <member name="T:C1.Web.UI.Controls.C1Schedule.Common.BeforeViewChangeEventHandler">
            <summary>
            Delegate for BeforeViewChange Event.
            </summary>
            <param name="sender">Sender object.</param>
            <param name="e">CancelableBeforeViewChangeEventArgs object.</param>
        </member>
        <member name="T:C1.Web.UI.Controls.C1Schedule.Common.CustomClientCallEventHandler">
            <summary>
            Delegate for CustomClientCall Event.
            </summary>
            <param name="sender">Sender object.</param>
            <param name="e">CustomClientCallEventArgs object.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Schedule.Common.Internal.ResourcesWorker.GetClientResourceFullName(System.String)">
            <summary>
            GetClientResourceFullName
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Schedule.Common.Internal.ResourcesWorker.findResourceName(System.String)">
            <summary>
            Find full path to resource by short name
            </summary>
            <param name="aResourceShortName"></param>
            <returns></returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Schedule.Common.Internal.ResourcesWorker.getResourceTextData(System.String)">
            <summary>
            Get Resource Text value
            </summary>
            <param name="sResourceName">Full path to resource in assembly</param>
            <returns></returns>
        </member>
        <member name="T:C1.Web.UI.Controls.C1Schedule.DefaultWeekViewLayout">
            <summary>
            Determines the default week view layout, either Horiontal or Vertical.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Schedule.DefaultWeekViewLayout.None">
            <summary>
            No default value. Both options will be available in the view selection bar.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Schedule.DefaultWeekViewLayout.Horizontal">
            <summary>
            Week view will be always represented using the horizontal layout.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Schedule.DefaultWeekViewLayout.Vertical">
            <summary>
            Week view will be always represented using the vertical layout.
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1Schedule.WorkWeekOptionMode">
            <summary>
            Represents the way to show or hide the work week view option in the view selection bar.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Schedule.WorkWeekOptionMode.Disabled">
            <summary>
            Work week will not be displayed in the view selection bar.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Schedule.WorkWeekOptionMode.ShowAsButtonGroup">
            <summary>
            Work week option will be displayed as a button.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Schedule.WorkWeekOptionMode.ShowAsRadioButton">
            <summary>
            Work week option will be displayed as a radio button.
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1Schedule.ScheduleViewEnum">
            <summary>
            Determines the type of view to display in the C1Schedule control.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Schedule.ScheduleViewEnum.DayView">
            <summary>
            Day view.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Schedule.ScheduleViewEnum.WeekViewWorkWeek">
            <summary>
            Work week view.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Schedule.ScheduleViewEnum.WeekViewWeekVertical">
            <summary>
            Full week view with days displayed as work week view.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Schedule.ScheduleViewEnum.WeekViewWeekHorizontal">
            <summary>
            Full week view with days displayed as month view.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Schedule.ScheduleViewEnum.MonthView">
            <summary>
            Month view.
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1Schedule.WeekViewStyleEnum">
            <summary>
            Determines the type of week view to display in the C1Schedule control.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Schedule.WeekViewStyleEnum.Office2003">
            <summary>
            Office 2003 week view.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Schedule.WeekViewStyleEnum.Office2007">
            <summary>
            Office 2007 week view (7 full days as in Day View).
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1Schedule.C1WebScheduleEditOptions">
            <summary>
            Determines the set of edit options available to the end-user.	
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Schedule.C1WebScheduleEditOptions.None">
            <summary>
            None of edit options are available to the end-user.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Schedule.C1WebScheduleEditOptions.AllowResize">
            <summary>
            Allows resizing operations for an appointment.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Schedule.C1WebScheduleEditOptions.AllowDrag">
            <summary>
            Allows dragging operations for an appointment.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Schedule.C1WebScheduleEditOptions.AllowAppointmentEdit">
            <summary>
            Allows editing of an appointment by an end-user. 
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Schedule.C1WebScheduleEditOptions.AllowAppointmentCreate">
            <summary>
            Allows creating of new appointments by an end-user. 
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Schedule.C1WebScheduleEditOptions.AllowAppointmentDelete">
            <summary>
            Allows deleting of an appointment by an end-user. 
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Schedule.C1WebScheduleEditOptions.All">
            <summary>
            Allows all edit operations. It is the default value.
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1Schedule.NavigationButtonsPosition">
            <summary>
            Determines where NavigationBar will place navigation buttons.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Schedule.NavigationButtonsPosition.BothAtLeft">
            <summary>
            Both buttons will be at left of the title text.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Schedule.NavigationButtonsPosition.BothAtRight">
            <summary>
            Both buttons will be at right of the title text.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Schedule.NavigationButtonsPosition.LeftAndRight">
            <summary>
            Buttons will be at left and at right of the title text.
            </summary>
        </member>
        <member name="T:C1.Web.UI.Controls.C1Schedule.Render.C1WebScheduleRenderer">
            <summary>
            Render for <see cref="T:C1.Web.UI.Controls.C1Schedule.C1Schedule"/>.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Schedule.Render.C1WebScheduleRenderer.#ctor(C1.Web.UI.Controls.C1Schedule.C1Schedule)">
            <summary>
            Initializes a new instance of the <see cref="T:C1.Web.UI.Controls.C1Schedule.Render.C1WebScheduleRenderer"/> class.
            </summary>
            <param name="aControl">A control.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Schedule.Render.C1WebScheduleRenderer.#ctor(C1.Web.UI.Controls.C1Schedule.C1Schedule,System.Web.UI.HtmlTextWriter)">
            <summary>
            Initializes a new instance of the <see cref="T:C1.Web.UI.Controls.C1Schedule.Render.C1WebScheduleRenderer"/> class.
            </summary>
            <param name="aControl">A control.</param>
            <param name="writer">The writer.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Schedule.Render.C1WebScheduleRenderer.RenderHorizontalViewWeek">
            <summary>
            Renders the horizontal view week.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Schedule.Render.C1WebScheduleRenderer.TestIsAllDayAppointment(C1.C1Schedule.Appointment)">
            <summary>
            Used to search all day appointments that not marked by AllDay property.
            </summary>
            <param name="appointment">The appointment.</param>
            <returns></returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Schedule.Render.C1WebScheduleRenderer.RenderAppointment_forDayView(System.Web.UI.HtmlTextWriter,C1.C1Schedule.Appointment,System.Boolean,System.DateTime,System.Double,System.DateTime,System.Int32)">
            <summary>
            Renders the appointment. Used bby day and WorkWeekView
            </summary>
            <param name="writer">The writer.</param>
            <param name="appointment">The appointment.</param>
            <param name="isResizable">if set to <c>true</c> appointment can be resized.</param>
            <param name="visualizerStart">The visualizer start.</param>
            <param name="visualizerDurationMinutes">The visualizer duration minutes.</param>
            <param name="columnViewEnd">The column view end.</param>
            <param name="dayViewInterval">The day view interval.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Schedule.Render.C1WebScheduleRenderer.GetViewSelectionBarHeightInPx">
            <summary>
            Gets the view selection bar height in px (DayWeekMonthBar for all views).
            </summary>
            <returns></returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Schedule.Render.C1WebScheduleRenderer.GetNavigationBarHeightInPx">
            <summary>
            Gets the navigation bar height in px (for all views).
            </summary>
            <returns></returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Schedule.Render.C1WebScheduleRenderer.GetDaysHeaderHeightInPx">
            <summary>
            Gets the days header height in px (DaysHeader for DayView, WorkWeekView and Vertical WeekView).
            </summary>
            <returns></returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Schedule.Render.C1WebScheduleRenderer.GetMonthHeaderDayNamesHeightInPx">
            <summary>
            Gets the month header day names height in px (MonthHeaderDayNames_Row for MonthView).
            </summary>
            <returns></returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Schedule.Render.C1WebScheduleRenderer.GetStatusBarHeightInPx">
            <summary>
            Gets the status bar height in px (StatusBar for all views).
            </summary>
            <returns></returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Schedule.Render.C1WebScheduleRenderer.GetDataTableHeightInPx">
            <summary>
            Gets the data table height in px.
            </summary>
            <returns></returns>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Schedule.Render.C1WebScheduleRenderer.GetControlHeightInPx">
            <summary>
            Gets the control height in px.
            </summary>
            <returns></returns>
        </member>
        <member name="T:C1.Web.UI.Controls.C1Schedule.Render.ClientCultureInfo">
            <summary>
            Client side cultrue info class
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Schedule.Render.ClientCultureInfo.name">
            <summary>
            name.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Schedule.Render.ClientCultureInfo.dateTimeFormat">
            <summary>
            dateTimeFormat.
            </summary>
        </member>
        <member name="F:C1.Web.UI.Controls.C1Schedule.Render.ClientCultureInfo.numberFormat">
            <summary>
            numberFormat.
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Schedule.Render.ClientCultureInfo.#ctor(System.Globalization.CultureInfo)">
            <summary>
            ClientCultureInfo
            </summary>
            <param name="cultureInfo">Culture needed to be serialized.</param>
        </member>
        <member name="M:C1.Web.UI.Controls.C1Schedule.Render.ClientCultureInfo.SerializedCulture(C1.Web.UI.Controls.C1Schedule.Render.ClientCultureInfo)">
            <summary>
            Serialize cultrue info to string.
            </summary>
            <param name="info"></param>
            <returns></returns>
        </member>
        <member name="T:C1.Web.UI.Controls.Localization.C1DescriptionAttribute">
            <summary>
            C1DescriptionAttribute replaces the DescriptionAttribute
            and uses the C1Localizer class to return the localized Attribute string
            </summary>
        </member>
        <member name="M:C1.Web.UI.Controls.Localization.C1DescriptionAttribute.#ctor(System.String)">
            <summary>
            Initialize C1DescriptionAttribute.
            </summary>
            <param name="key">Key</param>
        </member>
        <member name="M:C1.Web.UI.Controls.Localization.C1DescriptionAttribute.#ctor(System.String,System.String)">
            <summary>
            Initialize C1DescriptionAttribute.
            </summary>
            <param name="key">Key</param>
            <param name="defaultvalue">Default value</param>
        </member>
        <member name="T:C1.Util.Localization.StringTables">
            <summary>
            Contains a single static method called InitTables that populates the
            tables used by the C1Localizer class.
            
            ** This file is project-specific **
            Do not include it in your project. Instead, copy it into your project
            and customize the copy with the strings you need.
            </summary>
        </member>
    </members>
</doc>
